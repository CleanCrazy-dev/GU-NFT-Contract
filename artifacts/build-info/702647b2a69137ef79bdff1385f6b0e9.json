{
	"id": "702647b2a69137ef79bdff1385f6b0e9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.14",
	"solcLongVersion": "0.8.14+commit.80d49f37",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/GU-NFT/GUCollections.sol": {
				"content": "// Owner of this software is PR Innolab Solutions Serbia. All rights reserved.\r\n// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\";\r\nimport \"./ERC1155URIStorage.sol\";\r\n\r\ncontract GUCollections is ERC1155Supply, ERC1155URIStorage {\r\n    mapping (address => bool) traders;\r\n    address public adminSafe;\r\n\r\n    event TraderAuthorized(address indexed traderAddress);\r\n    event TraderDisauthorized(address indexed traderAddress);\r\n    event AdminSafeChanged(address indexed safeAddress);\r\n\r\n    modifier onlyTraders {\r\n        require(traders[msg.sender], 'You are not whitelisted.');\r\n        _;\r\n    }\r\n\r\n    modifier onlyAdminSafe {\r\n        require(msg.sender==adminSafe, 'You are not whitelisted.');\r\n        _;\r\n    }\r\n\r\n    constructor(string memory uri_, address safe) ERC1155(uri_) {\r\n        adminSafe = safe;\r\n    }\r\n\r\n    function changeAdminSafe(address safe) public onlyAdminSafe\r\n    {\r\n        require(adminSafe!=safe, \"Provided address already safe address\");\r\n        adminSafe = safe;\r\n        emit AdminSafeChanged(safe);\r\n    }\r\n\r\n    function setTraderPermission(address trader, bool permitted) external onlyAdminSafe\r\n    {\r\n        traders[trader]=permitted;\r\n        if (permitted) emit TraderAuthorized(trader);\r\n        else emit TraderDisauthorized(trader);\r\n    }\r\n\r\n    function uri(uint256 tokenId) public view override(ERC1155URIStorage, ERC1155) returns (string memory) {\r\n        string memory tokenURI = tokenURIs(tokenId);\r\n\r\n        return bytes(tokenURI).length > 0 ? string(abi.encodePacked(baseURI(), tokenURI, \"/metadata.json\")) : super.uri(tokenId);\r\n    }\r\n\r\n    function setBaseURI(string calldata baseURI) external onlyAdminSafe {\r\n        _setBaseURI(baseURI);\r\n    }\r\n\r\n\r\n    function _beforeTokenTransfer(address operator, address from, address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data) internal override(ERC1155, ERC1155Supply) {}\r\n\r\n    function mint(address to, uint256 id, uint256 amount, string calldata cid) external onlyTraders {\r\n        if (totalSupply(id) == 0)\r\n        {\r\n            _setURI(id, cid);\r\n        }\r\n        _mint(to, id, amount, \"\");\r\n    }\r\n\r\n}"
			},
			"contracts/GU-NFT/ERC1155URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC1155/extensions/ERC1155URIStorage.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\r\n\r\n/**\r\n * @dev ERC1155 token with storage based token URI management.\r\n * Inspired by the ERC721URIStorage extension\r\n *\r\n * _Available since v4.6._\r\n */\r\nabstract contract ERC1155URIStorage is ERC1155 {\r\n    using Strings for uint256;\r\n\r\n    // Optional base URI\r\n    string private _baseURI = \"\";\r\n\r\n    // Optional mapping for token URIs\r\n    mapping(uint256 => string) private _tokenURIs;\r\n\r\n    function tokenURIs(uint256 id) public view returns (string memory)\r\n    {\r\n        return _tokenURIs[id];\r\n    }\r\n\r\n    function baseURI() public view returns (string memory)\r\n    {\r\n        return _baseURI;\r\n    }\r\n    /**\r\n     * @dev See {IERC1155MetadataURI-uri}.\r\n     *\r\n     * This implementation returns the concatenation of the `_baseURI`\r\n     * and the token-specific uri if the latter is set\r\n     *\r\n     * This enables the following behaviors:\r\n     *\r\n     * - if `_tokenURIs[tokenId]` is set, then the result is the concatenation\r\n     *   of `_baseURI` and `_tokenURIs[tokenId]` (keep in mind that `_baseURI`\r\n     *   is empty per default);\r\n     *\r\n     * - if `_tokenURIs[tokenId]` is NOT set then we fallback to `super.uri()`\r\n     *   which in most cases will contain `ERC1155._uri`;\r\n     *\r\n     * - if `_tokenURIs[tokenId]` is NOT set, and if the parents do not have a\r\n     *   uri value set, then the result is empty.\r\n     */\r\n    function uri(uint256 tokenId) public view virtual override returns (string memory) {\r\n        string memory tokenURI = _tokenURIs[tokenId];\r\n\r\n        // If token URI is set, concatenate base URI and tokenURI (via abi.encodePacked).\r\n        return bytes(tokenURI).length > 0 ? string(abi.encodePacked(_baseURI, tokenURI)) : super.uri(tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `tokenURI` as the tokenURI of `tokenId`.\r\n     */\r\n    function _setURI(uint256 tokenId, string memory tokenURI) internal virtual {\r\n        _tokenURIs[tokenId] = tokenURI;\r\n        //emit URI(uri(tokenId), tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `baseURI` as the `_baseURI` for all tokens\r\n     */\r\n    function _setBaseURI(string memory __baseURI) internal virtual {\r\n        _baseURI = __baseURI;\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC1155/extensions/ERC1155Supply.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC1155.sol\";\n\n/**\n * @dev Extension of ERC1155 that adds tracking of total supply per id.\n *\n * Useful for scenarios where Fungible and Non-fungible tokens have to be\n * clearly identified. Note: While a totalSupply of 1 might mean the\n * corresponding is an NFT, there is no guarantees that no other token with the\n * same id are not going to be minted.\n */\nabstract contract ERC1155Supply is ERC1155 {\n    mapping(uint256 => uint256) private _totalSupply;\n\n    /**\n     * @dev Total amount of tokens in with a given id.\n     */\n    function totalSupply(uint256 id) public view virtual returns (uint256) {\n        return _totalSupply[id];\n    }\n\n    /**\n     * @dev Indicates whether any token exist with a given id, or not.\n     */\n    function exists(uint256 id) public view virtual returns (bool) {\n        return ERC1155Supply.totalSupply(id) > 0;\n    }\n\n    /**\n     * @dev See {ERC1155-_beforeTokenTransfer}.\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual override {\n        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        if (from == address(0)) {\n            for (uint256 i = 0; i < ids.length; ++i) {\n                _totalSupply[ids[i]] += amounts[i];\n            }\n        }\n\n        if (to == address(0)) {\n            for (uint256 i = 0; i < ids.length; ++i) {\n                uint256 id = ids[i];\n                uint256 amount = amounts[i];\n                uint256 supply = _totalSupply[id];\n                require(supply >= amount, \"ERC1155: burn amount exceeds totalSupply\");\n                unchecked {\n                    _totalSupply[id] = supply - amount;\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./extensions/IERC1155MetadataURI.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: balance query for the zero address\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(\n        address from,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(\n        address from,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":570:17120  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1107:1169  constructor(string memory uri_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1149:1162  _setURI(uri_) */\n  tag_6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1157:1161  uri_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1149:1156  _setURI */\n  tag_7\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1149:1162  _setURI(uri_) */\n  jump\t// in\ntag_6:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1107:1169  constructor(string memory uri_) {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":570:17120  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  jump(tag_24)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8171:8257  function _setURI(string memory newuri) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8237:8250  _uri = newuri */\n  dup1\n  mload\n  tag_10\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8237:8241  _uri */\n  0x02\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8237:8250  _uri = newuri */\n  0x20\n  dup5\n  add\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8171:8257  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":570:17120  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\ntag_11:\n  dup3\n  dup1\n  sload\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_15\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_18)\ntag_15:\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_18)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_18\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\n  pop\n  tag_19\n  swap3\n  swap2\n  pop\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\ntag_21:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_19\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_21)\n    /* \"#utility.yul\":14:141   */\ntag_23:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1233   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":257:259   */\n  0x20\n    /* \"#utility.yul\":300:302   */\n  dup1\n    /* \"#utility.yul\":288:297   */\n  dup4\n    /* \"#utility.yul\":279:286   */\n  dup6\n    /* \"#utility.yul\":275:298   */\n  sub\n    /* \"#utility.yul\":271:303   */\n  slt\n    /* \"#utility.yul\":268:320   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":316:317   */\n  0x00\n    /* \"#utility.yul\":313:314   */\n  dup1\n    /* \"#utility.yul\":306:318   */\n  revert\n    /* \"#utility.yul\":268:320   */\ntag_27:\n    /* \"#utility.yul\":343:359   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":408:422   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":405:439   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":435:436   */\n  0x00\n    /* \"#utility.yul\":432:433   */\n  dup1\n    /* \"#utility.yul\":425:437   */\n  revert\n    /* \"#utility.yul\":405:439   */\ntag_28:\n    /* \"#utility.yul\":473:479   */\n  dup2\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":448:480   */\n  swap2\n  pop\n    /* \"#utility.yul\":518:525   */\n  dup6\n    /* \"#utility.yul\":511:515   */\n  0x1f\n    /* \"#utility.yul\":507:509   */\n  dup4\n    /* \"#utility.yul\":503:516   */\n  add\n    /* \"#utility.yul\":499:526   */\n  slt\n    /* \"#utility.yul\":489:544   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":540:541   */\n  0x00\n    /* \"#utility.yul\":537:538   */\n  dup1\n    /* \"#utility.yul\":530:542   */\n  revert\n    /* \"#utility.yul\":489:544   */\ntag_29:\n    /* \"#utility.yul\":569:571   */\n  dup2\n    /* \"#utility.yul\":563:572   */\n  mload\n    /* \"#utility.yul\":591:593   */\n  dup2\n    /* \"#utility.yul\":587:589   */\n  dup2\n    /* \"#utility.yul\":584:594   */\n  gt\n    /* \"#utility.yul\":581:617   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":597:615   */\n  tag_31\n  tag_23\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":672:674   */\n  0x40\n    /* \"#utility.yul\":666:675   */\n  mload\n    /* \"#utility.yul\":640:642   */\n  0x1f\n    /* \"#utility.yul\":726:739   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":722:744   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":746:748   */\n  0x3f\n    /* \"#utility.yul\":718:749   */\n  add\n    /* \"#utility.yul\":714:754   */\n  and\n    /* \"#utility.yul\":702:755   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":770:788   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":790:812   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":767:813   */\n  or\n    /* \"#utility.yul\":764:836   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":816:834   */\n  tag_33\n  tag_23\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":856:866   */\n  dup2\n    /* \"#utility.yul\":852:854   */\n  0x40\n    /* \"#utility.yul\":845:867   */\n  mstore\n    /* \"#utility.yul\":891:893   */\n  dup3\n    /* \"#utility.yul\":883:889   */\n  dup2\n    /* \"#utility.yul\":876:894   */\n  mstore\n    /* \"#utility.yul\":931:938   */\n  dup9\n    /* \"#utility.yul\":926:928   */\n  dup7\n    /* \"#utility.yul\":921:923   */\n  dup5\n    /* \"#utility.yul\":917:919   */\n  dup8\n    /* \"#utility.yul\":913:924   */\n  add\n    /* \"#utility.yul\":909:929   */\n  add\n    /* \"#utility.yul\":906:939   */\n  gt\n    /* \"#utility.yul\":903:956   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":952:953   */\n  0x00\n    /* \"#utility.yul\":949:950   */\n  dup1\n    /* \"#utility.yul\":942:954   */\n  revert\n    /* \"#utility.yul\":903:956   */\ntag_34:\n    /* \"#utility.yul\":974:975   */\n  0x00\n    /* \"#utility.yul\":965:975   */\n  swap4\n  pop\n    /* \"#utility.yul\":984:1113   */\ntag_35:\n    /* \"#utility.yul\":998:1000   */\n  dup3\n    /* \"#utility.yul\":995:996   */\n  dup5\n    /* \"#utility.yul\":992:1001   */\n  lt\n    /* \"#utility.yul\":984:1113   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1086:1096   */\n  dup5\n  dup5\n  add\n    /* \"#utility.yul\":1082:1101   */\n  dup7\n  add\n    /* \"#utility.yul\":1076:1102   */\n  mload\n    /* \"#utility.yul\":1055:1069   */\n  dup2\n  dup6\n  add\n    /* \"#utility.yul\":1051:1074   */\n  dup8\n  add\n    /* \"#utility.yul\":1044:1103   */\n  mstore\n    /* \"#utility.yul\":1009:1019   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":984:1113   */\n  jump(tag_35)\ntag_37:\n    /* \"#utility.yul\":1131:1133   */\n  dup3\n    /* \"#utility.yul\":1128:1129   */\n  dup5\n    /* \"#utility.yul\":1125:1134   */\n  gt\n    /* \"#utility.yul\":1122:1202   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1190:1191   */\n  0x00\n    /* \"#utility.yul\":1185:1187   */\n  dup7\n    /* \"#utility.yul\":1180:1182   */\n  dup5\n    /* \"#utility.yul\":1172:1178   */\n  dup4\n    /* \"#utility.yul\":1168:1183   */\n  add\n    /* \"#utility.yul\":1164:1188   */\n  add\n    /* \"#utility.yul\":1157:1192   */\n  mstore\n    /* \"#utility.yul\":1122:1202   */\ntag_38:\n    /* \"#utility.yul\":1221:1227   */\n  swap9\n    /* \"#utility.yul\":146:1233   */\n  swap8\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1238:1618   */\ntag_13:\n    /* \"#utility.yul\":1317:1318   */\n  0x01\n    /* \"#utility.yul\":1313:1325   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1360:1372   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1381:1442   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1435:1439   */\n  0x7f\n    /* \"#utility.yul\":1427:1433   */\n  dup3\n    /* \"#utility.yul\":1423:1440   */\n  and\n    /* \"#utility.yul\":1413:1440   */\n  swap2\n  pop\n    /* \"#utility.yul\":1381:1442   */\ntag_40:\n    /* \"#utility.yul\":1488:1490   */\n  0x20\n    /* \"#utility.yul\":1480:1486   */\n  dup3\n    /* \"#utility.yul\":1477:1491   */\n  lt\n    /* \"#utility.yul\":1457:1475   */\n  dup2\n    /* \"#utility.yul\":1454:1492   */\n  sub\n    /* \"#utility.yul\":1451:1612   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1534:1544   */\n  0x4e487b71\n    /* \"#utility.yul\":1529:1532   */\n  0xe0\n    /* \"#utility.yul\":1525:1545   */\n  shl\n    /* \"#utility.yul\":1522:1523   */\n  0x00\n    /* \"#utility.yul\":1515:1546   */\n  mstore\n    /* \"#utility.yul\":1569:1573   */\n  0x22\n    /* \"#utility.yul\":1566:1567   */\n  0x04\n    /* \"#utility.yul\":1559:1574   */\n  mstore\n    /* \"#utility.yul\":1597:1601   */\n  0x24\n    /* \"#utility.yul\":1594:1595   */\n  0x00\n    /* \"#utility.yul\":1587:1602   */\n  revert\n    /* \"#utility.yul\":1451:1612   */\ntag_41:\n  pop\n    /* \"#utility.yul\":1238:1618   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_24:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":570:17120  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":570:17120  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2413  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n        /* \"#utility.yul\":620:645   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":608:610   */\n      0x20\n        /* \"#utility.yul\":593:611   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2413  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":1253:1267   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1246:1268   */\n      iszero\n        /* \"#utility.yul\":1228:1269   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1216:1218   */\n      0x20\n        /* \"#utility.yul\":1201:1219   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      tag_16\n        /* \"#utility.yul\":1088:1275   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4060:4490  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2570:3078  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_7:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3146:3299  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_8:\n      tag_30\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3366:3532  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_9:\n      tag_18\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3488:3515  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3465:3469  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3488:3515  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3488:3506  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3488:3515  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3488:3525  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3366:3532  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3599:3988  function safeTransferFrom(... */\n    tag_10:\n      tag_30\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2413  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2271:2278  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2298:2319  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2290:2367  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":8561:8563   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2290:2367  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8543:8564   */\n      mstore\n        /* \"#utility.yul\":8600:8602   */\n      0x2b\n        /* \"#utility.yul\":8580:8598   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8573:8603   */\n      mstore\n        /* \"#utility.yul\":8639:8673   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":8619:8637   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8612:8674   */\n      mstore\n        /* \"#utility.yul\":8710:8723   */\n      0x65726f2061646472657373000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8690:8708   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8683:8724   */\n      mstore\n        /* \"#utility.yul\":8741:8760   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2290:2367  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2384:2393  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2384:2397  _balances[id] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2384:2406  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap5\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2413  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1338:1342  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1414  interfaceId == type(IERC1155).interfaceId */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1388:1414  type(IERC1155).interfaceId */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1414  interfaceId == type(IERC1155).interfaceId */\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1482  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_58\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1430:1482  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1445:1482  type(IERC1155MetadataURI).interfaceId */\n      0x0e89341c00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1430:1482  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1482  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1534  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_60\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1498:1534  super.supportsInterface(interfaceId) */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1354:1534  return... */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2000:2013  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2032:2036  _uri */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2025:2036  return _uri */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4060:4490  function safeBatchTransferFrom(... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4285:4305  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4285:4305  from == _msgSender() */\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4285:4345  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_73\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4309:4345  isApprovedForAll(from, _msgSender()) */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4326:4330  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3366:3532  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_45\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4309:4345  isApprovedForAll(from, _msgSender()) */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4264:4421  require(... */\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":9415:9417   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4264:4421  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9397:9418   */\n      mstore\n        /* \"#utility.yul\":9454:9456   */\n      0x32\n        /* \"#utility.yul\":9434:9452   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9427:9457   */\n      mstore\n        /* \"#utility.yul\":9493:9527   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":9473:9491   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9466:9528   */\n      mstore\n        /* \"#utility.yul\":9564:9584   */\n      0x6f776e6572206e6f7220617070726f7665640000000000000000000000000000\n        /* \"#utility.yul\":9544:9562   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9537:9585   */\n      mstore\n        /* \"#utility.yul\":9602:9621   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4264:4421  require(... */\n      tag_55\n        /* \"#utility.yul\":9213:9627   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4264:4421  require(... */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4431:4483  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4454:4458  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4460:4462  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4464:4467  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4469:4476  amounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4478:4482  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4431:4453  _safeBatchTransferFrom */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4431:4483  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4060:4490  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2570:3078  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2721:2737  uint256[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2780:2783  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2780:2790  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2761:2769  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2761:2776  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2761:2790  accounts.length == ids.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2753:2836  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":9834:9836   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2753:2836  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9816:9837   */\n      mstore\n        /* \"#utility.yul\":9873:9875   */\n      0x29\n        /* \"#utility.yul\":9853:9871   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9846:9876   */\n      mstore\n        /* \"#utility.yul\":9912:9946   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":9892:9910   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9885:9947   */\n      mstore\n        /* \"#utility.yul\":9983:9994   */\n      0x206d69736d617463680000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9963:9981   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9956:9995   */\n      mstore\n        /* \"#utility.yul\":10012:10031   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2753:2836  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_55\n        /* \"#utility.yul\":9632:10037   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2753:2836  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2847:2877  uint256[] memory batchBalances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2894:2902  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2894:2909  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2880:2910  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_85\n      jumpi\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_87:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2847:2910  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2926:2935  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2921:3041  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2945:2953  accounts */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2945:2960  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2941:2942  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2941:2960  i < accounts.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2921:3041  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_89\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3000:3030  balanceOf(accounts[i], ids[i]) */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3010:3018  accounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3019:3020  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3010:3021  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_93\n      jumpi\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3023:3026  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3027:3028  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3023:3029  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_96\n      jumpi\n      tag_96\n      tag_94\n      jump\t// in\n    tag_96:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3000:3009  balanceOf */\n      tag_15\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3000:3030  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2981:2994  batchBalances */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2995:2996  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2981:2997  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_98\n      jumpi\n      tag_98\n      tag_94\n      jump\t// in\n    tag_98:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2981:3030  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2962:2965  ++i */\n      tag_99\n      dup2\n      tag_100\n      jump\t// in\n    tag_99:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2921:3041  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_88)\n    tag_89:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3058:3071  batchBalances */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2570:3078  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3146:3299  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3240:3292  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_102\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3273:3281  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3283:3291  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3240:3258  _setApprovalForAll */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3240:3292  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3146:3299  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3599:3988  function safeTransferFrom(... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3799:3819  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3799:3819  from == _msgSender() */\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3799:3859  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_109\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3823:3859  isApprovedForAll(from, _msgSender()) */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3840:3844  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3366:3532  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_45\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3823:3859  isApprovedForAll(from, _msgSender()) */\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3778:3926  require(... */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":10822:10824   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3778:3926  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10804:10825   */\n      mstore\n        /* \"#utility.yul\":10861:10863   */\n      0x29\n        /* \"#utility.yul\":10841:10859   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10834:10864   */\n      mstore\n        /* \"#utility.yul\":10900:10934   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":10880:10898   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10873:10935   */\n      mstore\n        /* \"#utility.yul\":10971:10982   */\n      0x20617070726f7665640000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10951:10969   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10944:10983   */\n      mstore\n        /* \"#utility.yul\":11000:11019   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3778:3926  require(... */\n      tag_55\n        /* \"#utility.yul\":10620:11025   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3778:3926  require(... */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3936:3981  _safeTransferFrom(from, to, id, amount, data) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3954:3958  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3960:3962  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3964:3966  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3968:3974  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3976:3980  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3936:3953  _safeTransferFrom */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3936:3981  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6233:7348  function _safeBatchTransferFrom(... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6453:6460  amounts */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6453:6467  amounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6439:6442  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6439:6449  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6439:6467  ids.length == amounts.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6431:6512  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":11232:11234   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6431:6512  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11214:11235   */\n      mstore\n        /* \"#utility.yul\":11271:11273   */\n      0x28\n        /* \"#utility.yul\":11251:11269   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11244:11274   */\n      mstore\n        /* \"#utility.yul\":11310:11344   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":11290:11308   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11283:11345   */\n      mstore\n        /* \"#utility.yul\":11381:11391   */\n      0x6d69736d61746368000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11361:11379   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11354:11392   */\n      mstore\n        /* \"#utility.yul\":11409:11428   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6431:6512  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_55\n        /* \"#utility.yul\":11030:11434   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6431:6512  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6530:6546  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6522:6588  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":11641:11643   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6522:6588  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11623:11644   */\n      mstore\n        /* \"#utility.yul\":11680:11682   */\n      0x25\n        /* \"#utility.yul\":11660:11678   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11653:11683   */\n      mstore\n        /* \"#utility.yul\":11719:11753   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":11699:11717   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11692:11754   */\n      mstore\n        /* \"#utility.yul\":11790:11797   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11770:11788   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11763:11798   */\n      mstore\n        /* \"#utility.yul\":11815:11834   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6522:6588  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_55\n        /* \"#utility.yul\":11439:11840   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6522:6588  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n    tag_122:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6599:6615  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6712:7123  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6736:6739  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6736:6746  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6732:6733  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6732:6746  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6712:7123  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6767:6777  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6780:6783  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6784:6785  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6780:6786  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_132\n      jumpi\n      tag_132\n      tag_94\n      jump\t// in\n    tag_132:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6767:6786  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6800:6814  uint256 amount */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6817:6824  amounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6825:6826  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6817:6827  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_134\n      jumpi\n      tag_134\n      tag_94\n      jump\t// in\n    tag_134:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6842:6861  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6864:6877  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6864:6883  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup15\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6817:6827  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6905:6926  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6897:6973  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":12047:12049   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6897:6973  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12029:12050   */\n      mstore\n        /* \"#utility.yul\":12086:12088   */\n      0x2a\n        /* \"#utility.yul\":12066:12084   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12059:12089   */\n      mstore\n        /* \"#utility.yul\":12125:12159   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":12105:12123   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12098:12160   */\n      mstore\n        /* \"#utility.yul\":12196:12208   */\n      0x72207472616e7366657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12176:12194   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12169:12209   */\n      mstore\n        /* \"#utility.yul\":12226:12245   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6897:6973  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_55\n        /* \"#utility.yul\":11845:12251   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6897:6973  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7024  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7028  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7034  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7037:7057  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7057  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7085:7102  _balances[id][to] */\n      swap1\n      dup12\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7085:7112  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7037:7057  fromBalance - amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7024  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7085:7112  _balances[id][to] += amount */\n      tag_138\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7037:7057  fromBalance - amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7085:7112  _balances[id][to] += amount */\n      tag_139\n      jump\t// in\n    tag_138:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6753:7123  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6748:6751  ++i */\n      dup1\n      tag_140\n      swap1\n      tag_100\n      jump\t// in\n    tag_140:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6712:7123  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_128)\n    tag_129:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7168:7170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7162:7166  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7152:7160  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7172:7175  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7177:7184  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_141\n      swap3\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7266:7341  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7302:7310  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7312:7316  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7318:7320  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7322:7325  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7327:7334  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7336:7340  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7266:7301  _doSafeBatchTransferAcceptanceCheck */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7266:7341  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6421:7348  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6233:7348  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12773:13096  function _setApprovalForAll(... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12923:12931  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12914:12931  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12914:12919  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12914:12931  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12906:12977  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":13061:13063   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12906:12977  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13043:13064   */\n      mstore\n        /* \"#utility.yul\":13100:13102   */\n      0x29\n        /* \"#utility.yul\":13080:13098   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13073:13103   */\n      mstore\n        /* \"#utility.yul\":13139:13173   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":13119:13137   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13112:13174   */\n      mstore\n        /* \"#utility.yul\":13210:13221   */\n      0x20666f722073656c660000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13190:13208   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13183:13222   */\n      mstore\n        /* \"#utility.yul\":13239:13258   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12906:12977  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_55\n        /* \"#utility.yul\":12859:13264   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12906:12977  require(owner != operator, \"ERC1155: setting approval status for self\") */\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12987:13012  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12987:13005  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12987:13012  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12987:13022  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12987:13033  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13048:13089  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":1228:1269   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13048:13089  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":1201:1219   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13048:13089  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12773:13096  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4940:5887  function _safeTransferFrom(... */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5121:5137  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5113:5179  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":11641:11643   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5113:5179  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11623:11644   */\n      mstore\n        /* \"#utility.yul\":11680:11682   */\n      0x25\n        /* \"#utility.yul\":11660:11678   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11653:11683   */\n      mstore\n        /* \"#utility.yul\":11719:11753   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":11699:11717   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11692:11754   */\n      mstore\n        /* \"#utility.yul\":11790:11797   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11770:11788   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11763:11798   */\n      mstore\n        /* \"#utility.yul\":11815:11834   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5113:5179  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_55\n        /* \"#utility.yul\":11439:11840   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5113:5179  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n    tag_153:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5190:5206  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5254:5275  _asSingletonArray(id) */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5272:5274  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5254:5271  _asSingletonArray */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5254:5275  _asSingletonArray(id) */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5231:5275  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5285:5309  uint256[] memory amounts */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5312:5337  _asSingletonArray(amount) */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5330:5336  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5312:5329  _asSingletonArray */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5312:5337  _asSingletonArray(amount) */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5285:5337  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5419:5438  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5441:5454  _balances[id] */\n      dup7\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5441:5460  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup13\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5478:5499  fromBalance >= amount */\n      dup6\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5470:5546  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":12047:12049   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5470:5546  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12029:12050   */\n      mstore\n        /* \"#utility.yul\":12086:12088   */\n      0x2a\n        /* \"#utility.yul\":12066:12084   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12059:12089   */\n      mstore\n        /* \"#utility.yul\":12125:12159   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":12105:12123   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12098:12160   */\n      mstore\n        /* \"#utility.yul\":12196:12208   */\n      0x72207472616e7366657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12176:12194   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12169:12209   */\n      mstore\n        /* \"#utility.yul\":12226:12245   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5470:5546  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_55\n        /* \"#utility.yul\":11845:12251   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5470:5546  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5589  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5593  _balances[id] */\n      dup8\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5599  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup14\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5602:5622  fromBalance - amount */\n      dup10\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5622  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5642:5659  _balances[id][to] */\n      swap1\n      dup11\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5642:5669  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5602:5622  fromBalance - amount */\n      dup9\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5589  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5642:5669  _balances[id][to] += amount */\n      tag_162\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5602:5622  fromBalance - amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5642:5669  _balances[id][to] += amount */\n      tag_139\n      jump\t// in\n    tag_162:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5685:5731  TransferSingle(operator, from, to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":13443:13468   */\n      dup9\n      dup2\n      mstore\n        /* \"#utility.yul\":13499:13501   */\n      0x20\n        /* \"#utility.yul\":13484:13502   */\n      dup2\n      add\n        /* \"#utility.yul\":13477:13511   */\n      dup9\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5685:5731  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup12\n      and\n      swap3\n      dup13\n      dup3\n      and\n      swap3\n      swap2\n      dup9\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":13416:13434   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5685:5731  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5812:5880  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5843:5851  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5853:5857  from */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5859:5861  to */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5863:5865  id */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5867:5873  amount */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5875:5879  data */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5812:5842  _doSafeTransferAcceptanceCheck */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5812:5880  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5103:5887  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4940:5887  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16127:16919  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16359:16372  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16355:16913  if (to.isContract()) {... */\n      tag_145\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16394:16473  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      0xbc197c8100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16394:16437  IERC1155Receiver(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16394:16473  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      tag_174\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16438:16446  operator */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16448:16452  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16454:16457  ids */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16459:16466  amounts */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16468:16472  data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16394:16473  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      0x04\n      add\n      tag_175\n      jump\t// in\n    tag_174:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_176\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_177\n      swap2\n      dup2\n      add\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      0x01\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16390:16903  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_179\n      jumpi\n      tag_183\n      tag_184\n      jump\t// in\n    tag_183:\n      dup1\n      0x08c379a0\n      sub\n      tag_182\n      jumpi\n      pop\n      tag_185\n      tag_186\n      jump\t// in\n    tag_185:\n      dup1\n      tag_187\n      jumpi\n      pop\n      jump(tag_181)\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16779:16785  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16772:16786  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16390:16903  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_182:\n      pop\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16826:16888  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":15753:15755   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16826:16888  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15735:15756   */\n      mstore\n        /* \"#utility.yul\":15792:15794   */\n      0x34\n        /* \"#utility.yul\":15772:15790   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15765:15795   */\n      mstore\n        /* \"#utility.yul\":15831:15865   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":15811:15829   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15804:15866   */\n      mstore\n        /* \"#utility.yul\":15902:15924   */\n      0x526563656976657220696d706c656d656e746572000000000000000000000000\n        /* \"#utility.yul\":15882:15900   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15875:15925   */\n      mstore\n        /* \"#utility.yul\":15942:15961   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16826:16888  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      tag_55\n        /* \"#utility.yul\":15551:15967   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16390:16903  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16552:16612  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16564:16612  IERC1155Receiver.onERC1155BatchReceived.selector */\n      0xbc197c8100000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16552:16612  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16548:16705  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_192\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16636:16686  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":16174:16176   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16636:16686  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16156:16177   */\n      mstore\n        /* \"#utility.yul\":16213:16215   */\n      0x28\n        /* \"#utility.yul\":16193:16211   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16186:16216   */\n      mstore\n        /* \"#utility.yul\":16252:16286   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":16232:16250   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16225:16287   */\n      mstore\n        /* \"#utility.yul\":16323:16333   */\n      0x6420746f6b656e73000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16303:16321   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":16296:16334   */\n      mstore\n        /* \"#utility.yul\":16351:16370   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16636:16686  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      tag_55\n        /* \"#utility.yul\":15972:16376   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16548:16705  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16474:16719  returns (... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16127:16919  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16925:17118  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17044:17060  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17058:17059  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17044:17060  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16991:17007  uint256[] memory */\n      0x60\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17019:17041  uint256[] memory array */\n      0x00\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17044:17060  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17019:17060  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17081:17088  element */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17070:17075  array */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17076:17077  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17070:17078  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_200\n      jumpi\n      tag_200\n      tag_94\n      jump\t// in\n    tag_200:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17070:17088  array[0] = element */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17106:17111  array */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16925:17118  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15396:16121  function _doSafeTransferAcceptanceCheck(... */\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15603:15616  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15599:16115  if (to.isContract()) {... */\n      tag_145\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15638:15710  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      0xf23a6e6100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15638:15676  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15638:15710  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      tag_204\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15677:15685  operator */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15687:15691  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15693:15695  id */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15697:15703  amount */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15705:15709  data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15638:15710  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      0x04\n      add\n      tag_205\n      jump\t// in\n    tag_204:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_206\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_207\n      swap2\n      dup2\n      add\n      swap1\n      tag_178\n      jump\t// in\n    tag_207:\n      0x01\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15634:16105  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_208\n      jumpi\n      tag_183\n      tag_184\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15759:15814  response != IERC1155Receiver.onERC1155Received.selector */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15771:15814  IERC1155Receiver.onERC1155Received.selector */\n      0xf23a6e6100000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15759:15814  response != IERC1155Receiver.onERC1155Received.selector */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15755:15907  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_192\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15838:15888  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":16174:16176   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15838:15888  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16156:16177   */\n      mstore\n        /* \"#utility.yul\":16213:16215   */\n      0x28\n        /* \"#utility.yul\":16193:16211   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16186:16216   */\n      mstore\n        /* \"#utility.yul\":16252:16286   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":16232:16250   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16225:16287   */\n      mstore\n        /* \"#utility.yul\":16323:16333   */\n      0x6420746f6b656e73000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16303:16321   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":16296:16334   */\n      mstore\n        /* \"#utility.yul\":16351:16370   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15838:15888  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      tag_55\n        /* \"#utility.yul\":15972:16376   */\n      jump\n        /* \"#utility.yul\":14:210   */\n    tag_221:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":142:184   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":131:185   */\n      dup2\n      and\n        /* \"#utility.yul\":121:186   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:204   */\n      tag_232\n      jumpi\n        /* \"#utility.yul\":200:201   */\n      0x00\n        /* \"#utility.yul\":197:198   */\n      dup1\n        /* \"#utility.yul\":190:202   */\n      revert\n        /* \"#utility.yul\":111:204   */\n    tag_232:\n        /* \"#utility.yul\":14:210   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":215:469   */\n    tag_14:\n        /* \"#utility.yul\":283:289   */\n      0x00\n        /* \"#utility.yul\":291:297   */\n      dup1\n        /* \"#utility.yul\":344:346   */\n      0x40\n        /* \"#utility.yul\":332:341   */\n      dup4\n        /* \"#utility.yul\":323:330   */\n      dup6\n        /* \"#utility.yul\":319:342   */\n      sub\n        /* \"#utility.yul\":315:347   */\n      slt\n        /* \"#utility.yul\":312:364   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":360:361   */\n      0x00\n        /* \"#utility.yul\":357:358   */\n      dup1\n        /* \"#utility.yul\":350:362   */\n      revert\n        /* \"#utility.yul\":312:364   */\n    tag_234:\n        /* \"#utility.yul\":383:412   */\n      tag_235\n        /* \"#utility.yul\":402:411   */\n      dup4\n        /* \"#utility.yul\":383:412   */\n      tag_221\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":373:412   */\n      swap5\n        /* \"#utility.yul\":459:461   */\n      0x20\n        /* \"#utility.yul\":444:462   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":431:463   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":215:469   */\n      jump\t// out\n        /* \"#utility.yul\":656:833   */\n    tag_222:\n        /* \"#utility.yul\":741:807   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":734:739   */\n      dup2\n        /* \"#utility.yul\":730:808   */\n      and\n        /* \"#utility.yul\":723:728   */\n      dup2\n        /* \"#utility.yul\":720:809   */\n      eq\n        /* \"#utility.yul\":710:827   */\n      tag_238\n      jumpi\n        /* \"#utility.yul\":823:824   */\n      0x00\n        /* \"#utility.yul\":820:821   */\n      dup1\n        /* \"#utility.yul\":813:825   */\n      revert\n        /* \"#utility.yul\":710:827   */\n    tag_238:\n        /* \"#utility.yul\":656:833   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":838:1083   */\n    tag_20:\n        /* \"#utility.yul\":896:902   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:969   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":965:966   */\n      0x00\n        /* \"#utility.yul\":962:963   */\n      dup1\n        /* \"#utility.yul\":955:967   */\n      revert\n        /* \"#utility.yul\":917:969   */\n    tag_240:\n        /* \"#utility.yul\":1004:1013   */\n      dup2\n        /* \"#utility.yul\":991:1014   */\n      calldataload\n        /* \"#utility.yul\":1023:1053   */\n      tag_241\n        /* \"#utility.yul\":1047:1052   */\n      dup2\n        /* \"#utility.yul\":1023:1053   */\n      tag_222\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":1072:1077   */\n      swap4\n        /* \"#utility.yul\":838:1083   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1280:1460   */\n    tag_26:\n        /* \"#utility.yul\":1339:1345   */\n      0x00\n        /* \"#utility.yul\":1392:1394   */\n      0x20\n        /* \"#utility.yul\":1380:1389   */\n      dup3\n        /* \"#utility.yul\":1371:1378   */\n      dup5\n        /* \"#utility.yul\":1367:1390   */\n      sub\n        /* \"#utility.yul\":1363:1395   */\n      slt\n        /* \"#utility.yul\":1360:1412   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":1408:1409   */\n      0x00\n        /* \"#utility.yul\":1405:1406   */\n      dup1\n        /* \"#utility.yul\":1398:1410   */\n      revert\n        /* \"#utility.yul\":1360:1412   */\n    tag_244:\n      pop\n        /* \"#utility.yul\":1431:1454   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1280:1460   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1465:1996   */\n    tag_223:\n        /* \"#utility.yul\":1507:1510   */\n      0x00\n        /* \"#utility.yul\":1545:1550   */\n      dup2\n        /* \"#utility.yul\":1539:1551   */\n      mload\n        /* \"#utility.yul\":1572:1578   */\n      dup1\n        /* \"#utility.yul\":1567:1570   */\n      dup5\n        /* \"#utility.yul\":1560:1579   */\n      mstore\n        /* \"#utility.yul\":1597:1598   */\n      0x00\n        /* \"#utility.yul\":1607:1769   */\n    tag_246:\n        /* \"#utility.yul\":1621:1627   */\n      dup2\n        /* \"#utility.yul\":1618:1619   */\n      dup2\n        /* \"#utility.yul\":1615:1628   */\n      lt\n        /* \"#utility.yul\":1607:1769   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":1683:1687   */\n      0x20\n        /* \"#utility.yul\":1739:1752   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":1735:1757   */\n      dup2\n      add\n        /* \"#utility.yul\":1729:1758   */\n      mload\n        /* \"#utility.yul\":1711:1722   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":1707:1727   */\n      dup3\n      add\n        /* \"#utility.yul\":1700:1759   */\n      mstore\n        /* \"#utility.yul\":1636:1648   */\n      add\n        /* \"#utility.yul\":1607:1769   */\n      jump(tag_246)\n    tag_248:\n        /* \"#utility.yul\":1787:1793   */\n      dup2\n        /* \"#utility.yul\":1784:1785   */\n      dup2\n        /* \"#utility.yul\":1781:1794   */\n      gt\n        /* \"#utility.yul\":1778:1865   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":1853:1854   */\n      0x00\n        /* \"#utility.yul\":1846:1850   */\n      0x20\n        /* \"#utility.yul\":1837:1843   */\n      dup4\n        /* \"#utility.yul\":1832:1835   */\n      dup8\n        /* \"#utility.yul\":1828:1844   */\n      add\n        /* \"#utility.yul\":1824:1851   */\n      add\n        /* \"#utility.yul\":1817:1855   */\n      mstore\n        /* \"#utility.yul\":1778:1865   */\n    tag_249:\n      pop\n        /* \"#utility.yul\":1910:1912   */\n      0x1f\n        /* \"#utility.yul\":1898:1913   */\n      add\n        /* \"#utility.yul\":1915:1981   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":1894:1982   */\n      and\n        /* \"#utility.yul\":1885:1983   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1985:1989   */\n      0x20\n        /* \"#utility.yul\":1881:1990   */\n      add\n      swap3\n        /* \"#utility.yul\":1465:1996   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2001:2221   */\n    tag_29:\n        /* \"#utility.yul\":2150:2152   */\n      0x20\n        /* \"#utility.yul\":2139:2148   */\n      dup2\n        /* \"#utility.yul\":2132:2153   */\n      mstore\n        /* \"#utility.yul\":2113:2117   */\n      0x00\n        /* \"#utility.yul\":2170:2215   */\n      tag_241\n        /* \"#utility.yul\":2211:2213   */\n      0x20\n        /* \"#utility.yul\":2200:2209   */\n      dup4\n        /* \"#utility.yul\":2196:2214   */\n      add\n        /* \"#utility.yul\":2188:2194   */\n      dup5\n        /* \"#utility.yul\":2170:2215   */\n      tag_223\n      jump\t// in\n        /* \"#utility.yul\":2226:2410   */\n    tag_86:\n        /* \"#utility.yul\":2278:2355   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2275:2276   */\n      0x00\n        /* \"#utility.yul\":2268:2356   */\n      mstore\n        /* \"#utility.yul\":2375:2379   */\n      0x41\n        /* \"#utility.yul\":2372:2373   */\n      0x04\n        /* \"#utility.yul\":2365:2380   */\n      mstore\n        /* \"#utility.yul\":2399:2403   */\n      0x24\n        /* \"#utility.yul\":2396:2397   */\n      0x00\n        /* \"#utility.yul\":2389:2404   */\n      revert\n        /* \"#utility.yul\":2415:2723   */\n    tag_224:\n        /* \"#utility.yul\":2521:2587   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":2516:2518   */\n      0x1f\n        /* \"#utility.yul\":2510:2514   */\n      dup4\n        /* \"#utility.yul\":2506:2519   */\n      add\n        /* \"#utility.yul\":2502:2588   */\n      and\n        /* \"#utility.yul\":2494:2500   */\n      dup2\n        /* \"#utility.yul\":2490:2589   */\n      add\n        /* \"#utility.yul\":2655:2661   */\n      dup2\n        /* \"#utility.yul\":2643:2653   */\n      dup2\n        /* \"#utility.yul\":2640:2662   */\n      lt\n        /* \"#utility.yul\":2619:2637   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2607:2617   */\n      dup3\n        /* \"#utility.yul\":2604:2638   */\n      gt\n        /* \"#utility.yul\":2601:2663   */\n      or\n        /* \"#utility.yul\":2598:2686   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":2666:2684   */\n      tag_255\n      tag_86\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":2702:2704   */\n      0x40\n        /* \"#utility.yul\":2695:2717   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":2415:2723   */\n      jump\t// out\n        /* \"#utility.yul\":2728:2911   */\n    tag_225:\n        /* \"#utility.yul\":2788:2792   */\n      0x00\n        /* \"#utility.yul\":2821:2839   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2813:2819   */\n      dup3\n        /* \"#utility.yul\":2810:2840   */\n      gt\n        /* \"#utility.yul\":2807:2863   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":2843:2861   */\n      tag_258\n      tag_86\n      jump\t// in\n    tag_258:\n      pop\n        /* \"#utility.yul\":2888:2889   */\n      0x05\n        /* \"#utility.yul\":2884:2898   */\n      shl\n        /* \"#utility.yul\":2900:2904   */\n      0x20\n        /* \"#utility.yul\":2880:2905   */\n      add\n      swap1\n        /* \"#utility.yul\":2728:2911   */\n      jump\t// out\n        /* \"#utility.yul\":2916:3640   */\n    tag_226:\n        /* \"#utility.yul\":2970:2975   */\n      0x00\n        /* \"#utility.yul\":3023:3026   */\n      dup3\n        /* \"#utility.yul\":3016:3020   */\n      0x1f\n        /* \"#utility.yul\":3008:3014   */\n      dup4\n        /* \"#utility.yul\":3004:3021   */\n      add\n        /* \"#utility.yul\":3000:3027   */\n      slt\n        /* \"#utility.yul\":2990:3045   */\n      tag_260\n      jumpi\n        /* \"#utility.yul\":3041:3042   */\n      0x00\n        /* \"#utility.yul\":3038:3039   */\n      dup1\n        /* \"#utility.yul\":3031:3043   */\n      revert\n        /* \"#utility.yul\":2990:3045   */\n    tag_260:\n        /* \"#utility.yul\":3077:3083   */\n      dup2\n        /* \"#utility.yul\":3064:3084   */\n      calldataload\n        /* \"#utility.yul\":3103:3107   */\n      0x20\n        /* \"#utility.yul\":3126:3169   */\n      tag_261\n        /* \"#utility.yul\":3166:3168   */\n      dup3\n        /* \"#utility.yul\":3126:3169   */\n      tag_225\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":3198:3200   */\n      0x40\n        /* \"#utility.yul\":3192:3201   */\n      mload\n        /* \"#utility.yul\":3210:3241   */\n      tag_262\n        /* \"#utility.yul\":3238:3240   */\n      dup3\n        /* \"#utility.yul\":3230:3236   */\n      dup3\n        /* \"#utility.yul\":3210:3241   */\n      tag_224\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":3276:3294   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":3368:3369   */\n      0x05\n        /* \"#utility.yul\":3364:3374   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":3352:3375   */\n      dup6\n      add\n        /* \"#utility.yul\":3348:3380   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":3310:3325   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":3392:3407   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":3389:3424   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":3420:3421   */\n      0x00\n        /* \"#utility.yul\":3417:3418   */\n      dup1\n        /* \"#utility.yul\":3410:3422   */\n      revert\n        /* \"#utility.yul\":3389:3424   */\n    tag_263:\n        /* \"#utility.yul\":3456:3458   */\n      dup3\n        /* \"#utility.yul\":3448:3454   */\n      dup7\n        /* \"#utility.yul\":3444:3459   */\n      add\n        /* \"#utility.yul\":3468:3610   */\n    tag_264:\n        /* \"#utility.yul\":3484:3490   */\n      dup5\n        /* \"#utility.yul\":3479:3482   */\n      dup2\n        /* \"#utility.yul\":3476:3491   */\n      lt\n        /* \"#utility.yul\":3468:3610   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":3550:3567   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3538:3568   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3588:3600   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":3501:3513   */\n      dup4\n      add\n        /* \"#utility.yul\":3468:3610   */\n      jump(tag_264)\n    tag_266:\n      pop\n        /* \"#utility.yul\":3628:3634   */\n      swap7\n        /* \"#utility.yul\":2916:3640   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3645:4259   */\n    tag_227:\n        /* \"#utility.yul\":3687:3692   */\n      0x00\n        /* \"#utility.yul\":3740:3743   */\n      dup3\n        /* \"#utility.yul\":3733:3737   */\n      0x1f\n        /* \"#utility.yul\":3725:3731   */\n      dup4\n        /* \"#utility.yul\":3721:3738   */\n      add\n        /* \"#utility.yul\":3717:3744   */\n      slt\n        /* \"#utility.yul\":3707:3762   */\n      tag_268\n      jumpi\n        /* \"#utility.yul\":3758:3759   */\n      0x00\n        /* \"#utility.yul\":3755:3756   */\n      dup1\n        /* \"#utility.yul\":3748:3760   */\n      revert\n        /* \"#utility.yul\":3707:3762   */\n    tag_268:\n        /* \"#utility.yul\":3794:3800   */\n      dup2\n        /* \"#utility.yul\":3781:3801   */\n      calldataload\n        /* \"#utility.yul\":3820:3838   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3816:3818   */\n      dup2\n        /* \"#utility.yul\":3813:3839   */\n      gt\n        /* \"#utility.yul\":3810:3862   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":3842:3860   */\n      tag_270\n      tag_86\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":3891:3893   */\n      0x40\n        /* \"#utility.yul\":3885:3894   */\n      mload\n        /* \"#utility.yul\":3903:4029   */\n      tag_271\n        /* \"#utility.yul\":4023:4027   */\n      0x20\n        /* \"#utility.yul\":3954:4020   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":3947:3951   */\n      0x1f\n        /* \"#utility.yul\":3943:3945   */\n      dup6\n        /* \"#utility.yul\":3939:3952   */\n      add\n        /* \"#utility.yul\":3935:4021   */\n      and\n        /* \"#utility.yul\":3931:4028   */\n      add\n        /* \"#utility.yul\":3923:3929   */\n      dup3\n        /* \"#utility.yul\":3903:4029   */\n      tag_224\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":4053:4055   */\n      dup2\n        /* \"#utility.yul\":4045:4051   */\n      dup2\n        /* \"#utility.yul\":4038:4056   */\n      mstore\n        /* \"#utility.yul\":4099:4102   */\n      dup5\n        /* \"#utility.yul\":4092:4096   */\n      0x20\n        /* \"#utility.yul\":4087:4089   */\n      dup4\n        /* \"#utility.yul\":4079:4085   */\n      dup7\n        /* \"#utility.yul\":4075:4090   */\n      add\n        /* \"#utility.yul\":4071:4097   */\n      add\n        /* \"#utility.yul\":4068:4103   */\n      gt\n        /* \"#utility.yul\":4065:4120   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":4116:4117   */\n      0x00\n        /* \"#utility.yul\":4113:4114   */\n      dup1\n        /* \"#utility.yul\":4106:4118   */\n      revert\n        /* \"#utility.yul\":4065:4120   */\n    tag_272:\n        /* \"#utility.yul\":4180:4182   */\n      dup2\n        /* \"#utility.yul\":4173:4177   */\n      0x20\n        /* \"#utility.yul\":4165:4171   */\n      dup6\n        /* \"#utility.yul\":4161:4178   */\n      add\n        /* \"#utility.yul\":4154:4158   */\n      0x20\n        /* \"#utility.yul\":4146:4152   */\n      dup4\n        /* \"#utility.yul\":4142:4159   */\n      add\n        /* \"#utility.yul\":4129:4183   */\n      calldatacopy\n        /* \"#utility.yul\":4227:4228   */\n      0x00\n        /* \"#utility.yul\":4203:4218   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":4220:4224   */\n      0x20\n        /* \"#utility.yul\":4199:4225   */\n      add\n        /* \"#utility.yul\":4192:4229   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4207:4213   */\n      swap4\n        /* \"#utility.yul\":3645:4259   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4264:5207   */\n    tag_32:\n        /* \"#utility.yul\":4418:4424   */\n      0x00\n        /* \"#utility.yul\":4426:4432   */\n      dup1\n        /* \"#utility.yul\":4434:4440   */\n      0x00\n        /* \"#utility.yul\":4442:4448   */\n      dup1\n        /* \"#utility.yul\":4450:4456   */\n      0x00\n        /* \"#utility.yul\":4503:4506   */\n      0xa0\n        /* \"#utility.yul\":4491:4500   */\n      dup7\n        /* \"#utility.yul\":4482:4489   */\n      dup9\n        /* \"#utility.yul\":4478:4501   */\n      sub\n        /* \"#utility.yul\":4474:4507   */\n      slt\n        /* \"#utility.yul\":4471:4524   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":4520:4521   */\n      0x00\n        /* \"#utility.yul\":4517:4518   */\n      dup1\n        /* \"#utility.yul\":4510:4522   */\n      revert\n        /* \"#utility.yul\":4471:4524   */\n    tag_274:\n        /* \"#utility.yul\":4543:4572   */\n      tag_275\n        /* \"#utility.yul\":4562:4571   */\n      dup7\n        /* \"#utility.yul\":4543:4572   */\n      tag_221\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":4533:4572   */\n      swap5\n      pop\n        /* \"#utility.yul\":4591:4629   */\n      tag_276\n        /* \"#utility.yul\":4625:4627   */\n      0x20\n        /* \"#utility.yul\":4614:4623   */\n      dup8\n        /* \"#utility.yul\":4610:4628   */\n      add\n        /* \"#utility.yul\":4591:4629   */\n      tag_221\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":4581:4629   */\n      swap4\n      pop\n        /* \"#utility.yul\":4680:4682   */\n      0x40\n        /* \"#utility.yul\":4669:4678   */\n      dup7\n        /* \"#utility.yul\":4665:4683   */\n      add\n        /* \"#utility.yul\":4652:4684   */\n      calldataload\n        /* \"#utility.yul\":4703:4721   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4744:4746   */\n      dup1\n        /* \"#utility.yul\":4736:4742   */\n      dup3\n        /* \"#utility.yul\":4733:4747   */\n      gt\n        /* \"#utility.yul\":4730:4764   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":4760:4761   */\n      0x00\n        /* \"#utility.yul\":4757:4758   */\n      dup1\n        /* \"#utility.yul\":4750:4762   */\n      revert\n        /* \"#utility.yul\":4730:4764   */\n    tag_277:\n        /* \"#utility.yul\":4783:4844   */\n      tag_278\n        /* \"#utility.yul\":4836:4843   */\n      dup10\n        /* \"#utility.yul\":4827:4833   */\n      dup4\n        /* \"#utility.yul\":4816:4825   */\n      dup11\n        /* \"#utility.yul\":4812:4834   */\n      add\n        /* \"#utility.yul\":4783:4844   */\n      tag_226\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":4773:4844   */\n      swap5\n      pop\n        /* \"#utility.yul\":4897:4899   */\n      0x60\n        /* \"#utility.yul\":4886:4895   */\n      dup9\n        /* \"#utility.yul\":4882:4900   */\n      add\n        /* \"#utility.yul\":4869:4901   */\n      calldataload\n        /* \"#utility.yul\":4853:4901   */\n      swap2\n      pop\n        /* \"#utility.yul\":4926:4928   */\n      dup1\n        /* \"#utility.yul\":4916:4924   */\n      dup3\n        /* \"#utility.yul\":4913:4929   */\n      gt\n        /* \"#utility.yul\":4910:4946   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":4942:4943   */\n      0x00\n        /* \"#utility.yul\":4939:4940   */\n      dup1\n        /* \"#utility.yul\":4932:4944   */\n      revert\n        /* \"#utility.yul\":4910:4946   */\n    tag_279:\n        /* \"#utility.yul\":4965:5028   */\n      tag_280\n        /* \"#utility.yul\":5020:5027   */\n      dup10\n        /* \"#utility.yul\":5009:5017   */\n      dup4\n        /* \"#utility.yul\":4998:5007   */\n      dup11\n        /* \"#utility.yul\":4994:5018   */\n      add\n        /* \"#utility.yul\":4965:5028   */\n      tag_226\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":4955:5028   */\n      swap4\n      pop\n        /* \"#utility.yul\":5081:5084   */\n      0x80\n        /* \"#utility.yul\":5070:5079   */\n      dup9\n        /* \"#utility.yul\":5066:5085   */\n      add\n        /* \"#utility.yul\":5053:5086   */\n      calldataload\n        /* \"#utility.yul\":5037:5086   */\n      swap2\n      pop\n        /* \"#utility.yul\":5111:5113   */\n      dup1\n        /* \"#utility.yul\":5101:5109   */\n      dup3\n        /* \"#utility.yul\":5098:5114   */\n      gt\n        /* \"#utility.yul\":5095:5131   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":5127:5128   */\n      0x00\n        /* \"#utility.yul\":5124:5125   */\n      dup1\n        /* \"#utility.yul\":5117:5129   */\n      revert\n        /* \"#utility.yul\":5095:5131   */\n    tag_281:\n      pop\n        /* \"#utility.yul\":5150:5201   */\n      tag_282\n        /* \"#utility.yul\":5193:5200   */\n      dup9\n        /* \"#utility.yul\":5182:5190   */\n      dup3\n        /* \"#utility.yul\":5171:5180   */\n      dup10\n        /* \"#utility.yul\":5167:5191   */\n      add\n        /* \"#utility.yul\":5150:5201   */\n      tag_227\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":5140:5201   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4264:5207   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5212:6420   */\n    tag_36:\n        /* \"#utility.yul\":5330:5336   */\n      0x00\n        /* \"#utility.yul\":5338:5344   */\n      dup1\n        /* \"#utility.yul\":5391:5393   */\n      0x40\n        /* \"#utility.yul\":5379:5388   */\n      dup4\n        /* \"#utility.yul\":5370:5377   */\n      dup6\n        /* \"#utility.yul\":5366:5389   */\n      sub\n        /* \"#utility.yul\":5362:5394   */\n      slt\n        /* \"#utility.yul\":5359:5411   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":5407:5408   */\n      0x00\n        /* \"#utility.yul\":5404:5405   */\n      dup1\n        /* \"#utility.yul\":5397:5409   */\n      revert\n        /* \"#utility.yul\":5359:5411   */\n    tag_284:\n        /* \"#utility.yul\":5447:5456   */\n      dup3\n        /* \"#utility.yul\":5434:5457   */\n      calldataload\n        /* \"#utility.yul\":5476:5494   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5517:5519   */\n      dup1\n        /* \"#utility.yul\":5509:5515   */\n      dup3\n        /* \"#utility.yul\":5506:5520   */\n      gt\n        /* \"#utility.yul\":5503:5537   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":5533:5534   */\n      0x00\n        /* \"#utility.yul\":5530:5531   */\n      dup1\n        /* \"#utility.yul\":5523:5535   */\n      revert\n        /* \"#utility.yul\":5503:5537   */\n    tag_285:\n        /* \"#utility.yul\":5571:5577   */\n      dup2\n        /* \"#utility.yul\":5560:5569   */\n      dup6\n        /* \"#utility.yul\":5556:5578   */\n      add\n        /* \"#utility.yul\":5546:5578   */\n      swap2\n      pop\n        /* \"#utility.yul\":5616:5623   */\n      dup6\n        /* \"#utility.yul\":5609:5613   */\n      0x1f\n        /* \"#utility.yul\":5605:5607   */\n      dup4\n        /* \"#utility.yul\":5601:5614   */\n      add\n        /* \"#utility.yul\":5597:5624   */\n      slt\n        /* \"#utility.yul\":5587:5642   */\n      tag_286\n      jumpi\n        /* \"#utility.yul\":5638:5639   */\n      0x00\n        /* \"#utility.yul\":5635:5636   */\n      dup1\n        /* \"#utility.yul\":5628:5640   */\n      revert\n        /* \"#utility.yul\":5587:5642   */\n    tag_286:\n        /* \"#utility.yul\":5674:5676   */\n      dup2\n        /* \"#utility.yul\":5661:5677   */\n      calldataload\n        /* \"#utility.yul\":5696:5700   */\n      0x20\n        /* \"#utility.yul\":5719:5762   */\n      tag_287\n        /* \"#utility.yul\":5759:5761   */\n      dup3\n        /* \"#utility.yul\":5719:5762   */\n      tag_225\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":5791:5793   */\n      0x40\n        /* \"#utility.yul\":5785:5794   */\n      mload\n        /* \"#utility.yul\":5803:5834   */\n      tag_288\n        /* \"#utility.yul\":5831:5833   */\n      dup3\n        /* \"#utility.yul\":5823:5829   */\n      dup3\n        /* \"#utility.yul\":5803:5834   */\n      tag_224\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":5869:5887   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":5957:5958   */\n      0x05\n        /* \"#utility.yul\":5953:5963   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":5945:5964   */\n      dup6\n      add\n        /* \"#utility.yul\":5941:5969   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":5903:5918   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":5981:6000   */\n      dup10\n      dup5\n      gt\n        /* \"#utility.yul\":5978:6017   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":6013:6014   */\n      0x00\n        /* \"#utility.yul\":6010:6011   */\n      dup1\n        /* \"#utility.yul\":6003:6015   */\n      revert\n        /* \"#utility.yul\":5978:6017   */\n    tag_289:\n        /* \"#utility.yul\":6037:6048   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":6057:6205   */\n    tag_290:\n        /* \"#utility.yul\":6073:6079   */\n      dup4\n        /* \"#utility.yul\":6068:6071   */\n      dup7\n        /* \"#utility.yul\":6065:6080   */\n      lt\n        /* \"#utility.yul\":6057:6205   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":6139:6162   */\n      tag_293\n        /* \"#utility.yul\":6158:6161   */\n      dup7\n        /* \"#utility.yul\":6139:6162   */\n      tag_221\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":6127:6163   */\n      dup3\n      mstore\n        /* \"#utility.yul\":6090:6102   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":6183:6195   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6057:6205   */\n      jump(tag_290)\n    tag_292:\n        /* \"#utility.yul\":6224:6230   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":6268:6286   */\n      dup7\n      add\n        /* \"#utility.yul\":6255:6287   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":6299:6315   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6296:6332   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":6328:6329   */\n      0x00\n        /* \"#utility.yul\":6325:6326   */\n      dup1\n        /* \"#utility.yul\":6318:6330   */\n      revert\n        /* \"#utility.yul\":6296:6332   */\n    tag_294:\n      pop\n        /* \"#utility.yul\":6351:6414   */\n      tag_295\n        /* \"#utility.yul\":6406:6413   */\n      dup6\n        /* \"#utility.yul\":6395:6403   */\n      dup3\n        /* \"#utility.yul\":6384:6393   */\n      dup7\n        /* \"#utility.yul\":6380:6404   */\n      add\n        /* \"#utility.yul\":6351:6414   */\n      tag_226\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":6341:6414   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5212:6420   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6425:6860   */\n    tag_228:\n        /* \"#utility.yul\":6478:6481   */\n      0x00\n        /* \"#utility.yul\":6516:6521   */\n      dup2\n        /* \"#utility.yul\":6510:6522   */\n      mload\n        /* \"#utility.yul\":6543:6549   */\n      dup1\n        /* \"#utility.yul\":6538:6541   */\n      dup5\n        /* \"#utility.yul\":6531:6550   */\n      mstore\n        /* \"#utility.yul\":6569:6573   */\n      0x20\n        /* \"#utility.yul\":6598:6600   */\n      dup1\n        /* \"#utility.yul\":6593:6596   */\n      dup6\n        /* \"#utility.yul\":6589:6601   */\n      add\n        /* \"#utility.yul\":6582:6601   */\n      swap5\n      pop\n        /* \"#utility.yul\":6635:6637   */\n      dup1\n        /* \"#utility.yul\":6628:6633   */\n      dup5\n        /* \"#utility.yul\":6624:6638   */\n      add\n        /* \"#utility.yul\":6656:6657   */\n      0x00\n        /* \"#utility.yul\":6666:6835   */\n    tag_297:\n        /* \"#utility.yul\":6680:6686   */\n      dup4\n        /* \"#utility.yul\":6677:6678   */\n      dup2\n        /* \"#utility.yul\":6674:6687   */\n      lt\n        /* \"#utility.yul\":6666:6835   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":6741:6754   */\n      dup2\n      mload\n        /* \"#utility.yul\":6729:6755   */\n      dup8\n      mstore\n        /* \"#utility.yul\":6775:6787   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":6810:6825   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6702:6703   */\n      0x01\n        /* \"#utility.yul\":6695:6704   */\n      add\n        /* \"#utility.yul\":6666:6835   */\n      jump(tag_297)\n    tag_299:\n      pop\n        /* \"#utility.yul\":6851:6854   */\n      swap5\n      swap6\n        /* \"#utility.yul\":6425:6860   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6865:7126   */\n    tag_39:\n        /* \"#utility.yul\":7044:7046   */\n      0x20\n        /* \"#utility.yul\":7033:7042   */\n      dup2\n        /* \"#utility.yul\":7026:7047   */\n      mstore\n        /* \"#utility.yul\":7007:7011   */\n      0x00\n        /* \"#utility.yul\":7064:7120   */\n      tag_241\n        /* \"#utility.yul\":7116:7118   */\n      0x20\n        /* \"#utility.yul\":7105:7114   */\n      dup4\n        /* \"#utility.yul\":7101:7119   */\n      add\n        /* \"#utility.yul\":7093:7099   */\n      dup5\n        /* \"#utility.yul\":7064:7120   */\n      tag_228\n      jump\t// in\n        /* \"#utility.yul\":7131:7478   */\n    tag_42:\n        /* \"#utility.yul\":7196:7202   */\n      0x00\n        /* \"#utility.yul\":7204:7210   */\n      dup1\n        /* \"#utility.yul\":7257:7259   */\n      0x40\n        /* \"#utility.yul\":7245:7254   */\n      dup4\n        /* \"#utility.yul\":7236:7243   */\n      dup6\n        /* \"#utility.yul\":7232:7255   */\n      sub\n        /* \"#utility.yul\":7228:7260   */\n      slt\n        /* \"#utility.yul\":7225:7277   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":7273:7274   */\n      0x00\n        /* \"#utility.yul\":7270:7271   */\n      dup1\n        /* \"#utility.yul\":7263:7275   */\n      revert\n        /* \"#utility.yul\":7225:7277   */\n    tag_303:\n        /* \"#utility.yul\":7296:7325   */\n      tag_304\n        /* \"#utility.yul\":7315:7324   */\n      dup4\n        /* \"#utility.yul\":7296:7325   */\n      tag_221\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":7286:7325   */\n      swap2\n      pop\n        /* \"#utility.yul\":7375:7377   */\n      0x20\n        /* \"#utility.yul\":7364:7373   */\n      dup4\n        /* \"#utility.yul\":7360:7378   */\n      add\n        /* \"#utility.yul\":7347:7379   */\n      calldataload\n        /* \"#utility.yul\":7422:7427   */\n      dup1\n        /* \"#utility.yul\":7415:7428   */\n      iszero\n        /* \"#utility.yul\":7408:7429   */\n      iszero\n        /* \"#utility.yul\":7401:7406   */\n      dup2\n        /* \"#utility.yul\":7398:7430   */\n      eq\n        /* \"#utility.yul\":7388:7448   */\n      tag_305\n      jumpi\n        /* \"#utility.yul\":7444:7445   */\n      0x00\n        /* \"#utility.yul\":7441:7442   */\n      dup1\n        /* \"#utility.yul\":7434:7446   */\n      revert\n        /* \"#utility.yul\":7388:7448   */\n    tag_305:\n        /* \"#utility.yul\":7467:7472   */\n      dup1\n        /* \"#utility.yul\":7457:7472   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":7131:7478   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7483:7743   */\n    tag_46:\n        /* \"#utility.yul\":7551:7557   */\n      0x00\n        /* \"#utility.yul\":7559:7565   */\n      dup1\n        /* \"#utility.yul\":7612:7614   */\n      0x40\n        /* \"#utility.yul\":7600:7609   */\n      dup4\n        /* \"#utility.yul\":7591:7598   */\n      dup6\n        /* \"#utility.yul\":7587:7610   */\n      sub\n        /* \"#utility.yul\":7583:7615   */\n      slt\n        /* \"#utility.yul\":7580:7632   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":7628:7629   */\n      0x00\n        /* \"#utility.yul\":7625:7626   */\n      dup1\n        /* \"#utility.yul\":7618:7630   */\n      revert\n        /* \"#utility.yul\":7580:7632   */\n    tag_307:\n        /* \"#utility.yul\":7651:7680   */\n      tag_308\n        /* \"#utility.yul\":7670:7679   */\n      dup4\n        /* \"#utility.yul\":7651:7680   */\n      tag_221\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":7641:7680   */\n      swap2\n      pop\n        /* \"#utility.yul\":7699:7737   */\n      tag_309\n        /* \"#utility.yul\":7733:7735   */\n      0x20\n        /* \"#utility.yul\":7722:7731   */\n      dup5\n        /* \"#utility.yul\":7718:7736   */\n      add\n        /* \"#utility.yul\":7699:7737   */\n      tag_221\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":7689:7737   */\n      swap1\n      pop\n        /* \"#utility.yul\":7483:7743   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7748:8354   */\n    tag_51:\n        /* \"#utility.yul\":7852:7858   */\n      0x00\n        /* \"#utility.yul\":7860:7866   */\n      dup1\n        /* \"#utility.yul\":7868:7874   */\n      0x00\n        /* \"#utility.yul\":7876:7882   */\n      dup1\n        /* \"#utility.yul\":7884:7890   */\n      0x00\n        /* \"#utility.yul\":7937:7940   */\n      0xa0\n        /* \"#utility.yul\":7925:7934   */\n      dup7\n        /* \"#utility.yul\":7916:7923   */\n      dup9\n        /* \"#utility.yul\":7912:7935   */\n      sub\n        /* \"#utility.yul\":7908:7941   */\n      slt\n        /* \"#utility.yul\":7905:7958   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":7954:7955   */\n      0x00\n        /* \"#utility.yul\":7951:7952   */\n      dup1\n        /* \"#utility.yul\":7944:7956   */\n      revert\n        /* \"#utility.yul\":7905:7958   */\n    tag_311:\n        /* \"#utility.yul\":7977:8006   */\n      tag_312\n        /* \"#utility.yul\":7996:8005   */\n      dup7\n        /* \"#utility.yul\":7977:8006   */\n      tag_221\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":7967:8006   */\n      swap5\n      pop\n        /* \"#utility.yul\":8025:8063   */\n      tag_313\n        /* \"#utility.yul\":8059:8061   */\n      0x20\n        /* \"#utility.yul\":8048:8057   */\n      dup8\n        /* \"#utility.yul\":8044:8062   */\n      add\n        /* \"#utility.yul\":8025:8063   */\n      tag_221\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":8015:8063   */\n      swap4\n      pop\n        /* \"#utility.yul\":8110:8112   */\n      0x40\n        /* \"#utility.yul\":8099:8108   */\n      dup7\n        /* \"#utility.yul\":8095:8113   */\n      add\n        /* \"#utility.yul\":8082:8114   */\n      calldataload\n        /* \"#utility.yul\":8072:8114   */\n      swap3\n      pop\n        /* \"#utility.yul\":8161:8163   */\n      0x60\n        /* \"#utility.yul\":8150:8159   */\n      dup7\n        /* \"#utility.yul\":8146:8164   */\n      add\n        /* \"#utility.yul\":8133:8165   */\n      calldataload\n        /* \"#utility.yul\":8123:8165   */\n      swap2\n      pop\n        /* \"#utility.yul\":8216:8219   */\n      0x80\n        /* \"#utility.yul\":8205:8214   */\n      dup7\n        /* \"#utility.yul\":8201:8220   */\n      add\n        /* \"#utility.yul\":8188:8221   */\n      calldataload\n        /* \"#utility.yul\":8244:8262   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8236:8242   */\n      dup2\n        /* \"#utility.yul\":8233:8263   */\n      gt\n        /* \"#utility.yul\":8230:8280   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":8276:8277   */\n      0x00\n        /* \"#utility.yul\":8273:8274   */\n      dup1\n        /* \"#utility.yul\":8266:8278   */\n      revert\n        /* \"#utility.yul\":8230:8280   */\n    tag_314:\n        /* \"#utility.yul\":8299:8348   */\n      tag_282\n        /* \"#utility.yul\":8340:8347   */\n      dup9\n        /* \"#utility.yul\":8331:8337   */\n      dup3\n        /* \"#utility.yul\":8320:8329   */\n      dup10\n        /* \"#utility.yul\":8316:8338   */\n      add\n        /* \"#utility.yul\":8299:8348   */\n      tag_227\n      jump\t// in\n        /* \"#utility.yul\":8771:9208   */\n    tag_64:\n        /* \"#utility.yul\":8850:8851   */\n      0x01\n        /* \"#utility.yul\":8846:8858   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":8893:8905   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":8914:8975   */\n      tag_318\n      jumpi\n        /* \"#utility.yul\":8968:8972   */\n      0x7f\n        /* \"#utility.yul\":8960:8966   */\n      dup3\n        /* \"#utility.yul\":8956:8973   */\n      and\n        /* \"#utility.yul\":8946:8973   */\n      swap2\n      pop\n        /* \"#utility.yul\":8914:8975   */\n    tag_318:\n        /* \"#utility.yul\":9021:9023   */\n      0x20\n        /* \"#utility.yul\":9013:9019   */\n      dup3\n        /* \"#utility.yul\":9010:9024   */\n      lt\n        /* \"#utility.yul\":8990:9008   */\n      dup2\n        /* \"#utility.yul\":8987:9025   */\n      sub\n        /* \"#utility.yul\":8984:9202   */\n      tag_319\n      jumpi\n        /* \"#utility.yul\":9058:9135   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9055:9056   */\n      0x00\n        /* \"#utility.yul\":9048:9136   */\n      mstore\n        /* \"#utility.yul\":9159:9163   */\n      0x22\n        /* \"#utility.yul\":9156:9157   */\n      0x04\n        /* \"#utility.yul\":9149:9164   */\n      mstore\n        /* \"#utility.yul\":9187:9191   */\n      0x24\n        /* \"#utility.yul\":9184:9185   */\n      0x00\n        /* \"#utility.yul\":9177:9192   */\n      revert\n        /* \"#utility.yul\":8984:9202   */\n    tag_319:\n      pop\n        /* \"#utility.yul\":8771:9208   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10042:10226   */\n    tag_94:\n        /* \"#utility.yul\":10094:10171   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10091:10092   */\n      0x00\n        /* \"#utility.yul\":10084:10172   */\n      mstore\n        /* \"#utility.yul\":10191:10195   */\n      0x32\n        /* \"#utility.yul\":10188:10189   */\n      0x04\n        /* \"#utility.yul\":10181:10196   */\n      mstore\n        /* \"#utility.yul\":10215:10219   */\n      0x24\n        /* \"#utility.yul\":10212:10213   */\n      0x00\n        /* \"#utility.yul\":10205:10220   */\n      revert\n        /* \"#utility.yul\":10231:10415   */\n    tag_229:\n        /* \"#utility.yul\":10283:10360   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10280:10281   */\n      0x00\n        /* \"#utility.yul\":10273:10361   */\n      mstore\n        /* \"#utility.yul\":10380:10384   */\n      0x11\n        /* \"#utility.yul\":10377:10378   */\n      0x04\n        /* \"#utility.yul\":10370:10385   */\n      mstore\n        /* \"#utility.yul\":10404:10408   */\n      0x24\n        /* \"#utility.yul\":10401:10402   */\n      0x00\n        /* \"#utility.yul\":10394:10409   */\n      revert\n        /* \"#utility.yul\":10420:10615   */\n    tag_100:\n        /* \"#utility.yul\":10459:10462   */\n      0x00\n        /* \"#utility.yul\":10490:10556   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10483:10488   */\n      dup3\n        /* \"#utility.yul\":10480:10557   */\n      sub\n        /* \"#utility.yul\":10477:10580   */\n      tag_326\n      jumpi\n        /* \"#utility.yul\":10560:10578   */\n      tag_326\n      tag_229\n      jump\t// in\n    tag_326:\n      pop\n        /* \"#utility.yul\":10607:10608   */\n      0x01\n        /* \"#utility.yul\":10596:10609   */\n      add\n      swap1\n        /* \"#utility.yul\":10420:10615   */\n      jump\t// out\n        /* \"#utility.yul\":12256:12384   */\n    tag_139:\n        /* \"#utility.yul\":12296:12299   */\n      0x00\n        /* \"#utility.yul\":12327:12328   */\n      dup3\n        /* \"#utility.yul\":12323:12329   */\n      not\n        /* \"#utility.yul\":12320:12321   */\n      dup3\n        /* \"#utility.yul\":12317:12330   */\n      gt\n        /* \"#utility.yul\":12314:12353   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":12333:12351   */\n      tag_333\n      tag_229\n      jump\t// in\n    tag_333:\n      pop\n        /* \"#utility.yul\":12369:12378   */\n      add\n      swap1\n        /* \"#utility.yul\":12256:12384   */\n      jump\t// out\n        /* \"#utility.yul\":12389:12854   */\n    tag_142:\n        /* \"#utility.yul\":12646:12648   */\n      0x40\n        /* \"#utility.yul\":12635:12644   */\n      dup2\n        /* \"#utility.yul\":12628:12649   */\n      mstore\n        /* \"#utility.yul\":12609:12613   */\n      0x00\n        /* \"#utility.yul\":12672:12728   */\n      tag_335\n        /* \"#utility.yul\":12724:12726   */\n      0x40\n        /* \"#utility.yul\":12713:12722   */\n      dup4\n        /* \"#utility.yul\":12709:12727   */\n      add\n        /* \"#utility.yul\":12701:12707   */\n      dup6\n        /* \"#utility.yul\":12672:12728   */\n      tag_228\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":12776:12785   */\n      dup3\n        /* \"#utility.yul\":12768:12774   */\n      dup2\n        /* \"#utility.yul\":12764:12786   */\n      sub\n        /* \"#utility.yul\":12759:12761   */\n      0x20\n        /* \"#utility.yul\":12748:12757   */\n      dup5\n        /* \"#utility.yul\":12744:12762   */\n      add\n        /* \"#utility.yul\":12737:12787   */\n      mstore\n        /* \"#utility.yul\":12804:12848   */\n      tag_336\n        /* \"#utility.yul\":12841:12847   */\n      dup2\n        /* \"#utility.yul\":12833:12839   */\n      dup6\n        /* \"#utility.yul\":12804:12848   */\n      tag_228\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":12796:12848   */\n      swap6\n        /* \"#utility.yul\":12389:12854   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13522:14372   */\n    tag_175:\n        /* \"#utility.yul\":13844:13848   */\n      0x00\n        /* \"#utility.yul\":13873:13915   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13954:13956   */\n      dup1\n        /* \"#utility.yul\":13946:13952   */\n      dup9\n        /* \"#utility.yul\":13942:13957   */\n      and\n        /* \"#utility.yul\":13931:13940   */\n      dup4\n        /* \"#utility.yul\":13924:13958   */\n      mstore\n        /* \"#utility.yul\":14006:14008   */\n      dup1\n        /* \"#utility.yul\":13998:14004   */\n      dup8\n        /* \"#utility.yul\":13994:14009   */\n      and\n        /* \"#utility.yul\":13989:13991   */\n      0x20\n        /* \"#utility.yul\":13978:13987   */\n      dup5\n        /* \"#utility.yul\":13974:13992   */\n      add\n        /* \"#utility.yul\":13967:14010   */\n      mstore\n      pop\n        /* \"#utility.yul\":14046:14049   */\n      0xa0\n        /* \"#utility.yul\":14041:14043   */\n      0x40\n        /* \"#utility.yul\":14030:14039   */\n      dup4\n        /* \"#utility.yul\":14026:14044   */\n      add\n        /* \"#utility.yul\":14019:14050   */\n      mstore\n        /* \"#utility.yul\":14073:14130   */\n      tag_340\n        /* \"#utility.yul\":14125:14128   */\n      0xa0\n        /* \"#utility.yul\":14114:14123   */\n      dup4\n        /* \"#utility.yul\":14110:14129   */\n      add\n        /* \"#utility.yul\":14102:14108   */\n      dup7\n        /* \"#utility.yul\":14073:14130   */\n      tag_228\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":14178:14187   */\n      dup3\n        /* \"#utility.yul\":14170:14176   */\n      dup2\n        /* \"#utility.yul\":14166:14188   */\n      sub\n        /* \"#utility.yul\":14161:14163   */\n      0x60\n        /* \"#utility.yul\":14150:14159   */\n      dup5\n        /* \"#utility.yul\":14146:14164   */\n      add\n        /* \"#utility.yul\":14139:14189   */\n      mstore\n        /* \"#utility.yul\":14212:14256   */\n      tag_341\n        /* \"#utility.yul\":14249:14255   */\n      dup2\n        /* \"#utility.yul\":14241:14247   */\n      dup7\n        /* \"#utility.yul\":14212:14256   */\n      tag_228\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":14198:14256   */\n      swap1\n      pop\n        /* \"#utility.yul\":14305:14314   */\n      dup3\n        /* \"#utility.yul\":14297:14303   */\n      dup2\n        /* \"#utility.yul\":14293:14315   */\n      sub\n        /* \"#utility.yul\":14287:14290   */\n      0x80\n        /* \"#utility.yul\":14276:14285   */\n      dup5\n        /* \"#utility.yul\":14272:14291   */\n      add\n        /* \"#utility.yul\":14265:14316   */\n      mstore\n        /* \"#utility.yul\":14333:14366   */\n      tag_342\n        /* \"#utility.yul\":14359:14365   */\n      dup2\n        /* \"#utility.yul\":14351:14357   */\n      dup6\n        /* \"#utility.yul\":14333:14366   */\n      tag_223\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":14325:14366   */\n      swap9\n        /* \"#utility.yul\":13522:14372   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14377:14626   */\n    tag_178:\n        /* \"#utility.yul\":14446:14452   */\n      0x00\n        /* \"#utility.yul\":14499:14501   */\n      0x20\n        /* \"#utility.yul\":14487:14496   */\n      dup3\n        /* \"#utility.yul\":14478:14485   */\n      dup5\n        /* \"#utility.yul\":14474:14497   */\n      sub\n        /* \"#utility.yul\":14470:14502   */\n      slt\n        /* \"#utility.yul\":14467:14519   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":14515:14516   */\n      0x00\n        /* \"#utility.yul\":14512:14513   */\n      dup1\n        /* \"#utility.yul\":14505:14517   */\n      revert\n        /* \"#utility.yul\":14467:14519   */\n    tag_344:\n        /* \"#utility.yul\":14547:14556   */\n      dup2\n        /* \"#utility.yul\":14541:14557   */\n      mload\n        /* \"#utility.yul\":14566:14596   */\n      tag_241\n        /* \"#utility.yul\":14590:14595   */\n      dup2\n        /* \"#utility.yul\":14566:14596   */\n      tag_222\n      jump\t// in\n        /* \"#utility.yul\":14631:14810   */\n    tag_184:\n        /* \"#utility.yul\":14666:14669   */\n      0x00\n        /* \"#utility.yul\":14708:14709   */\n      0x03\n        /* \"#utility.yul\":14690:14706   */\n      returndatasize\n        /* \"#utility.yul\":14687:14710   */\n      gt\n        /* \"#utility.yul\":14684:14804   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":14754:14755   */\n      0x04\n        /* \"#utility.yul\":14751:14752   */\n      0x00\n        /* \"#utility.yul\":14748:14749   */\n      dup1\n        /* \"#utility.yul\":14733:14756   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":14791:14792   */\n      0x00\n        /* \"#utility.yul\":14785:14793   */\n      mload\n        /* \"#utility.yul\":14780:14783   */\n      0xe0\n        /* \"#utility.yul\":14776:14794   */\n      shr\n        /* \"#utility.yul\":14684:14804   */\n    tag_347:\n        /* \"#utility.yul\":14631:14810   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14815:15546   */\n    tag_186:\n        /* \"#utility.yul\":14854:14857   */\n      0x00\n        /* \"#utility.yul\":14896:14900   */\n      0x44\n        /* \"#utility.yul\":14878:14894   */\n      returndatasize\n        /* \"#utility.yul\":14875:14901   */\n      lt\n        /* \"#utility.yul\":14872:14911   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":14815:15546   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14872:14911   */\n    tag_349:\n        /* \"#utility.yul\":14938:14940   */\n      0x40\n        /* \"#utility.yul\":14932:14941   */\n      mload\n        /* \"#utility.yul\":14960:15026   */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\n        /* \"#utility.yul\":15081:15083   */\n      dup1\n        /* \"#utility.yul\":15063:15079   */\n      returndatasize\n        /* \"#utility.yul\":15059:15084   */\n      add\n        /* \"#utility.yul\":15056:15057   */\n      0x04\n        /* \"#utility.yul\":15050:15054   */\n      dup4\n        /* \"#utility.yul\":15035:15085   */\n      returndatacopy\n        /* \"#utility.yul\":15114:15118   */\n      dup2\n        /* \"#utility.yul\":15108:15119   */\n      mload\n        /* \"#utility.yul\":15138:15154   */\n      returndatasize\n        /* \"#utility.yul\":15173:15191   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15244:15246   */\n      dup2\n        /* \"#utility.yul\":15237:15241   */\n      0x24\n        /* \"#utility.yul\":15229:15235   */\n      dup5\n        /* \"#utility.yul\":15225:15242   */\n      add\n        /* \"#utility.yul\":15222:15247   */\n      gt\n        /* \"#utility.yul\":15217:15219   */\n      dup2\n        /* \"#utility.yul\":15209:15215   */\n      dup5\n        /* \"#utility.yul\":15206:15220   */\n      gt\n        /* \"#utility.yul\":15203:15248   */\n      or\n        /* \"#utility.yul\":15200:15258   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":15251:15256   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14815:15546   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15200:15258   */\n    tag_350:\n        /* \"#utility.yul\":15288:15294   */\n      dup3\n        /* \"#utility.yul\":15282:15286   */\n      dup6\n        /* \"#utility.yul\":15278:15295   */\n      add\n        /* \"#utility.yul\":15267:15295   */\n      swap2\n      pop\n        /* \"#utility.yul\":15324:15327   */\n      dup2\n        /* \"#utility.yul\":15318:15328   */\n      mload\n        /* \"#utility.yul\":15351:15353   */\n      dup2\n        /* \"#utility.yul\":15343:15349   */\n      dup2\n        /* \"#utility.yul\":15340:15354   */\n      gt\n        /* \"#utility.yul\":15337:15364   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":15357:15362   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14815:15546   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15337:15364   */\n    tag_351:\n        /* \"#utility.yul\":15441:15443   */\n      dup5\n        /* \"#utility.yul\":15422:15438   */\n      returndatasize\n        /* \"#utility.yul\":15416:15420   */\n      dup8\n        /* \"#utility.yul\":15412:15439   */\n      add\n        /* \"#utility.yul\":15408:15444   */\n      add\n        /* \"#utility.yul\":15401:15405   */\n      0x20\n        /* \"#utility.yul\":15392:15398   */\n      dup3\n        /* \"#utility.yul\":15387:15390   */\n      dup6\n        /* \"#utility.yul\":15383:15399   */\n      add\n        /* \"#utility.yul\":15379:15406   */\n      add\n        /* \"#utility.yul\":15376:15445   */\n      gt\n        /* \"#utility.yul\":15373:15455   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":15448:15453   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14815:15546   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15373:15455   */\n    tag_352:\n        /* \"#utility.yul\":15464:15521   */\n      tag_353\n        /* \"#utility.yul\":15515:15519   */\n      0x20\n        /* \"#utility.yul\":15506:15512   */\n      dup3\n        /* \"#utility.yul\":15498:15504   */\n      dup7\n        /* \"#utility.yul\":15494:15513   */\n      add\n        /* \"#utility.yul\":15490:15520   */\n      add\n        /* \"#utility.yul\":15484:15488   */\n      dup8\n        /* \"#utility.yul\":15464:15521   */\n      tag_224\n      jump\t// in\n    tag_353:\n      pop\n        /* \"#utility.yul\":15537:15540   */\n      swap1\n      swap6\n        /* \"#utility.yul\":14815:15546   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16381:16965   */\n    tag_205:\n        /* \"#utility.yul\":16603:16607   */\n      0x00\n        /* \"#utility.yul\":16632:16674   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":16713:16715   */\n      dup1\n        /* \"#utility.yul\":16705:16711   */\n      dup9\n        /* \"#utility.yul\":16701:16716   */\n      and\n        /* \"#utility.yul\":16690:16699   */\n      dup4\n        /* \"#utility.yul\":16683:16717   */\n      mstore\n        /* \"#utility.yul\":16765:16767   */\n      dup1\n        /* \"#utility.yul\":16757:16763   */\n      dup8\n        /* \"#utility.yul\":16753:16768   */\n      and\n        /* \"#utility.yul\":16748:16750   */\n      0x20\n        /* \"#utility.yul\":16737:16746   */\n      dup5\n        /* \"#utility.yul\":16733:16751   */\n      add\n        /* \"#utility.yul\":16726:16769   */\n      mstore\n      pop\n        /* \"#utility.yul\":16805:16811   */\n      dup5\n        /* \"#utility.yul\":16800:16802   */\n      0x40\n        /* \"#utility.yul\":16789:16798   */\n      dup4\n        /* \"#utility.yul\":16785:16803   */\n      add\n        /* \"#utility.yul\":16778:16812   */\n      mstore\n        /* \"#utility.yul\":16848:16854   */\n      dup4\n        /* \"#utility.yul\":16843:16845   */\n      0x60\n        /* \"#utility.yul\":16832:16841   */\n      dup4\n        /* \"#utility.yul\":16828:16846   */\n      add\n        /* \"#utility.yul\":16821:16855   */\n      mstore\n        /* \"#utility.yul\":16892:16895   */\n      0xa0\n        /* \"#utility.yul\":16886:16889   */\n      0x80\n        /* \"#utility.yul\":16875:16884   */\n      dup4\n        /* \"#utility.yul\":16871:16890   */\n      add\n        /* \"#utility.yul\":16864:16896   */\n      mstore\n        /* \"#utility.yul\":16913:16959   */\n      tag_357\n        /* \"#utility.yul\":16954:16957   */\n      0xa0\n        /* \"#utility.yul\":16943:16952   */\n      dup4\n        /* \"#utility.yul\":16939:16958   */\n      add\n        /* \"#utility.yul\":16931:16937   */\n      dup5\n        /* \"#utility.yul\":16913:16959   */\n      tag_223\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":16905:16959   */\n      swap8\n        /* \"#utility.yul\":16381:16965   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203cbad807d9a3820b640c82b29a67e3dac9a284719039fbbf5a2694cadd91450264736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_555": {
									"entryPoint": 70,
									"id": 555,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 261,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1620:12",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "237:996:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "247:12:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "257:2:12",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "251:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "304:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "313:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "316:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "306:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "306:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "306:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "279:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "288:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "275:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "275:23:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "300:2:12"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "271:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:32:12"
															},
															"nodeType": "YulIf",
															"src": "268:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "329:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "349:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "343:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:16:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "333:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "368:28:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "386:2:12",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "390:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "382:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "382:10:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "394:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "378:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "378:18:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "372:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "423:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "432:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "435:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "425:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "425:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "425:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "411:6:12"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "419:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "408:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:14:12"
															},
															"nodeType": "YulIf",
															"src": "405:34:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "448:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "462:9:12"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "473:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "458:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "458:22:12"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "452:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "528:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "537:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "540:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "530:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "530:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "530:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "507:2:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "511:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "503:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "503:13:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "518:7:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "499:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "499:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "492:35:12"
															},
															"nodeType": "YulIf",
															"src": "489:55:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "553:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "569:2:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "563:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "563:9:12"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "557:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "595:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "597:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "597:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "597:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "587:2:12"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "591:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "584:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "584:10:12"
															},
															"nodeType": "YulIf",
															"src": "581:36:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "626:17:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "640:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "636:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "636:7:12"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "630:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "652:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "672:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "666:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "666:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "656:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "684:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "706:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_4",
																										"nodeType": "YulIdentifier",
																										"src": "730:2:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "734:4:12",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "726:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "726:13:12"
																							},
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "741:2:12"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "722:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "722:22:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "746:2:12",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "718:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "718:31:12"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "751:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "714:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "714:40:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "702:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "702:53:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "688:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "814:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "816:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "816:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "816:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "773:10:12"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "785:2:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "770:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "770:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "793:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "805:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "790:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "790:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "767:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:46:12"
															},
															"nodeType": "YulIf",
															"src": "764:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "852:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "856:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "845:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "845:22:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "883:6:12"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "891:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "876:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "876:18:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "876:18:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "940:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "949:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "952:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "942:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "942:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "942:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "917:2:12"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "921:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "913:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "913:11:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "926:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "909:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "909:20:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "931:7:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "906:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "906:33:12"
															},
															"nodeType": "YulIf",
															"src": "903:53:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "965:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "974:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "969:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1030:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1059:6:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1067:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1055:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1055:14:12"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1071:2:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1051:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1051:23:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "1090:2:12"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1094:1:12"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1086:3:12"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1086:10:12"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1098:2:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1082:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1082:19:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1076:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1076:26:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1044:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1044:59:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1044:59:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "995:1:12"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "998:2:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "992:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "992:9:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1002:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1004:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1013:1:12"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1016:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1009:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1009:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1004:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "988:3:12",
																"statements": []
															},
															"src": "984:129:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1143:59:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1172:6:12"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "1180:2:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1168:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1168:15:12"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1185:2:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1164:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1164:24:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1190:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:35:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:35:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1128:1:12"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1131:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1125:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1125:9:12"
															},
															"nodeType": "YulIf",
															"src": "1122:80:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1211:16:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1221:6:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1211:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:12",
														"type": ""
													}
												],
												"src": "146:1087:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1293:325:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1303:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1317:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1320:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1313:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1313:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1334:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1364:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1370:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1360:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1360:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1338:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1411:31:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1413:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1427:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1435:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1423:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1423:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1413:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1391:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1384:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1384:26:12"
															},
															"nodeType": "YulIf",
															"src": "1381:61:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1501:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1522:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1529:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1534:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1525:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1525:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1515:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1515:31:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1515:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1566:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1569:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1559:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1559:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1559:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1594:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1597:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1587:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1587:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1587:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1457:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1480:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1488:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1477:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1477:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1454:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1454:38:12"
															},
															"nodeType": "YulIf",
															"src": "1451:161:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1273:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1282:6:12",
														"type": ""
													}
												],
												"src": "1238:380:12"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        if gt(i, _4)\n        {\n            mstore(add(add(memPtr, _4), _1), 0)\n        }\n        value0 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001cf238038062001cf283398101604081905262000034916200011b565b6200003f8162000046565b5062000233565b80516200005b9060029060208401906200005f565b5050565b8280546200006d90620001f7565b90600052602060002090601f016020900481019282620000915760008555620000dc565b82601f10620000ac57805160ff1916838001178555620000dc565b82800160010185558215620000dc579182015b82811115620000dc578251825591602001919060010190620000bf565b50620000ea929150620000ee565b5090565b5b80821115620000ea5760008155600101620000ef565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200012f57600080fd5b82516001600160401b03808211156200014757600080fd5b818501915085601f8301126200015c57600080fd5b81518181111562000171576200017162000105565b604051601f8201601f19908116603f011681019083821181831017156200019c576200019c62000105565b816040528281528886848701011115620001b557600080fd5b600093505b82841015620001d95784840186015181850187015292850192620001ba565b82841115620001eb5760008684830101525b98975050505050505050565b600181811c908216806200020c57607f821691505b6020821081036200022d57634e487b7160e01b600052602260045260246000fd5b50919050565b611aaf80620002436000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461018657600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004611260565b610199565b6040519081526020015b60405180910390f35b6100c56100c03660046112bb565b610276565b60405190151581526020016100a9565b6100e86100e33660046112df565b61035b565b6040516100a99190611363565b610108610103366004611517565b6103ef565b005b61011d6101183660046115c1565b6104b8565b6040516100a991906116c7565b6101086101383660046116da565b610610565b6100c561014b366004611716565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205460ff1690565b610108610194366004611749565b61061f565b600073ffffffffffffffffffffffffffffffffffffffff8316610243576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b5060009081526020818152604080832073ffffffffffffffffffffffffffffffffffffffff949094168352929052205490565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fd9b67a2600000000000000000000000000000000000000000000000000000000148061030957507fffffffff0000000000000000000000000000000000000000000000000000000082167f0e89341c00000000000000000000000000000000000000000000000000000000145b8061035557507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60606002805461036a906117ae565b80601f0160208091040260200160405190810160405280929190818152602001828054610396906117ae565b80156103e35780601f106103b8576101008083540402835291602001916103e3565b820191906000526020600020905b8154815290600101906020018083116103c657829003601f168201915b50505050509050919050565b73ffffffffffffffffffffffffffffffffffffffff85163314806104185750610418853361014b565b6104a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000606482015260840161023a565b6104b185858585856106e1565b5050505050565b6060815183511461054b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d617463680000000000000000000000000000000000000000000000606482015260840161023a565b6000835167ffffffffffffffff81111561056757610567611376565b604051908082528060200260200182016040528015610590578160200160208202803683370190505b50905060005b8451811015610608576105db8582815181106105b4576105b4611801565b60200260200101518583815181106105ce576105ce611801565b6020026020010151610199565b8282815181106105ed576105ed611801565b60209081029190910101526106018161185f565b9050610596565b509392505050565b61061b338383610a1b565b5050565b73ffffffffffffffffffffffffffffffffffffffff85163314806106485750610648853361014b565b6106d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f7665640000000000000000000000000000000000000000000000606482015260840161023a565b6104b18585858585610b6e565b8151835114610772576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d61746368000000000000000000000000000000000000000000000000606482015260840161023a565b73ffffffffffffffffffffffffffffffffffffffff8416610815576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161023a565b3360005b845181101561098657600085828151811061083657610836611801565b60200260200101519050600085838151811061085457610854611801565b6020908102919091018101516000848152808352604080822073ffffffffffffffffffffffffffffffffffffffff8e168352909352919091205490915081811015610921576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e7366657200000000000000000000000000000000000000000000606482015260840161023a565b60008381526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8e8116855292528083208585039055908b1682528120805484929061096b908490611897565b925050819055505050508061097f9061185f565b9050610819565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516109fd9291906118af565b60405180910390a4610a13818787878787610dac565b505050505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ad6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c660000000000000000000000000000000000000000000000606482015260840161023a565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8416610c11576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161023a565b336000610c1d8561103f565b90506000610c2a8561103f565b905060008681526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8c16845290915290205485811015610cea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e7366657200000000000000000000000000000000000000000000606482015260840161023a565b60008781526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8d8116855292528083208985039055908a16825281208054889290610d34908490611897565b9091555050604080518881526020810188905273ffffffffffffffffffffffffffffffffffffffff808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610da1848a8a8a8a8a61108a565b505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff84163b15610a13576040517fbc197c8100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063bc197c8190610e2390899089908890889088906004016118dd565b6020604051808303816000875af1925050508015610e7c575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610e7991810190611948565b60015b610f6557610e88611965565b806308c379a003610edb5750610e9c611981565b80610ea75750610edd565b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023a9190611363565b505b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e746572000000000000000000000000606482015260840161023a565b7fffffffff0000000000000000000000000000000000000000000000000000000081167fbc197c810000000000000000000000000000000000000000000000000000000014611036576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e73000000000000000000000000000000000000000000000000606482015260840161023a565b50505050505050565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061107957611079611801565b602090810291909101015292915050565b73ffffffffffffffffffffffffffffffffffffffff84163b15610a13576040517ff23a6e6100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063f23a6e61906111019089908990889088908890600401611a29565b6020604051808303816000875af192505050801561115a575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261115791810190611948565b60015b61116657610e88611965565b7fffffffff0000000000000000000000000000000000000000000000000000000081167ff23a6e610000000000000000000000000000000000000000000000000000000014611036576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e73000000000000000000000000000000000000000000000000606482015260840161023a565b803573ffffffffffffffffffffffffffffffffffffffff8116811461125b57600080fd5b919050565b6000806040838503121561127357600080fd5b61127c83611237565b946020939093013593505050565b7fffffffff00000000000000000000000000000000000000000000000000000000811681146112b857600080fd5b50565b6000602082840312156112cd57600080fd5b81356112d88161128a565b9392505050565b6000602082840312156112f157600080fd5b5035919050565b6000815180845260005b8181101561131e57602081850181015186830182015201611302565b81811115611330576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006112d860208301846112f8565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff821117156113e9576113e9611376565b6040525050565b600067ffffffffffffffff82111561140a5761140a611376565b5060051b60200190565b600082601f83011261142557600080fd5b81356020611432826113f0565b60405161143f82826113a5565b83815260059390931b850182019282810191508684111561145f57600080fd5b8286015b8481101561147a5780358352918301918301611463565b509695505050505050565b600082601f83011261149657600080fd5b813567ffffffffffffffff8111156114b0576114b0611376565b6040516114e560207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85011601826113a5565b8181528460208386010111156114fa57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561152f57600080fd5b61153886611237565b945061154660208701611237565b9350604086013567ffffffffffffffff8082111561156357600080fd5b61156f89838a01611414565b9450606088013591508082111561158557600080fd5b61159189838a01611414565b935060808801359150808211156115a757600080fd5b506115b488828901611485565b9150509295509295909350565b600080604083850312156115d457600080fd5b823567ffffffffffffffff808211156115ec57600080fd5b818501915085601f83011261160057600080fd5b8135602061160d826113f0565b60405161161a82826113a5565b83815260059390931b850182019282810191508984111561163a57600080fd5b948201945b8386101561165f5761165086611237565b8252948201949082019061163f565b9650508601359250508082111561167557600080fd5b5061168285828601611414565b9150509250929050565b600081518084526020808501945080840160005b838110156116bc578151875295820195908201906001016116a0565b509495945050505050565b6020815260006112d8602083018461168c565b600080604083850312156116ed57600080fd5b6116f683611237565b91506020830135801515811461170b57600080fd5b809150509250929050565b6000806040838503121561172957600080fd5b61173283611237565b915061174060208401611237565b90509250929050565b600080600080600060a0868803121561176157600080fd5b61176a86611237565b945061177860208701611237565b93506040860135925060608601359150608086013567ffffffffffffffff8111156117a257600080fd5b6115b488828901611485565b600181811c908216806117c257607f821691505b6020821081036117fb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361189057611890611830565b5060010190565b600082198211156118aa576118aa611830565b500190565b6040815260006118c2604083018561168c565b82810360208401526118d4818561168c565b95945050505050565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525060a0604083015261191660a083018661168c565b8281036060840152611928818661168c565b9050828103608084015261193c81856112f8565b98975050505050505050565b60006020828403121561195a57600080fd5b81516112d88161128a565b600060033d111561197e5760046000803e5060005160e01c5b90565b600060443d101561198f5790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff81602484011181841117156119dd57505050505090565b82850191508151818111156119f55750505050505090565b843d8701016020828501011115611a0f5750505050505090565b611a1e602082860101876113a5565b509095945050505050565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525084604083015283606083015260a06080830152611a6e60a08301846112f8565b97965050505050505056fea26469706673582212203cbad807d9a3820b640c82b29a67e3dac9a284719039fbbf5a2694cadd91450264736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1CF2 CODESIZE SUB DUP1 PUSH3 0x1CF2 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11B JUMP JUMPDEST PUSH3 0x3F DUP2 PUSH3 0x46 JUMP JUMPDEST POP PUSH3 0x233 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x5B SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x5F JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x6D SWAP1 PUSH3 0x1F7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x91 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xDC JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xAC JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xDC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xDC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xDC JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xBF JUMP JUMPDEST POP PUSH3 0xEA SWAP3 SWAP2 POP PUSH3 0xEE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xEA JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xEF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x171 JUMPI PUSH3 0x171 PUSH3 0x105 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x19C JUMPI PUSH3 0x19C PUSH3 0x105 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x1D9 JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x1BA JUMP JUMPDEST DUP3 DUP5 GT ISZERO PUSH3 0x1EB JUMPI PUSH1 0x0 DUP7 DUP5 DUP4 ADD ADD MSTORE JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x20C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x22D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AAF DUP1 PUSH3 0x243 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0x1260 JUMP JUMPDEST PUSH2 0x199 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0x12BB JUMP JUMPDEST PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0x12DF JUMP JUMPDEST PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x1363 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0x1517 JUMP JUMPDEST PUSH2 0x3EF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0x15C1 JUMP JUMPDEST PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0x16DA JUMP JUMPDEST PUSH2 0x610 JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0x1716 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x194 CALLDATASIZE PUSH1 0x4 PUSH2 0x1749 JUMP JUMPDEST PUSH2 0x61F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x243 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x309 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x355 JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x36A SWAP1 PUSH2 0x17AE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x396 SWAP1 PUSH2 0x17AE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND CALLER EQ DUP1 PUSH2 0x418 JUMPI POP PUSH2 0x418 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x4A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F776E6572206E6F7220617070726F7665640000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x23A JUMP JUMPDEST PUSH2 0x4B1 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x6E1 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x54B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x23A JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x567 JUMPI PUSH2 0x567 PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x590 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x608 JUMPI PUSH2 0x5DB DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5B4 JUMPI PUSH2 0x5B4 PUSH2 0x1801 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5CE JUMPI PUSH2 0x5CE PUSH2 0x1801 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x199 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5ED JUMPI PUSH2 0x5ED PUSH2 0x1801 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x601 DUP2 PUSH2 0x185F JUMP JUMPDEST SWAP1 POP PUSH2 0x596 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x61B CALLER DUP4 DUP4 PUSH2 0xA1B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND CALLER EQ DUP1 PUSH2 0x648 JUMPI POP PUSH2 0x648 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x6D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20617070726F7665640000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x23A JUMP JUMPDEST PUSH2 0x4B1 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xB6E JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x772 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x23A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x815 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x23A JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x986 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x836 JUMPI PUSH2 0x836 PUSH2 0x1801 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x854 JUMPI PUSH2 0x854 PUSH2 0x1801 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x921 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x23A JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x96B SWAP1 DUP5 SWAP1 PUSH2 0x1897 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x97F SWAP1 PUSH2 0x185F JUMP JUMPDEST SWAP1 POP PUSH2 0x819 JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x9FD SWAP3 SWAP2 SWAP1 PUSH2 0x18AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA13 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xDAC JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x23A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0xC11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x23A JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0xC1D DUP6 PUSH2 0x103F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC2A DUP6 PUSH2 0x103F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0xCEA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x23A JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0xD34 SWAP1 DUP5 SWAP1 PUSH2 0x1897 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xDA1 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x108A JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND EXTCODESIZE ISZERO PUSH2 0xA13 JUMPI PUSH1 0x40 MLOAD PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xE23 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x18DD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xE7C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xE79 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1948 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xF65 JUMPI PUSH2 0xE88 PUSH2 0x1965 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xEDB JUMPI POP PUSH2 0xE9C PUSH2 0x1981 JUMP JUMPDEST DUP1 PUSH2 0xEA7 JUMPI POP PUSH2 0xEDD JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x1363 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x23A JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 EQ PUSH2 0x1036 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x23A JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1079 JUMPI PUSH2 0x1079 PUSH2 0x1801 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND EXTCODESIZE ISZERO PUSH2 0xA13 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x1101 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A29 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x115A JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1157 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1948 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1166 JUMPI PUSH2 0xE88 PUSH2 0x1965 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 EQ PUSH2 0x1036 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x23A JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x125B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1273 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x127C DUP4 PUSH2 0x1237 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x12B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x12D8 DUP2 PUSH2 0x128A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x131E JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1302 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1330 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x12D8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12F8 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x13E9 JUMPI PUSH2 0x13E9 PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x140A JUMPI PUSH2 0x140A PUSH2 0x1376 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1432 DUP3 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143F DUP3 DUP3 PUSH2 0x13A5 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x145F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x147A JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1463 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14B0 JUMPI PUSH2 0x14B0 PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E5 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP6 ADD AND ADD DUP3 PUSH2 0x13A5 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x14FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x152F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1538 DUP7 PUSH2 0x1237 JUMP JUMPDEST SWAP5 POP PUSH2 0x1546 PUSH1 0x20 DUP8 ADD PUSH2 0x1237 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156F DUP10 DUP4 DUP11 ADD PUSH2 0x1414 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1585 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1591 DUP10 DUP4 DUP11 ADD PUSH2 0x1414 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x15A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B4 DUP9 DUP3 DUP10 ADD PUSH2 0x1485 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x15EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1600 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x160D DUP3 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x161A DUP3 DUP3 PUSH2 0x13A5 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x163A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x165F JUMPI PUSH2 0x1650 DUP7 PUSH2 0x1237 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x163F JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x1675 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1682 DUP6 DUP3 DUP7 ADD PUSH2 0x1414 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16BC JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x16A0 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x12D8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x168C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16F6 DUP4 PUSH2 0x1237 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x170B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1729 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1732 DUP4 PUSH2 0x1237 JUMP JUMPDEST SWAP2 POP PUSH2 0x1740 PUSH1 0x20 DUP5 ADD PUSH2 0x1237 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1761 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x176A DUP7 PUSH2 0x1237 JUMP JUMPDEST SWAP5 POP PUSH2 0x1778 PUSH1 0x20 DUP8 ADD PUSH2 0x1237 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15B4 DUP9 DUP3 DUP10 ADD PUSH2 0x1485 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x17C2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x17FB JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1890 JUMPI PUSH2 0x1890 PUSH2 0x1830 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x18AA JUMPI PUSH2 0x18AA PUSH2 0x1830 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x18C2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x168C JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x18D4 DUP2 DUP6 PUSH2 0x168C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1916 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x168C JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1928 DUP2 DUP7 PUSH2 0x168C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x193C DUP2 DUP6 PUSH2 0x12F8 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x195A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x12D8 DUP2 PUSH2 0x128A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x197E JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x198F JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP1 RETURNDATASIZE ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x19DD JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x19F5 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1A0F JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1A1E PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x13A5 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1A6E PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x12F8 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY 0xBA 0xD8 SMOD 0xD9 LOG3 DUP3 SIGNEXTEND PUSH5 0xC82B29A67 0xE3 0xDA 0xC9 LOG2 DUP5 PUSH18 0x9039FBBF5A2694CADD91450264736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "570:16550:0:-:0;;;1107:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1149:13;1157:4;1149:7;:13::i;:::-;1107:62;570:16550;;8171:86;8237:13;;;;:4;;:13;;;;;:::i;:::-;;8171:86;:::o;570:16550::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;570:16550:0;;;-1:-1:-1;570:16550:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:12;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1087;226:6;257:2;300;288:9;279:7;275:23;271:32;268:52;;;316:1;313;306:12;268:52;343:16;;-1:-1:-1;;;;;408:14:12;;;405:34;;;435:1;432;425:12;405:34;473:6;462:9;458:22;448:32;;518:7;511:4;507:2;503:13;499:27;489:55;;540:1;537;530:12;489:55;569:2;563:9;591:2;587;584:10;581:36;;;597:18;;:::i;:::-;672:2;666:9;640:2;726:13;;-1:-1:-1;;722:22:12;;;746:2;718:31;714:40;702:53;;;770:18;;;790:22;;;767:46;764:72;;;816:18;;:::i;:::-;856:10;852:2;845:22;891:2;883:6;876:18;931:7;926:2;921;917;913:11;909:20;906:33;903:53;;;952:1;949;942:12;903:53;974:1;965:10;;984:129;998:2;995:1;992:9;984:129;;;1086:10;;;1082:19;;1076:26;1055:14;;;1051:23;;1044:59;1009:10;;;;984:129;;;1131:2;1128:1;1125:9;1122:80;;;1190:1;1185:2;1180;1172:6;1168:15;1164:24;1157:35;1122:80;1221:6;146:1087;-1:-1:-1;;;;;;;;146:1087:12:o;1238:380::-;1317:1;1313:12;;;;1360;;;1381:61;;1435:4;1427:6;1423:17;1413:27;;1381:61;1488:2;1480:6;1477:14;1457:18;1454:38;1451:161;;1534:10;1529:3;1525:20;1522:1;1515:31;1569:4;1566:1;1559:15;1597:4;1594:1;1587:15;1451:161;;1238:380;;;:::o;:::-;570:16550:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1065": {
									"entryPoint": null,
									"id": 1065,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_asSingletonArray_1221": {
									"entryPoint": 4159,
									"id": 1221,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1046": {
									"entryPoint": null,
									"id": 1046,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1193": {
									"entryPoint": 3500,
									"id": 1193,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1128": {
									"entryPoint": 4234,
									"id": 1128,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_1864": {
									"entryPoint": null,
									"id": 1864,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_544": {
									"entryPoint": 1761,
									"id": 544,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_409": {
									"entryPoint": 2926,
									"id": 409,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1027": {
									"entryPoint": 2587,
									"id": 1027,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOfBatch_179": {
									"entryPoint": 1208,
									"id": 179,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_115": {
									"entryPoint": 409,
									"id": 115,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_214": {
									"entryPoint": null,
									"id": 214,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1575": {
									"entryPoint": null,
									"id": 1575,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_292": {
									"entryPoint": 1007,
									"id": 292,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_252": {
									"entryPoint": 1567,
									"id": 252,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_196": {
									"entryPoint": 1552,
									"id": 196,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_2100": {
									"entryPoint": null,
									"id": 2100,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_75": {
									"entryPoint": 630,
									"id": 75,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_87": {
									"entryPoint": 859,
									"id": 87,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 4663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 5140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 5253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5910,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 5399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 5961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 5772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 4856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6365,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6697,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6319,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4963,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 5104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 6062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 6239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6192,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6145,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4982,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 6501,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 6529,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_bytes4": {
									"entryPoint": 4746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16967:12",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:147:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "188:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "197:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "200:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "190:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "190:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "190:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "142:42:12",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:54:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:65:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:73:12"
															},
															"nodeType": "YulIf",
															"src": "111:93:12"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:12",
														"type": ""
													}
												],
												"src": "14:196:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "302:167:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "348:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "357:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "360:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "350:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "350:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "350:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "323:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "332:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "319:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "319:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "344:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "315:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "315:32:12"
															},
															"nodeType": "YulIf",
															"src": "312:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "373:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "402:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "383:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "383:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "373:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "421:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "448:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "459:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "444:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "444:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "431:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "431:32:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "421:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "260:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "271:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "283:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "291:6:12",
														"type": ""
													}
												],
												"src": "215:254:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "575:76:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "585:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "597:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "608:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "593:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "593:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "585:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "627:9:12"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "638:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "620:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "620:25:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "620:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "544:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "555:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "566:4:12",
														"type": ""
													}
												],
												"src": "474:177:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "700:133:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "811:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "820:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "823:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "813:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "813:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "813:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "723:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "734:5:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "741:66:12",
																						"type": "",
																						"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "730:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "730:78:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "720:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "720:89:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "713:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "713:97:12"
															},
															"nodeType": "YulIf",
															"src": "710:117:12"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "689:5:12",
														"type": ""
													}
												],
												"src": "656:177:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:176:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "962:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "965:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "955:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:12"
															},
															"nodeType": "YulIf",
															"src": "917:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "978:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1004:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "991:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "991:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "982:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1047:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "1023:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1023:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1023:30:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1062:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1072:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1062:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "873:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "884:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "896:6:12",
														"type": ""
													}
												],
												"src": "838:245:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1183:92:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1193:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1205:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1216:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1201:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1201:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1193:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1235:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1260:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1253:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1253:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1246:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1246:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1228:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1228:41:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1228:41:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1152:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1163:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1174:4:12",
														"type": ""
													}
												],
												"src": "1088:187:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1350:110:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1396:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1405:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1408:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1398:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1398:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1371:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1380:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1367:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1367:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1392:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1363:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1363:32:12"
															},
															"nodeType": "YulIf",
															"src": "1360:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1421:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1444:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1431:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1431:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1421:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1316:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1327:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1339:6:12",
														"type": ""
													}
												],
												"src": "1280:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1515:481:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1525:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1545:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1539:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1539:12:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1529:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1567:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1572:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1560:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1560:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1560:19:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1588:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1597:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1592:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1659:110:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1673:14:12",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1683:4:12",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1677:2:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "1715:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1720:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1711:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1711:11:12"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1724:2:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1707:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1707:20:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1743:5:12"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1750:1:12"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1739:3:12"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1739:13:12"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1754:2:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1735:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1735:22:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1729:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1729:29:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1700:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1700:59:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1700:59:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1618:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1621:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1615:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1615:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1629:21:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1631:17:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1640:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1643:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1636:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1636:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1631:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1611:3:12",
																"statements": []
															},
															"src": "1607:162:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1803:62:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "1832:3:12"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1837:6:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1828:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1828:16:12"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1846:4:12",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1824:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1824:27:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1853:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1817:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1817:38:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1817:38:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1784:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1787:6:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1781:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1781:13:12"
															},
															"nodeType": "YulIf",
															"src": "1778:87:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1874:116:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1889:3:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1902:6:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1910:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1898:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1898:15:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1915:66:12",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1894:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1894:88:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1885:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1885:98:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1985:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1881:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1881:109:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1874:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1492:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1499:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1507:3:12",
														"type": ""
													}
												],
												"src": "1465:531:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2122:99:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2139:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2150:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2132:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2132:21:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2162:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2188:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2200:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2211:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2196:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2196:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "2170:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2170:45:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2162:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2091:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2102:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2113:4:12",
														"type": ""
													}
												],
												"src": "2001:220:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2258:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2275:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2278:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2268:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2268:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2268:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2372:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2375:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2365:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2365:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2365:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2396:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2399:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2389:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2389:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2389:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2226:184:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2462:261:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2472:117:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2494:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "2510:4:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2516:2:12",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2506:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2506:13:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2521:66:12",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2502:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2502:86:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:99:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2476:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2664:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2666:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2666:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2666:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2607:10:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2619:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2604:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2604:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2643:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2655:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2640:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2640:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2601:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2601:62:12"
															},
															"nodeType": "YulIf",
															"src": "2598:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2702:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2706:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2695:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2695:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2695:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2444:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2452:4:12",
														"type": ""
													}
												],
												"src": "2415:308:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2797:114:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2841:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2843:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2843:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2843:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2813:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2821:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2810:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2810:30:12"
															},
															"nodeType": "YulIf",
															"src": "2807:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2872:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2888:1:12",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2891:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2884:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2884:14:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2900:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2880:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2880:25:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2872:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2777:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2788:4:12",
														"type": ""
													}
												],
												"src": "2728:183:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2980:660:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3029:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3038:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3041:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3031:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3031:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3031:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3008:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3016:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3004:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3004:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3023:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3000:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3000:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2993:35:12"
															},
															"nodeType": "YulIf",
															"src": "2990:55:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3054:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3077:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3064:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3064:20:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3058:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3093:14:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3103:4:12",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3097:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3116:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3166:2:12"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "3126:39:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3126:43:12"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3120:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3178:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3198:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3192:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3192:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3182:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3230:6:12"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "3238:2:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3210:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3210:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3210:31:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3250:17:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3261:6:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3254:3:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3283:6:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3291:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3276:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3276:18:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3276:18:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3303:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3314:6:12"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3322:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3310:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3310:15:12"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3303:3:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3334:46:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3356:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3368:1:12",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3371:2:12"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3364:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3364:10:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3352:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3352:23:12"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3377:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3348:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3348:32:12"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3338:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3408:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3417:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3420:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3410:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3410:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3410:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3395:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3403:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3392:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3392:15:12"
															},
															"nodeType": "YulIf",
															"src": "3389:35:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3433:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3448:6:12"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3456:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3444:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3444:15:12"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "3437:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3524:86:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3545:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "3563:3:12"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "3550:12:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3550:17:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3538:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3538:30:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3538:30:12"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3581:19:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3592:3:12"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3597:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3588:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3588:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3581:3:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3479:3:12"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3484:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3476:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3476:15:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3492:23:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3494:19:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3505:3:12"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3510:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3501:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3501:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3494:3:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3472:3:12",
																"statements": []
															},
															"src": "3468:142:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3619:15:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3628:6:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3619:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2954:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2962:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2970:5:12",
														"type": ""
													}
												],
												"src": "2916:724:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3697:562:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3746:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3755:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3758:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3748:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3748:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3748:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3725:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3733:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3721:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3721:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3740:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3717:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3717:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3710:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3710:35:12"
															},
															"nodeType": "YulIf",
															"src": "3707:55:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3771:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3794:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3781:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3781:20:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3775:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3840:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3842:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3842:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3842:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3816:2:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3820:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3813:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3813:26:12"
															},
															"nodeType": "YulIf",
															"src": "3810:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3871:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3891:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3885:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3885:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3875:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3923:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "3943:2:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3947:4:12",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3939:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3939:13:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3954:66:12",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3935:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3935:86:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4023:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3931:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3931:97:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3903:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3903:126:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3903:126:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4045:6:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4053:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4038:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4038:18:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4038:18:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4104:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4113:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4116:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4106:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4106:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4106:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4079:6:12"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "4087:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4075:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4075:15:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4092:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4071:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4071:26:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4099:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4068:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4068:35:12"
															},
															"nodeType": "YulIf",
															"src": "4065:55:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4146:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4154:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4142:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4142:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4165:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4173:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4161:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4161:17:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4180:2:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4129:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4129:54:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4129:54:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "4207:6:12"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "4215:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4203:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4203:15:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4220:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4199:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4199:26:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4227:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4192:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4192:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4192:37:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4238:15:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4247:6:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4238:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3671:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3679:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3687:5:12",
														"type": ""
													}
												],
												"src": "3645:614:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4461:746:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4508:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4517:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4520:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4510:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4510:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4510:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4482:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4491:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4478:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4478:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4503:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4474:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4474:33:12"
															},
															"nodeType": "YulIf",
															"src": "4471:53:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4533:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4562:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4543:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4543:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4533:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4581:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4614:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4625:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4610:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4610:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4591:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4591:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4581:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4638:46:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4669:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4680:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4665:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4665:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4652:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4652:32:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4642:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4693:28:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4703:18:12",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4697:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4748:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4757:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4760:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4750:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4750:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4750:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4736:6:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4744:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4733:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4733:14:12"
															},
															"nodeType": "YulIf",
															"src": "4730:34:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4773:71:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4816:9:12"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4827:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4812:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4812:22:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4836:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4783:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4783:61:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4773:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4853:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4886:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4897:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4882:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4882:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4869:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:32:12"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4857:8:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4930:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4939:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4942:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4932:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4932:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4932:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4916:8:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4926:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4913:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4913:16:12"
															},
															"nodeType": "YulIf",
															"src": "4910:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4955:73:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4998:9:12"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "5009:8:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4994:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4994:24:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5020:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4965:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4965:63:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4955:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5037:49:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5070:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5081:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5066:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5066:19:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5053:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5053:33:12"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "5041:8:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5115:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5124:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5127:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5117:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5117:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5117:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "5101:8:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5111:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5098:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5098:16:12"
															},
															"nodeType": "YulIf",
															"src": "5095:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5140:61:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5171:9:12"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "5182:8:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5167:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5167:24:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5193:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5150:16:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5150:51:12"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "5140:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4395:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4406:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4418:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4426:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4434:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4442:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4450:6:12",
														"type": ""
													}
												],
												"src": "4264:943:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5349:1071:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5395:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5404:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5407:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5397:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5397:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5397:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5370:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5379:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5366:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5366:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5391:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5362:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5362:32:12"
															},
															"nodeType": "YulIf",
															"src": "5359:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5420:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5447:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5434:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5434:23:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5424:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5466:28:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5476:18:12",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5470:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5521:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5530:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5533:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5523:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5523:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5523:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5509:6:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5517:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5506:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5506:14:12"
															},
															"nodeType": "YulIf",
															"src": "5503:34:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5546:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5560:9:12"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5571:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5556:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5556:22:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "5550:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5626:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5635:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5638:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5628:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5628:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5628:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "5605:2:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5609:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5601:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5601:13:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5616:7:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5597:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5597:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5590:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5590:35:12"
															},
															"nodeType": "YulIf",
															"src": "5587:55:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5651:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5674:2:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5661:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5661:16:12"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "5655:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5686:14:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5696:4:12",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "5690:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5709:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5759:2:12"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5719:39:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5719:43:12"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "5713:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5771:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5791:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5785:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5785:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "5775:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5823:6:12"
																	},
																	{
																		"name": "_5",
																		"nodeType": "YulIdentifier",
																		"src": "5831:2:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5803:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5803:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5803:31:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5843:17:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5854:6:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "5847:3:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5876:6:12"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5884:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5869:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5869:18:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5869:18:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5896:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5907:6:12"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5915:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5903:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5903:15:12"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "5896:3:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5927:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "5949:2:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5957:1:12",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "5960:2:12"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "5953:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5953:10:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5945:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5945:19:12"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5966:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5941:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5941:28:12"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "5931:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6001:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6010:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6013:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6003:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6003:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6003:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5984:6:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5992:7:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5981:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5981:19:12"
															},
															"nodeType": "YulIf",
															"src": "5978:39:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6026:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6041:2:12"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "6045:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6037:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6037:11:12"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "6030:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6113:92:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6134:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "6158:3:12"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "6139:18:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6139:23:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6127:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6127:36:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6127:36:12"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6176:19:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6187:3:12"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "6192:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6183:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6183:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6176:3:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6068:3:12"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6073:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6065:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6065:15:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6081:23:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6083:19:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "6094:3:12"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "6099:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6090:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6090:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6083:3:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6061:3:12",
																"statements": []
															},
															"src": "6057:148:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6214:16:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "6224:6:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6214:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6239:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6272:9:12"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "6283:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6268:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6268:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6255:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6255:32:12"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "6243:8:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6316:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6325:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6328:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6318:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6318:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6318:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "6302:8:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6312:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6299:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6299:16:12"
															},
															"nodeType": "YulIf",
															"src": "6296:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6341:73:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6384:9:12"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "6395:8:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6380:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6380:24:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6406:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6351:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6351:63:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6341:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5307:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5318:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5330:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5338:6:12",
														"type": ""
													}
												],
												"src": "5212:1208:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6486:374:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6496:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6516:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6510:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6510:12:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6500:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6538:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6543:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6531:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6531:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6531:19:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6559:14:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6569:4:12",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6563:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6582:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6593:3:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6598:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6589:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6589:12:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6582:3:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6610:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6628:5:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6635:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6624:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6624:14:12"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6614:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6647:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6656:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6651:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6715:120:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6736:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "6747:6:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6741:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6741:13:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6729:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6729:26:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6729:26:12"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6768:19:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6779:3:12"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6784:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6775:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6775:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6768:3:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6800:25:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6814:6:12"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6822:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6810:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6810:15:12"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6800:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6677:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6680:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6674:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6674:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6688:18:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6690:14:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6699:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6702:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6695:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6695:9:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6690:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6670:3:12",
																"statements": []
															},
															"src": "6666:169:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6844:10:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6851:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6844:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6463:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6470:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6478:3:12",
														"type": ""
													}
												],
												"src": "6425:435:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7016:110:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7033:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7044:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7026:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7026:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7026:21:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7056:64:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7093:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7105:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7116:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7101:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7101:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7064:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7064:56:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7056:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6985:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6996:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7007:4:12",
														"type": ""
													}
												],
												"src": "6865:261:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7215:263:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7261:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7270:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7273:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7263:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7263:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7263:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7236:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7245:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7232:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7232:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7257:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7228:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7228:32:12"
															},
															"nodeType": "YulIf",
															"src": "7225:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7286:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7315:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7296:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7296:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7286:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7334:45:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7364:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7375:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7360:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7360:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7347:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7347:32:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7338:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7432:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7441:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7444:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7434:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7434:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7434:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7401:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "7422:5:12"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "7415:6:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7415:13:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7408:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7408:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7398:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7398:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7391:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7391:40:12"
															},
															"nodeType": "YulIf",
															"src": "7388:60:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7457:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7467:5:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7457:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7173:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7184:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7196:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7204:6:12",
														"type": ""
													}
												],
												"src": "7131:347:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7570:173:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7616:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7625:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7628:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7618:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7618:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7618:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7591:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7600:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7587:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7587:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7612:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7583:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7583:32:12"
															},
															"nodeType": "YulIf",
															"src": "7580:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7641:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7670:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7651:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7651:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7641:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7689:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7722:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7733:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7718:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7718:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7699:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7699:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7689:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7528:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7539:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7551:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7559:6:12",
														"type": ""
													}
												],
												"src": "7483:260:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7895:459:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7942:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7951:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7954:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7944:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7944:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7944:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7916:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7925:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7912:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7912:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7937:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7908:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7908:33:12"
															},
															"nodeType": "YulIf",
															"src": "7905:53:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7967:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7996:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7977:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7977:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7967:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8015:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8048:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8059:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8044:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8044:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "8025:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8025:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "8015:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8072:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8099:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8110:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8095:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8095:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8082:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8082:32:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "8072:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8123:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8150:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8161:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8146:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8146:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8133:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8133:32:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "8123:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8174:47:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8205:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8216:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8201:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8201:19:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8188:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8188:33:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "8178:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8264:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8273:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8276:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8266:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8266:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8266:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8236:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8244:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8233:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8233:30:12"
															},
															"nodeType": "YulIf",
															"src": "8230:50:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8289:59:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8320:9:12"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8331:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8316:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8316:22:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8340:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "8299:16:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8299:49:12"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "8289:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7829:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7840:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7852:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7860:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7868:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7876:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7884:6:12",
														"type": ""
													}
												],
												"src": "7748:606:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8533:233:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8550:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8561:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8543:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8543:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8543:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8584:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8595:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8580:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8580:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8600:2:12",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8573:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8573:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8573:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8623:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8634:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8619:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8619:18:12"
																	},
																	{
																		"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8639:34:12",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8612:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8612:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8612:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8694:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8705:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8690:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8690:18:12"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8710:13:12",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8683:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8683:41:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8683:41:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8733:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8745:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8756:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8741:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8741:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8733:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8510:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8524:4:12",
														"type": ""
													}
												],
												"src": "8359:407:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8826:382:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8836:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8850:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8853:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8846:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8846:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8836:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8867:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8897:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8903:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8893:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8893:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "8871:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8944:31:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8946:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "8960:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8968:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "8956:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8956:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8946:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8924:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8917:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8917:26:12"
															},
															"nodeType": "YulIf",
															"src": "8914:61:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9034:168:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9055:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9058:77:12",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9048:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9048:88:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9048:88:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9156:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9159:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9149:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9149:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9149:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9184:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9187:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9177:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9177:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9177:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8990:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9013:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9021:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "9010:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9010:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8987:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8987:38:12"
															},
															"nodeType": "YulIf",
															"src": "8984:218:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8806:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8815:6:12",
														"type": ""
													}
												],
												"src": "8771:437:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9387:240:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9404:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9415:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9397:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9397:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9397:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9438:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9449:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9434:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9434:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9454:2:12",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9427:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9427:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9427:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9477:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9488:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9473:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9473:18:12"
																	},
																	{
																		"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9493:34:12",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9466:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9466:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9466:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9548:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9559:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9544:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9544:18:12"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9564:20:12",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9537:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9537:48:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9537:48:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9594:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9606:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9617:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9602:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9602:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9594:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9364:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9378:4:12",
														"type": ""
													}
												],
												"src": "9213:414:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9806:231:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9823:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9834:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9816:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9816:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9816:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9857:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9868:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9853:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9853:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9873:2:12",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9846:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9846:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9846:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9896:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9907:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9892:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9892:18:12"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9912:34:12",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9885:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9885:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9885:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9967:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9978:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9963:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9963:18:12"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9983:11:12",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9956:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9956:39:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9956:39:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10004:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10016:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10027:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10012:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10012:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10004:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9783:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9797:4:12",
														"type": ""
													}
												],
												"src": "9632:405:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10074:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10091:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10094:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10084:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10084:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10084:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10188:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10191:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10181:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10181:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10181:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10212:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10215:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10205:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10205:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10205:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "10042:184:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10263:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10280:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10283:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10273:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10273:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10273:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10377:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10380:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10370:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10370:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10370:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10401:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10404:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10394:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10394:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10394:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10231:184:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10467:148:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10558:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10560:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10560:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10560:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10483:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10490:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10480:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10480:77:12"
															},
															"nodeType": "YulIf",
															"src": "10477:103:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10589:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10600:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10607:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10596:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10596:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10589:3:12"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10449:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10459:3:12",
														"type": ""
													}
												],
												"src": "10420:195:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10794:231:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10811:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10822:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10804:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10804:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10804:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10845:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10856:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10841:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10841:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10861:2:12",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10834:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10834:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10834:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10884:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10895:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10880:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10880:18:12"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10900:34:12",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10873:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10873:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10873:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10955:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10966:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10951:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10951:18:12"
																	},
																	{
																		"hexValue": "20617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10971:11:12",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10944:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10944:39:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10944:39:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10992:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11004:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11015:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11000:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11000:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10992:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10771:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10785:4:12",
														"type": ""
													}
												],
												"src": "10620:405:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11204:230:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11221:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11232:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11214:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11214:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11214:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11255:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11266:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11251:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11251:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11271:2:12",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11244:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11244:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11244:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11294:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11305:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11290:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11290:18:12"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11310:34:12",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11283:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11283:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11283:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11365:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11376:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11361:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11361:18:12"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11381:10:12",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11354:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11354:38:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11354:38:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11401:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11413:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11424:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11409:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11409:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11401:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11181:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11195:4:12",
														"type": ""
													}
												],
												"src": "11030:404:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11613:227:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11630:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11641:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11623:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11623:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11623:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11664:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11675:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11660:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11660:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11680:2:12",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11653:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11653:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11653:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11703:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11714:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11699:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11699:18:12"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11719:34:12",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11692:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11692:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11692:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11774:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11785:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11770:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11770:18:12"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11790:7:12",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11763:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11763:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11763:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11807:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11819:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11830:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11815:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11815:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11807:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11590:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11604:4:12",
														"type": ""
													}
												],
												"src": "11439:401:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12019:232:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12036:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12047:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12029:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12029:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12029:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12070:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12081:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12066:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12066:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12086:2:12",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12059:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12059:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12059:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12109:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12120:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12105:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12105:18:12"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12125:34:12",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12098:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12098:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12098:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12180:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12191:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12176:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12176:18:12"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12196:12:12",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12169:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12169:40:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12169:40:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12218:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12230:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12241:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12226:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12226:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12218:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11996:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12010:4:12",
														"type": ""
													}
												],
												"src": "11845:406:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12304:80:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12331:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12333:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12333:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12333:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12320:1:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12327:1:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12323:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12323:6:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12317:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12317:13:12"
															},
															"nodeType": "YulIf",
															"src": "12314:39:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12362:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12373:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12376:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12369:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12369:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12362:3:12"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12287:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12290:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12296:3:12",
														"type": ""
													}
												],
												"src": "12256:128:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12618:236:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12635:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12646:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12628:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12628:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12628:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12658:70:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12701:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12713:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12724:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12709:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12709:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "12672:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12672:56:12"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "12662:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12748:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12759:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12744:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12744:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "12768:6:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12776:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12764:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12764:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12737:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12737:50:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12737:50:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12796:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12833:6:12"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "12841:6:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "12804:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12804:44:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12796:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12579:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12590:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12598:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12609:4:12",
														"type": ""
													}
												],
												"src": "12389:465:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13033:231:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13050:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13061:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13043:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13043:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13043:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13084:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13095:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13080:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13080:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13100:2:12",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13073:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13073:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13073:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13123:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13134:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13119:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13119:18:12"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13139:34:12",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13112:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13112:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13112:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13194:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13205:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13190:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13190:18:12"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13210:11:12",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13183:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13183:39:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13183:39:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13231:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13243:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13254:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13239:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13239:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13231:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13010:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13024:4:12",
														"type": ""
													}
												],
												"src": "12859:405:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13398:119:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13408:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13420:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13431:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13416:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13416:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13408:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13450:9:12"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13461:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13443:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13443:25:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13443:25:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13488:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13499:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13484:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13484:18:12"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13504:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13477:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13477:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13477:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13359:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13370:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13378:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13389:4:12",
														"type": ""
													}
												],
												"src": "13269:248:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13853:519:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13863:52:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "13873:42:12",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "13867:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13931:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "13946:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13954:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13942:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13942:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13924:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13924:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13924:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13978:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13989:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13974:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13974:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "13998:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14006:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13994:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13994:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13967:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13967:43:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13967:43:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14030:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14041:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14026:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14026:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14046:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14019:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14019:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14019:31:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14059:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14102:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14114:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14125:3:12",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14110:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14110:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "14073:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14073:57:12"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "14063:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14150:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14161:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14146:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14146:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "14170:6:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14178:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14166:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14166:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14139:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14139:50:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14139:50:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14198:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "14241:6:12"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "14249:6:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "14212:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14212:44:12"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "14202:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14276:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14287:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14272:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14272:19:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "14297:6:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14305:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14293:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14293:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14265:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14265:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14265:51:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14325:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "14351:6:12"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "14359:6:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "14333:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14333:33:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14325:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13790:9:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "13801:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13809:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13817:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13825:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13833:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13844:4:12",
														"type": ""
													}
												],
												"src": "13522:850:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14457:169:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14503:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14512:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14515:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14505:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14505:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14505:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14478:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14487:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14474:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14474:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14499:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14470:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14470:32:12"
															},
															"nodeType": "YulIf",
															"src": "14467:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14528:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14547:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14541:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14541:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "14532:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14590:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "14566:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14566:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14566:30:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14605:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "14615:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "14605:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14423:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14434:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14446:6:12",
														"type": ""
													}
												],
												"src": "14377:249:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14674:136:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14719:85:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14748:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14751:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14754:1:12",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "14733:14:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14733:23:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14733:23:12"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "14769:25:12",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14780:3:12",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14791:1:12",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "14785:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14785:8:12"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "14776:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14776:18:12"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "14769:3:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "14690:14:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14690:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14708:1:12",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14687:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14687:23:12"
															},
															"nodeType": "YulIf",
															"src": "14684:120:12"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "14666:3:12",
														"type": ""
													}
												],
												"src": "14631:179:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14862:684:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14902:9:12",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14904:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "14878:14:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14878:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14896:4:12",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14875:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14875:26:12"
															},
															"nodeType": "YulIf",
															"src": "14872:39:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14920:21:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14938:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14932:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14932:9:12"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "14924:4:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14950:76:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14960:66:12",
																"type": "",
																"value": "0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "14954:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15050:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15056:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "15063:14:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15063:16:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15081:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15059:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15059:25:12"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "15035:14:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15035:50:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15035:50:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15094:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15114:4:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15108:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15108:11:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "15098:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15128:26:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "15138:14:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15138:16:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "15132:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15163:28:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15173:18:12",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "15167:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15249:9:12",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "15251:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "15209:6:12"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "15217:2:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "15206:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15206:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15229:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15237:4:12",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15225:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15225:17:12"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "15244:2:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "15222:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15222:25:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "15203:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15203:45:12"
															},
															"nodeType": "YulIf",
															"src": "15200:58:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15267:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15282:4:12"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "15288:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15278:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15278:17:12"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "15271:3:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15304:24:12",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "15324:3:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15318:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15318:10:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15308:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15355:9:12",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "15357:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15343:6:12"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "15351:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15340:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15340:14:12"
															},
															"nodeType": "YulIf",
															"src": "15337:27:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15446:9:12",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "15448:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "15387:3:12"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "15392:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15383:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15383:16:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15401:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15379:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15379:27:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "15416:4:12"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "15422:14:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15422:16:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15412:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15412:27:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15441:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15408:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15408:36:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15376:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15376:69:12"
															},
															"nodeType": "YulIf",
															"src": "15373:82:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15484:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15498:6:12"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "15506:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15494:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15494:19:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15515:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15490:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15490:30:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "15464:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15464:57:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15464:57:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15530:10:12",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "15537:3:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15530:3:12"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "14854:3:12",
														"type": ""
													}
												],
												"src": "14815:731:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15725:242:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15742:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15753:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15735:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15735:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15735:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15776:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15787:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15772:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15772:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15792:2:12",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15765:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15765:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15765:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15815:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15826:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15811:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15811:18:12"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15831:34:12",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15804:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15804:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15804:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15886:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15897:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15882:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15882:18:12"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15902:22:12",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15875:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15875:50:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15875:50:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15934:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15946:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15957:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15942:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15942:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15934:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15702:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15716:4:12",
														"type": ""
													}
												],
												"src": "15551:416:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16146:230:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16163:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16174:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16156:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16156:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16156:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16197:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16208:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16193:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16193:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16213:2:12",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16186:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16186:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16186:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16236:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16247:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16232:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16232:18:12"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16252:34:12",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16225:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16225:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16225:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16307:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16318:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16303:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16303:18:12"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16323:10:12",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16296:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16296:38:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16296:38:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16343:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16355:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16366:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16351:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16351:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16343:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16123:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16137:4:12",
														"type": ""
													}
												],
												"src": "15972:404:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16612:353:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16622:52:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "16632:42:12",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "16626:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16690:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "16705:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16713:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16701:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16701:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16683:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16683:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16683:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16737:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16748:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16733:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16733:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "16757:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16765:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16753:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16753:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16726:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16726:43:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16726:43:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16789:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16800:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16785:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16785:18:12"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16805:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16778:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16778:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16778:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16832:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16843:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16828:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16828:18:12"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16848:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16821:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16821:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16821:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16875:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16886:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16871:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16871:19:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16892:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16864:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16864:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16864:32:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16905:54:12",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "16931:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16943:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16954:3:12",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16939:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16939:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "16913:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16913:46:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16905:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16549:9:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "16560:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "16568:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16576:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16584:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16592:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16603:4:12",
														"type": ""
													}
												],
												"src": "16381:584:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_uint256_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_uint256_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1155: balance query for the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1155: transfer caller is not \")\n        mstore(add(headStart, 96), \"owner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: caller is not owner nor\")\n        mstore(add(headStart, 96), \" approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461018657600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004611260565b610199565b6040519081526020015b60405180910390f35b6100c56100c03660046112bb565b610276565b60405190151581526020016100a9565b6100e86100e33660046112df565b61035b565b6040516100a99190611363565b610108610103366004611517565b6103ef565b005b61011d6101183660046115c1565b6104b8565b6040516100a991906116c7565b6101086101383660046116da565b610610565b6100c561014b366004611716565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205460ff1690565b610108610194366004611749565b61061f565b600073ffffffffffffffffffffffffffffffffffffffff8316610243576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b5060009081526020818152604080832073ffffffffffffffffffffffffffffffffffffffff949094168352929052205490565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fd9b67a2600000000000000000000000000000000000000000000000000000000148061030957507fffffffff0000000000000000000000000000000000000000000000000000000082167f0e89341c00000000000000000000000000000000000000000000000000000000145b8061035557507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60606002805461036a906117ae565b80601f0160208091040260200160405190810160405280929190818152602001828054610396906117ae565b80156103e35780601f106103b8576101008083540402835291602001916103e3565b820191906000526020600020905b8154815290600101906020018083116103c657829003601f168201915b50505050509050919050565b73ffffffffffffffffffffffffffffffffffffffff85163314806104185750610418853361014b565b6104a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000606482015260840161023a565b6104b185858585856106e1565b5050505050565b6060815183511461054b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d617463680000000000000000000000000000000000000000000000606482015260840161023a565b6000835167ffffffffffffffff81111561056757610567611376565b604051908082528060200260200182016040528015610590578160200160208202803683370190505b50905060005b8451811015610608576105db8582815181106105b4576105b4611801565b60200260200101518583815181106105ce576105ce611801565b6020026020010151610199565b8282815181106105ed576105ed611801565b60209081029190910101526106018161185f565b9050610596565b509392505050565b61061b338383610a1b565b5050565b73ffffffffffffffffffffffffffffffffffffffff85163314806106485750610648853361014b565b6106d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f7665640000000000000000000000000000000000000000000000606482015260840161023a565b6104b18585858585610b6e565b8151835114610772576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d61746368000000000000000000000000000000000000000000000000606482015260840161023a565b73ffffffffffffffffffffffffffffffffffffffff8416610815576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161023a565b3360005b845181101561098657600085828151811061083657610836611801565b60200260200101519050600085838151811061085457610854611801565b6020908102919091018101516000848152808352604080822073ffffffffffffffffffffffffffffffffffffffff8e168352909352919091205490915081811015610921576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e7366657200000000000000000000000000000000000000000000606482015260840161023a565b60008381526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8e8116855292528083208585039055908b1682528120805484929061096b908490611897565b925050819055505050508061097f9061185f565b9050610819565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516109fd9291906118af565b60405180910390a4610a13818787878787610dac565b505050505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ad6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c660000000000000000000000000000000000000000000000606482015260840161023a565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8416610c11576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161023a565b336000610c1d8561103f565b90506000610c2a8561103f565b905060008681526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8c16845290915290205485811015610cea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e7366657200000000000000000000000000000000000000000000606482015260840161023a565b60008781526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8d8116855292528083208985039055908a16825281208054889290610d34908490611897565b9091555050604080518881526020810188905273ffffffffffffffffffffffffffffffffffffffff808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610da1848a8a8a8a8a61108a565b505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff84163b15610a13576040517fbc197c8100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063bc197c8190610e2390899089908890889088906004016118dd565b6020604051808303816000875af1925050508015610e7c575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610e7991810190611948565b60015b610f6557610e88611965565b806308c379a003610edb5750610e9c611981565b80610ea75750610edd565b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023a9190611363565b505b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e746572000000000000000000000000606482015260840161023a565b7fffffffff0000000000000000000000000000000000000000000000000000000081167fbc197c810000000000000000000000000000000000000000000000000000000014611036576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e73000000000000000000000000000000000000000000000000606482015260840161023a565b50505050505050565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061107957611079611801565b602090810291909101015292915050565b73ffffffffffffffffffffffffffffffffffffffff84163b15610a13576040517ff23a6e6100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063f23a6e61906111019089908990889088908890600401611a29565b6020604051808303816000875af192505050801561115a575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261115791810190611948565b60015b61116657610e88611965565b7fffffffff0000000000000000000000000000000000000000000000000000000081167ff23a6e610000000000000000000000000000000000000000000000000000000014611036576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e73000000000000000000000000000000000000000000000000606482015260840161023a565b803573ffffffffffffffffffffffffffffffffffffffff8116811461125b57600080fd5b919050565b6000806040838503121561127357600080fd5b61127c83611237565b946020939093013593505050565b7fffffffff00000000000000000000000000000000000000000000000000000000811681146112b857600080fd5b50565b6000602082840312156112cd57600080fd5b81356112d88161128a565b9392505050565b6000602082840312156112f157600080fd5b5035919050565b6000815180845260005b8181101561131e57602081850181015186830182015201611302565b81811115611330576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006112d860208301846112f8565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff821117156113e9576113e9611376565b6040525050565b600067ffffffffffffffff82111561140a5761140a611376565b5060051b60200190565b600082601f83011261142557600080fd5b81356020611432826113f0565b60405161143f82826113a5565b83815260059390931b850182019282810191508684111561145f57600080fd5b8286015b8481101561147a5780358352918301918301611463565b509695505050505050565b600082601f83011261149657600080fd5b813567ffffffffffffffff8111156114b0576114b0611376565b6040516114e560207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85011601826113a5565b8181528460208386010111156114fa57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561152f57600080fd5b61153886611237565b945061154660208701611237565b9350604086013567ffffffffffffffff8082111561156357600080fd5b61156f89838a01611414565b9450606088013591508082111561158557600080fd5b61159189838a01611414565b935060808801359150808211156115a757600080fd5b506115b488828901611485565b9150509295509295909350565b600080604083850312156115d457600080fd5b823567ffffffffffffffff808211156115ec57600080fd5b818501915085601f83011261160057600080fd5b8135602061160d826113f0565b60405161161a82826113a5565b83815260059390931b850182019282810191508984111561163a57600080fd5b948201945b8386101561165f5761165086611237565b8252948201949082019061163f565b9650508601359250508082111561167557600080fd5b5061168285828601611414565b9150509250929050565b600081518084526020808501945080840160005b838110156116bc578151875295820195908201906001016116a0565b509495945050505050565b6020815260006112d8602083018461168c565b600080604083850312156116ed57600080fd5b6116f683611237565b91506020830135801515811461170b57600080fd5b809150509250929050565b6000806040838503121561172957600080fd5b61173283611237565b915061174060208401611237565b90509250929050565b600080600080600060a0868803121561176157600080fd5b61176a86611237565b945061177860208701611237565b93506040860135925060608601359150608086013567ffffffffffffffff8111156117a257600080fd5b6115b488828901611485565b600181811c908216806117c257607f821691505b6020821081036117fb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361189057611890611830565b5060010190565b600082198211156118aa576118aa611830565b500190565b6040815260006118c2604083018561168c565b82810360208401526118d4818561168c565b95945050505050565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525060a0604083015261191660a083018661168c565b8281036060840152611928818661168c565b9050828103608084015261193c81856112f8565b98975050505050505050565b60006020828403121561195a57600080fd5b81516112d88161128a565b600060033d111561197e5760046000803e5060005160e01c5b90565b600060443d101561198f5790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff81602484011181841117156119dd57505050505090565b82850191508151818111156119f55750505050505090565b843d8701016020828501011115611a0f5750505050505090565b611a1e602082860101876113a5565b509095945050505050565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525084604083015283606083015260a06080830152611a6e60a08301846112f8565b97965050505050505056fea26469706673582212203cbad807d9a3820b640c82b29a67e3dac9a284719039fbbf5a2694cadd91450264736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0x1260 JUMP JUMPDEST PUSH2 0x199 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0x12BB JUMP JUMPDEST PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0x12DF JUMP JUMPDEST PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x1363 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0x1517 JUMP JUMPDEST PUSH2 0x3EF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0x15C1 JUMP JUMPDEST PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0x16DA JUMP JUMPDEST PUSH2 0x610 JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0x1716 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x194 CALLDATASIZE PUSH1 0x4 PUSH2 0x1749 JUMP JUMPDEST PUSH2 0x61F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x243 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x309 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x355 JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x36A SWAP1 PUSH2 0x17AE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x396 SWAP1 PUSH2 0x17AE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND CALLER EQ DUP1 PUSH2 0x418 JUMPI POP PUSH2 0x418 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x4A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F776E6572206E6F7220617070726F7665640000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x23A JUMP JUMPDEST PUSH2 0x4B1 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x6E1 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x54B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x23A JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x567 JUMPI PUSH2 0x567 PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x590 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x608 JUMPI PUSH2 0x5DB DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5B4 JUMPI PUSH2 0x5B4 PUSH2 0x1801 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5CE JUMPI PUSH2 0x5CE PUSH2 0x1801 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x199 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5ED JUMPI PUSH2 0x5ED PUSH2 0x1801 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x601 DUP2 PUSH2 0x185F JUMP JUMPDEST SWAP1 POP PUSH2 0x596 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x61B CALLER DUP4 DUP4 PUSH2 0xA1B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND CALLER EQ DUP1 PUSH2 0x648 JUMPI POP PUSH2 0x648 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x6D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20617070726F7665640000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x23A JUMP JUMPDEST PUSH2 0x4B1 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xB6E JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x772 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x23A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x815 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x23A JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x986 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x836 JUMPI PUSH2 0x836 PUSH2 0x1801 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x854 JUMPI PUSH2 0x854 PUSH2 0x1801 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x921 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x23A JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x96B SWAP1 DUP5 SWAP1 PUSH2 0x1897 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x97F SWAP1 PUSH2 0x185F JUMP JUMPDEST SWAP1 POP PUSH2 0x819 JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x9FD SWAP3 SWAP2 SWAP1 PUSH2 0x18AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA13 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xDAC JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x23A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0xC11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x23A JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0xC1D DUP6 PUSH2 0x103F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC2A DUP6 PUSH2 0x103F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0xCEA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x23A JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0xD34 SWAP1 DUP5 SWAP1 PUSH2 0x1897 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xDA1 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x108A JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND EXTCODESIZE ISZERO PUSH2 0xA13 JUMPI PUSH1 0x40 MLOAD PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xE23 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x18DD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xE7C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xE79 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1948 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xF65 JUMPI PUSH2 0xE88 PUSH2 0x1965 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xEDB JUMPI POP PUSH2 0xE9C PUSH2 0x1981 JUMP JUMPDEST DUP1 PUSH2 0xEA7 JUMPI POP PUSH2 0xEDD JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x1363 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x23A JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 EQ PUSH2 0x1036 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x23A JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1079 JUMPI PUSH2 0x1079 PUSH2 0x1801 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND EXTCODESIZE ISZERO PUSH2 0xA13 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x1101 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A29 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x115A JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1157 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1948 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1166 JUMPI PUSH2 0xE88 PUSH2 0x1965 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 EQ PUSH2 0x1036 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x23A JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x125B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1273 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x127C DUP4 PUSH2 0x1237 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x12B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x12D8 DUP2 PUSH2 0x128A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x131E JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1302 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1330 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x12D8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12F8 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x13E9 JUMPI PUSH2 0x13E9 PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x140A JUMPI PUSH2 0x140A PUSH2 0x1376 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1432 DUP3 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143F DUP3 DUP3 PUSH2 0x13A5 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x145F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x147A JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1463 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14B0 JUMPI PUSH2 0x14B0 PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E5 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP6 ADD AND ADD DUP3 PUSH2 0x13A5 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x14FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x152F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1538 DUP7 PUSH2 0x1237 JUMP JUMPDEST SWAP5 POP PUSH2 0x1546 PUSH1 0x20 DUP8 ADD PUSH2 0x1237 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156F DUP10 DUP4 DUP11 ADD PUSH2 0x1414 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1585 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1591 DUP10 DUP4 DUP11 ADD PUSH2 0x1414 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x15A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B4 DUP9 DUP3 DUP10 ADD PUSH2 0x1485 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x15EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1600 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x160D DUP3 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x161A DUP3 DUP3 PUSH2 0x13A5 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x163A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x165F JUMPI PUSH2 0x1650 DUP7 PUSH2 0x1237 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x163F JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x1675 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1682 DUP6 DUP3 DUP7 ADD PUSH2 0x1414 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16BC JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x16A0 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x12D8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x168C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16F6 DUP4 PUSH2 0x1237 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x170B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1729 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1732 DUP4 PUSH2 0x1237 JUMP JUMPDEST SWAP2 POP PUSH2 0x1740 PUSH1 0x20 DUP5 ADD PUSH2 0x1237 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1761 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x176A DUP7 PUSH2 0x1237 JUMP JUMPDEST SWAP5 POP PUSH2 0x1778 PUSH1 0x20 DUP8 ADD PUSH2 0x1237 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15B4 DUP9 DUP3 DUP10 ADD PUSH2 0x1485 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x17C2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x17FB JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1890 JUMPI PUSH2 0x1890 PUSH2 0x1830 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x18AA JUMPI PUSH2 0x18AA PUSH2 0x1830 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x18C2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x168C JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x18D4 DUP2 DUP6 PUSH2 0x168C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1916 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x168C JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1928 DUP2 DUP7 PUSH2 0x168C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x193C DUP2 DUP6 PUSH2 0x12F8 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x195A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x12D8 DUP2 PUSH2 0x128A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x197E JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x198F JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP1 RETURNDATASIZE ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x19DD JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x19F5 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1A0F JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1A1E PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x13A5 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1A6E PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x12F8 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY 0xBA 0xD8 SMOD 0xD9 LOG3 DUP3 SIGNEXTEND PUSH5 0xC82B29A67 0xE3 0xDA 0xC9 LOG2 DUP5 PUSH18 0x9039FBBF5A2694CADD91450264736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "570:16550:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2185:228;;;;;;:::i;:::-;;:::i;:::-;;;620:25:12;;;608:2;593:18;2185:228:0;;;;;;;;1236:305;;;;;;:::i;:::-;;:::i;:::-;;;1253:14:12;;1246:22;1228:41;;1216:2;1201:18;1236:305:0;1088:187:12;1940:103:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4060:430::-;;;;;;:::i;:::-;;:::i;:::-;;2570:508;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3146:153::-;;;;;;:::i;:::-;;:::i;3366:166::-;;;;;;:::i;:::-;3488:27;;;;3465:4;3488:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3366:166;3599:389;;;;;;:::i;:::-;;:::i;2185:228::-;2271:7;2298:21;;;2290:77;;;;;;;8561:2:12;2290:77:0;;;8543:21:12;8600:2;8580:18;;;8573:30;8639:34;8619:18;;;8612:62;8710:13;8690:18;;;8683:41;8741:19;;2290:77:0;;;;;;;;;-1:-1:-1;2384:9:0;:13;;;;;;;;;;;:22;;;;;;;;;;;;;2185:228::o;1236:305::-;1338:4;1373:41;;;1388:26;1373:41;;:109;;-1:-1:-1;1430:52:0;;;1445:37;1430:52;1373:109;:161;;;-1:-1:-1;952:25:8;937:40;;;;1498:36:0;1354:180;1236:305;-1:-1:-1;;1236:305:0:o;1940:103::-;2000:13;2032:4;2025:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1940:103;;;:::o;4060:430::-;4285:20;;;719:10:6;4285:20:0;;:60;;-1:-1:-1;4309:36:0;4326:4;719:10:6;3366:166:0;:::i;4309:36::-;4264:157;;;;;;;9415:2:12;4264:157:0;;;9397:21:12;9454:2;9434:18;;;9427:30;9493:34;9473:18;;;9466:62;9564:20;9544:18;;;9537:48;9602:19;;4264:157:0;9213:414:12;4264:157:0;4431:52;4454:4;4460:2;4464:3;4469:7;4478:4;4431:22;:52::i;:::-;4060:430;;;;;:::o;2570:508::-;2721:16;2780:3;:10;2761:8;:15;:29;2753:83;;;;;;;9834:2:12;2753:83:0;;;9816:21:12;9873:2;9853:18;;;9846:30;9912:34;9892:18;;;9885:62;9983:11;9963:18;;;9956:39;10012:19;;2753:83:0;9632:405:12;2753:83:0;2847:30;2894:8;:15;2880:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2880:30:0;;2847:63;;2926:9;2921:120;2945:8;:15;2941:1;:19;2921:120;;;3000:30;3010:8;3019:1;3010:11;;;;;;;;:::i;:::-;;;;;;;3023:3;3027:1;3023:6;;;;;;;;:::i;:::-;;;;;;;3000:9;:30::i;:::-;2981:13;2995:1;2981:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2962:3;;;:::i;:::-;;;2921:120;;;-1:-1:-1;3058:13:0;2570:508;-1:-1:-1;;;2570:508:0:o;3146:153::-;3240:52;719:10:6;3273:8:0;3283;3240:18;:52::i;:::-;3146:153;;:::o;3599:389::-;3799:20;;;719:10:6;3799:20:0;;:60;;-1:-1:-1;3823:36:0;3840:4;719:10:6;3366:166:0;:::i;3823:36::-;3778:148;;;;;;;10822:2:12;3778:148:0;;;10804:21:12;10861:2;10841:18;;;10834:30;10900:34;10880:18;;;10873:62;10971:11;10951:18;;;10944:39;11000:19;;3778:148:0;10620:405:12;3778:148:0;3936:45;3954:4;3960:2;3964;3968:6;3976:4;3936:17;:45::i;6233:1115::-;6453:7;:14;6439:3;:10;:28;6431:81;;;;;;;11232:2:12;6431:81:0;;;11214:21:12;11271:2;11251:18;;;11244:30;11310:34;11290:18;;;11283:62;11381:10;11361:18;;;11354:38;11409:19;;6431:81:0;11030:404:12;6431:81:0;6530:16;;;6522:66;;;;;;;11641:2:12;6522:66:0;;;11623:21:12;11680:2;11660:18;;;11653:30;11719:34;11699:18;;;11692:62;11790:7;11770:18;;;11763:35;11815:19;;6522:66:0;11439:401:12;6522:66:0;719:10:6;6599:16:0;6712:411;6736:3;:10;6732:1;:14;6712:411;;;6767:10;6780:3;6784:1;6780:6;;;;;;;;:::i;:::-;;;;;;;6767:19;;6800:14;6817:7;6825:1;6817:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6842:19;6864:13;;;;;;;;;;:19;;;;;;;;;;;;;6817:10;;-1:-1:-1;6905:21:0;;;;6897:76;;;;;;;12047:2:12;6897:76:0;;;12029:21:12;12086:2;12066:18;;;12059:30;12125:34;12105:18;;;12098:62;12196:12;12176:18;;;12169:40;12226:19;;6897:76:0;11845:406:12;6897:76:0;7015:9;:13;;;;;;;;;;;:19;;;;;;;;;;;7037:20;;;7015:42;;7085:17;;;;;;;:27;;7037:20;;7015:9;7085:27;;7037:20;;7085:27;:::i;:::-;;;;;;;;6753:370;;;6748:3;;;;:::i;:::-;;;6712:411;;;;7168:2;7138:47;;7162:4;7138:47;;7152:8;7138:47;;;7172:3;7177:7;7138:47;;;;;;;:::i;:::-;;;;;;;;7266:75;7302:8;7312:4;7318:2;7322:3;7327:7;7336:4;7266:35;:75::i;:::-;6421:927;6233:1115;;;;;:::o;12773:323::-;12923:8;12914:17;;:5;:17;;;12906:71;;;;;;;13061:2:12;12906:71:0;;;13043:21:12;13100:2;13080:18;;;13073:30;13139:34;13119:18;;;13112:62;13210:11;13190:18;;;13183:39;13239:19;;12906:71:0;12859:405:12;12906:71:0;12987:25;;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;;;;;;;;;;;;13048:41;;1228::12;;;13048::0;;1201:18:12;13048:41:0;;;;;;;12773:323;;;:::o;4940:947::-;5121:16;;;5113:66;;;;;;;11641:2:12;5113:66:0;;;11623:21:12;11680:2;11660:18;;;11653:30;11719:34;11699:18;;;11692:62;11790:7;11770:18;;;11763:35;11815:19;;5113:66:0;11439:401:12;5113:66:0;719:10:6;5190:16:0;5254:21;5272:2;5254:17;:21::i;:::-;5231:44;;5285:24;5312:25;5330:6;5312:17;:25::i;:::-;5285:52;;5419:19;5441:13;;;;;;;;;;;:19;;;;;;;;;;;5478:21;;;;5470:76;;;;;;;12047:2:12;5470:76:0;;;12029:21:12;12086:2;12066:18;;;12059:30;12125:34;12105:18;;;12098:62;12196:12;12176:18;;;12169:40;12226:19;;5470:76:0;11845:406:12;5470:76:0;5580:9;:13;;;;;;;;;;;:19;;;;;;;;;;;5602:20;;;5580:42;;5642:17;;;;;;;:27;;5602:20;;5580:9;5642:27;;5602:20;;5642:27;:::i;:::-;;;;-1:-1:-1;;5685:46:0;;;13443:25:12;;;13499:2;13484:18;;13477:34;;;5685:46:0;;;;;;;;;;;;;;;13416:18:12;5685:46:0;;;;;;;5812:68;5843:8;5853:4;5859:2;5863;5867:6;5875:4;5812:30;:68::i;:::-;5103:784;;;;4940:947;;;;;:::o;16127:792::-;16359:13;;;1465:19:5;:23;16355:558:0;;16394:79;;;;;:43;;;;;;:79;;16438:8;;16448:4;;16454:3;;16459:7;;16468:4;;16394:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16394:79:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;16390:513;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;16779:6;16772:14;;;;;;;;;;;:::i;16390:513::-;;;16826:62;;;;;15753:2:12;16826:62:0;;;15735:21:12;15792:2;15772:18;;;15765:30;15831:34;15811:18;;;15804:62;15902:22;15882:18;;;15875:50;15942:19;;16826:62:0;15551:416:12;16390:513:0;16552:60;;;16564:48;16552:60;16548:157;;16636:50;;;;;16174:2:12;16636:50:0;;;16156:21:12;16213:2;16193:18;;;16186:30;16252:34;16232:18;;;16225:62;16323:10;16303:18;;;16296:38;16351:19;;16636:50:0;15972:404:12;16548:157:0;16474:245;16127:792;;;;;;:::o;16925:193::-;17044:16;;;17058:1;17044:16;;;;;;;;;16991;;17019:22;;17044:16;;;;;;;;;;;;-1:-1:-1;17044:16:0;17019:41;;17081:7;17070:5;17076:1;17070:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;17106:5;16925:193;-1:-1:-1;;16925:193:0:o;15396:725::-;15603:13;;;1465:19:5;:23;15599:516:0;;15638:72;;;;;:38;;;;;;:72;;15677:8;;15687:4;;15693:2;;15697:6;;15705:4;;15638:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15638:72:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15634:471;;;;:::i;:::-;15759:55;;;15771:43;15759:55;15755:152;;15838:50;;;;;16174:2:12;15838:50:0;;;16156:21:12;16213:2;16193:18;;;16186:30;16252:34;16232:18;;;16225:62;16323:10;16303:18;;;16296:38;16351:19;;15838:50:0;15972:404:12;14:196;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:254::-;283:6;291;344:2;332:9;323:7;319:23;315:32;312:52;;;360:1;357;350:12;312:52;383:29;402:9;383:29;:::i;:::-;373:39;459:2;444:18;;;;431:32;;-1:-1:-1;;;215:254:12:o;656:177::-;741:66;734:5;730:78;723:5;720:89;710:117;;823:1;820;813:12;710:117;656:177;:::o;838:245::-;896:6;949:2;937:9;928:7;924:23;920:32;917:52;;;965:1;962;955:12;917:52;1004:9;991:23;1023:30;1047:5;1023:30;:::i;:::-;1072:5;838:245;-1:-1:-1;;;838:245:12:o;1280:180::-;1339:6;1392:2;1380:9;1371:7;1367:23;1363:32;1360:52;;;1408:1;1405;1398:12;1360:52;-1:-1:-1;1431:23:12;;1280:180;-1:-1:-1;1280:180:12:o;1465:531::-;1507:3;1545:5;1539:12;1572:6;1567:3;1560:19;1597:1;1607:162;1621:6;1618:1;1615:13;1607:162;;;1683:4;1739:13;;;1735:22;;1729:29;1711:11;;;1707:20;;1700:59;1636:12;1607:162;;;1787:6;1784:1;1781:13;1778:87;;;1853:1;1846:4;1837:6;1832:3;1828:16;1824:27;1817:38;1778:87;-1:-1:-1;1910:2:12;1898:15;1915:66;1894:88;1885:98;;;;1985:4;1881:109;;1465:531;-1:-1:-1;;1465:531:12:o;2001:220::-;2150:2;2139:9;2132:21;2113:4;2170:45;2211:2;2200:9;2196:18;2188:6;2170:45;:::i;2226:184::-;2278:77;2275:1;2268:88;2375:4;2372:1;2365:15;2399:4;2396:1;2389:15;2415:308;2521:66;2516:2;2510:4;2506:13;2502:86;2494:6;2490:99;2655:6;2643:10;2640:22;2619:18;2607:10;2604:34;2601:62;2598:88;;;2666:18;;:::i;:::-;2702:2;2695:22;-1:-1:-1;;2415:308:12:o;2728:183::-;2788:4;2821:18;2813:6;2810:30;2807:56;;;2843:18;;:::i;:::-;-1:-1:-1;2888:1:12;2884:14;2900:4;2880:25;;2728:183::o;2916:724::-;2970:5;3023:3;3016:4;3008:6;3004:17;3000:27;2990:55;;3041:1;3038;3031:12;2990:55;3077:6;3064:20;3103:4;3126:43;3166:2;3126:43;:::i;:::-;3198:2;3192:9;3210:31;3238:2;3230:6;3210:31;:::i;:::-;3276:18;;;3368:1;3364:10;;;;3352:23;;3348:32;;;3310:15;;;;-1:-1:-1;3392:15:12;;;3389:35;;;3420:1;3417;3410:12;3389:35;3456:2;3448:6;3444:15;3468:142;3484:6;3479:3;3476:15;3468:142;;;3550:17;;3538:30;;3588:12;;;;3501;;3468:142;;;-1:-1:-1;3628:6:12;2916:724;-1:-1:-1;;;;;;2916:724:12:o;3645:614::-;3687:5;3740:3;3733:4;3725:6;3721:17;3717:27;3707:55;;3758:1;3755;3748:12;3707:55;3794:6;3781:20;3820:18;3816:2;3813:26;3810:52;;;3842:18;;:::i;:::-;3891:2;3885:9;3903:126;4023:4;3954:66;3947:4;3943:2;3939:13;3935:86;3931:97;3923:6;3903:126;:::i;:::-;4053:2;4045:6;4038:18;4099:3;4092:4;4087:2;4079:6;4075:15;4071:26;4068:35;4065:55;;;4116:1;4113;4106:12;4065:55;4180:2;4173:4;4165:6;4161:17;4154:4;4146:6;4142:17;4129:54;4227:1;4203:15;;;4220:4;4199:26;4192:37;;;;4207:6;3645:614;-1:-1:-1;;;3645:614:12:o;4264:943::-;4418:6;4426;4434;4442;4450;4503:3;4491:9;4482:7;4478:23;4474:33;4471:53;;;4520:1;4517;4510:12;4471:53;4543:29;4562:9;4543:29;:::i;:::-;4533:39;;4591:38;4625:2;4614:9;4610:18;4591:38;:::i;:::-;4581:48;;4680:2;4669:9;4665:18;4652:32;4703:18;4744:2;4736:6;4733:14;4730:34;;;4760:1;4757;4750:12;4730:34;4783:61;4836:7;4827:6;4816:9;4812:22;4783:61;:::i;:::-;4773:71;;4897:2;4886:9;4882:18;4869:32;4853:48;;4926:2;4916:8;4913:16;4910:36;;;4942:1;4939;4932:12;4910:36;4965:63;5020:7;5009:8;4998:9;4994:24;4965:63;:::i;:::-;4955:73;;5081:3;5070:9;5066:19;5053:33;5037:49;;5111:2;5101:8;5098:16;5095:36;;;5127:1;5124;5117:12;5095:36;;5150:51;5193:7;5182:8;5171:9;5167:24;5150:51;:::i;:::-;5140:61;;;4264:943;;;;;;;;:::o;5212:1208::-;5330:6;5338;5391:2;5379:9;5370:7;5366:23;5362:32;5359:52;;;5407:1;5404;5397:12;5359:52;5447:9;5434:23;5476:18;5517:2;5509:6;5506:14;5503:34;;;5533:1;5530;5523:12;5503:34;5571:6;5560:9;5556:22;5546:32;;5616:7;5609:4;5605:2;5601:13;5597:27;5587:55;;5638:1;5635;5628:12;5587:55;5674:2;5661:16;5696:4;5719:43;5759:2;5719:43;:::i;:::-;5791:2;5785:9;5803:31;5831:2;5823:6;5803:31;:::i;:::-;5869:18;;;5957:1;5953:10;;;;5945:19;;5941:28;;;5903:15;;;;-1:-1:-1;5981:19:12;;;5978:39;;;6013:1;6010;6003:12;5978:39;6037:11;;;;6057:148;6073:6;6068:3;6065:15;6057:148;;;6139:23;6158:3;6139:23;:::i;:::-;6127:36;;6090:12;;;;6183;;;;6057:148;;;6224:6;-1:-1:-1;;6268:18:12;;6255:32;;-1:-1:-1;;6299:16:12;;;6296:36;;;6328:1;6325;6318:12;6296:36;;6351:63;6406:7;6395:8;6384:9;6380:24;6351:63;:::i;:::-;6341:73;;;5212:1208;;;;;:::o;6425:435::-;6478:3;6516:5;6510:12;6543:6;6538:3;6531:19;6569:4;6598:2;6593:3;6589:12;6582:19;;6635:2;6628:5;6624:14;6656:1;6666:169;6680:6;6677:1;6674:13;6666:169;;;6741:13;;6729:26;;6775:12;;;;6810:15;;;;6702:1;6695:9;6666:169;;;-1:-1:-1;6851:3:12;;6425:435;-1:-1:-1;;;;;6425:435:12:o;6865:261::-;7044:2;7033:9;7026:21;7007:4;7064:56;7116:2;7105:9;7101:18;7093:6;7064:56;:::i;7131:347::-;7196:6;7204;7257:2;7245:9;7236:7;7232:23;7228:32;7225:52;;;7273:1;7270;7263:12;7225:52;7296:29;7315:9;7296:29;:::i;:::-;7286:39;;7375:2;7364:9;7360:18;7347:32;7422:5;7415:13;7408:21;7401:5;7398:32;7388:60;;7444:1;7441;7434:12;7388:60;7467:5;7457:15;;;7131:347;;;;;:::o;7483:260::-;7551:6;7559;7612:2;7600:9;7591:7;7587:23;7583:32;7580:52;;;7628:1;7625;7618:12;7580:52;7651:29;7670:9;7651:29;:::i;:::-;7641:39;;7699:38;7733:2;7722:9;7718:18;7699:38;:::i;:::-;7689:48;;7483:260;;;;;:::o;7748:606::-;7852:6;7860;7868;7876;7884;7937:3;7925:9;7916:7;7912:23;7908:33;7905:53;;;7954:1;7951;7944:12;7905:53;7977:29;7996:9;7977:29;:::i;:::-;7967:39;;8025:38;8059:2;8048:9;8044:18;8025:38;:::i;:::-;8015:48;;8110:2;8099:9;8095:18;8082:32;8072:42;;8161:2;8150:9;8146:18;8133:32;8123:42;;8216:3;8205:9;8201:19;8188:33;8244:18;8236:6;8233:30;8230:50;;;8276:1;8273;8266:12;8230:50;8299:49;8340:7;8331:6;8320:9;8316:22;8299:49;:::i;8771:437::-;8850:1;8846:12;;;;8893;;;8914:61;;8968:4;8960:6;8956:17;8946:27;;8914:61;9021:2;9013:6;9010:14;8990:18;8987:38;8984:218;;9058:77;9055:1;9048:88;9159:4;9156:1;9149:15;9187:4;9184:1;9177:15;8984:218;;8771:437;;;:::o;10042:184::-;10094:77;10091:1;10084:88;10191:4;10188:1;10181:15;10215:4;10212:1;10205:15;10231:184;10283:77;10280:1;10273:88;10380:4;10377:1;10370:15;10404:4;10401:1;10394:15;10420:195;10459:3;10490:66;10483:5;10480:77;10477:103;;10560:18;;:::i;:::-;-1:-1:-1;10607:1:12;10596:13;;10420:195::o;12256:128::-;12296:3;12327:1;12323:6;12320:1;12317:13;12314:39;;;12333:18;;:::i;:::-;-1:-1:-1;12369:9:12;;12256:128::o;12389:465::-;12646:2;12635:9;12628:21;12609:4;12672:56;12724:2;12713:9;12709:18;12701:6;12672:56;:::i;:::-;12776:9;12768:6;12764:22;12759:2;12748:9;12744:18;12737:50;12804:44;12841:6;12833;12804:44;:::i;:::-;12796:52;12389:465;-1:-1:-1;;;;;12389:465:12:o;13522:850::-;13844:4;13873:42;13954:2;13946:6;13942:15;13931:9;13924:34;14006:2;13998:6;13994:15;13989:2;13978:9;13974:18;13967:43;;14046:3;14041:2;14030:9;14026:18;14019:31;14073:57;14125:3;14114:9;14110:19;14102:6;14073:57;:::i;:::-;14178:9;14170:6;14166:22;14161:2;14150:9;14146:18;14139:50;14212:44;14249:6;14241;14212:44;:::i;:::-;14198:58;;14305:9;14297:6;14293:22;14287:3;14276:9;14272:19;14265:51;14333:33;14359:6;14351;14333:33;:::i;:::-;14325:41;13522:850;-1:-1:-1;;;;;;;;13522:850:12:o;14377:249::-;14446:6;14499:2;14487:9;14478:7;14474:23;14470:32;14467:52;;;14515:1;14512;14505:12;14467:52;14547:9;14541:16;14566:30;14590:5;14566:30;:::i;14631:179::-;14666:3;14708:1;14690:16;14687:23;14684:120;;;14754:1;14751;14748;14733:23;-1:-1:-1;14791:1:12;14785:8;14780:3;14776:18;14684:120;14631:179;:::o;14815:731::-;14854:3;14896:4;14878:16;14875:26;14872:39;;;14815:731;:::o;14872:39::-;14938:2;14932:9;14960:66;15081:2;15063:16;15059:25;15056:1;15050:4;15035:50;15114:4;15108:11;15138:16;15173:18;15244:2;15237:4;15229:6;15225:17;15222:25;15217:2;15209:6;15206:14;15203:45;15200:58;;;15251:5;;;;;14815:731;:::o;15200:58::-;15288:6;15282:4;15278:17;15267:28;;15324:3;15318:10;15351:2;15343:6;15340:14;15337:27;;;15357:5;;;;;;14815:731;:::o;15337:27::-;15441:2;15422:16;15416:4;15412:27;15408:36;15401:4;15392:6;15387:3;15383:16;15379:27;15376:69;15373:82;;;15448:5;;;;;;14815:731;:::o;15373:82::-;15464:57;15515:4;15506:6;15498;15494:19;15490:30;15484:4;15464:57;:::i;:::-;-1:-1:-1;15537:3:12;;14815:731;-1:-1:-1;;;;;14815:731:12:o;16381:584::-;16603:4;16632:42;16713:2;16705:6;16701:15;16690:9;16683:34;16765:2;16757:6;16753:15;16748:2;16737:9;16733:18;16726:43;;16805:6;16800:2;16789:9;16785:18;16778:34;16848:6;16843:2;16832:9;16828:18;16821:34;16892:3;16886;16875:9;16871:19;16864:32;16913:46;16954:3;16943:9;16939:19;16931:6;16913:46;:::i;:::-;16905:54;16381:584;-1:-1:-1;;;;;;;16381:584:12:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1366200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "2636",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26654",
								"supportsInterface(bytes4)": "466",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeTransferFrom(address,address,uint256,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1107,
									"end": 1169,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1157,
									"end": 1161,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1149,
									"end": 1156,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1149,
									"end": 1162,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8171,
									"end": 8257,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 8171,
									"end": 8257,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8241,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 8237,
									"end": 8241,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 8237,
									"end": 8250,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8171,
									"end": 8257,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8171,
									"end": 8257,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 570,
									"end": 17120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 570,
									"end": 17120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 146,
									"end": 1233,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 146,
									"end": 1233,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 259,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 300,
									"end": 302,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 288,
									"end": 297,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 279,
									"end": 286,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 275,
									"end": 298,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 271,
									"end": 303,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 268,
									"end": 320,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 268,
									"end": 320,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 268,
									"end": 320,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 316,
									"end": 317,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 314,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 306,
									"end": 318,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 268,
									"end": 320,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 268,
									"end": 320,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 343,
									"end": 359,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 343,
									"end": 359,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 408,
									"end": 422,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 408,
									"end": 422,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 408,
									"end": 422,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 405,
									"end": 439,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 405,
									"end": 439,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 405,
									"end": 439,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 435,
									"end": 436,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 433,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 425,
									"end": 437,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 405,
									"end": 439,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 405,
									"end": 439,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 448,
									"end": 480,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 448,
									"end": 480,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 518,
									"end": 525,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 511,
									"end": 515,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 507,
									"end": 509,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 503,
									"end": 516,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 499,
									"end": 526,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 489,
									"end": 544,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 489,
									"end": 544,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 540,
									"end": 541,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 537,
									"end": 538,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 530,
									"end": 542,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 489,
									"end": 544,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 489,
									"end": 544,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 569,
									"end": 571,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 563,
									"end": 572,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 591,
									"end": 593,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 587,
									"end": 589,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 584,
									"end": 594,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 581,
									"end": 617,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 581,
									"end": 617,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 581,
									"end": 617,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 597,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 597,
									"end": 615,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 597,
									"end": 615,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 666,
									"end": 675,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 640,
									"end": 642,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 726,
									"end": 739,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 726,
									"end": 739,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 722,
									"end": 744,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 722,
									"end": 744,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 722,
									"end": 744,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 746,
									"end": 748,
									"name": "PUSH",
									"source": 12,
									"value": "3F"
								},
								{
									"begin": 718,
									"end": 749,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 714,
									"end": 754,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 702,
									"end": 755,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 702,
									"end": 755,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 702,
									"end": 755,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 770,
									"end": 788,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 770,
									"end": 788,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 770,
									"end": 788,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 790,
									"end": 812,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 790,
									"end": 812,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 790,
									"end": 812,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 767,
									"end": 813,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 764,
									"end": 836,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 764,
									"end": 836,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 764,
									"end": 836,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 816,
									"end": 834,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 816,
									"end": 834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 816,
									"end": 834,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 856,
									"end": 866,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 852,
									"end": 854,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 845,
									"end": 867,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 891,
									"end": 893,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 883,
									"end": 889,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 876,
									"end": 894,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 931,
									"end": 938,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 926,
									"end": 928,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 921,
									"end": 923,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 917,
									"end": 919,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 913,
									"end": 924,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 909,
									"end": 929,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 906,
									"end": 939,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 903,
									"end": 956,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 903,
									"end": 956,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 903,
									"end": 956,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 952,
									"end": 953,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 949,
									"end": 950,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 942,
									"end": 954,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 903,
									"end": 956,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 903,
									"end": 956,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 974,
									"end": 975,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 965,
									"end": 975,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 965,
									"end": 975,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 995,
									"end": 996,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 992,
									"end": 1001,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1082,
									"end": 1101,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1082,
									"end": 1101,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1076,
									"end": 1102,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1051,
									"end": 1074,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1051,
									"end": 1074,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1044,
									"end": 1103,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1131,
									"end": 1133,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1128,
									"end": 1129,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1125,
									"end": 1134,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1190,
									"end": 1191,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1185,
									"end": 1187,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1180,
									"end": 1182,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1172,
									"end": 1178,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1168,
									"end": 1183,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1164,
									"end": 1188,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1157,
									"end": 1192,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1221,
									"end": 1227,
									"name": "SWAP9",
									"source": 12
								},
								{
									"begin": 146,
									"end": 1233,
									"name": "SWAP8",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1233,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1317,
									"end": 1318,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1313,
									"end": 1325,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1313,
									"end": 1325,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1313,
									"end": 1325,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1313,
									"end": 1325,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1360,
									"end": 1372,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1360,
									"end": 1372,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1360,
									"end": 1372,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1381,
									"end": 1442,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1442,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1435,
									"end": 1439,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 1427,
									"end": 1433,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1423,
									"end": 1440,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1413,
									"end": 1440,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1413,
									"end": 1440,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1381,
									"end": 1442,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1442,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1488,
									"end": 1490,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1480,
									"end": 1486,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1477,
									"end": 1491,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1457,
									"end": 1475,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1454,
									"end": 1492,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1534,
									"end": 1544,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 1529,
									"end": 1532,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 1525,
									"end": 1545,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1522,
									"end": 1523,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1515,
									"end": 1546,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1569,
									"end": 1573,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1566,
									"end": 1567,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1559,
									"end": 1574,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1597,
									"end": 1601,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1594,
									"end": 1595,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1587,
									"end": 1602,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1238,
									"end": 1618,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203cbad807d9a3820b640c82b29a67e3dac9a284719039fbbf5a2694cadd91450264736f6c634300080e0033",
									".code": [
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2185,
											"end": 2413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2185,
											"end": 2413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 620,
											"end": 645,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 620,
											"end": 645,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 620,
											"end": 645,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 608,
											"end": 610,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 593,
											"end": 611,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1236,
											"end": 1541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1236,
											"end": 1541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1253,
											"end": 1267,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1253,
											"end": 1267,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1246,
											"end": 1268,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1228,
											"end": 1269,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1228,
											"end": 1269,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1216,
											"end": 1218,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1219,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1088,
											"end": 1275,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1940,
											"end": 2043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1940,
											"end": 2043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1940,
											"end": 2043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4060,
											"end": 4490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4060,
											"end": 4490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2570,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2570,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2570,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3146,
											"end": 3299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3146,
											"end": 3299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3366,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3506,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3599,
											"end": 3988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3599,
											"end": 3988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2271,
											"end": 2278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8561,
											"end": 8563,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8543,
											"end": 8564,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8600,
											"end": 8602,
											"name": "PUSH",
											"source": 12,
											"value": "2B"
										},
										{
											"begin": 8580,
											"end": 8598,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8580,
											"end": 8598,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8580,
											"end": 8598,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8573,
											"end": 8603,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8639,
											"end": 8673,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 8619,
											"end": 8637,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 8619,
											"end": 8637,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8619,
											"end": 8637,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8612,
											"end": 8674,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8710,
											"end": 8723,
											"name": "PUSH",
											"source": 12,
											"value": "65726F2061646472657373000000000000000000000000000000000000000000"
										},
										{
											"begin": 8690,
											"end": 8708,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 8690,
											"end": 8708,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8690,
											"end": 8708,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8683,
											"end": 8724,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8741,
											"end": 8760,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 8741,
											"end": 8760,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2384,
											"end": 2393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1414,
											"name": "PUSH",
											"source": 0,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1498,
											"end": 1534,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1498,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1534,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1236,
											"end": 1541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2000,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2032,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2025,
											"end": 2036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2025,
											"end": 2036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4285,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4285,
											"end": 4345,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4309,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4326,
											"end": 4330,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3366,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4309,
											"end": 4345,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4309,
											"end": 4345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9415,
											"end": 9417,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9397,
											"end": 9418,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9454,
											"end": 9456,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 9434,
											"end": 9452,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9434,
											"end": 9452,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9434,
											"end": 9452,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9427,
											"end": 9457,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9493,
											"end": 9527,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 9473,
											"end": 9491,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 9473,
											"end": 9491,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9473,
											"end": 9491,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9466,
											"end": 9528,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9564,
											"end": 9584,
											"name": "PUSH",
											"source": 12,
											"value": "6F776E6572206E6F7220617070726F7665640000000000000000000000000000"
										},
										{
											"begin": 9544,
											"end": 9562,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 9544,
											"end": 9562,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9544,
											"end": 9562,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9537,
											"end": 9585,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9602,
											"end": 9621,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 9602,
											"end": 9621,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 9213,
											"end": 9627,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4454,
											"end": 4458,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4460,
											"end": 4462,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4467,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4476,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4482,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4431,
											"end": 4483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4483,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4431,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2737,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2780,
											"end": 2783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2780,
											"end": 2790,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2769,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2790,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9834,
											"end": 9836,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9816,
											"end": 9837,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9873,
											"end": 9875,
											"name": "PUSH",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 9853,
											"end": 9871,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9853,
											"end": 9871,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9853,
											"end": 9871,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9846,
											"end": 9876,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9912,
											"end": 9946,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 9892,
											"end": 9910,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 9892,
											"end": 9910,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9892,
											"end": 9910,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9885,
											"end": 9947,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9983,
											"end": 9994,
											"name": "PUSH",
											"source": 12,
											"value": "206D69736D617463680000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9963,
											"end": 9981,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 9963,
											"end": 9981,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9963,
											"end": 9981,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9956,
											"end": 9995,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10012,
											"end": 10031,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 10012,
											"end": 10031,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 9632,
											"end": 10037,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2847,
											"end": 2877,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2902,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 2909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2880,
											"end": 2910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2847,
											"end": 2910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2847,
											"end": 2910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2926,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 2953,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 2960,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2941,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2941,
											"end": 2960,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3000,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3010,
											"end": 3018,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3020,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3010,
											"end": 3021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3026,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3027,
											"end": 3028,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3023,
											"end": 3029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3000,
											"end": 3030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3000,
											"end": 3030,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3000,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2994,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 2996,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2981,
											"end": 2997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 3030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2962,
											"end": 2965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3058,
											"end": 3071,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 3078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3240,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3273,
											"end": 3281,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3283,
											"end": 3291,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3240,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3240,
											"end": 3292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3240,
											"end": 3292,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3240,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3799,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3799,
											"end": 3859,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3823,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3840,
											"end": 3844,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3366,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3859,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3823,
											"end": 3859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10822,
											"end": 10824,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10804,
											"end": 10825,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10861,
											"end": 10863,
											"name": "PUSH",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 10841,
											"end": 10859,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10841,
											"end": 10859,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10841,
											"end": 10859,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10834,
											"end": 10864,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10900,
											"end": 10934,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 10880,
											"end": 10898,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 10880,
											"end": 10898,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10880,
											"end": 10898,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10873,
											"end": 10935,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10971,
											"end": 10982,
											"name": "PUSH",
											"source": 12,
											"value": "20617070726F7665640000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10951,
											"end": 10969,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 10951,
											"end": 10969,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10951,
											"end": 10969,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10944,
											"end": 10983,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11000,
											"end": 11019,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 11000,
											"end": 11019,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 10620,
											"end": 11025,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3936,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3954,
											"end": 3958,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3960,
											"end": 3962,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3964,
											"end": 3966,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3968,
											"end": 3974,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 3980,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3936,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 3936,
											"end": 3981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6453,
											"end": 6460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6453,
											"end": 6467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6439,
											"end": 6442,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6439,
											"end": 6449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6439,
											"end": 6467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11232,
											"end": 11234,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11214,
											"end": 11235,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11271,
											"end": 11273,
											"name": "PUSH",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 11251,
											"end": 11269,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11251,
											"end": 11269,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11251,
											"end": 11269,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11244,
											"end": 11274,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11310,
											"end": 11344,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 11290,
											"end": 11308,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 11290,
											"end": 11308,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11290,
											"end": 11308,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11283,
											"end": 11345,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11381,
											"end": 11391,
											"name": "PUSH",
											"source": 12,
											"value": "6D69736D61746368000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11361,
											"end": 11379,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 11361,
											"end": 11379,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11361,
											"end": 11379,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11354,
											"end": 11392,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11409,
											"end": 11428,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 11409,
											"end": 11428,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 11030,
											"end": 11434,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11641,
											"end": 11643,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11623,
											"end": 11644,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11680,
											"end": 11682,
											"name": "PUSH",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 11660,
											"end": 11678,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11660,
											"end": 11678,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11660,
											"end": 11678,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11653,
											"end": 11683,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11719,
											"end": 11753,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 11699,
											"end": 11717,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 11699,
											"end": 11717,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11699,
											"end": 11717,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11692,
											"end": 11754,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11790,
											"end": 11797,
											"name": "PUSH",
											"source": 12,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11770,
											"end": 11788,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 11770,
											"end": 11788,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11770,
											"end": 11788,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11763,
											"end": 11798,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11815,
											"end": 11834,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 11815,
											"end": 11834,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 11439,
											"end": 11840,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6599,
											"end": 6615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6736,
											"end": 6739,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6736,
											"end": 6746,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6746,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 6777,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6780,
											"end": 6783,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6785,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6780,
											"end": 6786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 6786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 6786,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6817,
											"end": 6824,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6825,
											"end": 6826,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6817,
											"end": 6827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6861,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6905,
											"end": 6926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6905,
											"end": 6926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6905,
											"end": 6926,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6905,
											"end": 6926,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12047,
											"end": 12049,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12029,
											"end": 12050,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12086,
											"end": 12088,
											"name": "PUSH",
											"source": 12,
											"value": "2A"
										},
										{
											"begin": 12066,
											"end": 12084,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 12066,
											"end": 12084,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12066,
											"end": 12084,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12059,
											"end": 12089,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12125,
											"end": 12159,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 12105,
											"end": 12123,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 12105,
											"end": 12123,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12105,
											"end": 12123,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12098,
											"end": 12160,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12196,
											"end": 12208,
											"name": "PUSH",
											"source": 12,
											"value": "72207472616E7366657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 12176,
											"end": 12194,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 12176,
											"end": 12194,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12176,
											"end": 12194,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12169,
											"end": 12209,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12226,
											"end": 12245,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 12226,
											"end": 12245,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 11845,
											"end": 12251,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7057,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 7085,
											"end": 7112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6753,
											"end": 7123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6753,
											"end": 7123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6753,
											"end": 7123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6748,
											"end": 6751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7168,
											"end": 7170,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7162,
											"end": 7166,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7160,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7172,
											"end": 7175,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7177,
											"end": 7184,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 7138,
											"end": 7185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7266,
											"end": 7341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 7302,
											"end": 7310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7312,
											"end": 7316,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7318,
											"end": 7320,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7322,
											"end": 7325,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7327,
											"end": 7334,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7340,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7266,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 7266,
											"end": 7341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7266,
											"end": 7341,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 7266,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6421,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12923,
											"end": 12931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12914,
											"end": 12919,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13061,
											"end": 13063,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13064,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13100,
											"end": 13102,
											"name": "PUSH",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 13080,
											"end": 13098,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 13080,
											"end": 13098,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13080,
											"end": 13098,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13073,
											"end": 13103,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13139,
											"end": 13173,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 13119,
											"end": 13137,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 13119,
											"end": 13137,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13119,
											"end": 13137,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13112,
											"end": 13174,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13210,
											"end": 13221,
											"name": "PUSH",
											"source": 12,
											"value": "20666F722073656C660000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13190,
											"end": 13208,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 13190,
											"end": 13208,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13190,
											"end": 13208,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13183,
											"end": 13222,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13239,
											"end": 13258,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 13239,
											"end": 13258,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 12859,
											"end": 13264,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13005,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1228,
											"end": 1269,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1228,
											"end": 1269,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1228,
											"end": 1269,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1219,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12773,
											"end": 13096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11641,
											"end": 11643,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11623,
											"end": 11644,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11680,
											"end": 11682,
											"name": "PUSH",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 11660,
											"end": 11678,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11660,
											"end": 11678,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11660,
											"end": 11678,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11653,
											"end": 11683,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11719,
											"end": 11753,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 11699,
											"end": 11717,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 11699,
											"end": 11717,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11699,
											"end": 11717,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11692,
											"end": 11754,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11790,
											"end": 11797,
											"name": "PUSH",
											"source": 12,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11770,
											"end": 11788,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 11770,
											"end": 11788,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11770,
											"end": 11788,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11763,
											"end": 11798,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11815,
											"end": 11834,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 11815,
											"end": 11834,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 11439,
											"end": 11840,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5190,
											"end": 5206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5272,
											"end": 5274,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5254,
											"end": 5275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5231,
											"end": 5275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5231,
											"end": 5275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5285,
											"end": 5309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 5330,
											"end": 5336,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5312,
											"end": 5329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5312,
											"end": 5337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5285,
											"end": 5337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5285,
											"end": 5337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5499,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5499,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5499,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12047,
											"end": 12049,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12029,
											"end": 12050,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12086,
											"end": 12088,
											"name": "PUSH",
											"source": 12,
											"value": "2A"
										},
										{
											"begin": 12066,
											"end": 12084,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 12066,
											"end": 12084,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12066,
											"end": 12084,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12059,
											"end": 12089,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12125,
											"end": 12159,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 12105,
											"end": 12123,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 12105,
											"end": 12123,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12105,
											"end": 12123,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12098,
											"end": 12160,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12196,
											"end": 12208,
											"name": "PUSH",
											"source": 12,
											"value": "72207472616E7366657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 12176,
											"end": 12194,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 12176,
											"end": 12194,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12176,
											"end": 12194,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12169,
											"end": 12209,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12226,
											"end": 12245,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 12226,
											"end": 12245,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 11845,
											"end": 12251,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5622,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5642,
											"end": 5669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13443,
											"end": 13468,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 13443,
											"end": 13468,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13443,
											"end": 13468,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13499,
											"end": 13501,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13484,
											"end": 13502,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13484,
											"end": 13502,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13477,
											"end": 13511,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 13477,
											"end": 13511,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13477,
											"end": 13511,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13416,
											"end": 13434,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 5843,
											"end": 5851,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5857,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5859,
											"end": 5861,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5863,
											"end": 5865,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5867,
											"end": 5873,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5875,
											"end": 5879,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 5812,
											"end": 5880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5880,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 5812,
											"end": 5880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16359,
											"end": 16372,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16359,
											"end": 16372,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16359,
											"end": 16372,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 16355,
											"end": 16913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 16355,
											"end": 16913,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C8100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16438,
											"end": 16446,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 16438,
											"end": 16446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16448,
											"end": 16452,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 16448,
											"end": 16452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16454,
											"end": 16457,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16454,
											"end": 16457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16459,
											"end": 16466,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16459,
											"end": 16466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16468,
											"end": 16472,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16468,
											"end": 16472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 16394,
											"end": 16473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 16394,
											"end": 16473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 16390,
											"end": 16903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A0"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 16390,
											"end": 16903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16779,
											"end": 16785,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 16772,
											"end": 16786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15753,
											"end": 15755,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15735,
											"end": 15756,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15792,
											"end": 15794,
											"name": "PUSH",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 15772,
											"end": 15790,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 15772,
											"end": 15790,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15772,
											"end": 15790,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15765,
											"end": 15795,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15831,
											"end": 15865,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 15811,
											"end": 15829,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 15811,
											"end": 15829,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15811,
											"end": 15829,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15804,
											"end": 15866,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15902,
											"end": 15924,
											"name": "PUSH",
											"source": 12,
											"value": "526563656976657220696D706C656D656E746572000000000000000000000000"
										},
										{
											"begin": 15882,
											"end": 15900,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 15882,
											"end": 15900,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15882,
											"end": 15900,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15875,
											"end": 15925,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15942,
											"end": 15961,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 15942,
											"end": 15961,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 15551,
											"end": 15967,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16552,
											"end": 16612,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16552,
											"end": 16612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16552,
											"end": 16612,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16564,
											"end": 16612,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C8100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16552,
											"end": 16612,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16548,
											"end": 16705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 16548,
											"end": 16705,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16174,
											"end": 16176,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16156,
											"end": 16177,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16213,
											"end": 16215,
											"name": "PUSH",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 16193,
											"end": 16211,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 16193,
											"end": 16211,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16193,
											"end": 16211,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16186,
											"end": 16216,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16252,
											"end": 16286,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 16232,
											"end": 16250,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 16232,
											"end": 16250,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16232,
											"end": 16250,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16225,
											"end": 16287,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16323,
											"end": 16333,
											"name": "PUSH",
											"source": 12,
											"value": "6420746F6B656E73000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16303,
											"end": 16321,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 16303,
											"end": 16321,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16303,
											"end": 16321,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16351,
											"end": 16370,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 16351,
											"end": 16370,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 15972,
											"end": 16376,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16548,
											"end": 16705,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 16548,
											"end": 16705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16474,
											"end": 16719,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16127,
											"end": 16919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 17118,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 16925,
											"end": 17118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17058,
											"end": 17059,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16991,
											"end": 17007,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16991,
											"end": 17007,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17019,
											"end": 17041,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17019,
											"end": 17041,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17019,
											"end": 17060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17019,
											"end": 17060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17081,
											"end": 17088,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17076,
											"end": 17077,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 17070,
											"end": 17078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17088,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17106,
											"end": 17111,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 17118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16925,
											"end": 17118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15396,
											"end": 16121,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 15396,
											"end": 16121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15603,
											"end": 15616,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15603,
											"end": 15616,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15603,
											"end": 15616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15599,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 15599,
											"end": 16115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E6100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15685,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15687,
											"end": 15691,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 15687,
											"end": 15691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15693,
											"end": 15695,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15693,
											"end": 15695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15697,
											"end": 15703,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15697,
											"end": 15703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15705,
											"end": 15709,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15705,
											"end": 15709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 15638,
											"end": 15710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 15638,
											"end": 15710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 15634,
											"end": 16105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15759,
											"end": 15814,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15759,
											"end": 15814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15759,
											"end": 15814,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15771,
											"end": 15814,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E6100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15759,
											"end": 15814,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15755,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 15755,
											"end": 15907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16174,
											"end": 16176,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16156,
											"end": 16177,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16213,
											"end": 16215,
											"name": "PUSH",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 16193,
											"end": 16211,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 16193,
											"end": 16211,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16193,
											"end": 16211,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16186,
											"end": 16216,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16252,
											"end": 16286,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 16232,
											"end": 16250,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 16232,
											"end": 16250,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16232,
											"end": 16250,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16225,
											"end": 16287,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16323,
											"end": 16333,
											"name": "PUSH",
											"source": 12,
											"value": "6420746F6B656E73000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16303,
											"end": 16321,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 16303,
											"end": 16321,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16303,
											"end": 16321,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16296,
											"end": 16334,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16351,
											"end": 16370,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 16351,
											"end": 16370,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 15972,
											"end": 16376,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14,
											"end": 210,
											"name": "tag",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 142,
											"end": 184,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 131,
											"end": 185,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 131,
											"end": 185,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 121,
											"end": 186,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 121,
											"end": 186,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 111,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 111,
											"end": 204,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 200,
											"end": 201,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 198,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 190,
											"end": 202,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 111,
											"end": 204,
											"name": "tag",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 111,
											"end": 204,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14,
											"end": 210,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14,
											"end": 210,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14,
											"end": 210,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14,
											"end": 210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 215,
											"end": 469,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 215,
											"end": 469,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 283,
											"end": 289,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 297,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 344,
											"end": 346,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 323,
											"end": 330,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 319,
											"end": 342,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 315,
											"end": 347,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 312,
											"end": 364,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 312,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 312,
											"end": 364,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 360,
											"end": 361,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 358,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 350,
											"end": 362,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 312,
											"end": 364,
											"name": "tag",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 312,
											"end": 364,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 383,
											"end": 412,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 402,
											"end": 411,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 383,
											"end": 412,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 383,
											"end": 412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 383,
											"end": 412,
											"name": "tag",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 383,
											"end": 412,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 373,
											"end": 412,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 459,
											"end": 461,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 444,
											"end": 462,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 444,
											"end": 462,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 444,
											"end": 462,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 444,
											"end": 462,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 431,
											"end": 463,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 431,
											"end": 463,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 215,
											"end": 469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 656,
											"end": 833,
											"name": "tag",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 656,
											"end": 833,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 741,
											"end": 807,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 734,
											"end": 739,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 730,
											"end": 808,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 723,
											"end": 728,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 720,
											"end": 809,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 710,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 710,
											"end": 827,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 821,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 813,
											"end": 825,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 710,
											"end": 827,
											"name": "tag",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 710,
											"end": 827,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 656,
											"end": 833,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 656,
											"end": 833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 838,
											"end": 1083,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 838,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 896,
											"end": 902,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 917,
											"end": 969,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 917,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 917,
											"end": 969,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 965,
											"end": 966,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 962,
											"end": 963,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 955,
											"end": 967,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 917,
											"end": 969,
											"name": "tag",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 917,
											"end": 969,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1004,
											"end": 1013,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 991,
											"end": 1014,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1023,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 1047,
											"end": 1052,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1023,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 1023,
											"end": 1053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1023,
											"end": 1053,
											"name": "tag",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 1023,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1072,
											"end": 1077,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 838,
											"end": 1083,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 838,
											"end": 1083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1280,
											"end": 1460,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 1280,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1339,
											"end": 1345,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1394,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1389,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1371,
											"end": 1378,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1367,
											"end": 1390,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1395,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1412,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 1360,
											"end": 1412,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1408,
											"end": 1409,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1406,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1398,
											"end": 1410,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1412,
											"name": "tag",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 1360,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1431,
											"end": 1454,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1431,
											"end": 1454,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1280,
											"end": 1460,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1280,
											"end": 1460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1465,
											"end": 1996,
											"name": "tag",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 1465,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1507,
											"end": 1510,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 1550,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1539,
											"end": 1551,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1572,
											"end": 1578,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1567,
											"end": 1570,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1560,
											"end": 1579,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1597,
											"end": 1598,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1607,
											"end": 1769,
											"name": "tag",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 1607,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1627,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1619,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1607,
											"end": 1769,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1607,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 1607,
											"end": 1769,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1683,
											"end": 1687,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1739,
											"end": 1752,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1739,
											"end": 1752,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1739,
											"end": 1752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1735,
											"end": 1757,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1735,
											"end": 1757,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1758,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1711,
											"end": 1722,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1711,
											"end": 1722,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1711,
											"end": 1722,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1707,
											"end": 1727,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1707,
											"end": 1727,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1700,
											"end": 1759,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1636,
											"end": 1648,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1607,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 1607,
											"end": 1769,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1607,
											"end": 1769,
											"name": "tag",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 1607,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1787,
											"end": 1793,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1784,
											"end": 1785,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1781,
											"end": 1794,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1778,
											"end": 1865,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1778,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 1778,
											"end": 1865,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1853,
											"end": 1854,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1850,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1832,
											"end": 1835,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1828,
											"end": 1844,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1824,
											"end": 1851,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1817,
											"end": 1855,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1778,
											"end": 1865,
											"name": "tag",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 1778,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1910,
											"end": 1912,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1898,
											"end": 1913,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1915,
											"end": 1981,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 1894,
											"end": 1982,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1885,
											"end": 1983,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1885,
											"end": 1983,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1885,
											"end": 1983,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1885,
											"end": 1983,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1985,
											"end": 1989,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1881,
											"end": 1990,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1881,
											"end": 1990,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1465,
											"end": 1996,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1465,
											"end": 1996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2001,
											"end": 2221,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 2001,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2150,
											"end": 2152,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2139,
											"end": 2148,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2132,
											"end": 2153,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2113,
											"end": 2117,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 2211,
											"end": 2213,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2200,
											"end": 2209,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2196,
											"end": 2214,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2188,
											"end": 2194,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2170,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 2170,
											"end": 2215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2226,
											"end": 2410,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 2226,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2278,
											"end": 2355,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2275,
											"end": 2276,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2356,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2375,
											"end": 2379,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 2372,
											"end": 2373,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2380,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2399,
											"end": 2403,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2396,
											"end": 2397,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2389,
											"end": 2404,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2415,
											"end": 2723,
											"name": "tag",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 2415,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2521,
											"end": 2587,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 2516,
											"end": 2518,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2510,
											"end": 2514,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2506,
											"end": 2519,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2502,
											"end": 2588,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2494,
											"end": 2500,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2490,
											"end": 2589,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2655,
											"end": 2661,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2643,
											"end": 2653,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2640,
											"end": 2662,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2607,
											"end": 2617,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2604,
											"end": 2638,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2601,
											"end": 2663,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2598,
											"end": 2686,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2598,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 2598,
											"end": 2686,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2666,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 2666,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 2666,
											"end": 2684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2666,
											"end": 2684,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 2666,
											"end": 2684,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2702,
											"end": 2704,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2695,
											"end": 2717,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2415,
											"end": 2723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2728,
											"end": 2911,
											"name": "tag",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 2728,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2788,
											"end": 2792,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2821,
											"end": 2839,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2813,
											"end": 2819,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2810,
											"end": 2840,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2807,
											"end": 2863,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2807,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 2807,
											"end": 2863,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2843,
											"end": 2861,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 2843,
											"end": 2861,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 2843,
											"end": 2861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2843,
											"end": 2861,
											"name": "tag",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 2843,
											"end": 2861,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2888,
											"end": 2889,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 2884,
											"end": 2898,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2900,
											"end": 2904,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2905,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2880,
											"end": 2905,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2728,
											"end": 2911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2916,
											"end": 3640,
											"name": "tag",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 2916,
											"end": 3640,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2970,
											"end": 2975,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3023,
											"end": 3026,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3016,
											"end": 3020,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3004,
											"end": 3021,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3027,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2990,
											"end": 3045,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 2990,
											"end": 3045,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3041,
											"end": 3042,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3038,
											"end": 3039,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3031,
											"end": 3043,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2990,
											"end": 3045,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 2990,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3077,
											"end": 3083,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3064,
											"end": 3084,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3103,
											"end": 3107,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3126,
											"end": 3169,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 3166,
											"end": 3168,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3126,
											"end": 3169,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 3126,
											"end": 3169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3126,
											"end": 3169,
											"name": "tag",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 3126,
											"end": 3169,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3198,
											"end": 3200,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3192,
											"end": 3201,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 3238,
											"end": 3240,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3230,
											"end": 3236,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 3210,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3241,
											"name": "tag",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 3210,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3276,
											"end": 3294,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3276,
											"end": 3294,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3276,
											"end": 3294,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 3369,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 3364,
											"end": 3374,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3364,
											"end": 3374,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3364,
											"end": 3374,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3364,
											"end": 3374,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 3352,
											"end": 3375,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3352,
											"end": 3375,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3348,
											"end": 3380,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3348,
											"end": 3380,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3348,
											"end": 3380,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3310,
											"end": 3325,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3310,
											"end": 3325,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3310,
											"end": 3325,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3310,
											"end": 3325,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3392,
											"end": 3407,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3392,
											"end": 3407,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3392,
											"end": 3407,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3389,
											"end": 3424,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3389,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 3389,
											"end": 3424,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3420,
											"end": 3421,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3417,
											"end": 3418,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3410,
											"end": 3422,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3389,
											"end": 3424,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 3389,
											"end": 3424,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3456,
											"end": 3458,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3448,
											"end": 3454,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3459,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3468,
											"end": 3610,
											"name": "tag",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 3468,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3490,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3479,
											"end": 3482,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3476,
											"end": 3491,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3468,
											"end": 3610,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3468,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 3468,
											"end": 3610,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3550,
											"end": 3567,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3550,
											"end": 3567,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3538,
											"end": 3568,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3538,
											"end": 3568,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3600,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3600,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3600,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3600,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3501,
											"end": 3513,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3501,
											"end": 3513,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3468,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 3468,
											"end": 3610,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3468,
											"end": 3610,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 3468,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3628,
											"end": 3634,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 2916,
											"end": 3640,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2916,
											"end": 3640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3645,
											"end": 4259,
											"name": "tag",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 3645,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3687,
											"end": 3692,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3740,
											"end": 3743,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3733,
											"end": 3737,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3725,
											"end": 3731,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3721,
											"end": 3738,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3717,
											"end": 3744,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3707,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 3707,
											"end": 3762,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3758,
											"end": 3759,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3755,
											"end": 3756,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3748,
											"end": 3760,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3707,
											"end": 3762,
											"name": "tag",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 3707,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3794,
											"end": 3800,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3781,
											"end": 3801,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3816,
											"end": 3818,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3813,
											"end": 3839,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3810,
											"end": 3862,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3810,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 3810,
											"end": 3862,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3842,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 3842,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 3842,
											"end": 3860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3842,
											"end": 3860,
											"name": "tag",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 3842,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3891,
											"end": 3893,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3885,
											"end": 3894,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3903,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 4023,
											"end": 4027,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3954,
											"end": 4020,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 3947,
											"end": 3951,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3943,
											"end": 3945,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3939,
											"end": 3952,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3935,
											"end": 4021,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3931,
											"end": 4028,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3923,
											"end": 3929,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3903,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 3903,
											"end": 4029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3903,
											"end": 4029,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 3903,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4053,
											"end": 4055,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4045,
											"end": 4051,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4038,
											"end": 4056,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4099,
											"end": 4102,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4092,
											"end": 4096,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4087,
											"end": 4089,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4079,
											"end": 4085,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4090,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4071,
											"end": 4097,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4068,
											"end": 4103,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4120,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 4065,
											"end": 4120,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4116,
											"end": 4117,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4113,
											"end": 4114,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4106,
											"end": 4118,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4120,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 4065,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4180,
											"end": 4182,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4165,
											"end": 4171,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4161,
											"end": 4178,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4146,
											"end": 4152,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4142,
											"end": 4159,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4129,
											"end": 4183,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 4227,
											"end": 4228,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4203,
											"end": 4218,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4218,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4218,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4220,
											"end": 4224,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4199,
											"end": 4225,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4192,
											"end": 4229,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4192,
											"end": 4229,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4192,
											"end": 4229,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4192,
											"end": 4229,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4207,
											"end": 4213,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3645,
											"end": 4259,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3645,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4264,
											"end": 5207,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 4264,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4418,
											"end": 4424,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4426,
											"end": 4432,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4434,
											"end": 4440,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4442,
											"end": 4448,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4450,
											"end": 4456,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4503,
											"end": 4506,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 4491,
											"end": 4500,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4482,
											"end": 4489,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4474,
											"end": 4507,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4471,
											"end": 4524,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4471,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 4471,
											"end": 4524,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4520,
											"end": 4521,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4517,
											"end": 4518,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4510,
											"end": 4522,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4471,
											"end": 4524,
											"name": "tag",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 4471,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4543,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 4562,
											"end": 4571,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4543,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 4543,
											"end": 4572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4543,
											"end": 4572,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 4543,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4533,
											"end": 4572,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 4533,
											"end": 4572,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4591,
											"end": 4629,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 4625,
											"end": 4627,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4614,
											"end": 4623,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4610,
											"end": 4628,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4591,
											"end": 4629,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 4591,
											"end": 4629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4591,
											"end": 4629,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 4591,
											"end": 4629,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4581,
											"end": 4629,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4581,
											"end": 4629,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4680,
											"end": 4682,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4669,
											"end": 4678,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4665,
											"end": 4683,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4684,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4703,
											"end": 4721,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4744,
											"end": 4746,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4736,
											"end": 4742,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4733,
											"end": 4747,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4730,
											"end": 4764,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4730,
											"end": 4764,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 4730,
											"end": 4764,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4760,
											"end": 4761,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4757,
											"end": 4758,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4750,
											"end": 4762,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4730,
											"end": 4764,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 4730,
											"end": 4764,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4783,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 4836,
											"end": 4843,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 4827,
											"end": 4833,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4816,
											"end": 4825,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 4812,
											"end": 4834,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4783,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 4783,
											"end": 4844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4783,
											"end": 4844,
											"name": "tag",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 4783,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4773,
											"end": 4844,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 4773,
											"end": 4844,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4897,
											"end": 4899,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4886,
											"end": 4895,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4882,
											"end": 4900,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4869,
											"end": 4901,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4853,
											"end": 4901,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4853,
											"end": 4901,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4926,
											"end": 4928,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4916,
											"end": 4924,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4913,
											"end": 4929,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4910,
											"end": 4946,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4910,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 4910,
											"end": 4946,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4942,
											"end": 4943,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4939,
											"end": 4940,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4932,
											"end": 4944,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4910,
											"end": 4946,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 4910,
											"end": 4946,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4965,
											"end": 5028,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 5020,
											"end": 5027,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 5009,
											"end": 5017,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4998,
											"end": 5007,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 4994,
											"end": 5018,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4965,
											"end": 5028,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 4965,
											"end": 5028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4965,
											"end": 5028,
											"name": "tag",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 4965,
											"end": 5028,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4955,
											"end": 5028,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4955,
											"end": 5028,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5081,
											"end": 5084,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 5070,
											"end": 5079,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 5066,
											"end": 5085,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5053,
											"end": 5086,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5037,
											"end": 5086,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5037,
											"end": 5086,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5111,
											"end": 5113,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5101,
											"end": 5109,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5114,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5095,
											"end": 5131,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5095,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 5095,
											"end": 5131,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5127,
											"end": 5128,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5124,
											"end": 5125,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5117,
											"end": 5129,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5095,
											"end": 5131,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 5095,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5095,
											"end": 5131,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5150,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 5193,
											"end": 5200,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 5182,
											"end": 5190,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5171,
											"end": 5180,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 5167,
											"end": 5191,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5150,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 5150,
											"end": 5201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5150,
											"end": 5201,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 5150,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5140,
											"end": 5201,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5140,
											"end": 5201,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5140,
											"end": 5201,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4264,
											"end": 5207,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4264,
											"end": 5207,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 4264,
											"end": 5207,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4264,
											"end": 5207,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4264,
											"end": 5207,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 4264,
											"end": 5207,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4264,
											"end": 5207,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4264,
											"end": 5207,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4264,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5212,
											"end": 6420,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 5212,
											"end": 6420,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5330,
											"end": 5336,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5338,
											"end": 5344,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5391,
											"end": 5393,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5379,
											"end": 5388,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5370,
											"end": 5377,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5366,
											"end": 5389,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5362,
											"end": 5394,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5359,
											"end": 5411,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5359,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 5359,
											"end": 5411,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5407,
											"end": 5408,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5404,
											"end": 5405,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5397,
											"end": 5409,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5359,
											"end": 5411,
											"name": "tag",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 5359,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5447,
											"end": 5456,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5434,
											"end": 5457,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5517,
											"end": 5519,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5509,
											"end": 5515,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5506,
											"end": 5520,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5503,
											"end": 5537,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5503,
											"end": 5537,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 5503,
											"end": 5537,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5533,
											"end": 5534,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5530,
											"end": 5531,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5523,
											"end": 5535,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5503,
											"end": 5537,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 5503,
											"end": 5537,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5571,
											"end": 5577,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5560,
											"end": 5569,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5556,
											"end": 5578,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5546,
											"end": 5578,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5546,
											"end": 5578,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5616,
											"end": 5623,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5609,
											"end": 5613,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 5605,
											"end": 5607,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5601,
											"end": 5614,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5597,
											"end": 5624,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5587,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 5587,
											"end": 5642,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5638,
											"end": 5639,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5635,
											"end": 5636,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5628,
											"end": 5640,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5587,
											"end": 5642,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 5587,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5674,
											"end": 5676,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5661,
											"end": 5677,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5696,
											"end": 5700,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5719,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 5759,
											"end": 5761,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5719,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 5719,
											"end": 5762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5719,
											"end": 5762,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 5719,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5791,
											"end": 5793,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5785,
											"end": 5794,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5803,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 5831,
											"end": 5833,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5823,
											"end": 5829,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5803,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 5803,
											"end": 5834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5803,
											"end": 5834,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 5803,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5869,
											"end": 5887,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5869,
											"end": 5887,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5869,
											"end": 5887,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5957,
											"end": 5958,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 5953,
											"end": 5963,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5953,
											"end": 5963,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5953,
											"end": 5963,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5953,
											"end": 5963,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 5945,
											"end": 5964,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5945,
											"end": 5964,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5941,
											"end": 5969,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5941,
											"end": 5969,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5941,
											"end": 5969,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5903,
											"end": 5918,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5903,
											"end": 5918,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5903,
											"end": 5918,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5903,
											"end": 5918,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5981,
											"end": 6000,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 5981,
											"end": 6000,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5981,
											"end": 6000,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5978,
											"end": 6017,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5978,
											"end": 6017,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 5978,
											"end": 6017,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6013,
											"end": 6014,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6010,
											"end": 6011,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6003,
											"end": 6015,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5978,
											"end": 6017,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 5978,
											"end": 6017,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6037,
											"end": 6048,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6037,
											"end": 6048,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6037,
											"end": 6048,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6037,
											"end": 6048,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6057,
											"end": 6205,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 6057,
											"end": 6205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6073,
											"end": 6079,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6068,
											"end": 6071,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6065,
											"end": 6080,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 6057,
											"end": 6205,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6057,
											"end": 6205,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 6057,
											"end": 6205,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6139,
											"end": 6162,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 6158,
											"end": 6161,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6139,
											"end": 6162,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 6139,
											"end": 6162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6139,
											"end": 6162,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 6139,
											"end": 6162,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6127,
											"end": 6163,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6127,
											"end": 6163,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6090,
											"end": 6102,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6090,
											"end": 6102,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6090,
											"end": 6102,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6090,
											"end": 6102,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6183,
											"end": 6195,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6183,
											"end": 6195,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6183,
											"end": 6195,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6183,
											"end": 6195,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6057,
											"end": 6205,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 6057,
											"end": 6205,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6057,
											"end": 6205,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 6057,
											"end": 6205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6224,
											"end": 6230,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6268,
											"end": 6286,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6268,
											"end": 6286,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6255,
											"end": 6287,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6255,
											"end": 6287,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6299,
											"end": 6315,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6299,
											"end": 6315,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6299,
											"end": 6315,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6296,
											"end": 6332,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6296,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 6296,
											"end": 6332,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6328,
											"end": 6329,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6325,
											"end": 6326,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6318,
											"end": 6330,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6296,
											"end": 6332,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 6296,
											"end": 6332,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6296,
											"end": 6332,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6351,
											"end": 6414,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 6406,
											"end": 6413,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6395,
											"end": 6403,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6384,
											"end": 6393,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6380,
											"end": 6404,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6351,
											"end": 6414,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 6351,
											"end": 6414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6351,
											"end": 6414,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 6351,
											"end": 6414,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6341,
											"end": 6414,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6341,
											"end": 6414,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6341,
											"end": 6414,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5212,
											"end": 6420,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5212,
											"end": 6420,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5212,
											"end": 6420,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5212,
											"end": 6420,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5212,
											"end": 6420,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5212,
											"end": 6420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6425,
											"end": 6860,
											"name": "tag",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 6425,
											"end": 6860,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6478,
											"end": 6481,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6516,
											"end": 6521,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6510,
											"end": 6522,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6543,
											"end": 6549,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6538,
											"end": 6541,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6531,
											"end": 6550,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6569,
											"end": 6573,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6598,
											"end": 6600,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6593,
											"end": 6596,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6589,
											"end": 6601,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6582,
											"end": 6601,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6582,
											"end": 6601,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6635,
											"end": 6637,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6628,
											"end": 6633,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6624,
											"end": 6638,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6656,
											"end": 6657,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6666,
											"end": 6835,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 6666,
											"end": 6835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6680,
											"end": 6686,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6677,
											"end": 6678,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6674,
											"end": 6687,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 6666,
											"end": 6835,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6666,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 6666,
											"end": 6835,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6741,
											"end": 6754,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6741,
											"end": 6754,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6729,
											"end": 6755,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6729,
											"end": 6755,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6775,
											"end": 6787,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 6775,
											"end": 6787,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6775,
											"end": 6787,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6775,
											"end": 6787,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 6810,
											"end": 6825,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6810,
											"end": 6825,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6810,
											"end": 6825,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6810,
											"end": 6825,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6702,
											"end": 6703,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 6695,
											"end": 6704,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6666,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 6666,
											"end": 6835,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6666,
											"end": 6835,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 6666,
											"end": 6835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6851,
											"end": 6854,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6851,
											"end": 6854,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 6425,
											"end": 6860,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6425,
											"end": 6860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6865,
											"end": 7126,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 6865,
											"end": 7126,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7044,
											"end": 7046,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7033,
											"end": 7042,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7026,
											"end": 7047,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7007,
											"end": 7011,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7064,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 7116,
											"end": 7118,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7105,
											"end": 7114,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7101,
											"end": 7119,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7093,
											"end": 7099,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7064,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 7064,
											"end": 7120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7131,
											"end": 7478,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 7131,
											"end": 7478,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7196,
											"end": 7202,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7204,
											"end": 7210,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7257,
											"end": 7259,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7245,
											"end": 7254,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7236,
											"end": 7243,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7232,
											"end": 7255,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7228,
											"end": 7260,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7225,
											"end": 7277,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7225,
											"end": 7277,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 7225,
											"end": 7277,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7273,
											"end": 7274,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7270,
											"end": 7271,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7263,
											"end": 7275,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7225,
											"end": 7277,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 7225,
											"end": 7277,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7296,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 7315,
											"end": 7324,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7296,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 7296,
											"end": 7325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7296,
											"end": 7325,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 7296,
											"end": 7325,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7286,
											"end": 7325,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7286,
											"end": 7325,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7375,
											"end": 7377,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7364,
											"end": 7373,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7360,
											"end": 7378,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7347,
											"end": 7379,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7422,
											"end": 7427,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7415,
											"end": 7428,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7408,
											"end": 7429,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7401,
											"end": 7406,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7398,
											"end": 7430,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 7388,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 7388,
											"end": 7448,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7444,
											"end": 7445,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7441,
											"end": 7442,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7434,
											"end": 7446,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7388,
											"end": 7448,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 7388,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7467,
											"end": 7472,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7457,
											"end": 7472,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7457,
											"end": 7472,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7457,
											"end": 7472,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7131,
											"end": 7478,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7131,
											"end": 7478,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7131,
											"end": 7478,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7131,
											"end": 7478,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7131,
											"end": 7478,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7131,
											"end": 7478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7483,
											"end": 7743,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 7483,
											"end": 7743,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7551,
											"end": 7557,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7559,
											"end": 7565,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7612,
											"end": 7614,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7600,
											"end": 7609,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7591,
											"end": 7598,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7587,
											"end": 7610,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7583,
											"end": 7615,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7580,
											"end": 7632,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7580,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 7580,
											"end": 7632,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7628,
											"end": 7629,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7626,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7618,
											"end": 7630,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7580,
											"end": 7632,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 7580,
											"end": 7632,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7651,
											"end": 7680,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 7670,
											"end": 7679,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7651,
											"end": 7680,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 7651,
											"end": 7680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7651,
											"end": 7680,
											"name": "tag",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 7651,
											"end": 7680,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7641,
											"end": 7680,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7641,
											"end": 7680,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7699,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 7733,
											"end": 7735,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7722,
											"end": 7731,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7718,
											"end": 7736,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7699,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 7699,
											"end": 7737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7699,
											"end": 7737,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 7699,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7689,
											"end": 7737,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7689,
											"end": 7737,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7483,
											"end": 7743,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7483,
											"end": 7743,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7483,
											"end": 7743,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7483,
											"end": 7743,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7483,
											"end": 7743,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7483,
											"end": 7743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7748,
											"end": 8354,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 7748,
											"end": 8354,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7852,
											"end": 7858,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7860,
											"end": 7866,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7868,
											"end": 7874,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7876,
											"end": 7882,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7884,
											"end": 7890,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7937,
											"end": 7940,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 7925,
											"end": 7934,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7916,
											"end": 7923,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 7912,
											"end": 7935,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7908,
											"end": 7941,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7905,
											"end": 7958,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7905,
											"end": 7958,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 7905,
											"end": 7958,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7954,
											"end": 7955,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7951,
											"end": 7952,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7944,
											"end": 7956,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7905,
											"end": 7958,
											"name": "tag",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 7905,
											"end": 7958,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7977,
											"end": 8006,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 7996,
											"end": 8005,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7977,
											"end": 8006,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 7977,
											"end": 8006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7977,
											"end": 8006,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 7977,
											"end": 8006,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7967,
											"end": 8006,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 7967,
											"end": 8006,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8025,
											"end": 8063,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 8059,
											"end": 8061,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8048,
											"end": 8057,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8044,
											"end": 8062,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8025,
											"end": 8063,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 8025,
											"end": 8063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8025,
											"end": 8063,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 8025,
											"end": 8063,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8015,
											"end": 8063,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 8015,
											"end": 8063,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8110,
											"end": 8112,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8099,
											"end": 8108,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8095,
											"end": 8113,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8082,
											"end": 8114,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8072,
											"end": 8114,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8072,
											"end": 8114,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8161,
											"end": 8163,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 8150,
											"end": 8159,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8146,
											"end": 8164,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8133,
											"end": 8165,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8123,
											"end": 8165,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8123,
											"end": 8165,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8216,
											"end": 8219,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 8205,
											"end": 8214,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8201,
											"end": 8220,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8188,
											"end": 8221,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8236,
											"end": 8242,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8233,
											"end": 8263,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8230,
											"end": 8280,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8230,
											"end": 8280,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 8230,
											"end": 8280,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8276,
											"end": 8277,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8273,
											"end": 8274,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8266,
											"end": 8278,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8230,
											"end": 8280,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 8230,
											"end": 8280,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8299,
											"end": 8348,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 8340,
											"end": 8347,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8331,
											"end": 8337,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8320,
											"end": 8329,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 8316,
											"end": 8338,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8299,
											"end": 8348,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 8299,
											"end": 8348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8771,
											"end": 9208,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 8771,
											"end": 9208,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8850,
											"end": 8851,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 8846,
											"end": 8858,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8846,
											"end": 8858,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8846,
											"end": 8858,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 8846,
											"end": 8858,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8893,
											"end": 8905,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8893,
											"end": 8905,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8893,
											"end": 8905,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8914,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 8914,
											"end": 8975,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8968,
											"end": 8972,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 8960,
											"end": 8966,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8956,
											"end": 8973,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8946,
											"end": 8973,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8946,
											"end": 8973,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8914,
											"end": 8975,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 8914,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9021,
											"end": 9023,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9013,
											"end": 9019,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9010,
											"end": 9024,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 8990,
											"end": 9008,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8987,
											"end": 9025,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8984,
											"end": 9202,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 8984,
											"end": 9202,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9058,
											"end": 9135,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9055,
											"end": 9056,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9048,
											"end": 9136,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9159,
											"end": 9163,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 9156,
											"end": 9157,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9149,
											"end": 9164,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9187,
											"end": 9191,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9184,
											"end": 9185,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9177,
											"end": 9192,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8984,
											"end": 9202,
											"name": "tag",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 8984,
											"end": 9202,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8984,
											"end": 9202,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8771,
											"end": 9208,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8771,
											"end": 9208,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8771,
											"end": 9208,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8771,
											"end": 9208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10042,
											"end": 10226,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 10042,
											"end": 10226,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10094,
											"end": 10171,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10084,
											"end": 10172,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10191,
											"end": 10195,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 10188,
											"end": 10189,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10181,
											"end": 10196,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10215,
											"end": 10219,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10212,
											"end": 10213,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10205,
											"end": 10220,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10231,
											"end": 10415,
											"name": "tag",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 10231,
											"end": 10415,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10283,
											"end": 10360,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10280,
											"end": 10281,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10361,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10380,
											"end": 10384,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 10377,
											"end": 10378,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10370,
											"end": 10385,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10404,
											"end": 10408,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10401,
											"end": 10402,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10394,
											"end": 10409,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10420,
											"end": 10615,
											"name": "tag",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 10420,
											"end": 10615,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10459,
											"end": 10462,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10490,
											"end": 10556,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10483,
											"end": 10488,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10480,
											"end": 10557,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10477,
											"end": 10580,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 10477,
											"end": 10580,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10560,
											"end": 10578,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 10560,
											"end": 10578,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 10560,
											"end": 10578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10560,
											"end": 10578,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 10560,
											"end": 10578,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10607,
											"end": 10608,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 10596,
											"end": 10609,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10596,
											"end": 10609,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10420,
											"end": 10615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12256,
											"end": 12384,
											"name": "tag",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 12256,
											"end": 12384,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12296,
											"end": 12299,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12327,
											"end": 12328,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12323,
											"end": 12329,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 12320,
											"end": 12321,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12317,
											"end": 12330,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12314,
											"end": 12353,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12314,
											"end": 12353,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 12314,
											"end": 12353,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 12333,
											"end": 12351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12369,
											"end": 12378,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12369,
											"end": 12378,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12256,
											"end": 12384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12389,
											"end": 12854,
											"name": "tag",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 12389,
											"end": 12854,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12646,
											"end": 12648,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12635,
											"end": 12644,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12628,
											"end": 12649,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12609,
											"end": 12613,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12672,
											"end": 12728,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 12724,
											"end": 12726,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12713,
											"end": 12722,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12709,
											"end": 12727,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12701,
											"end": 12707,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12672,
											"end": 12728,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 12672,
											"end": 12728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12672,
											"end": 12728,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 12672,
											"end": 12728,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12776,
											"end": 12785,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12768,
											"end": 12774,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12764,
											"end": 12786,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12759,
											"end": 12761,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12748,
											"end": 12757,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12737,
											"end": 12787,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12804,
											"end": 12848,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 12841,
											"end": 12847,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12833,
											"end": 12839,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12804,
											"end": 12848,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 12804,
											"end": 12848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12804,
											"end": 12848,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 12804,
											"end": 12848,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12796,
											"end": 12848,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 12389,
											"end": 12854,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12389,
											"end": 12854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13522,
											"end": 14372,
											"name": "tag",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 13522,
											"end": 14372,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13844,
											"end": 13848,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13873,
											"end": 13915,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13954,
											"end": 13956,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13946,
											"end": 13952,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 13942,
											"end": 13957,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13931,
											"end": 13940,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13924,
											"end": 13958,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14006,
											"end": 14008,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13998,
											"end": 14004,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 13994,
											"end": 14009,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13989,
											"end": 13991,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13978,
											"end": 13987,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13974,
											"end": 13992,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13967,
											"end": 14010,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13967,
											"end": 14010,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14046,
											"end": 14049,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 14041,
											"end": 14043,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14030,
											"end": 14039,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14026,
											"end": 14044,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14019,
											"end": 14050,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14073,
											"end": 14130,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 14125,
											"end": 14128,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 14114,
											"end": 14123,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14110,
											"end": 14129,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14102,
											"end": 14108,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 14073,
											"end": 14130,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 14073,
											"end": 14130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14073,
											"end": 14130,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 14073,
											"end": 14130,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14178,
											"end": 14187,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14170,
											"end": 14176,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14166,
											"end": 14188,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14161,
											"end": 14163,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 14150,
											"end": 14159,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14146,
											"end": 14164,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14139,
											"end": 14189,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14212,
											"end": 14256,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 14249,
											"end": 14255,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14241,
											"end": 14247,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 14212,
											"end": 14256,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 14212,
											"end": 14256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14212,
											"end": 14256,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 14212,
											"end": 14256,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14198,
											"end": 14256,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14198,
											"end": 14256,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14305,
											"end": 14314,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14297,
											"end": 14303,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14293,
											"end": 14315,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14287,
											"end": 14290,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 14276,
											"end": 14285,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14272,
											"end": 14291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14265,
											"end": 14316,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14333,
											"end": 14366,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 14359,
											"end": 14365,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14351,
											"end": 14357,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14333,
											"end": 14366,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 14333,
											"end": 14366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14333,
											"end": 14366,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 14333,
											"end": 14366,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14325,
											"end": 14366,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 13522,
											"end": 14372,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13522,
											"end": 14372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14377,
											"end": 14626,
											"name": "tag",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 14377,
											"end": 14626,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14446,
											"end": 14452,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14499,
											"end": 14501,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14487,
											"end": 14496,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14478,
											"end": 14485,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14474,
											"end": 14497,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14470,
											"end": 14502,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 14467,
											"end": 14519,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14467,
											"end": 14519,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 14467,
											"end": 14519,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14515,
											"end": 14516,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14512,
											"end": 14513,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14505,
											"end": 14517,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 14467,
											"end": 14519,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 14467,
											"end": 14519,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14547,
											"end": 14556,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14541,
											"end": 14557,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 14566,
											"end": 14596,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 14590,
											"end": 14595,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14566,
											"end": 14596,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 14566,
											"end": 14596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14631,
											"end": 14810,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 14631,
											"end": 14810,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14666,
											"end": 14669,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14708,
											"end": 14709,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 14690,
											"end": 14706,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 14687,
											"end": 14710,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 14684,
											"end": 14804,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14684,
											"end": 14804,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 14684,
											"end": 14804,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14754,
											"end": 14755,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 14751,
											"end": 14752,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14748,
											"end": 14749,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14733,
											"end": 14756,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14791,
											"end": 14792,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14785,
											"end": 14793,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 14780,
											"end": 14783,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 14776,
											"end": 14794,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 14684,
											"end": 14804,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 14684,
											"end": 14804,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14631,
											"end": 14810,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14631,
											"end": 14810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14815,
											"end": 15546,
											"name": "tag",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 14815,
											"end": 15546,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14854,
											"end": 14857,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14896,
											"end": 14900,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 14878,
											"end": 14894,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 14875,
											"end": 14901,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 14872,
											"end": 14911,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14872,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 14872,
											"end": 14911,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14815,
											"end": 15546,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14815,
											"end": 15546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14872,
											"end": 14911,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 14872,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14938,
											"end": 14940,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14932,
											"end": 14941,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 14960,
											"end": 15026,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC"
										},
										{
											"begin": 15081,
											"end": 15083,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15063,
											"end": 15079,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 15059,
											"end": 15084,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15056,
											"end": 15057,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 15050,
											"end": 15054,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15035,
											"end": 15085,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 15114,
											"end": 15118,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15108,
											"end": 15119,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 15138,
											"end": 15154,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 15173,
											"end": 15191,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15244,
											"end": 15246,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15237,
											"end": 15241,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 15229,
											"end": 15235,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15225,
											"end": 15242,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15222,
											"end": 15247,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 15217,
											"end": 15219,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15209,
											"end": 15215,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15206,
											"end": 15220,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 15203,
											"end": 15248,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 15200,
											"end": 15258,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15200,
											"end": 15258,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 15200,
											"end": 15258,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15251,
											"end": 15256,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15251,
											"end": 15256,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15251,
											"end": 15256,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15251,
											"end": 15256,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15251,
											"end": 15256,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14815,
											"end": 15546,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14815,
											"end": 15546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15200,
											"end": 15258,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 15200,
											"end": 15258,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15288,
											"end": 15294,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15282,
											"end": 15286,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15278,
											"end": 15295,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15267,
											"end": 15295,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15267,
											"end": 15295,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15324,
											"end": 15327,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15318,
											"end": 15328,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 15351,
											"end": 15353,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15343,
											"end": 15349,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15340,
											"end": 15354,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 15337,
											"end": 15364,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15337,
											"end": 15364,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 15337,
											"end": 15364,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15357,
											"end": 15362,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15357,
											"end": 15362,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15357,
											"end": 15362,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15357,
											"end": 15362,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15357,
											"end": 15362,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15357,
											"end": 15362,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14815,
											"end": 15546,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14815,
											"end": 15546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15337,
											"end": 15364,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 15337,
											"end": 15364,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15441,
											"end": 15443,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15422,
											"end": 15438,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 15416,
											"end": 15420,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 15412,
											"end": 15439,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15408,
											"end": 15444,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15401,
											"end": 15405,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15392,
											"end": 15398,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15387,
											"end": 15390,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15383,
											"end": 15399,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15379,
											"end": 15406,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15376,
											"end": 15445,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 15373,
											"end": 15455,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15373,
											"end": 15455,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 15373,
											"end": 15455,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15448,
											"end": 15453,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15448,
											"end": 15453,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15448,
											"end": 15453,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15448,
											"end": 15453,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15448,
											"end": 15453,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15448,
											"end": 15453,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14815,
											"end": 15546,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14815,
											"end": 15546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15373,
											"end": 15455,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 15373,
											"end": 15455,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15464,
											"end": 15521,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 15515,
											"end": 15519,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15506,
											"end": 15512,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15498,
											"end": 15504,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 15494,
											"end": 15513,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15490,
											"end": 15520,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15484,
											"end": 15488,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 15464,
											"end": 15521,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 15464,
											"end": 15521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15464,
											"end": 15521,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 15464,
											"end": 15521,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15537,
											"end": 15540,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15537,
											"end": 15540,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 14815,
											"end": 15546,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14815,
											"end": 15546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16381,
											"end": 16965,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 16381,
											"end": 16965,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16603,
											"end": 16607,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16632,
											"end": 16674,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16713,
											"end": 16715,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16705,
											"end": 16711,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 16701,
											"end": 16716,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 16690,
											"end": 16699,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16683,
											"end": 16717,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16765,
											"end": 16767,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16757,
											"end": 16763,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 16753,
											"end": 16768,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 16748,
											"end": 16750,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16737,
											"end": 16746,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16733,
											"end": 16751,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16726,
											"end": 16769,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16726,
											"end": 16769,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16805,
											"end": 16811,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16800,
											"end": 16802,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 16789,
											"end": 16798,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16785,
											"end": 16803,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16778,
											"end": 16812,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16848,
											"end": 16854,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16843,
											"end": 16845,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 16832,
											"end": 16841,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16828,
											"end": 16846,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16821,
											"end": 16855,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16892,
											"end": 16895,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 16886,
											"end": 16889,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 16875,
											"end": 16884,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16871,
											"end": 16890,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16864,
											"end": 16896,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16913,
											"end": 16959,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 16954,
											"end": 16957,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 16943,
											"end": 16952,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16939,
											"end": 16958,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16931,
											"end": 16937,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16913,
											"end": 16959,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 16913,
											"end": 16959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16913,
											"end": 16959,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 16913,
											"end": 16959,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16905,
											"end": 16959,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 16381,
											"end": 16965,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16381,
											"end": 16965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/GU-NFT/ERC1155URIStorage.sol",
								"contracts/GU-NFT/GUCollections.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x74216d303b87202736b6d571fc3e9b530aa98ff017a41516170f1c555e518669\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0228d82cef8911972f4cbf7e33dfb9ceebb813d15771335949e06fc0f4a3f1b\",\"dweb:/ipfs/QmYCgp6PABoEe9iDmZTeUc31wp7ekraVavgKF1vVSnd438\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 25,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 31,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 33,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol": {
				"ERC1155Supply": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "exists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of ERC1155 that adds tracking of total supply per id. Useful for scenarios where Fungible and Non-fungible tokens have to be clearly identified. Note: While a totalSupply of 1 might mean the corresponding is an NFT, there is no guarantees that no other token with the same id are not going to be minted.",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"exists(uint256)": {
								"details": "Indicates whether any token exist with a given id, or not."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"totalSupply(uint256)": {
								"details": "Total amount of tokens in with a given id."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"exists(uint256)": "4f558e79",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply(uint256)": "bd85b039",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC1155 that adds tracking of total supply per id. Useful for scenarios where Fungible and Non-fungible tokens have to be clearly identified. Note: While a totalSupply of 1 might mean the corresponding is an NFT, there is no guarantees that no other token with the same id are not going to be minted.\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"exists(uint256)\":{\"details\":\"Indicates whether any token exist with a given id, or not.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"totalSupply(uint256)\":{\"details\":\"Total amount of tokens in with a given id.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":\"ERC1155Supply\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x74216d303b87202736b6d571fc3e9b530aa98ff017a41516170f1c555e518669\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0228d82cef8911972f4cbf7e33dfb9ceebb813d15771335949e06fc0f4a3f1b\",\"dweb:/ipfs/QmYCgp6PABoEe9iDmZTeUc31wp7ekraVavgKF1vVSnd438\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":{\"keccak256\":\"0xe3deb5f3b0c9d12944f62ab680f041bbf1910d9d3ac6b545b4b8e399643c538d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1f5bc920c2f9859b02dce02d7d0211608398287c643d42ad048555c9b204dc8\",\"dweb:/ipfs/QmSu2MFkCSPNG6pRsXxMai7Do7EDqLwpnnHVDB7q2wHJnr\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 25,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 31,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 33,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 1395,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d212a22ca8ca2bc249842b1796a32e35ba5a8d37d00ddf073f735beb337a83cb64736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d212a22ca8ca2bc249842b1796a32e35ba5a8d37d00ddf073f735beb337a83cb64736f6c634300080e0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 SLT LOG2 0x2C 0xA8 0xCA 0x2B 0xC2 0x49 DUP5 0x2B OR SWAP7 LOG3 0x2E CALLDATALOAD 0xBA GAS DUP14 CALLDATACOPY 0xD0 0xD 0xDF SMOD EXTCODEHASH PUSH20 0x5BEB337A83CB64736F6C634300080E0033000000 ",
							"sourceMap": "194:8061:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8061:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d212a22ca8ca2bc249842b1796a32e35ba5a8d37d00ddf073f735beb337a83cb64736f6c634300080e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 SLT LOG2 0x2C 0xA8 0xCA 0x2B 0xC2 0x49 DUP5 0x2B OR SWAP7 LOG3 0x2E CALLDATALOAD 0xBA GAS DUP14 CALLDATACOPY 0xD0 0xD 0xDF SMOD EXTCODEHASH PUSH20 0x5BEB337A83CB64736F6C634300080E0033000000 ",
							"sourceMap": "194:8061:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d212a22ca8ca2bc249842b1796a32e35ba5a8d37d00ddf073f735beb337a83cb64736f6c634300080e0033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/GU-NFT/ERC1155URIStorage.sol",
								"contracts/GU-NFT/GUCollections.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":146:2031  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":146:2031  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220df90c42697c4e916e9b351172e66a0c5d9f326bc5ea3e87b6db433ef9377bea264736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220df90c42697c4e916e9b351172e66a0c5d9f326bc5ea3e87b6db433ef9377bea264736f6c634300080e0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF SWAP1 0xC4 0x26 SWAP8 0xC4 0xE9 AND 0xE9 0xB3 MLOAD OR 0x2E PUSH7 0xA0C5D9F326BC5E LOG3 0xE8 PUSH28 0x6DB433EF9377BEA264736F6C634300080E0033000000000000000000 ",
							"sourceMap": "146:1885:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;146:1885:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220df90c42697c4e916e9b351172e66a0c5d9f326bc5ea3e87b6db433ef9377bea264736f6c634300080e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF SWAP1 0xC4 0x26 SWAP8 0xC4 0xE9 AND 0xE9 0xB3 MLOAD OR 0x2E PUSH7 0xA0C5D9F326BC5E LOG3 0xE8 PUSH28 0x6DB433EF9377BEA264736F6C634300080E0033000000000000000000 ",
							"sourceMap": "146:1885:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220df90c42697c4e916e9b351172e66a0c5d9f326bc5ea3e87b6db433ef9377bea264736f6c634300080e0033",
									".code": [
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/GU-NFT/ERC1155URIStorage.sol",
								"contracts/GU-NFT/GUCollections.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/GU-NFT/ERC1155URIStorage.sol": {
				"ERC1155URIStorage": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "baseURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "tokenURIs",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1155 token with storage based token URI management. Inspired by the ERC721URIStorage extension _Available since v4.6._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the concatenation of the `_baseURI` and the token-specific uri if the latter is set This enables the following behaviors: - if `_tokenURIs[tokenId]` is set, then the result is the concatenation   of `_baseURI` and `_tokenURIs[tokenId]` (keep in mind that `_baseURI`   is empty per default); - if `_tokenURIs[tokenId]` is NOT set then we fallback to `super.uri()`   which in most cases will contain `ERC1155._uri`; - if `_tokenURIs[tokenId]` is NOT set, and if the parents do not have a   uri value set, then the result is empty."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"baseURI()": "6c0360eb",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenURIs(uint256)": "6c8b703f",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"tokenURIs\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1155 token with storage based token URI management. Inspired by the ERC721URIStorage extension _Available since v4.6._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the concatenation of the `_baseURI` and the token-specific uri if the latter is set This enables the following behaviors: - if `_tokenURIs[tokenId]` is set, then the result is the concatenation   of `_baseURI` and `_tokenURIs[tokenId]` (keep in mind that `_baseURI`   is empty per default); - if `_tokenURIs[tokenId]` is NOT set then we fallback to `super.uri()`   which in most cases will contain `ERC1155._uri`; - if `_tokenURIs[tokenId]` is NOT set, and if the parents do not have a   uri value set, then the result is empty.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GU-NFT/ERC1155URIStorage.sol\":\"ERC1155URIStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x74216d303b87202736b6d571fc3e9b530aa98ff017a41516170f1c555e518669\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0228d82cef8911972f4cbf7e33dfb9ceebb813d15771335949e06fc0f4a3f1b\",\"dweb:/ipfs/QmYCgp6PABoEe9iDmZTeUc31wp7ekraVavgKF1vVSnd438\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/GU-NFT/ERC1155URIStorage.sol\":{\"keccak256\":\"0x3bd21ed09d57d19c096600c0c4686c1e21e6daaac30e003779326e3dacbc6f81\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd5d62a30cdf635ba296114bfd8866032584bbf1871978ad6ea43f8f0f6a4dfc\",\"dweb:/ipfs/QmXULbh2FqigXYjTrgzJpS2jn3UbHBJdGoBwEAG3vMvLq6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 25,
								"contract": "contracts/GU-NFT/ERC1155URIStorage.sol:ERC1155URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 31,
								"contract": "contracts/GU-NFT/ERC1155URIStorage.sol:ERC1155URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 33,
								"contract": "contracts/GU-NFT/ERC1155URIStorage.sol:ERC1155URIStorage",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 2126,
								"contract": "contracts/GU-NFT/ERC1155URIStorage.sol:ERC1155URIStorage",
								"label": "_baseURI",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 2130,
								"contract": "contracts/GU-NFT/ERC1155URIStorage.sol:ERC1155URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/GU-NFT/GUCollections.sol": {
				"GUCollections": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "safe",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "safeAddress",
									"type": "address"
								}
							],
							"name": "AdminSafeChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "traderAddress",
									"type": "address"
								}
							],
							"name": "TraderAuthorized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "traderAddress",
									"type": "address"
								}
							],
							"name": "TraderDisauthorized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "adminSafe",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "baseURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "safe",
									"type": "address"
								}
							],
							"name": "changeAdminSafe",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "exists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "cid",
									"type": "string"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "baseURI",
									"type": "string"
								}
							],
							"name": "setBaseURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "trader",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "permitted",
									"type": "bool"
								}
							],
							"name": "setTraderPermission",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "tokenURIs",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"exists(uint256)": {
								"details": "Indicates whether any token exist with a given id, or not."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"totalSupply(uint256)": {
								"details": "Total amount of tokens in with a given id."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":543:571  string private _baseURI = \"\" */\n  0xa0\n    /* \"contracts/GU-NFT/GUCollections.sol\":323:2299  contract GUCollections is ERC1155Supply, ERC1155URIStorage {... */\n  0x40\n    /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":543:571  string private _baseURI = \"\" */\n  dup2\n  swap1\n  mstore\n  0x00\n    /* \"contracts/GU-NFT/GUCollections.sol\":323:2299  contract GUCollections is ERC1155Supply, ERC1155URIStorage {... */\n  0x80\n    /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":543:571  string private _baseURI = \"\" */\n  dup2\n  swap1\n  mstore\n  tag_1\n  swap2\n  0x04\n  swap2\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/GU-NFT/GUCollections.sol\":881:976  constructor(string memory uri_, address safe) ERC1155(uri_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_4\n  swap2\n  tag_5\n  jump\t// in\ntag_4:\n    /* \"contracts/GU-NFT/GUCollections.sol\":935:939  uri_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1149:1162  _setURI(uri_) */\n  tag_9\n    /* \"contracts/GU-NFT/GUCollections.sol\":935:939  uri_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1149:1156  _setURI */\n  tag_10\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1149:1162  _setURI(uri_) */\n  jump\t// in\ntag_9:\n  pop\n    /* \"contracts/GU-NFT/GUCollections.sol\":952:961  adminSafe */\n  0x07\n    /* \"contracts/GU-NFT/GUCollections.sol\":952:968  adminSafe = safe */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/GU-NFT/GUCollections.sol\":323:2299  contract GUCollections is ERC1155Supply, ERC1155URIStorage {... */\n  jump(tag_28)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8171:8257  function _setURI(string memory newuri) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8237:8250  _uri = newuri */\n  dup1\n  mload\n  tag_14\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8237:8241  _uri */\n  0x02\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8237:8250  _uri = newuri */\n  0x20\n  dup5\n  add\n  swap1\n  tag_2\n  jump\t// in\ntag_14:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8171:8257  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/GU-NFT/GUCollections.sol\":323:2299  contract GUCollections is ERC1155Supply, ERC1155URIStorage {... */\ntag_2:\n  dup3\n  dup1\n  sload\n  tag_15\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_18\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_21)\ntag_18:\n  dup3\n  0x1f\n  lt\n  tag_19\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_21)\ntag_19:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_21\n  jumpi\n  swap2\n  dup3\n  add\ntag_20:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_21\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_20)\ntag_21:\n  pop\n  tag_22\n  swap3\n  swap2\n  pop\n  tag_23\n  jump\t// in\ntag_22:\n  pop\n  swap1\n  jump\t// out\ntag_23:\ntag_24:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_22\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_24)\n    /* \"#utility.yul\":14:141   */\ntag_26:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:323   */\ntag_27:\n    /* \"#utility.yul\":225:238   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":267:298   */\n  dup2\n  and\n    /* \"#utility.yul\":257:299   */\n  dup2\n  eq\n    /* \"#utility.yul\":247:317   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":313:314   */\n  0x00\n    /* \"#utility.yul\":310:311   */\n  dup1\n    /* \"#utility.yul\":303:315   */\n  revert\n    /* \"#utility.yul\":247:317   */\ntag_31:\n    /* \"#utility.yul\":146:323   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":328:1502   */\ntag_5:\n    /* \"#utility.yul\":417:423   */\n  0x00\n    /* \"#utility.yul\":425:431   */\n  dup1\n    /* \"#utility.yul\":478:480   */\n  0x40\n    /* \"#utility.yul\":466:475   */\n  dup4\n    /* \"#utility.yul\":457:464   */\n  dup6\n    /* \"#utility.yul\":453:476   */\n  sub\n    /* \"#utility.yul\":449:481   */\n  slt\n    /* \"#utility.yul\":446:498   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":494:495   */\n  0x00\n    /* \"#utility.yul\":491:492   */\n  dup1\n    /* \"#utility.yul\":484:496   */\n  revert\n    /* \"#utility.yul\":446:498   */\ntag_33:\n    /* \"#utility.yul\":521:537   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":586:600   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":583:617   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":613:614   */\n  0x00\n    /* \"#utility.yul\":610:611   */\n  dup1\n    /* \"#utility.yul\":603:615   */\n  revert\n    /* \"#utility.yul\":583:617   */\ntag_34:\n    /* \"#utility.yul\":651:657   */\n  dup2\n    /* \"#utility.yul\":640:649   */\n  dup6\n    /* \"#utility.yul\":636:658   */\n  add\n    /* \"#utility.yul\":626:658   */\n  swap2\n  pop\n    /* \"#utility.yul\":696:703   */\n  dup6\n    /* \"#utility.yul\":689:693   */\n  0x1f\n    /* \"#utility.yul\":685:687   */\n  dup4\n    /* \"#utility.yul\":681:694   */\n  add\n    /* \"#utility.yul\":677:704   */\n  slt\n    /* \"#utility.yul\":667:722   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":718:719   */\n  0x00\n    /* \"#utility.yul\":715:716   */\n  dup1\n    /* \"#utility.yul\":708:720   */\n  revert\n    /* \"#utility.yul\":667:722   */\ntag_35:\n    /* \"#utility.yul\":747:749   */\n  dup2\n    /* \"#utility.yul\":741:750   */\n  mload\n    /* \"#utility.yul\":769:771   */\n  dup2\n    /* \"#utility.yul\":765:767   */\n  dup2\n    /* \"#utility.yul\":762:772   */\n  gt\n    /* \"#utility.yul\":759:795   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":775:793   */\n  tag_37\n  tag_26\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":850:852   */\n  0x40\n    /* \"#utility.yul\":844:853   */\n  mload\n    /* \"#utility.yul\":818:820   */\n  0x1f\n    /* \"#utility.yul\":904:917   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":900:922   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":924:926   */\n  0x3f\n    /* \"#utility.yul\":896:927   */\n  add\n    /* \"#utility.yul\":892:932   */\n  and\n    /* \"#utility.yul\":880:933   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":948:966   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":968:990   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":945:991   */\n  or\n    /* \"#utility.yul\":942:1014   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":994:1012   */\n  tag_39\n  tag_26\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1034:1044   */\n  dup2\n    /* \"#utility.yul\":1030:1032   */\n  0x40\n    /* \"#utility.yul\":1023:1045   */\n  mstore\n    /* \"#utility.yul\":1069:1071   */\n  dup3\n    /* \"#utility.yul\":1061:1067   */\n  dup2\n    /* \"#utility.yul\":1054:1072   */\n  mstore\n    /* \"#utility.yul\":1091:1095   */\n  0x20\n    /* \"#utility.yul\":1081:1095   */\n  swap4\n  pop\n    /* \"#utility.yul\":1132:1139   */\n  dup9\n    /* \"#utility.yul\":1127:1129   */\n  dup5\n    /* \"#utility.yul\":1122:1124   */\n  dup5\n    /* \"#utility.yul\":1118:1120   */\n  dup8\n    /* \"#utility.yul\":1114:1125   */\n  add\n    /* \"#utility.yul\":1110:1130   */\n  add\n    /* \"#utility.yul\":1107:1140   */\n  gt\n    /* \"#utility.yul\":1104:1157   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1153:1154   */\n  0x00\n    /* \"#utility.yul\":1150:1151   */\n  dup1\n    /* \"#utility.yul\":1143:1155   */\n  revert\n    /* \"#utility.yul\":1104:1157   */\ntag_40:\n    /* \"#utility.yul\":1175:1176   */\n  0x00\n    /* \"#utility.yul\":1166:1176   */\n  swap2\n  pop\n    /* \"#utility.yul\":1185:1314   */\ntag_41:\n    /* \"#utility.yul\":1199:1201   */\n  dup3\n    /* \"#utility.yul\":1196:1197   */\n  dup3\n    /* \"#utility.yul\":1193:1202   */\n  lt\n    /* \"#utility.yul\":1185:1314   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1287:1297   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":1283:1302   */\n  dup5\n  add\n    /* \"#utility.yul\":1277:1303   */\n  mload\n    /* \"#utility.yul\":1256:1270   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":1252:1275   */\n  dup6\n  add\n    /* \"#utility.yul\":1245:1304   */\n  mstore\n    /* \"#utility.yul\":1210:1220   */\n  swap1\n  dup4\n  add\n  swap1\n    /* \"#utility.yul\":1185:1314   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":1332:1334   */\n  dup3\n    /* \"#utility.yul\":1329:1330   */\n  dup3\n    /* \"#utility.yul\":1326:1335   */\n  gt\n    /* \"#utility.yul\":1323:1403   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1391:1392   */\n  0x00\n    /* \"#utility.yul\":1386:1388   */\n  dup5\n    /* \"#utility.yul\":1381:1383   */\n  dup5\n    /* \"#utility.yul\":1373:1379   */\n  dup4\n    /* \"#utility.yul\":1369:1384   */\n  add\n    /* \"#utility.yul\":1365:1389   */\n  add\n    /* \"#utility.yul\":1358:1393   */\n  mstore\n    /* \"#utility.yul\":1323:1403   */\ntag_44:\n    /* \"#utility.yul\":1422:1428   */\n  swap6\n  pop\n    /* \"#utility.yul\":1447:1496   */\n  tag_45\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1477:1495   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":1447:1496   */\n  tag_27\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1437:1496   */\n  swap3\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":328:1502   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1507:1887   */\ntag_16:\n    /* \"#utility.yul\":1586:1587   */\n  0x01\n    /* \"#utility.yul\":1582:1594   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1629:1641   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1650:1711   */\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1704:1708   */\n  0x7f\n    /* \"#utility.yul\":1696:1702   */\n  dup3\n    /* \"#utility.yul\":1692:1709   */\n  and\n    /* \"#utility.yul\":1682:1709   */\n  swap2\n  pop\n    /* \"#utility.yul\":1650:1711   */\ntag_47:\n    /* \"#utility.yul\":1757:1759   */\n  0x20\n    /* \"#utility.yul\":1749:1755   */\n  dup3\n    /* \"#utility.yul\":1746:1760   */\n  lt\n    /* \"#utility.yul\":1726:1744   */\n  dup2\n    /* \"#utility.yul\":1723:1761   */\n  sub\n    /* \"#utility.yul\":1720:1881   */\n  tag_48\n  jumpi\n    /* \"#utility.yul\":1803:1813   */\n  0x4e487b71\n    /* \"#utility.yul\":1798:1801   */\n  0xe0\n    /* \"#utility.yul\":1794:1814   */\n  shl\n    /* \"#utility.yul\":1791:1792   */\n  0x00\n    /* \"#utility.yul\":1784:1815   */\n  mstore\n    /* \"#utility.yul\":1838:1842   */\n  0x22\n    /* \"#utility.yul\":1835:1836   */\n  0x04\n    /* \"#utility.yul\":1828:1843   */\n  mstore\n    /* \"#utility.yul\":1866:1870   */\n  0x24\n    /* \"#utility.yul\":1863:1864   */\n  0x00\n    /* \"#utility.yul\":1856:1871   */\n  revert\n    /* \"#utility.yul\":1720:1881   */\ntag_48:\n  pop\n    /* \"#utility.yul\":1507:1887   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_28:\n    /* \"contracts/GU-NFT/GUCollections.sol\":323:2299  contract GUCollections is ERC1155Supply, ERC1155URIStorage {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/GU-NFT/GUCollections.sol\":323:2299  contract GUCollections is ERC1155Supply, ERC1155URIStorage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6c0360eb\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xbd85b039\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xd14186c6\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xd14186c6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0xbd85b039\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xcb450772\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x6c0360eb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6c8b703f\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xbb7fde71\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x4b8c9c2d\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x4b8c9c2d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4f558e79\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x55f804b3\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2413  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":620:645   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":608:610   */\n      0x20\n        /* \"#utility.yul\":593:611   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2413  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":1253:1267   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1246:1268   */\n      iszero\n        /* \"#utility.yul\":1228:1269   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1216:1218   */\n      0x20\n        /* \"#utility.yul\":1201:1219   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      tag_28\n        /* \"#utility.yul\":1088:1275   */\n      jump\n        /* \"contracts/GU-NFT/GUCollections.sol\":1450:1748  function uri(uint256 tokenId) public view override(ERC1155URIStorage, ERC1155) returns (string memory) {... */\n    tag_5:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4060:4490  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_42\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      stop\n        /* \"contracts/GU-NFT/GUCollections.sol\":429:453  address public adminSafe */\n    tag_7:\n      sload(0x07)\n      tag_46\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\n    tag_46:\n      mload(0x40)\n        /* \"#utility.yul\":5459:5501   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5447:5502   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5429:5503   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5417:5419   */\n      0x20\n        /* \"#utility.yul\":5402:5420   */\n      add\n        /* \"contracts/GU-NFT/GUCollections.sol\":429:453  address public adminSafe */\n      tag_28\n        /* \"#utility.yul\":5283:5509   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2570:3078  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_8:\n      tag_50\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":901:1021  function exists(uint256 id) public view virtual returns (bool) {... */\n    tag_9:\n      tag_30\n      tag_57\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":958:962  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":785:801  _totalSupply[id] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":785:797  _totalSupply */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":785:801  _totalSupply[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      iszero\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":901:1021  function exists(uint256 id) public view virtual returns (bool) {... */\n      jump\n        /* \"contracts/GU-NFT/GUCollections.sol\":1756:1863  function setBaseURI(string calldata baseURI) external onlyAdminSafe {... */\n    tag_10:\n      tag_42\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":794:888  function baseURI() public view returns (string memory)... */\n    tag_11:\n      tag_36\n      tag_65\n      jump\t// in\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":674:786  function tokenURIs(uint256 id) public view returns (string memory)... */\n    tag_12:\n      tag_36\n      tag_68\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3146:3299  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_13:\n      tag_42\n      tag_72\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n        /* \"contracts/GU-NFT/GUCollections.sol\":2066:2294  function mint(address to, uint256 id, uint256 amount, string calldata cid) external onlyTraders {... */\n    tag_14:\n      tag_42\n      tag_76\n      calldatasize\n      0x04\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":697:808  function totalSupply(uint256 id) public view virtual returns (uint256) {... */\n    tag_15:\n      tag_24\n      tag_80\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":759:766  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":785:801  _totalSupply[id] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":785:797  _totalSupply */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":785:801  _totalSupply[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":697:808  function totalSupply(uint256 id) public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/GU-NFT/GUCollections.sol\":984:1198  function changeAdminSafe(address safe) public onlyAdminSafe... */\n    tag_16:\n      tag_42\n      tag_84\n      calldatasize\n      0x04\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n        /* \"contracts/GU-NFT/GUCollections.sol\":1206:1442  function setTraderPermission(address trader, bool permitted) external onlyAdminSafe... */\n    tag_17:\n      tag_42\n      tag_88\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3366:3532  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_18:\n      tag_30\n      tag_91\n      calldatasize\n      0x04\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3488:3515  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3465:3469  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3488:3515  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3488:3506  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3488:3515  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3488:3525  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3366:3532  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3599:3988  function safeTransferFrom(... */\n    tag_19:\n      tag_42\n      tag_96\n      calldatasize\n      0x04\n      tag_97\n      jump\t// in\n    tag_96:\n      tag_98\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2413  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2271:2278  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2298:2319  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2290:2367  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":10450:10452   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2290:2367  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10432:10453   */\n      mstore\n        /* \"#utility.yul\":10489:10491   */\n      0x2b\n        /* \"#utility.yul\":10469:10487   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10462:10492   */\n      mstore\n        /* \"#utility.yul\":10528:10562   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":10508:10526   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10501:10563   */\n      mstore\n        /* \"#utility.yul\":10599:10612   */\n      0x65726f2061646472657373000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10579:10597   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10572:10613   */\n      mstore\n        /* \"#utility.yul\":10630:10649   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2290:2367  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_100:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2384:2393  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2384:2397  _balances[id] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2384:2406  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap5\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2413  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1338:1342  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1414  interfaceId == type(IERC1155).interfaceId */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1388:1414  type(IERC1155).interfaceId */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1414  interfaceId == type(IERC1155).interfaceId */\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1482  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_104\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1430:1482  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1445:1482  type(IERC1155MetadataURI).interfaceId */\n      0x0e89341c00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1430:1482  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1482  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1534  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_106\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1498:1534  super.supportsInterface(interfaceId) */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1354:1534  return... */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GU-NFT/GUCollections.sol\":1450:1748  function uri(uint256 tokenId) public view override(ERC1155URIStorage, ERC1155) returns (string memory) {... */\n    tag_39:\n        /* \"contracts/GU-NFT/GUCollections.sol\":1538:1551  string memory */\n      0x60\n        /* \"contracts/GU-NFT/GUCollections.sol\":1564:1586  string memory tokenURI */\n      0x00\n        /* \"contracts/GU-NFT/GUCollections.sol\":1589:1607  tokenURIs(tokenId) */\n      tag_109\n        /* \"contracts/GU-NFT/GUCollections.sol\":1599:1606  tokenId */\n      dup4\n        /* \"contracts/GU-NFT/GUCollections.sol\":1589:1598  tokenURIs */\n      tag_69\n        /* \"contracts/GU-NFT/GUCollections.sol\":1589:1607  tokenURIs(tokenId) */\n      jump\t// in\n    tag_109:\n        /* \"contracts/GU-NFT/GUCollections.sol\":1564:1607  string memory tokenURI = tokenURIs(tokenId) */\n      swap1\n      pop\n        /* \"contracts/GU-NFT/GUCollections.sol\":1652:1653  0 */\n      0x00\n        /* \"contracts/GU-NFT/GUCollections.sol\":1633:1641  tokenURI */\n      dup2\n        /* \"contracts/GU-NFT/GUCollections.sol\":1627:1649  bytes(tokenURI).length */\n      mload\n        /* \"contracts/GU-NFT/GUCollections.sol\":1627:1653  bytes(tokenURI).length > 0 */\n      gt\n        /* \"contracts/GU-NFT/GUCollections.sol\":1627:1740  bytes(tokenURI).length > 0 ? string(abi.encodePacked(baseURI(), tokenURI, \"/metadata.json\")) : super.uri(tokenId) */\n      tag_110\n      jumpi\n        /* \"contracts/GU-NFT/GUCollections.sol\":1722:1740  super.uri(tokenId) */\n      tag_111\n        /* \"contracts/GU-NFT/GUCollections.sol\":1732:1739  tokenId */\n      dup4\n        /* \"contracts/GU-NFT/GUCollections.sol\":1722:1731  super.uri */\n      tag_112\n        /* \"contracts/GU-NFT/GUCollections.sol\":1722:1740  super.uri(tokenId) */\n      jump\t// in\n    tag_111:\n        /* \"contracts/GU-NFT/GUCollections.sol\":1627:1740  bytes(tokenURI).length > 0 ? string(abi.encodePacked(baseURI(), tokenURI, \"/metadata.json\")) : super.uri(tokenId) */\n      jump(tag_113)\n    tag_110:\n        /* \"contracts/GU-NFT/GUCollections.sol\":1680:1689  baseURI() */\n      tag_114\n        /* \"contracts/GU-NFT/GUCollections.sol\":1680:1687  baseURI */\n      tag_65\n        /* \"contracts/GU-NFT/GUCollections.sol\":1680:1689  baseURI() */\n      jump\t// in\n    tag_114:\n        /* \"contracts/GU-NFT/GUCollections.sol\":1691:1699  tokenURI */\n      dup2\n        /* \"contracts/GU-NFT/GUCollections.sol\":1663:1718  abi.encodePacked(baseURI(), tokenURI, \"/metadata.json\") */\n      add(0x20, mload(0x40))\n      tag_115\n      swap3\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/GU-NFT/GUCollections.sol\":1627:1740  bytes(tokenURI).length > 0 ? string(abi.encodePacked(baseURI(), tokenURI, \"/metadata.json\")) : super.uri(tokenId) */\n    tag_113:\n        /* \"contracts/GU-NFT/GUCollections.sol\":1620:1740  return bytes(tokenURI).length > 0 ? string(abi.encodePacked(baseURI(), tokenURI, \"/metadata.json\")) : super.uri(tokenId) */\n      swap4\n        /* \"contracts/GU-NFT/GUCollections.sol\":1450:1748  function uri(uint256 tokenId) public view override(ERC1155URIStorage, ERC1155) returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4060:4490  function safeBatchTransferFrom(... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4285:4305  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4285:4305  from == _msgSender() */\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4285:4345  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_121\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4309:4345  isApprovedForAll(from, _msgSender()) */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4326:4330  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3366:3532  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_91\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4309:4345  isApprovedForAll(from, _msgSender()) */\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4264:4421  require(... */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":11704:11706   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4264:4421  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11686:11707   */\n      mstore\n        /* \"#utility.yul\":11743:11745   */\n      0x32\n        /* \"#utility.yul\":11723:11741   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11716:11746   */\n      mstore\n        /* \"#utility.yul\":11782:11816   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":11762:11780   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11755:11817   */\n      mstore\n        /* \"#utility.yul\":11853:11873   */\n      0x6f776e6572206e6f7220617070726f7665640000000000000000000000000000\n        /* \"#utility.yul\":11833:11851   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11826:11874   */\n      mstore\n        /* \"#utility.yul\":11891:11910   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4264:4421  require(... */\n      tag_101\n        /* \"#utility.yul\":11502:11916   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4264:4421  require(... */\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4431:4483  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4454:4458  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4460:4462  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4464:4467  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4469:4476  amounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4478:4482  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4431:4453  _safeBatchTransferFrom */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4431:4483  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4060:4490  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2570:3078  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_53:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2721:2737  uint256[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2780:2783  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2780:2790  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2761:2769  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2761:2776  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2761:2790  accounts.length == ids.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2753:2836  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":12123:12125   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2753:2836  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12105:12126   */\n      mstore\n        /* \"#utility.yul\":12162:12164   */\n      0x29\n        /* \"#utility.yul\":12142:12160   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12135:12165   */\n      mstore\n        /* \"#utility.yul\":12201:12235   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":12181:12199   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12174:12236   */\n      mstore\n        /* \"#utility.yul\":12272:12283   */\n      0x206d69736d617463680000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12252:12270   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12245:12284   */\n      mstore\n        /* \"#utility.yul\":12301:12320   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2753:2836  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_101\n        /* \"#utility.yul\":11921:12326   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2753:2836  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2847:2877  uint256[] memory batchBalances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2894:2902  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2894:2909  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2880:2910  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_133\n      jumpi\n      tag_133\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_135\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_135:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2847:2910  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2926:2935  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2921:3041  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2945:2953  accounts */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2945:2960  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2941:2942  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2941:2960  i < accounts.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2921:3041  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_137\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3000:3030  balanceOf(accounts[i], ids[i]) */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3010:3018  accounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3019:3020  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3010:3021  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_141\n      jumpi\n      tag_141\n      tag_142\n      jump\t// in\n    tag_141:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3023:3026  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3027:3028  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3023:3029  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_144\n      jumpi\n      tag_144\n      tag_142\n      jump\t// in\n    tag_144:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3000:3009  balanceOf */\n      tag_27\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3000:3030  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2981:2994  batchBalances */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2995:2996  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2981:2997  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_146\n      jumpi\n      tag_146\n      tag_142\n      jump\t// in\n    tag_146:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2981:3030  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2962:2965  ++i */\n      tag_147\n      dup2\n      tag_148\n      jump\t// in\n    tag_147:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2921:3041  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_136)\n    tag_137:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3058:3071  batchBalances */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2570:3078  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GU-NFT/GUCollections.sol\":1756:1863  function setBaseURI(string calldata baseURI) external onlyAdminSafe {... */\n    tag_63:\n        /* \"contracts/GU-NFT/GUCollections.sol\":815:824  adminSafe */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x07))\n        /* \"contracts/GU-NFT/GUCollections.sol\":803:813  msg.sender */\n      caller\n        /* \"contracts/GU-NFT/GUCollections.sol\":803:824  msg.sender==adminSafe */\n      eq\n        /* \"contracts/GU-NFT/GUCollections.sol\":795:853  require(msg.sender==adminSafe, 'You are not whitelisted.') */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":13111:13113   */\n      0x20\n        /* \"contracts/GU-NFT/GUCollections.sol\":795:853  require(msg.sender==adminSafe, 'You are not whitelisted.') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13093:13114   */\n      mstore\n        /* \"#utility.yul\":13150:13152   */\n      0x18\n        /* \"#utility.yul\":13130:13148   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13123:13153   */\n      mstore\n        /* \"#utility.yul\":13189:13215   */\n      0x596f7520617265206e6f742077686974656c69737465642e0000000000000000\n        /* \"#utility.yul\":13169:13187   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13162:13216   */\n      mstore\n        /* \"#utility.yul\":13233:13251   */\n      0x64\n      add\n        /* \"contracts/GU-NFT/GUCollections.sol\":795:853  require(msg.sender==adminSafe, 'You are not whitelisted.') */\n      tag_101\n        /* \"#utility.yul\":12909:13257   */\n      jump\n        /* \"contracts/GU-NFT/GUCollections.sol\":795:853  require(msg.sender==adminSafe, 'You are not whitelisted.') */\n    tag_152:\n        /* \"contracts/GU-NFT/GUCollections.sol\":1835:1855  _setBaseURI(baseURI) */\n      tag_156\n        /* \"contracts/GU-NFT/GUCollections.sol\":1847:1854  baseURI */\n      dup3\n      dup3\n        /* \"contracts/GU-NFT/GUCollections.sol\":1835:1855  _setBaseURI(baseURI) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n        /* \"contracts/GU-NFT/GUCollections.sol\":1835:1846  _setBaseURI */\n      tag_157\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/GU-NFT/GUCollections.sol\":1835:1855  _setBaseURI(baseURI) */\n      jump\t// in\n    tag_156:\n        /* \"contracts/GU-NFT/GUCollections.sol\":1756:1863  function setBaseURI(string calldata baseURI) external onlyAdminSafe {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":794:888  function baseURI() public view returns (string memory)... */\n    tag_65:\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":834:847  string memory */\n      0x60\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":872:880  _baseURI */\n      0x04\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":865:880  return _baseURI */\n      dup1\n      sload\n      tag_159\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_161\n      swap1\n      tag_160\n      jump\t// in\n    tag_161:\n      dup1\n      iszero\n      tag_162\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_163\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_162)\n    tag_163:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_164:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_164\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_162:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":794:888  function baseURI() public view returns (string memory)... */\n      swap1\n      jump\t// out\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":674:786  function tokenURIs(uint256 id) public view returns (string memory)... */\n    tag_69:\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":764:778  _tokenURIs[id] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":764:774  _tokenURIs */\n      0x05\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":764:778  _tokenURIs[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":757:778  return _tokenURIs[id] */\n      dup1\n      sload\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":726:739  string memory */\n      0x60\n      swap2\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":764:778  _tokenURIs[id] */\n      swap1\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":757:778  return _tokenURIs[id] */\n      tag_166\n      swap1\n      tag_160\n      jump\t// in\n    tag_166:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_167\n      swap1\n      tag_160\n      jump\t// in\n    tag_167:\n      dup1\n      iszero\n      tag_168\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_169\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_168)\n    tag_169:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_170:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_170\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_168:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":674:786  function tokenURIs(uint256 id) public view returns (string memory)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3146:3299  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3240:3292  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_156\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3273:3281  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3283:3291  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3240:3258  _setApprovalForAll */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3240:3292  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n        /* \"contracts/GU-NFT/GUCollections.sol\":2066:2294  function mint(address to, uint256 id, uint256 amount, string calldata cid) external onlyTraders {... */\n    tag_78:\n        /* \"contracts/GU-NFT/GUCollections.sol\":693:703  msg.sender */\n      caller\n        /* \"contracts/GU-NFT/GUCollections.sol\":685:704  traders[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/GU-NFT/GUCollections.sol\":685:692  traders */\n      0x06\n        /* \"contracts/GU-NFT/GUCollections.sol\":685:704  traders[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/GU-NFT/GUCollections.sol\":677:733  require(traders[msg.sender], 'You are not whitelisted.') */\n      tag_176\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":13111:13113   */\n      0x20\n        /* \"contracts/GU-NFT/GUCollections.sol\":677:733  require(traders[msg.sender], 'You are not whitelisted.') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13093:13114   */\n      mstore\n        /* \"#utility.yul\":13150:13152   */\n      0x18\n        /* \"#utility.yul\":13130:13148   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13123:13153   */\n      mstore\n        /* \"#utility.yul\":13189:13215   */\n      0x596f7520617265206e6f742077686974656c69737465642e0000000000000000\n        /* \"#utility.yul\":13169:13187   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13162:13216   */\n      mstore\n        /* \"#utility.yul\":13233:13251   */\n      0x64\n      add\n        /* \"contracts/GU-NFT/GUCollections.sol\":677:733  require(traders[msg.sender], 'You are not whitelisted.') */\n      tag_101\n        /* \"#utility.yul\":12909:13257   */\n      jump\n        /* \"contracts/GU-NFT/GUCollections.sol\":677:733  require(traders[msg.sender], 'You are not whitelisted.') */\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":759:766  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":785:801  _totalSupply[id] */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":785:797  _totalSupply */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":785:801  _totalSupply[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/GU-NFT/GUCollections.sol\":2196:2197  0 */\n      0x00\n        /* \"contracts/GU-NFT/GUCollections.sol\":2177:2197  totalSupply(id) == 0 */\n      sub\n        /* \"contracts/GU-NFT/GUCollections.sol\":2173:2251  if (totalSupply(id) == 0)... */\n      tag_181\n      jumpi\n        /* \"contracts/GU-NFT/GUCollections.sol\":2223:2239  _setURI(id, cid) */\n      tag_181\n        /* \"contracts/GU-NFT/GUCollections.sol\":2231:2233  id */\n      dup5\n        /* \"contracts/GU-NFT/GUCollections.sol\":2235:2238  cid */\n      dup4\n      dup4\n        /* \"contracts/GU-NFT/GUCollections.sol\":2223:2239  _setURI(id, cid) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n        /* \"contracts/GU-NFT/GUCollections.sol\":2223:2230  _setURI */\n      tag_182\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/GU-NFT/GUCollections.sol\":2223:2239  _setURI(id, cid) */\n      jump\t// in\n    tag_181:\n        /* \"contracts/GU-NFT/GUCollections.sol\":2261:2286  _mint(to, id, amount, \"\") */\n      tag_126\n        /* \"contracts/GU-NFT/GUCollections.sol\":2267:2269  to */\n      dup6\n        /* \"contracts/GU-NFT/GUCollections.sol\":2271:2273  id */\n      dup6\n        /* \"contracts/GU-NFT/GUCollections.sol\":2275:2281  amount */\n      dup6\n        /* \"contracts/GU-NFT/GUCollections.sol\":2261:2286  _mint(to, id, amount, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/GU-NFT/GUCollections.sol\":2261:2266  _mint */\n      tag_184\n        /* \"contracts/GU-NFT/GUCollections.sol\":2261:2286  _mint(to, id, amount, \"\") */\n      jump\t// in\n        /* \"contracts/GU-NFT/GUCollections.sol\":984:1198  function changeAdminSafe(address safe) public onlyAdminSafe... */\n    tag_86:\n        /* \"contracts/GU-NFT/GUCollections.sol\":815:824  adminSafe */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x07))\n        /* \"contracts/GU-NFT/GUCollections.sol\":803:813  msg.sender */\n      caller\n        /* \"contracts/GU-NFT/GUCollections.sol\":803:824  msg.sender==adminSafe */\n      eq\n        /* \"contracts/GU-NFT/GUCollections.sol\":795:853  require(msg.sender==adminSafe, 'You are not whitelisted.') */\n      tag_187\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":13111:13113   */\n      0x20\n        /* \"contracts/GU-NFT/GUCollections.sol\":795:853  require(msg.sender==adminSafe, 'You are not whitelisted.') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13093:13114   */\n      mstore\n        /* \"#utility.yul\":13150:13152   */\n      0x18\n        /* \"#utility.yul\":13130:13148   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13123:13153   */\n      mstore\n        /* \"#utility.yul\":13189:13215   */\n      0x596f7520617265206e6f742077686974656c69737465642e0000000000000000\n        /* \"#utility.yul\":13169:13187   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13162:13216   */\n      mstore\n        /* \"#utility.yul\":13233:13251   */\n      0x64\n      add\n        /* \"contracts/GU-NFT/GUCollections.sol\":795:853  require(msg.sender==adminSafe, 'You are not whitelisted.') */\n      tag_101\n        /* \"#utility.yul\":12909:13257   */\n      jump\n        /* \"contracts/GU-NFT/GUCollections.sol\":795:853  require(msg.sender==adminSafe, 'You are not whitelisted.') */\n    tag_187:\n        /* \"contracts/GU-NFT/GUCollections.sol\":1068:1077  adminSafe */\n      sload(0x07)\n        /* \"contracts/GU-NFT/GUCollections.sol\":1068:1083  adminSafe!=safe */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup4\n      and\n        /* \"contracts/GU-NFT/GUCollections.sol\":1068:1077  adminSafe */\n      swap2\n      and\n        /* \"contracts/GU-NFT/GUCollections.sol\":1068:1083  adminSafe!=safe */\n      sub\n        /* \"contracts/GU-NFT/GUCollections.sol\":1060:1125  require(adminSafe!=safe, \"Provided address already safe address\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":13906:13908   */\n      0x20\n        /* \"contracts/GU-NFT/GUCollections.sol\":1060:1125  require(adminSafe!=safe, \"Provided address already safe address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13888:13909   */\n      mstore\n        /* \"#utility.yul\":13945:13947   */\n      0x25\n        /* \"#utility.yul\":13925:13943   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13918:13948   */\n      mstore\n        /* \"#utility.yul\":13984:14018   */\n      0x50726f7669646564206164647265737320616c72656164792073616665206164\n        /* \"#utility.yul\":13964:13982   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13957:14019   */\n      mstore\n        /* \"#utility.yul\":14055:14062   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14035:14053   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14028:14063   */\n      mstore\n        /* \"#utility.yul\":14080:14099   */\n      0x84\n      add\n        /* \"contracts/GU-NFT/GUCollections.sol\":1060:1125  require(adminSafe!=safe, \"Provided address already safe address\") */\n      tag_101\n        /* \"#utility.yul\":13704:14105   */\n      jump\n        /* \"contracts/GU-NFT/GUCollections.sol\":1060:1125  require(adminSafe!=safe, \"Provided address already safe address\") */\n    tag_190:\n        /* \"contracts/GU-NFT/GUCollections.sol\":1136:1145  adminSafe */\n      0x07\n        /* \"contracts/GU-NFT/GUCollections.sol\":1136:1152  adminSafe = safe */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/GU-NFT/GUCollections.sol\":1168:1190  AdminSafeChanged(safe) */\n      mload(0x40)\n      0xd4c1af98b758421a8d47b0bc04ecfa30233d5506955e8cde282417aa0d31d3b6\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/GU-NFT/GUCollections.sol\":984:1198  function changeAdminSafe(address safe) public onlyAdminSafe... */\n      pop\n      jump\t// out\n        /* \"contracts/GU-NFT/GUCollections.sol\":1206:1442  function setTraderPermission(address trader, bool permitted) external onlyAdminSafe... */\n    tag_89:\n        /* \"contracts/GU-NFT/GUCollections.sol\":815:824  adminSafe */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x07))\n        /* \"contracts/GU-NFT/GUCollections.sol\":803:813  msg.sender */\n      caller\n        /* \"contracts/GU-NFT/GUCollections.sol\":803:824  msg.sender==adminSafe */\n      eq\n        /* \"contracts/GU-NFT/GUCollections.sol\":795:853  require(msg.sender==adminSafe, 'You are not whitelisted.') */\n      tag_194\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":13111:13113   */\n      0x20\n        /* \"contracts/GU-NFT/GUCollections.sol\":795:853  require(msg.sender==adminSafe, 'You are not whitelisted.') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13093:13114   */\n      mstore\n        /* \"#utility.yul\":13150:13152   */\n      0x18\n        /* \"#utility.yul\":13130:13148   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13123:13153   */\n      mstore\n        /* \"#utility.yul\":13189:13215   */\n      0x596f7520617265206e6f742077686974656c69737465642e0000000000000000\n        /* \"#utility.yul\":13169:13187   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13162:13216   */\n      mstore\n        /* \"#utility.yul\":13233:13251   */\n      0x64\n      add\n        /* \"contracts/GU-NFT/GUCollections.sol\":795:853  require(msg.sender==adminSafe, 'You are not whitelisted.') */\n      tag_101\n        /* \"#utility.yul\":12909:13257   */\n      jump\n        /* \"contracts/GU-NFT/GUCollections.sol\":795:853  require(msg.sender==adminSafe, 'You are not whitelisted.') */\n    tag_194:\n        /* \"contracts/GU-NFT/GUCollections.sol\":1306:1321  traders[trader] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/GU-NFT/GUCollections.sol\":1306:1313  traders */\n      0x06\n        /* \"contracts/GU-NFT/GUCollections.sol\":1306:1321  traders[trader] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/GU-NFT/GUCollections.sol\":1306:1331  traders[trader]=permitted */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      dup3\n      iszero\n      dup1\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/GU-NFT/GUCollections.sol\":1342:1434  if (permitted) emit TraderAuthorized(trader);... */\n      tag_197\n      jumpi\n        /* \"contracts/GU-NFT/GUCollections.sol\":1362:1386  TraderAuthorized(trader) */\n      mload(0x40)\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      swap1\n      0x526af00f9bc92d53f2d0b4c603a1305395a04f7fb6a0a7962867d8d230467547\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/GU-NFT/GUCollections.sol\":1756:1863  function setBaseURI(string calldata baseURI) external onlyAdminSafe {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GU-NFT/GUCollections.sol\":1342:1434  if (permitted) emit TraderAuthorized(trader);... */\n    tag_197:\n        /* \"contracts/GU-NFT/GUCollections.sol\":1407:1434  TraderDisauthorized(trader) */\n      mload(0x40)\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      swap1\n      0xe8185c1a3f6241a6224d99ff39e932ac24fc0d2c51b17e56c5d6f52aff1b5da1\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/GU-NFT/GUCollections.sol\":1206:1442  function setTraderPermission(address trader, bool permitted) external onlyAdminSafe... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3599:3988  function safeTransferFrom(... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3799:3819  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3799:3819  from == _msgSender() */\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3799:3859  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_203\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3823:3859  isApprovedForAll(from, _msgSender()) */\n      tag_203\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3840:3844  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3366:3532  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_91\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3823:3859  isApprovedForAll(from, _msgSender()) */\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3778:3926  require(... */\n      tag_205\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":14312:14314   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3778:3926  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14294:14315   */\n      mstore\n        /* \"#utility.yul\":14351:14353   */\n      0x29\n        /* \"#utility.yul\":14331:14349   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14324:14354   */\n      mstore\n        /* \"#utility.yul\":14390:14424   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":14370:14388   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14363:14425   */\n      mstore\n        /* \"#utility.yul\":14461:14472   */\n      0x20617070726f7665640000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14441:14459   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14434:14473   */\n      mstore\n        /* \"#utility.yul\":14490:14509   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3778:3926  require(... */\n      tag_101\n        /* \"#utility.yul\":14110:14515   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3778:3926  require(... */\n    tag_205:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3936:3981  _safeTransferFrom(from, to, id, amount, data) */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3954:3958  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3960:3962  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3964:3966  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3968:3974  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3976:3980  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3936:3953  _safeTransferFrom */\n      tag_209\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3936:3981  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":1633:1984  function uri(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_112:\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":1727:1749  string memory tokenURI */\n      0x00\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":1752:1771  _tokenURIs[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":1752:1762  _tokenURIs */\n      0x05\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":1752:1771  _tokenURIs[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":1727:1771  string memory tokenURI = _tokenURIs[tokenId] */\n      dup1\n      sload\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":1701:1714  string memory */\n      0x60\n      swap3\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":1727:1749  string memory tokenURI */\n      swap2\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":1752:1771  _tokenURIs[tokenId] */\n      swap1\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":1727:1771  string memory tokenURI = _tokenURIs[tokenId] */\n      tag_212\n      swap1\n      tag_160\n      jump\t// in\n    tag_212:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_213\n      swap1\n      tag_160\n      jump\t// in\n    tag_213:\n      dup1\n      iszero\n      tag_214\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_215\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_214)\n    tag_215:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_216:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_216\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_214:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":1907:1908  0 */\n      0x00\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":1888:1896  tokenURI */\n      dup2\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":1882:1904  bytes(tokenURI).length */\n      mload\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":1882:1908  bytes(tokenURI).length > 0 */\n      gt\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":1882:1976  bytes(tokenURI).length > 0 ? string(abi.encodePacked(_baseURI, tokenURI)) : super.uri(tokenId) */\n      tag_217\n      jumpi\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":1958:1976  super.uri(tokenId) */\n      tag_111\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":1968:1975  tokenId */\n      dup4\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":1958:1967  super.uri */\n      tag_219\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":1958:1976  super.uri(tokenId) */\n      jump\t// in\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":1882:1976  bytes(tokenURI).length > 0 ? string(abi.encodePacked(_baseURI, tokenURI)) : super.uri(tokenId) */\n    tag_217:\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":1935:1943  _baseURI */\n      0x04\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":1945:1953  tokenURI */\n      dup2\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":1918:1954  abi.encodePacked(_baseURI, tokenURI) */\n      add(0x20, mload(0x40))\n      tag_115\n      swap3\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6233:7348  function _safeBatchTransferFrom(... */\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6453:6460  amounts */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6453:6467  amounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6439:6442  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6439:6449  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6439:6467  ids.length == amounts.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6431:6512  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_225\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":16142:16144   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6431:6512  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16124:16145   */\n      mstore\n        /* \"#utility.yul\":16181:16183   */\n      0x28\n        /* \"#utility.yul\":16161:16179   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16154:16184   */\n      mstore\n        /* \"#utility.yul\":16220:16254   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":16200:16218   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16193:16255   */\n      mstore\n        /* \"#utility.yul\":16291:16301   */\n      0x6d69736d61746368000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16271:16289   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":16264:16302   */\n      mstore\n        /* \"#utility.yul\":16319:16338   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6431:6512  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_101\n        /* \"#utility.yul\":15940:16344   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6431:6512  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6530:6546  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6522:6588  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_228\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":16551:16553   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6522:6588  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16533:16554   */\n      mstore\n        /* \"#utility.yul\":16590:16592   */\n      0x25\n        /* \"#utility.yul\":16570:16588   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16563:16593   */\n      mstore\n        /* \"#utility.yul\":16629:16663   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":16609:16627   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16602:16664   */\n      mstore\n        /* \"#utility.yul\":16700:16707   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16680:16698   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":16673:16708   */\n      mstore\n        /* \"#utility.yul\":16725:16744   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6522:6588  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_101\n        /* \"#utility.yul\":16349:16750   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6522:6588  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n    tag_228:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6599:6615  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6712:7123  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6736:6739  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6736:6746  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6732:6733  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6732:6746  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6712:7123  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_235\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6767:6777  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6780:6783  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6784:6785  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6780:6786  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_238\n      jumpi\n      tag_238\n      tag_142\n      jump\t// in\n    tag_238:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6767:6786  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6800:6814  uint256 amount */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6817:6824  amounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6825:6826  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6817:6827  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_240\n      jumpi\n      tag_240\n      tag_142\n      jump\t// in\n    tag_240:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6842:6861  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6864:6877  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6864:6883  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup15\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6817:6827  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6905:6926  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6897:6973  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_241\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":16957:16959   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6897:6973  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16939:16960   */\n      mstore\n        /* \"#utility.yul\":16996:16998   */\n      0x2a\n        /* \"#utility.yul\":16976:16994   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16969:16999   */\n      mstore\n        /* \"#utility.yul\":17035:17069   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":17015:17033   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17008:17070   */\n      mstore\n        /* \"#utility.yul\":17106:17118   */\n      0x72207472616e7366657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17086:17104   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":17079:17119   */\n      mstore\n        /* \"#utility.yul\":17136:17155   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6897:6973  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_101\n        /* \"#utility.yul\":16755:17161   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6897:6973  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7024  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7028  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7034  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7037:7057  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7057  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7085:7102  _balances[id][to] */\n      swap1\n      dup12\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7085:7112  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7037:7057  fromBalance - amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7024  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7085:7112  _balances[id][to] += amount */\n      tag_244\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7037:7057  fromBalance - amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7085:7112  _balances[id][to] += amount */\n      tag_245\n      jump\t// in\n    tag_244:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6753:7123  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6748:6751  ++i */\n      dup1\n      tag_246\n      swap1\n      tag_148\n      jump\t// in\n    tag_246:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6712:7123  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_234)\n    tag_235:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7168:7170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7162:7166  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7152:7160  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7172:7175  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7177:7184  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_247\n      swap3\n      swap2\n      swap1\n      tag_248\n      jump\t// in\n    tag_247:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7266:7341  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7302:7310  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7312:7316  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7318:7320  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7322:7325  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7327:7334  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7336:7340  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7266:7301  _doSafeBatchTransferAcceptanceCheck */\n      tag_252\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7266:7341  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6421:7348  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6233:7348  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":2324:2426  function _setBaseURI(string memory __baseURI) internal virtual {... */\n    tag_157:\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":2398:2418  _baseURI = __baseURI */\n      dup1\n      mload\n      tag_156\n      swap1\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":2398:2406  _baseURI */\n      0x04\n      swap1\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":2398:2418  _baseURI = __baseURI */\n      0x20\n      dup5\n      add\n      swap1\n      tag_255\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12773:13096  function _setApprovalForAll(... */\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12923:12931  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12914:12931  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12914:12919  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12914:12931  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12906:12977  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_257\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":17971:17973   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12906:12977  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17953:17974   */\n      mstore\n        /* \"#utility.yul\":18010:18012   */\n      0x29\n        /* \"#utility.yul\":17990:18008   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17983:18013   */\n      mstore\n        /* \"#utility.yul\":18049:18083   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":18029:18047   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18022:18084   */\n      mstore\n        /* \"#utility.yul\":18120:18131   */\n      0x20666f722073656c660000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18100:18118   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":18093:18132   */\n      mstore\n        /* \"#utility.yul\":18149:18168   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12906:12977  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_101\n        /* \"#utility.yul\":17769:18174   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12906:12977  require(owner != operator, \"ERC1155: setting approval status for self\") */\n    tag_257:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12987:13012  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12987:13005  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12987:13012  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12987:13022  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12987:13033  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13048:13089  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":1228:1269   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13048:13089  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":1201:1219   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13048:13089  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12773:13096  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":2069:2237  function _setURI(uint256 tokenId, string memory tokenURI) internal virtual {... */\n    tag_182:\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":2155:2174  _tokenURIs[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":2155:2165  _tokenURIs */\n      0x05\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":2155:2174  _tokenURIs[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":2155:2185  _tokenURIs[tokenId] = tokenURI */\n      dup3\n      mload\n      tag_262\n      swap3\n      dup5\n      add\n      swap1\n      tag_255\n      jump\t// in\n    tag_262:\n      pop\n        /* \"contracts/GU-NFT/ERC1155URIStorage.sol\":2069:2237  function _setURI(uint256 tokenId, string memory tokenURI) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8630:9339  function _mint(... */\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8777:8793  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8769:8831  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_264\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":18381:18383   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8769:8831  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18363:18384   */\n      mstore\n        /* \"#utility.yul\":18420:18422   */\n      0x21\n        /* \"#utility.yul\":18400:18418   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18393:18423   */\n      mstore\n        /* \"#utility.yul\":18459:18493   */\n      0x455243313135353a206d696e7420746f20746865207a65726f20616464726573\n        /* \"#utility.yul\":18439:18457   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18432:18494   */\n      mstore\n        /* \"#utility.yul\":18530:18533   */\n      0x7300000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18510:18528   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":18503:18534   */\n      mstore\n        /* \"#utility.yul\":18551:18570   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8769:8831  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_101\n        /* \"#utility.yul\":18179:18576   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8769:8831  require(to != address(0), \"ERC1155: mint to the zero address\") */\n    tag_264:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8842:8858  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8906:8927  _asSingletonArray(id) */\n      tag_268\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8924:8926  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8906:8923  _asSingletonArray */\n      tag_269\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8906:8927  _asSingletonArray(id) */\n      jump\t// in\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8883:8927  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8937:8961  uint256[] memory amounts */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8964:8989  _asSingletonArray(amount) */\n      tag_270\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8982:8988  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8964:8981  _asSingletonArray */\n      tag_269\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8964:8989  _asSingletonArray(amount) */\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8937:8989  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9077:9086  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9077:9090  _balances[id] */\n      dup7\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9077:9094  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup12\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9077:9104  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9098:9104  amount */\n      dup8\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9077:9086  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9077:9104  _balances[id][to] += amount */\n      tag_272\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9098:9104  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9077:9104  _balances[id][to] += amount */\n      tag_245\n      jump\t// in\n    tag_272:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9119:9171  TransferSingle(operator, address(0), to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":18755:18780   */\n      dup8\n      dup2\n      mstore\n        /* \"#utility.yul\":18811:18813   */\n      0x20\n        /* \"#utility.yul\":18796:18814   */\n      dup2\n      add\n        /* \"#utility.yul\":18789:18823   */\n      dup8\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9119:9171  TransferSingle(operator, address(0), to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup11\n      and\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9152:9153  0 */\n      0x00\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9119:9171  TransferSingle(operator, address(0), to, id, amount) */\n      swap2\n      dup8\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":18728:18746   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9119:9171  TransferSingle(operator, address(0), to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9258:9332  _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data) */\n      tag_276\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9289:9297  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9307:9308  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9311:9313  to */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9315:9317  id */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9319:9325  amount */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9327:9331  data */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9258:9288  _doSafeTransferAcceptanceCheck */\n      tag_277\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9258:9332  _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data) */\n      jump\t// in\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8759:9339  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8630:9339  function _mint(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4940:5887  function _safeTransferFrom(... */\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5121:5137  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5113:5179  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_279\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":16551:16553   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5113:5179  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16533:16554   */\n      mstore\n        /* \"#utility.yul\":16590:16592   */\n      0x25\n        /* \"#utility.yul\":16570:16588   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16563:16593   */\n      mstore\n        /* \"#utility.yul\":16629:16663   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":16609:16627   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16602:16664   */\n      mstore\n        /* \"#utility.yul\":16700:16707   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16680:16698   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":16673:16708   */\n      mstore\n        /* \"#utility.yul\":16725:16744   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5113:5179  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_101\n        /* \"#utility.yul\":16349:16750   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5113:5179  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n    tag_279:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5190:5206  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5254:5275  _asSingletonArray(id) */\n      tag_282\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5272:5274  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5254:5271  _asSingletonArray */\n      tag_269\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5254:5275  _asSingletonArray(id) */\n      jump\t// in\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5231:5275  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5285:5309  uint256[] memory amounts */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5312:5337  _asSingletonArray(amount) */\n      tag_283\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5330:5336  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5312:5329  _asSingletonArray */\n      tag_269\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5312:5337  _asSingletonArray(amount) */\n      jump\t// in\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5285:5337  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5419:5438  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5441:5454  _balances[id] */\n      dup7\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5441:5460  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup13\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5478:5499  fromBalance >= amount */\n      dup6\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5470:5546  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_285\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":16957:16959   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5470:5546  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16939:16960   */\n      mstore\n        /* \"#utility.yul\":16996:16998   */\n      0x2a\n        /* \"#utility.yul\":16976:16994   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16969:16999   */\n      mstore\n        /* \"#utility.yul\":17035:17069   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":17015:17033   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17008:17070   */\n      mstore\n        /* \"#utility.yul\":17106:17118   */\n      0x72207472616e7366657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17086:17104   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":17079:17119   */\n      mstore\n        /* \"#utility.yul\":17136:17155   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5470:5546  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_101\n        /* \"#utility.yul\":16755:17161   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5470:5546  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5589  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5593  _balances[id] */\n      dup8\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5599  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup14\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5602:5622  fromBalance - amount */\n      dup10\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5622  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5642:5659  _balances[id][to] */\n      swap1\n      dup11\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5642:5669  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5602:5622  fromBalance - amount */\n      dup9\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5580:5589  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5642:5669  _balances[id][to] += amount */\n      tag_287\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5602:5622  fromBalance - amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5642:5669  _balances[id][to] += amount */\n      tag_245\n      jump\t// in\n    tag_287:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5685:5731  TransferSingle(operator, from, to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":18755:18780   */\n      dup9\n      dup2\n      mstore\n        /* \"#utility.yul\":18811:18813   */\n      0x20\n        /* \"#utility.yul\":18796:18814   */\n      dup2\n      add\n        /* \"#utility.yul\":18789:18823   */\n      dup9\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5685:5731  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup12\n      and\n      swap3\n      dup13\n      dup3\n      and\n      swap3\n      swap2\n      dup9\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":18728:18746   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5685:5731  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5812:5880  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_290\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5843:5851  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5853:5857  from */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5859:5861  to */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5863:5865  id */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5867:5873  amount */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5875:5879  data */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5812:5842  _doSafeTransferAcceptanceCheck */\n      tag_277\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5812:5880  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5103:5887  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4940:5887  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2000:2013  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2032:2036  _uri */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2025:2036  return _uri */\n      dup1\n      sload\n      tag_166\n      swap1\n      tag_160\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16127:16919  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_252:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16359:16372  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16355:16913  if (to.isContract()) {... */\n      tag_251\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16394:16473  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      0xbc197c8100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16394:16437  IERC1155Receiver(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16394:16473  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      tag_303\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16438:16446  operator */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16448:16452  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16454:16457  ids */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16459:16466  amounts */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16468:16472  data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16394:16473  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      0x04\n      add\n      tag_304\n      jump\t// in\n    tag_303:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_305\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_306\n      swap2\n      dup2\n      add\n      swap1\n      tag_307\n      jump\t// in\n    tag_306:\n      0x01\n    tag_305:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16390:16903  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_308\n      jumpi\n      tag_312\n      tag_313\n      jump\t// in\n    tag_312:\n      dup1\n      0x08c379a0\n      sub\n      tag_311\n      jumpi\n      pop\n      tag_314\n      tag_315\n      jump\t// in\n    tag_314:\n      dup1\n      tag_316\n      jumpi\n      pop\n      jump(tag_310)\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16779:16785  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16772:16786  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16390:16903  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_311:\n      pop\n    tag_310:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16826:16888  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":21076:21078   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16826:16888  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":21058:21079   */\n      mstore\n        /* \"#utility.yul\":21115:21117   */\n      0x34\n        /* \"#utility.yul\":21095:21113   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":21088:21118   */\n      mstore\n        /* \"#utility.yul\":21154:21188   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":21134:21152   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":21127:21189   */\n      mstore\n        /* \"#utility.yul\":21225:21247   */\n      0x526563656976657220696d706c656d656e746572000000000000000000000000\n        /* \"#utility.yul\":21205:21223   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":21198:21248   */\n      mstore\n        /* \"#utility.yul\":21265:21284   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16826:16888  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      tag_101\n        /* \"#utility.yul\":20874:21290   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16390:16903  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_308:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16552:16612  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16564:16612  IERC1155Receiver.onERC1155BatchReceived.selector */\n      0xbc197c8100000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16552:16612  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16548:16705  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16636:16686  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":21497:21499   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16636:16686  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":21479:21500   */\n      mstore\n        /* \"#utility.yul\":21536:21538   */\n      0x28\n        /* \"#utility.yul\":21516:21534   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":21509:21539   */\n      mstore\n        /* \"#utility.yul\":21575:21609   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":21555:21573   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":21548:21610   */\n      mstore\n        /* \"#utility.yul\":21646:21656   */\n      0x6420746f6b656e73000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21626:21644   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":21619:21657   */\n      mstore\n        /* \"#utility.yul\":21674:21693   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16636:16686  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      tag_101\n        /* \"#utility.yul\":21295:21699   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16925:17118  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17044:17060  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17058:17059  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17044:17060  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16991:17007  uint256[] memory */\n      0x60\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17019:17041  uint256[] memory array */\n      0x00\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17044:17060  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17019:17060  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17081:17088  element */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17070:17075  array */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17076:17077  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17070:17078  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_329\n      jumpi\n      tag_329\n      tag_142\n      jump\t// in\n    tag_329:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17070:17088  array[0] = element */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17106:17111  array */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16925:17118  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15396:16121  function _doSafeTransferAcceptanceCheck(... */\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15603:15616  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15599:16115  if (to.isContract()) {... */\n      tag_251\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15638:15710  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      0xf23a6e6100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15638:15676  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15638:15710  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      tag_333\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15677:15685  operator */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15687:15691  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15693:15695  id */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15697:15703  amount */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15705:15709  data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15638:15710  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      0x04\n      add\n      tag_334\n      jump\t// in\n    tag_333:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_335\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_336\n      swap2\n      dup2\n      add\n      swap1\n      tag_307\n      jump\t// in\n    tag_336:\n      0x01\n    tag_335:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15634:16105  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_337\n      jumpi\n      tag_312\n      tag_313\n      jump\t// in\n    tag_337:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15759:15814  response != IERC1155Receiver.onERC1155Received.selector */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15771:15814  IERC1155Receiver.onERC1155Received.selector */\n      0xf23a6e6100000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15759:15814  response != IERC1155Receiver.onERC1155Received.selector */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15755:15907  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15838:15888  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":21497:21499   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15838:15888  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":21479:21500   */\n      mstore\n        /* \"#utility.yul\":21536:21538   */\n      0x28\n        /* \"#utility.yul\":21516:21534   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":21509:21539   */\n      mstore\n        /* \"#utility.yul\":21575:21609   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":21555:21573   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":21548:21610   */\n      mstore\n        /* \"#utility.yul\":21646:21656   */\n      0x6420746f6b656e73000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21626:21644   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":21619:21657   */\n      mstore\n        /* \"#utility.yul\":21674:21693   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15838:15888  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      tag_101\n        /* \"#utility.yul\":21295:21699   */\n      jump\n    tag_255:\n      dup3\n      dup1\n      sload\n      tag_350\n      swap1\n      tag_160\n      jump\t// in\n    tag_350:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_352\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_355)\n    tag_352:\n      dup3\n      0x1f\n      lt\n      tag_353\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_355)\n    tag_353:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_355\n      jumpi\n      swap2\n      dup3\n      add\n    tag_354:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_355\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_354)\n    tag_355:\n      pop\n      tag_356\n      swap3\n      swap2\n      pop\n      tag_357\n      jump\t// in\n    tag_356:\n      pop\n      swap1\n      jump\t// out\n    tag_357:\n    tag_358:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_356\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_358)\n        /* \"#utility.yul\":14:210   */\n    tag_360:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":142:184   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":131:185   */\n      dup2\n      and\n        /* \"#utility.yul\":121:186   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:204   */\n      tag_375\n      jumpi\n        /* \"#utility.yul\":200:201   */\n      0x00\n        /* \"#utility.yul\":197:198   */\n      dup1\n        /* \"#utility.yul\":190:202   */\n      revert\n        /* \"#utility.yul\":111:204   */\n    tag_375:\n        /* \"#utility.yul\":14:210   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":215:469   */\n    tag_26:\n        /* \"#utility.yul\":283:289   */\n      0x00\n        /* \"#utility.yul\":291:297   */\n      dup1\n        /* \"#utility.yul\":344:346   */\n      0x40\n        /* \"#utility.yul\":332:341   */\n      dup4\n        /* \"#utility.yul\":323:330   */\n      dup6\n        /* \"#utility.yul\":319:342   */\n      sub\n        /* \"#utility.yul\":315:347   */\n      slt\n        /* \"#utility.yul\":312:364   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":360:361   */\n      0x00\n        /* \"#utility.yul\":357:358   */\n      dup1\n        /* \"#utility.yul\":350:362   */\n      revert\n        /* \"#utility.yul\":312:364   */\n    tag_377:\n        /* \"#utility.yul\":383:412   */\n      tag_378\n        /* \"#utility.yul\":402:411   */\n      dup4\n        /* \"#utility.yul\":383:412   */\n      tag_360\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":373:412   */\n      swap5\n        /* \"#utility.yul\":459:461   */\n      0x20\n        /* \"#utility.yul\":444:462   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":431:463   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":215:469   */\n      jump\t// out\n        /* \"#utility.yul\":656:833   */\n    tag_361:\n        /* \"#utility.yul\":741:807   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":734:739   */\n      dup2\n        /* \"#utility.yul\":730:808   */\n      and\n        /* \"#utility.yul\":723:728   */\n      dup2\n        /* \"#utility.yul\":720:809   */\n      eq\n        /* \"#utility.yul\":710:827   */\n      tag_381\n      jumpi\n        /* \"#utility.yul\":823:824   */\n      0x00\n        /* \"#utility.yul\":820:821   */\n      dup1\n        /* \"#utility.yul\":813:825   */\n      revert\n        /* \"#utility.yul\":710:827   */\n    tag_381:\n        /* \"#utility.yul\":656:833   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":838:1083   */\n    tag_32:\n        /* \"#utility.yul\":896:902   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:969   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":965:966   */\n      0x00\n        /* \"#utility.yul\":962:963   */\n      dup1\n        /* \"#utility.yul\":955:967   */\n      revert\n        /* \"#utility.yul\":917:969   */\n    tag_383:\n        /* \"#utility.yul\":1004:1013   */\n      dup2\n        /* \"#utility.yul\":991:1014   */\n      calldataload\n        /* \"#utility.yul\":1023:1053   */\n      tag_113\n        /* \"#utility.yul\":1047:1052   */\n      dup2\n        /* \"#utility.yul\":1023:1053   */\n      tag_361\n      jump\t// in\n        /* \"#utility.yul\":1280:1460   */\n    tag_38:\n        /* \"#utility.yul\":1339:1345   */\n      0x00\n        /* \"#utility.yul\":1392:1394   */\n      0x20\n        /* \"#utility.yul\":1380:1389   */\n      dup3\n        /* \"#utility.yul\":1371:1378   */\n      dup5\n        /* \"#utility.yul\":1367:1390   */\n      sub\n        /* \"#utility.yul\":1363:1395   */\n      slt\n        /* \"#utility.yul\":1360:1412   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":1408:1409   */\n      0x00\n        /* \"#utility.yul\":1405:1406   */\n      dup1\n        /* \"#utility.yul\":1398:1410   */\n      revert\n        /* \"#utility.yul\":1360:1412   */\n    tag_387:\n      pop\n        /* \"#utility.yul\":1431:1454   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1280:1460   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1465:1723   */\n    tag_362:\n        /* \"#utility.yul\":1537:1538   */\n      0x00\n        /* \"#utility.yul\":1547:1660   */\n    tag_389:\n        /* \"#utility.yul\":1561:1567   */\n      dup4\n        /* \"#utility.yul\":1558:1559   */\n      dup2\n        /* \"#utility.yul\":1555:1568   */\n      lt\n        /* \"#utility.yul\":1547:1660   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":1637:1648   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":1631:1649   */\n      mload\n        /* \"#utility.yul\":1618:1629   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":1611:1650   */\n      mstore\n        /* \"#utility.yul\":1583:1585   */\n      0x20\n        /* \"#utility.yul\":1576:1586   */\n      add\n        /* \"#utility.yul\":1547:1660   */\n      jump(tag_389)\n    tag_391:\n        /* \"#utility.yul\":1678:1684   */\n      dup4\n        /* \"#utility.yul\":1675:1676   */\n      dup2\n        /* \"#utility.yul\":1672:1685   */\n      gt\n        /* \"#utility.yul\":1669:1717   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1704:1710   */\n      dup5\n        /* \"#utility.yul\":1699:1702   */\n      dup5\n        /* \"#utility.yul\":1695:1711   */\n      add\n        /* \"#utility.yul\":1688:1715   */\n      mstore\n        /* \"#utility.yul\":1669:1717   */\n    tag_392:\n      pop\n        /* \"#utility.yul\":1465:1723   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1728:2056   */\n    tag_363:\n        /* \"#utility.yul\":1781:1784   */\n      0x00\n        /* \"#utility.yul\":1819:1824   */\n      dup2\n        /* \"#utility.yul\":1813:1825   */\n      mload\n        /* \"#utility.yul\":1846:1852   */\n      dup1\n        /* \"#utility.yul\":1841:1844   */\n      dup5\n        /* \"#utility.yul\":1834:1853   */\n      mstore\n        /* \"#utility.yul\":1862:1925   */\n      tag_394\n        /* \"#utility.yul\":1918:1924   */\n      dup2\n        /* \"#utility.yul\":1911:1915   */\n      0x20\n        /* \"#utility.yul\":1906:1909   */\n      dup7\n        /* \"#utility.yul\":1902:1916   */\n      add\n        /* \"#utility.yul\":1895:1899   */\n      0x20\n        /* \"#utility.yul\":1888:1893   */\n      dup7\n        /* \"#utility.yul\":1884:1900   */\n      add\n        /* \"#utility.yul\":1862:1925   */\n      tag_362\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":1970:1972   */\n      0x1f\n        /* \"#utility.yul\":1958:1973   */\n      add\n        /* \"#utility.yul\":1975:2041   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":1954:2042   */\n      and\n        /* \"#utility.yul\":1945:2043   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2045:2049   */\n      0x20\n        /* \"#utility.yul\":1941:2050   */\n      add\n      swap3\n        /* \"#utility.yul\":1728:2056   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2061:2292   */\n    tag_41:\n        /* \"#utility.yul\":2210:2212   */\n      0x20\n        /* \"#utility.yul\":2199:2208   */\n      dup2\n        /* \"#utility.yul\":2192:2213   */\n      mstore\n        /* \"#utility.yul\":2173:2177   */\n      0x00\n        /* \"#utility.yul\":2230:2286   */\n      tag_113\n        /* \"#utility.yul\":2282:2284   */\n      0x20\n        /* \"#utility.yul\":2271:2280   */\n      dup4\n        /* \"#utility.yul\":2267:2285   */\n      add\n        /* \"#utility.yul\":2259:2265   */\n      dup5\n        /* \"#utility.yul\":2230:2286   */\n      tag_363\n      jump\t// in\n        /* \"#utility.yul\":2297:2481   */\n    tag_134:\n        /* \"#utility.yul\":2349:2426   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2346:2347   */\n      0x00\n        /* \"#utility.yul\":2339:2427   */\n      mstore\n        /* \"#utility.yul\":2446:2450   */\n      0x41\n        /* \"#utility.yul\":2443:2444   */\n      0x04\n        /* \"#utility.yul\":2436:2451   */\n      mstore\n        /* \"#utility.yul\":2470:2474   */\n      0x24\n        /* \"#utility.yul\":2467:2468   */\n      0x00\n        /* \"#utility.yul\":2460:2475   */\n      revert\n        /* \"#utility.yul\":2486:2794   */\n    tag_364:\n        /* \"#utility.yul\":2592:2658   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":2587:2589   */\n      0x1f\n        /* \"#utility.yul\":2581:2585   */\n      dup4\n        /* \"#utility.yul\":2577:2590   */\n      add\n        /* \"#utility.yul\":2573:2659   */\n      and\n        /* \"#utility.yul\":2565:2571   */\n      dup2\n        /* \"#utility.yul\":2561:2660   */\n      add\n        /* \"#utility.yul\":2726:2732   */\n      dup2\n        /* \"#utility.yul\":2714:2724   */\n      dup2\n        /* \"#utility.yul\":2711:2733   */\n      lt\n        /* \"#utility.yul\":2690:2708   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2678:2688   */\n      dup3\n        /* \"#utility.yul\":2675:2709   */\n      gt\n        /* \"#utility.yul\":2672:2734   */\n      or\n        /* \"#utility.yul\":2669:2757   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":2737:2755   */\n      tag_400\n      tag_134\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":2773:2775   */\n      0x40\n        /* \"#utility.yul\":2766:2788   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":2486:2794   */\n      jump\t// out\n        /* \"#utility.yul\":2799:2982   */\n    tag_365:\n        /* \"#utility.yul\":2859:2863   */\n      0x00\n        /* \"#utility.yul\":2892:2910   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2884:2890   */\n      dup3\n        /* \"#utility.yul\":2881:2911   */\n      gt\n        /* \"#utility.yul\":2878:2934   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":2914:2932   */\n      tag_403\n      tag_134\n      jump\t// in\n    tag_403:\n      pop\n        /* \"#utility.yul\":2959:2960   */\n      0x05\n        /* \"#utility.yul\":2955:2969   */\n      shl\n        /* \"#utility.yul\":2971:2975   */\n      0x20\n        /* \"#utility.yul\":2951:2976   */\n      add\n      swap1\n        /* \"#utility.yul\":2799:2982   */\n      jump\t// out\n        /* \"#utility.yul\":2987:3711   */\n    tag_366:\n        /* \"#utility.yul\":3041:3046   */\n      0x00\n        /* \"#utility.yul\":3094:3097   */\n      dup3\n        /* \"#utility.yul\":3087:3091   */\n      0x1f\n        /* \"#utility.yul\":3079:3085   */\n      dup4\n        /* \"#utility.yul\":3075:3092   */\n      add\n        /* \"#utility.yul\":3071:3098   */\n      slt\n        /* \"#utility.yul\":3061:3116   */\n      tag_405\n      jumpi\n        /* \"#utility.yul\":3112:3113   */\n      0x00\n        /* \"#utility.yul\":3109:3110   */\n      dup1\n        /* \"#utility.yul\":3102:3114   */\n      revert\n        /* \"#utility.yul\":3061:3116   */\n    tag_405:\n        /* \"#utility.yul\":3148:3154   */\n      dup2\n        /* \"#utility.yul\":3135:3155   */\n      calldataload\n        /* \"#utility.yul\":3174:3178   */\n      0x20\n        /* \"#utility.yul\":3197:3240   */\n      tag_406\n        /* \"#utility.yul\":3237:3239   */\n      dup3\n        /* \"#utility.yul\":3197:3240   */\n      tag_365\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":3269:3271   */\n      0x40\n        /* \"#utility.yul\":3263:3272   */\n      mload\n        /* \"#utility.yul\":3281:3312   */\n      tag_407\n        /* \"#utility.yul\":3309:3311   */\n      dup3\n        /* \"#utility.yul\":3301:3307   */\n      dup3\n        /* \"#utility.yul\":3281:3312   */\n      tag_364\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":3347:3365   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":3439:3440   */\n      0x05\n        /* \"#utility.yul\":3435:3445   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":3423:3446   */\n      dup6\n      add\n        /* \"#utility.yul\":3419:3451   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":3381:3396   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":3463:3478   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":3460:3495   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":3491:3492   */\n      0x00\n        /* \"#utility.yul\":3488:3489   */\n      dup1\n        /* \"#utility.yul\":3481:3493   */\n      revert\n        /* \"#utility.yul\":3460:3495   */\n    tag_408:\n        /* \"#utility.yul\":3527:3529   */\n      dup3\n        /* \"#utility.yul\":3519:3525   */\n      dup7\n        /* \"#utility.yul\":3515:3530   */\n      add\n        /* \"#utility.yul\":3539:3681   */\n    tag_409:\n        /* \"#utility.yul\":3555:3561   */\n      dup5\n        /* \"#utility.yul\":3550:3553   */\n      dup2\n        /* \"#utility.yul\":3547:3562   */\n      lt\n        /* \"#utility.yul\":3539:3681   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":3621:3638   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3609:3639   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3659:3671   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":3572:3584   */\n      dup4\n      add\n        /* \"#utility.yul\":3539:3681   */\n      jump(tag_409)\n    tag_411:\n      pop\n        /* \"#utility.yul\":3699:3705   */\n      swap7\n        /* \"#utility.yul\":2987:3711   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3716:4330   */\n    tag_367:\n        /* \"#utility.yul\":3758:3763   */\n      0x00\n        /* \"#utility.yul\":3811:3814   */\n      dup3\n        /* \"#utility.yul\":3804:3808   */\n      0x1f\n        /* \"#utility.yul\":3796:3802   */\n      dup4\n        /* \"#utility.yul\":3792:3809   */\n      add\n        /* \"#utility.yul\":3788:3815   */\n      slt\n        /* \"#utility.yul\":3778:3833   */\n      tag_413\n      jumpi\n        /* \"#utility.yul\":3829:3830   */\n      0x00\n        /* \"#utility.yul\":3826:3827   */\n      dup1\n        /* \"#utility.yul\":3819:3831   */\n      revert\n        /* \"#utility.yul\":3778:3833   */\n    tag_413:\n        /* \"#utility.yul\":3865:3871   */\n      dup2\n        /* \"#utility.yul\":3852:3872   */\n      calldataload\n        /* \"#utility.yul\":3891:3909   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3887:3889   */\n      dup2\n        /* \"#utility.yul\":3884:3910   */\n      gt\n        /* \"#utility.yul\":3881:3933   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":3913:3931   */\n      tag_415\n      tag_134\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":3962:3964   */\n      0x40\n        /* \"#utility.yul\":3956:3965   */\n      mload\n        /* \"#utility.yul\":3974:4100   */\n      tag_416\n        /* \"#utility.yul\":4094:4098   */\n      0x20\n        /* \"#utility.yul\":4025:4091   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":4018:4022   */\n      0x1f\n        /* \"#utility.yul\":4014:4016   */\n      dup6\n        /* \"#utility.yul\":4010:4023   */\n      add\n        /* \"#utility.yul\":4006:4092   */\n      and\n        /* \"#utility.yul\":4002:4099   */\n      add\n        /* \"#utility.yul\":3994:4000   */\n      dup3\n        /* \"#utility.yul\":3974:4100   */\n      tag_364\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":4124:4126   */\n      dup2\n        /* \"#utility.yul\":4116:4122   */\n      dup2\n        /* \"#utility.yul\":4109:4127   */\n      mstore\n        /* \"#utility.yul\":4170:4173   */\n      dup5\n        /* \"#utility.yul\":4163:4167   */\n      0x20\n        /* \"#utility.yul\":4158:4160   */\n      dup4\n        /* \"#utility.yul\":4150:4156   */\n      dup7\n        /* \"#utility.yul\":4146:4161   */\n      add\n        /* \"#utility.yul\":4142:4168   */\n      add\n        /* \"#utility.yul\":4139:4174   */\n      gt\n        /* \"#utility.yul\":4136:4191   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":4187:4188   */\n      0x00\n        /* \"#utility.yul\":4184:4185   */\n      dup1\n        /* \"#utility.yul\":4177:4189   */\n      revert\n        /* \"#utility.yul\":4136:4191   */\n    tag_417:\n        /* \"#utility.yul\":4251:4253   */\n      dup2\n        /* \"#utility.yul\":4244:4248   */\n      0x20\n        /* \"#utility.yul\":4236:4242   */\n      dup6\n        /* \"#utility.yul\":4232:4249   */\n      add\n        /* \"#utility.yul\":4225:4229   */\n      0x20\n        /* \"#utility.yul\":4217:4223   */\n      dup4\n        /* \"#utility.yul\":4213:4230   */\n      add\n        /* \"#utility.yul\":4200:4254   */\n      calldatacopy\n        /* \"#utility.yul\":4298:4299   */\n      0x00\n        /* \"#utility.yul\":4274:4289   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":4291:4295   */\n      0x20\n        /* \"#utility.yul\":4270:4296   */\n      add\n        /* \"#utility.yul\":4263:4300   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4278:4284   */\n      swap4\n        /* \"#utility.yul\":3716:4330   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4335:5278   */\n    tag_44:\n        /* \"#utility.yul\":4489:4495   */\n      0x00\n        /* \"#utility.yul\":4497:4503   */\n      dup1\n        /* \"#utility.yul\":4505:4511   */\n      0x00\n        /* \"#utility.yul\":4513:4519   */\n      dup1\n        /* \"#utility.yul\":4521:4527   */\n      0x00\n        /* \"#utility.yul\":4574:4577   */\n      0xa0\n        /* \"#utility.yul\":4562:4571   */\n      dup7\n        /* \"#utility.yul\":4553:4560   */\n      dup9\n        /* \"#utility.yul\":4549:4572   */\n      sub\n        /* \"#utility.yul\":4545:4578   */\n      slt\n        /* \"#utility.yul\":4542:4595   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":4591:4592   */\n      0x00\n        /* \"#utility.yul\":4588:4589   */\n      dup1\n        /* \"#utility.yul\":4581:4593   */\n      revert\n        /* \"#utility.yul\":4542:4595   */\n    tag_419:\n        /* \"#utility.yul\":4614:4643   */\n      tag_420\n        /* \"#utility.yul\":4633:4642   */\n      dup7\n        /* \"#utility.yul\":4614:4643   */\n      tag_360\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":4604:4643   */\n      swap5\n      pop\n        /* \"#utility.yul\":4662:4700   */\n      tag_421\n        /* \"#utility.yul\":4696:4698   */\n      0x20\n        /* \"#utility.yul\":4685:4694   */\n      dup8\n        /* \"#utility.yul\":4681:4699   */\n      add\n        /* \"#utility.yul\":4662:4700   */\n      tag_360\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":4652:4700   */\n      swap4\n      pop\n        /* \"#utility.yul\":4751:4753   */\n      0x40\n        /* \"#utility.yul\":4740:4749   */\n      dup7\n        /* \"#utility.yul\":4736:4754   */\n      add\n        /* \"#utility.yul\":4723:4755   */\n      calldataload\n        /* \"#utility.yul\":4774:4792   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4815:4817   */\n      dup1\n        /* \"#utility.yul\":4807:4813   */\n      dup3\n        /* \"#utility.yul\":4804:4818   */\n      gt\n        /* \"#utility.yul\":4801:4835   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":4831:4832   */\n      0x00\n        /* \"#utility.yul\":4828:4829   */\n      dup1\n        /* \"#utility.yul\":4821:4833   */\n      revert\n        /* \"#utility.yul\":4801:4835   */\n    tag_422:\n        /* \"#utility.yul\":4854:4915   */\n      tag_423\n        /* \"#utility.yul\":4907:4914   */\n      dup10\n        /* \"#utility.yul\":4898:4904   */\n      dup4\n        /* \"#utility.yul\":4887:4896   */\n      dup11\n        /* \"#utility.yul\":4883:4905   */\n      add\n        /* \"#utility.yul\":4854:4915   */\n      tag_366\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":4844:4915   */\n      swap5\n      pop\n        /* \"#utility.yul\":4968:4970   */\n      0x60\n        /* \"#utility.yul\":4957:4966   */\n      dup9\n        /* \"#utility.yul\":4953:4971   */\n      add\n        /* \"#utility.yul\":4940:4972   */\n      calldataload\n        /* \"#utility.yul\":4924:4972   */\n      swap2\n      pop\n        /* \"#utility.yul\":4997:4999   */\n      dup1\n        /* \"#utility.yul\":4987:4995   */\n      dup3\n        /* \"#utility.yul\":4984:5000   */\n      gt\n        /* \"#utility.yul\":4981:5017   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":5013:5014   */\n      0x00\n        /* \"#utility.yul\":5010:5011   */\n      dup1\n        /* \"#utility.yul\":5003:5015   */\n      revert\n        /* \"#utility.yul\":4981:5017   */\n    tag_424:\n        /* \"#utility.yul\":5036:5099   */\n      tag_425\n        /* \"#utility.yul\":5091:5098   */\n      dup10\n        /* \"#utility.yul\":5080:5088   */\n      dup4\n        /* \"#utility.yul\":5069:5078   */\n      dup11\n        /* \"#utility.yul\":5065:5089   */\n      add\n        /* \"#utility.yul\":5036:5099   */\n      tag_366\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":5026:5099   */\n      swap4\n      pop\n        /* \"#utility.yul\":5152:5155   */\n      0x80\n        /* \"#utility.yul\":5141:5150   */\n      dup9\n        /* \"#utility.yul\":5137:5156   */\n      add\n        /* \"#utility.yul\":5124:5157   */\n      calldataload\n        /* \"#utility.yul\":5108:5157   */\n      swap2\n      pop\n        /* \"#utility.yul\":5182:5184   */\n      dup1\n        /* \"#utility.yul\":5172:5180   */\n      dup3\n        /* \"#utility.yul\":5169:5185   */\n      gt\n        /* \"#utility.yul\":5166:5202   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":5198:5199   */\n      0x00\n        /* \"#utility.yul\":5195:5196   */\n      dup1\n        /* \"#utility.yul\":5188:5200   */\n      revert\n        /* \"#utility.yul\":5166:5202   */\n    tag_426:\n      pop\n        /* \"#utility.yul\":5221:5272   */\n      tag_427\n        /* \"#utility.yul\":5264:5271   */\n      dup9\n        /* \"#utility.yul\":5253:5261   */\n      dup3\n        /* \"#utility.yul\":5242:5251   */\n      dup10\n        /* \"#utility.yul\":5238:5262   */\n      add\n        /* \"#utility.yul\":5221:5272   */\n      tag_367\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":5211:5272   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4335:5278   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5514:6722   */\n    tag_52:\n        /* \"#utility.yul\":5632:5638   */\n      0x00\n        /* \"#utility.yul\":5640:5646   */\n      dup1\n        /* \"#utility.yul\":5693:5695   */\n      0x40\n        /* \"#utility.yul\":5681:5690   */\n      dup4\n        /* \"#utility.yul\":5672:5679   */\n      dup6\n        /* \"#utility.yul\":5668:5691   */\n      sub\n        /* \"#utility.yul\":5664:5696   */\n      slt\n        /* \"#utility.yul\":5661:5713   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":5709:5710   */\n      0x00\n        /* \"#utility.yul\":5706:5707   */\n      dup1\n        /* \"#utility.yul\":5699:5711   */\n      revert\n        /* \"#utility.yul\":5661:5713   */\n    tag_430:\n        /* \"#utility.yul\":5749:5758   */\n      dup3\n        /* \"#utility.yul\":5736:5759   */\n      calldataload\n        /* \"#utility.yul\":5778:5796   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5819:5821   */\n      dup1\n        /* \"#utility.yul\":5811:5817   */\n      dup3\n        /* \"#utility.yul\":5808:5822   */\n      gt\n        /* \"#utility.yul\":5805:5839   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":5835:5836   */\n      0x00\n        /* \"#utility.yul\":5832:5833   */\n      dup1\n        /* \"#utility.yul\":5825:5837   */\n      revert\n        /* \"#utility.yul\":5805:5839   */\n    tag_431:\n        /* \"#utility.yul\":5873:5879   */\n      dup2\n        /* \"#utility.yul\":5862:5871   */\n      dup6\n        /* \"#utility.yul\":5858:5880   */\n      add\n        /* \"#utility.yul\":5848:5880   */\n      swap2\n      pop\n        /* \"#utility.yul\":5918:5925   */\n      dup6\n        /* \"#utility.yul\":5911:5915   */\n      0x1f\n        /* \"#utility.yul\":5907:5909   */\n      dup4\n        /* \"#utility.yul\":5903:5916   */\n      add\n        /* \"#utility.yul\":5899:5926   */\n      slt\n        /* \"#utility.yul\":5889:5944   */\n      tag_432\n      jumpi\n        /* \"#utility.yul\":5940:5941   */\n      0x00\n        /* \"#utility.yul\":5937:5938   */\n      dup1\n        /* \"#utility.yul\":5930:5942   */\n      revert\n        /* \"#utility.yul\":5889:5944   */\n    tag_432:\n        /* \"#utility.yul\":5976:5978   */\n      dup2\n        /* \"#utility.yul\":5963:5979   */\n      calldataload\n        /* \"#utility.yul\":5998:6002   */\n      0x20\n        /* \"#utility.yul\":6021:6064   */\n      tag_433\n        /* \"#utility.yul\":6061:6063   */\n      dup3\n        /* \"#utility.yul\":6021:6064   */\n      tag_365\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":6093:6095   */\n      0x40\n        /* \"#utility.yul\":6087:6096   */\n      mload\n        /* \"#utility.yul\":6105:6136   */\n      tag_434\n        /* \"#utility.yul\":6133:6135   */\n      dup3\n        /* \"#utility.yul\":6125:6131   */\n      dup3\n        /* \"#utility.yul\":6105:6136   */\n      tag_364\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":6171:6189   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":6259:6260   */\n      0x05\n        /* \"#utility.yul\":6255:6265   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":6247:6266   */\n      dup6\n      add\n        /* \"#utility.yul\":6243:6271   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":6205:6220   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":6283:6302   */\n      dup10\n      dup5\n      gt\n        /* \"#utility.yul\":6280:6319   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":6315:6316   */\n      0x00\n        /* \"#utility.yul\":6312:6313   */\n      dup1\n        /* \"#utility.yul\":6305:6317   */\n      revert\n        /* \"#utility.yul\":6280:6319   */\n    tag_435:\n        /* \"#utility.yul\":6339:6350   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":6359:6507   */\n    tag_436:\n        /* \"#utility.yul\":6375:6381   */\n      dup4\n        /* \"#utility.yul\":6370:6373   */\n      dup7\n        /* \"#utility.yul\":6367:6382   */\n      lt\n        /* \"#utility.yul\":6359:6507   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":6441:6464   */\n      tag_439\n        /* \"#utility.yul\":6460:6463   */\n      dup7\n        /* \"#utility.yul\":6441:6464   */\n      tag_360\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":6429:6465   */\n      dup3\n      mstore\n        /* \"#utility.yul\":6392:6404   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":6485:6497   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6359:6507   */\n      jump(tag_436)\n    tag_438:\n        /* \"#utility.yul\":6526:6532   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":6570:6588   */\n      dup7\n      add\n        /* \"#utility.yul\":6557:6589   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":6601:6617   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6598:6634   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":6630:6631   */\n      0x00\n        /* \"#utility.yul\":6627:6628   */\n      dup1\n        /* \"#utility.yul\":6620:6632   */\n      revert\n        /* \"#utility.yul\":6598:6634   */\n    tag_440:\n      pop\n        /* \"#utility.yul\":6653:6716   */\n      tag_441\n        /* \"#utility.yul\":6708:6715   */\n      dup6\n        /* \"#utility.yul\":6697:6705   */\n      dup3\n        /* \"#utility.yul\":6686:6695   */\n      dup7\n        /* \"#utility.yul\":6682:6706   */\n      add\n        /* \"#utility.yul\":6653:6716   */\n      tag_366\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":6643:6716   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5514:6722   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6727:7162   */\n    tag_368:\n        /* \"#utility.yul\":6780:6783   */\n      0x00\n        /* \"#utility.yul\":6818:6823   */\n      dup2\n        /* \"#utility.yul\":6812:6824   */\n      mload\n        /* \"#utility.yul\":6845:6851   */\n      dup1\n        /* \"#utility.yul\":6840:6843   */\n      dup5\n        /* \"#utility.yul\":6833:6852   */\n      mstore\n        /* \"#utility.yul\":6871:6875   */\n      0x20\n        /* \"#utility.yul\":6900:6902   */\n      dup1\n        /* \"#utility.yul\":6895:6898   */\n      dup6\n        /* \"#utility.yul\":6891:6903   */\n      add\n        /* \"#utility.yul\":6884:6903   */\n      swap5\n      pop\n        /* \"#utility.yul\":6937:6939   */\n      dup1\n        /* \"#utility.yul\":6930:6935   */\n      dup5\n        /* \"#utility.yul\":6926:6940   */\n      add\n        /* \"#utility.yul\":6958:6959   */\n      0x00\n        /* \"#utility.yul\":6968:7137   */\n    tag_443:\n        /* \"#utility.yul\":6982:6988   */\n      dup4\n        /* \"#utility.yul\":6979:6980   */\n      dup2\n        /* \"#utility.yul\":6976:6989   */\n      lt\n        /* \"#utility.yul\":6968:7137   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":7043:7056   */\n      dup2\n      mload\n        /* \"#utility.yul\":7031:7057   */\n      dup8\n      mstore\n        /* \"#utility.yul\":7077:7089   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":7112:7127   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":7004:7005   */\n      0x01\n        /* \"#utility.yul\":6997:7006   */\n      add\n        /* \"#utility.yul\":6968:7137   */\n      jump(tag_443)\n    tag_445:\n      pop\n        /* \"#utility.yul\":7153:7156   */\n      swap5\n      swap6\n        /* \"#utility.yul\":6727:7162   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7167:7428   */\n    tag_55:\n        /* \"#utility.yul\":7346:7348   */\n      0x20\n        /* \"#utility.yul\":7335:7344   */\n      dup2\n        /* \"#utility.yul\":7328:7349   */\n      mstore\n        /* \"#utility.yul\":7309:7313   */\n      0x00\n        /* \"#utility.yul\":7366:7422   */\n      tag_113\n        /* \"#utility.yul\":7418:7420   */\n      0x20\n        /* \"#utility.yul\":7407:7416   */\n      dup4\n        /* \"#utility.yul\":7403:7421   */\n      add\n        /* \"#utility.yul\":7395:7401   */\n      dup5\n        /* \"#utility.yul\":7366:7422   */\n      tag_368\n      jump\t// in\n        /* \"#utility.yul\":7433:7781   */\n    tag_369:\n        /* \"#utility.yul\":7485:7493   */\n      0x00\n        /* \"#utility.yul\":7495:7501   */\n      dup1\n        /* \"#utility.yul\":7549:7552   */\n      dup4\n        /* \"#utility.yul\":7542:7546   */\n      0x1f\n        /* \"#utility.yul\":7534:7540   */\n      dup5\n        /* \"#utility.yul\":7530:7547   */\n      add\n        /* \"#utility.yul\":7526:7553   */\n      slt\n        /* \"#utility.yul\":7516:7571   */\n      tag_449\n      jumpi\n        /* \"#utility.yul\":7567:7568   */\n      0x00\n        /* \"#utility.yul\":7564:7565   */\n      dup1\n        /* \"#utility.yul\":7557:7569   */\n      revert\n        /* \"#utility.yul\":7516:7571   */\n    tag_449:\n      pop\n        /* \"#utility.yul\":7590:7610   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":7633:7651   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7622:7652   */\n      dup2\n      gt\n        /* \"#utility.yul\":7619:7669   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":7665:7666   */\n      0x00\n        /* \"#utility.yul\":7662:7663   */\n      dup1\n        /* \"#utility.yul\":7655:7667   */\n      revert\n        /* \"#utility.yul\":7619:7669   */\n    tag_450:\n        /* \"#utility.yul\":7702:7706   */\n      0x20\n        /* \"#utility.yul\":7694:7700   */\n      dup4\n        /* \"#utility.yul\":7690:7707   */\n      add\n        /* \"#utility.yul\":7678:7707   */\n      swap2\n      pop\n        /* \"#utility.yul\":7754:7757   */\n      dup4\n        /* \"#utility.yul\":7747:7751   */\n      0x20\n        /* \"#utility.yul\":7738:7744   */\n      dup3\n        /* \"#utility.yul\":7730:7736   */\n      dup6\n        /* \"#utility.yul\":7726:7745   */\n      add\n        /* \"#utility.yul\":7722:7752   */\n      add\n        /* \"#utility.yul\":7719:7758   */\n      gt\n        /* \"#utility.yul\":7716:7775   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":7771:7772   */\n      0x00\n        /* \"#utility.yul\":7768:7769   */\n      dup1\n        /* \"#utility.yul\":7761:7773   */\n      revert\n        /* \"#utility.yul\":7716:7775   */\n    tag_451:\n        /* \"#utility.yul\":7433:7781   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7786:8197   */\n    tag_62:\n        /* \"#utility.yul\":7857:7863   */\n      0x00\n        /* \"#utility.yul\":7865:7871   */\n      dup1\n        /* \"#utility.yul\":7918:7920   */\n      0x20\n        /* \"#utility.yul\":7906:7915   */\n      dup4\n        /* \"#utility.yul\":7897:7904   */\n      dup6\n        /* \"#utility.yul\":7893:7916   */\n      sub\n        /* \"#utility.yul\":7889:7921   */\n      slt\n        /* \"#utility.yul\":7886:7938   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":7934:7935   */\n      0x00\n        /* \"#utility.yul\":7931:7932   */\n      dup1\n        /* \"#utility.yul\":7924:7936   */\n      revert\n        /* \"#utility.yul\":7886:7938   */\n    tag_453:\n        /* \"#utility.yul\":7974:7983   */\n      dup3\n        /* \"#utility.yul\":7961:7984   */\n      calldataload\n        /* \"#utility.yul\":8007:8025   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7999:8005   */\n      dup2\n        /* \"#utility.yul\":7996:8026   */\n      gt\n        /* \"#utility.yul\":7993:8043   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":8039:8040   */\n      0x00\n        /* \"#utility.yul\":8036:8037   */\n      dup1\n        /* \"#utility.yul\":8029:8041   */\n      revert\n        /* \"#utility.yul\":7993:8043   */\n    tag_454:\n        /* \"#utility.yul\":8078:8137   */\n      tag_455\n        /* \"#utility.yul\":8129:8136   */\n      dup6\n        /* \"#utility.yul\":8120:8126   */\n      dup3\n        /* \"#utility.yul\":8109:8118   */\n      dup7\n        /* \"#utility.yul\":8105:8127   */\n      add\n        /* \"#utility.yul\":8078:8137   */\n      tag_369\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":8156:8164   */\n      swap1\n      swap7\n        /* \"#utility.yul\":8052:8137   */\n      swap1\n      swap6\n      pop\n        /* \"#utility.yul\":7786:8197   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8202:8549   */\n    tag_73:\n        /* \"#utility.yul\":8267:8273   */\n      0x00\n        /* \"#utility.yul\":8275:8281   */\n      dup1\n        /* \"#utility.yul\":8328:8330   */\n      0x40\n        /* \"#utility.yul\":8316:8325   */\n      dup4\n        /* \"#utility.yul\":8307:8314   */\n      dup6\n        /* \"#utility.yul\":8303:8326   */\n      sub\n        /* \"#utility.yul\":8299:8331   */\n      slt\n        /* \"#utility.yul\":8296:8348   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":8344:8345   */\n      0x00\n        /* \"#utility.yul\":8341:8342   */\n      dup1\n        /* \"#utility.yul\":8334:8346   */\n      revert\n        /* \"#utility.yul\":8296:8348   */\n    tag_457:\n        /* \"#utility.yul\":8367:8396   */\n      tag_458\n        /* \"#utility.yul\":8386:8395   */\n      dup4\n        /* \"#utility.yul\":8367:8396   */\n      tag_360\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":8357:8396   */\n      swap2\n      pop\n        /* \"#utility.yul\":8446:8448   */\n      0x20\n        /* \"#utility.yul\":8435:8444   */\n      dup4\n        /* \"#utility.yul\":8431:8449   */\n      add\n        /* \"#utility.yul\":8418:8450   */\n      calldataload\n        /* \"#utility.yul\":8493:8498   */\n      dup1\n        /* \"#utility.yul\":8486:8499   */\n      iszero\n        /* \"#utility.yul\":8479:8500   */\n      iszero\n        /* \"#utility.yul\":8472:8477   */\n      dup2\n        /* \"#utility.yul\":8469:8501   */\n      eq\n        /* \"#utility.yul\":8459:8519   */\n      tag_459\n      jumpi\n        /* \"#utility.yul\":8515:8516   */\n      0x00\n        /* \"#utility.yul\":8512:8513   */\n      dup1\n        /* \"#utility.yul\":8505:8517   */\n      revert\n        /* \"#utility.yul\":8459:8519   */\n    tag_459:\n        /* \"#utility.yul\":8538:8543   */\n      dup1\n        /* \"#utility.yul\":8528:8543   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":8202:8549   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8554:9176   */\n    tag_77:\n        /* \"#utility.yul\":8652:8658   */\n      0x00\n        /* \"#utility.yul\":8660:8666   */\n      dup1\n        /* \"#utility.yul\":8668:8674   */\n      0x00\n        /* \"#utility.yul\":8676:8682   */\n      dup1\n        /* \"#utility.yul\":8684:8690   */\n      0x00\n        /* \"#utility.yul\":8737:8740   */\n      0x80\n        /* \"#utility.yul\":8725:8734   */\n      dup7\n        /* \"#utility.yul\":8716:8723   */\n      dup9\n        /* \"#utility.yul\":8712:8735   */\n      sub\n        /* \"#utility.yul\":8708:8741   */\n      slt\n        /* \"#utility.yul\":8705:8758   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":8754:8755   */\n      0x00\n        /* \"#utility.yul\":8751:8752   */\n      dup1\n        /* \"#utility.yul\":8744:8756   */\n      revert\n        /* \"#utility.yul\":8705:8758   */\n    tag_461:\n        /* \"#utility.yul\":8777:8806   */\n      tag_462\n        /* \"#utility.yul\":8796:8805   */\n      dup7\n        /* \"#utility.yul\":8777:8806   */\n      tag_360\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":8767:8806   */\n      swap5\n      pop\n        /* \"#utility.yul\":8853:8855   */\n      0x20\n        /* \"#utility.yul\":8842:8851   */\n      dup7\n        /* \"#utility.yul\":8838:8856   */\n      add\n        /* \"#utility.yul\":8825:8857   */\n      calldataload\n        /* \"#utility.yul\":8815:8857   */\n      swap4\n      pop\n        /* \"#utility.yul\":8904:8906   */\n      0x40\n        /* \"#utility.yul\":8893:8902   */\n      dup7\n        /* \"#utility.yul\":8889:8907   */\n      add\n        /* \"#utility.yul\":8876:8908   */\n      calldataload\n        /* \"#utility.yul\":8866:8908   */\n      swap3\n      pop\n        /* \"#utility.yul\":8959:8961   */\n      0x60\n        /* \"#utility.yul\":8948:8957   */\n      dup7\n        /* \"#utility.yul\":8944:8962   */\n      add\n        /* \"#utility.yul\":8931:8963   */\n      calldataload\n        /* \"#utility.yul\":8986:9004   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8978:8984   */\n      dup2\n        /* \"#utility.yul\":8975:9005   */\n      gt\n        /* \"#utility.yul\":8972:9022   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":9018:9019   */\n      0x00\n        /* \"#utility.yul\":9015:9016   */\n      dup1\n        /* \"#utility.yul\":9008:9020   */\n      revert\n        /* \"#utility.yul\":8972:9022   */\n    tag_463:\n        /* \"#utility.yul\":9057:9116   */\n      tag_464\n        /* \"#utility.yul\":9108:9115   */\n      dup9\n        /* \"#utility.yul\":9099:9105   */\n      dup3\n        /* \"#utility.yul\":9088:9097   */\n      dup10\n        /* \"#utility.yul\":9084:9106   */\n      add\n        /* \"#utility.yul\":9057:9116   */\n      tag_369\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":8554:9176   */\n      swap7\n      swap10\n      swap6\n      swap9\n      pop\n      swap4\n      swap7\n      pop\n        /* \"#utility.yul\":9135:9143   */\n      swap3\n      swap5\n        /* \"#utility.yul\":9031:9116   */\n      swap4\n        /* \"#utility.yul\":8554:9176   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9181:9367   */\n    tag_85:\n        /* \"#utility.yul\":9240:9246   */\n      0x00\n        /* \"#utility.yul\":9293:9295   */\n      0x20\n        /* \"#utility.yul\":9281:9290   */\n      dup3\n        /* \"#utility.yul\":9272:9279   */\n      dup5\n        /* \"#utility.yul\":9268:9291   */\n      sub\n        /* \"#utility.yul\":9264:9296   */\n      slt\n        /* \"#utility.yul\":9261:9313   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":9309:9310   */\n      0x00\n        /* \"#utility.yul\":9306:9307   */\n      dup1\n        /* \"#utility.yul\":9299:9311   */\n      revert\n        /* \"#utility.yul\":9261:9313   */\n    tag_466:\n        /* \"#utility.yul\":9332:9361   */\n      tag_113\n        /* \"#utility.yul\":9351:9360   */\n      dup3\n        /* \"#utility.yul\":9332:9361   */\n      tag_360\n      jump\t// in\n        /* \"#utility.yul\":9372:9632   */\n    tag_92:\n        /* \"#utility.yul\":9440:9446   */\n      0x00\n        /* \"#utility.yul\":9448:9454   */\n      dup1\n        /* \"#utility.yul\":9501:9503   */\n      0x40\n        /* \"#utility.yul\":9489:9498   */\n      dup4\n        /* \"#utility.yul\":9480:9487   */\n      dup6\n        /* \"#utility.yul\":9476:9499   */\n      sub\n        /* \"#utility.yul\":9472:9504   */\n      slt\n        /* \"#utility.yul\":9469:9521   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":9517:9518   */\n      0x00\n        /* \"#utility.yul\":9514:9515   */\n      dup1\n        /* \"#utility.yul\":9507:9519   */\n      revert\n        /* \"#utility.yul\":9469:9521   */\n    tag_469:\n        /* \"#utility.yul\":9540:9569   */\n      tag_470\n        /* \"#utility.yul\":9559:9568   */\n      dup4\n        /* \"#utility.yul\":9540:9569   */\n      tag_360\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":9530:9569   */\n      swap2\n      pop\n        /* \"#utility.yul\":9588:9626   */\n      tag_471\n        /* \"#utility.yul\":9622:9624   */\n      0x20\n        /* \"#utility.yul\":9611:9620   */\n      dup5\n        /* \"#utility.yul\":9607:9625   */\n      add\n        /* \"#utility.yul\":9588:9626   */\n      tag_360\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":9578:9626   */\n      swap1\n      pop\n        /* \"#utility.yul\":9372:9632   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9637:10243   */\n    tag_97:\n        /* \"#utility.yul\":9741:9747   */\n      0x00\n        /* \"#utility.yul\":9749:9755   */\n      dup1\n        /* \"#utility.yul\":9757:9763   */\n      0x00\n        /* \"#utility.yul\":9765:9771   */\n      dup1\n        /* \"#utility.yul\":9773:9779   */\n      0x00\n        /* \"#utility.yul\":9826:9829   */\n      0xa0\n        /* \"#utility.yul\":9814:9823   */\n      dup7\n        /* \"#utility.yul\":9805:9812   */\n      dup9\n        /* \"#utility.yul\":9801:9824   */\n      sub\n        /* \"#utility.yul\":9797:9830   */\n      slt\n        /* \"#utility.yul\":9794:9847   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":9843:9844   */\n      0x00\n        /* \"#utility.yul\":9840:9841   */\n      dup1\n        /* \"#utility.yul\":9833:9845   */\n      revert\n        /* \"#utility.yul\":9794:9847   */\n    tag_473:\n        /* \"#utility.yul\":9866:9895   */\n      tag_474\n        /* \"#utility.yul\":9885:9894   */\n      dup7\n        /* \"#utility.yul\":9866:9895   */\n      tag_360\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":9856:9895   */\n      swap5\n      pop\n        /* \"#utility.yul\":9914:9952   */\n      tag_475\n        /* \"#utility.yul\":9948:9950   */\n      0x20\n        /* \"#utility.yul\":9937:9946   */\n      dup8\n        /* \"#utility.yul\":9933:9951   */\n      add\n        /* \"#utility.yul\":9914:9952   */\n      tag_360\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":9904:9952   */\n      swap4\n      pop\n        /* \"#utility.yul\":9999:10001   */\n      0x40\n        /* \"#utility.yul\":9988:9997   */\n      dup7\n        /* \"#utility.yul\":9984:10002   */\n      add\n        /* \"#utility.yul\":9971:10003   */\n      calldataload\n        /* \"#utility.yul\":9961:10003   */\n      swap3\n      pop\n        /* \"#utility.yul\":10050:10052   */\n      0x60\n        /* \"#utility.yul\":10039:10048   */\n      dup7\n        /* \"#utility.yul\":10035:10053   */\n      add\n        /* \"#utility.yul\":10022:10054   */\n      calldataload\n        /* \"#utility.yul\":10012:10054   */\n      swap2\n      pop\n        /* \"#utility.yul\":10105:10108   */\n      0x80\n        /* \"#utility.yul\":10094:10103   */\n      dup7\n        /* \"#utility.yul\":10090:10109   */\n      add\n        /* \"#utility.yul\":10077:10110   */\n      calldataload\n        /* \"#utility.yul\":10133:10151   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10125:10131   */\n      dup2\n        /* \"#utility.yul\":10122:10152   */\n      gt\n        /* \"#utility.yul\":10119:10169   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":10165:10166   */\n      0x00\n        /* \"#utility.yul\":10162:10163   */\n      dup1\n        /* \"#utility.yul\":10155:10167   */\n      revert\n        /* \"#utility.yul\":10119:10169   */\n    tag_476:\n        /* \"#utility.yul\":10188:10237   */\n      tag_427\n        /* \"#utility.yul\":10229:10236   */\n      dup9\n        /* \"#utility.yul\":10220:10226   */\n      dup3\n        /* \"#utility.yul\":10209:10218   */\n      dup10\n        /* \"#utility.yul\":10205:10227   */\n      add\n        /* \"#utility.yul\":10188:10237   */\n      tag_367\n      jump\t// in\n        /* \"#utility.yul\":10660:10845   */\n    tag_370:\n        /* \"#utility.yul\":10702:10705   */\n      0x00\n        /* \"#utility.yul\":10740:10745   */\n      dup2\n        /* \"#utility.yul\":10734:10746   */\n      mload\n        /* \"#utility.yul\":10755:10807   */\n      tag_480\n        /* \"#utility.yul\":10800:10806   */\n      dup2\n        /* \"#utility.yul\":10795:10798   */\n      dup6\n        /* \"#utility.yul\":10788:10792   */\n      0x20\n        /* \"#utility.yul\":10781:10786   */\n      dup7\n        /* \"#utility.yul\":10777:10793   */\n      add\n        /* \"#utility.yul\":10755:10807   */\n      tag_362\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":10823:10839   */\n      swap3\n      swap1\n      swap3\n      add\n      swap3\n        /* \"#utility.yul\":10660:10845   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10850:11497   */\n    tag_116:\n        /* \"#utility.yul\":11130:11133   */\n      0x00\n        /* \"#utility.yul\":11168:11174   */\n      dup4\n        /* \"#utility.yul\":11162:11175   */\n      mload\n        /* \"#utility.yul\":11184:11237   */\n      tag_482\n        /* \"#utility.yul\":11230:11236   */\n      dup2\n        /* \"#utility.yul\":11225:11228   */\n      dup5\n        /* \"#utility.yul\":11218:11222   */\n      0x20\n        /* \"#utility.yul\":11210:11216   */\n      dup9\n        /* \"#utility.yul\":11206:11223   */\n      add\n        /* \"#utility.yul\":11184:11237   */\n      tag_362\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":11300:11313   */\n      dup4\n      mload\n        /* \"#utility.yul\":11259:11275   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":11322:11379   */\n      tag_483\n        /* \"#utility.yul\":11300:11313   */\n      dup2\n        /* \"#utility.yul\":11259:11275   */\n      dup4\n        /* \"#utility.yul\":11356:11360   */\n      0x20\n        /* \"#utility.yul\":11344:11361   */\n      dup9\n      add\n        /* \"#utility.yul\":11322:11379   */\n      tag_362\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":11444:11460   */\n      0x2f6d657461646174612e6a736f6e000000000000000000000000000000000000\n        /* \"#utility.yul\":11401:11421   */\n      swap2\n      add\n        /* \"#utility.yul\":11430:11461   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":11488:11490   */\n      0x0e\n        /* \"#utility.yul\":11477:11491   */\n      add\n      swap5\n        /* \"#utility.yul\":10850:11497   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12331:12515   */\n    tag_142:\n        /* \"#utility.yul\":12383:12460   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12380:12381   */\n      0x00\n        /* \"#utility.yul\":12373:12461   */\n      mstore\n        /* \"#utility.yul\":12480:12484   */\n      0x32\n        /* \"#utility.yul\":12477:12478   */\n      0x04\n        /* \"#utility.yul\":12470:12485   */\n      mstore\n        /* \"#utility.yul\":12504:12508   */\n      0x24\n        /* \"#utility.yul\":12501:12502   */\n      0x00\n        /* \"#utility.yul\":12494:12509   */\n      revert\n        /* \"#utility.yul\":12520:12704   */\n    tag_371:\n        /* \"#utility.yul\":12572:12649   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12569:12570   */\n      0x00\n        /* \"#utility.yul\":12562:12650   */\n      mstore\n        /* \"#utility.yul\":12669:12673   */\n      0x11\n        /* \"#utility.yul\":12666:12667   */\n      0x04\n        /* \"#utility.yul\":12659:12674   */\n      mstore\n        /* \"#utility.yul\":12693:12697   */\n      0x24\n        /* \"#utility.yul\":12690:12691   */\n      0x00\n        /* \"#utility.yul\":12683:12698   */\n      revert\n        /* \"#utility.yul\":12709:12904   */\n    tag_148:\n        /* \"#utility.yul\":12748:12751   */\n      0x00\n        /* \"#utility.yul\":12779:12845   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12772:12777   */\n      dup3\n        /* \"#utility.yul\":12769:12846   */\n      sub\n        /* \"#utility.yul\":12766:12869   */\n      tag_490\n      jumpi\n        /* \"#utility.yul\":12849:12867   */\n      tag_490\n      tag_371\n      jump\t// in\n    tag_490:\n      pop\n        /* \"#utility.yul\":12896:12897   */\n      0x01\n        /* \"#utility.yul\":12885:12898   */\n      add\n      swap1\n        /* \"#utility.yul\":12709:12904   */\n      jump\t// out\n        /* \"#utility.yul\":13262:13699   */\n    tag_160:\n        /* \"#utility.yul\":13341:13342   */\n      0x01\n        /* \"#utility.yul\":13337:13349   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":13384:13396   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":13405:13466   */\n      tag_493\n      jumpi\n        /* \"#utility.yul\":13459:13463   */\n      0x7f\n        /* \"#utility.yul\":13451:13457   */\n      dup3\n        /* \"#utility.yul\":13447:13464   */\n      and\n        /* \"#utility.yul\":13437:13464   */\n      swap2\n      pop\n        /* \"#utility.yul\":13405:13466   */\n    tag_493:\n        /* \"#utility.yul\":13512:13514   */\n      0x20\n        /* \"#utility.yul\":13504:13510   */\n      dup3\n        /* \"#utility.yul\":13501:13515   */\n      lt\n        /* \"#utility.yul\":13481:13499   */\n      dup2\n        /* \"#utility.yul\":13478:13516   */\n      sub\n        /* \"#utility.yul\":13475:13693   */\n      tag_494\n      jumpi\n        /* \"#utility.yul\":13549:13626   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13546:13547   */\n      0x00\n        /* \"#utility.yul\":13539:13627   */\n      mstore\n        /* \"#utility.yul\":13650:13654   */\n      0x22\n        /* \"#utility.yul\":13647:13648   */\n      0x04\n        /* \"#utility.yul\":13640:13655   */\n      mstore\n        /* \"#utility.yul\":13678:13682   */\n      0x24\n        /* \"#utility.yul\":13675:13676   */\n      0x00\n        /* \"#utility.yul\":13668:13683   */\n      revert\n        /* \"#utility.yul\":13475:13693   */\n    tag_494:\n      pop\n        /* \"#utility.yul\":13262:13699   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14646:15935   */\n    tag_222:\n        /* \"#utility.yul\":14822:14825   */\n      0x00\n        /* \"#utility.yul\":14851:14852   */\n      dup1\n        /* \"#utility.yul\":14884:14890   */\n      dup5\n        /* \"#utility.yul\":14878:14891   */\n      sload\n        /* \"#utility.yul\":14914:14917   */\n      dup2\n        /* \"#utility.yul\":14936:14937   */\n      0x01\n        /* \"#utility.yul\":14964:14973   */\n      dup3\n        /* \"#utility.yul\":14960:14962   */\n      dup2\n        /* \"#utility.yul\":14956:14974   */\n      shr\n        /* \"#utility.yul\":14946:14974   */\n      swap2\n      pop\n        /* \"#utility.yul\":15024:15026   */\n      dup1\n        /* \"#utility.yul\":15013:15022   */\n      dup4\n        /* \"#utility.yul\":15009:15027   */\n      and\n        /* \"#utility.yul\":15046:15064   */\n      dup1\n        /* \"#utility.yul\":15036:15097   */\n      tag_499\n      jumpi\n        /* \"#utility.yul\":15090:15094   */\n      0x7f\n        /* \"#utility.yul\":15082:15088   */\n      dup4\n        /* \"#utility.yul\":15078:15095   */\n      and\n        /* \"#utility.yul\":15068:15095   */\n      swap3\n      pop\n        /* \"#utility.yul\":15036:15097   */\n    tag_499:\n        /* \"#utility.yul\":15116:15118   */\n      0x20\n        /* \"#utility.yul\":15164:15166   */\n      dup1\n        /* \"#utility.yul\":15156:15162   */\n      dup5\n        /* \"#utility.yul\":15153:15167   */\n      lt\n        /* \"#utility.yul\":15133:15151   */\n      dup3\n        /* \"#utility.yul\":15130:15168   */\n      sub\n        /* \"#utility.yul\":15127:15349   */\n      tag_500\n      jumpi\n        /* \"#utility.yul\":15203:15280   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15198:15201   */\n      dup7\n        /* \"#utility.yul\":15191:15281   */\n      mstore\n        /* \"#utility.yul\":15304:15308   */\n      0x22\n        /* \"#utility.yul\":15301:15302   */\n      0x04\n        /* \"#utility.yul\":15294:15309   */\n      mstore\n        /* \"#utility.yul\":15334:15338   */\n      0x24\n        /* \"#utility.yul\":15329:15332   */\n      dup7\n        /* \"#utility.yul\":15322:15339   */\n      revert\n        /* \"#utility.yul\":15127:15349   */\n    tag_500:\n        /* \"#utility.yul\":15365:15383   */\n      dup2\n        /* \"#utility.yul\":15392:15554   */\n      dup1\n      iszero\n      tag_502\n      jumpi\n        /* \"#utility.yul\":15568:15569   */\n      0x01\n        /* \"#utility.yul\":15563:15883   */\n      dup2\n      eq\n      tag_503\n      jumpi\n        /* \"#utility.yul\":15358:15883   */\n      jump(tag_501)\n        /* \"#utility.yul\":15392:15554   */\n    tag_502:\n        /* \"#utility.yul\":15440:15506   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n        /* \"#utility.yul\":15429:15438   */\n      dup7\n        /* \"#utility.yul\":15425:15507   */\n      and\n        /* \"#utility.yul\":15420:15423   */\n      dup10\n        /* \"#utility.yul\":15413:15508   */\n      mstore\n        /* \"#utility.yul\":15537:15543   */\n      dup5\n        /* \"#utility.yul\":15532:15535   */\n      dup10\n        /* \"#utility.yul\":15528:15544   */\n      add\n        /* \"#utility.yul\":15521:15544   */\n      swap7\n      pop\n        /* \"#utility.yul\":15392:15554   */\n      jump(tag_501)\n        /* \"#utility.yul\":15563:15883   */\n    tag_503:\n        /* \"#utility.yul\":14593:14594   */\n      0x00\n        /* \"#utility.yul\":14586:14600   */\n      dup12\n      dup2\n      mstore\n        /* \"#utility.yul\":14630:14634   */\n      0x20\n        /* \"#utility.yul\":14617:14635   */\n      swap1\n      keccak256\n        /* \"#utility.yul\":15658:15659   */\n      0x00\n        /* \"#utility.yul\":15672:15837   */\n    tag_505:\n        /* \"#utility.yul\":15686:15692   */\n      dup7\n        /* \"#utility.yul\":15683:15684   */\n      dup2\n        /* \"#utility.yul\":15680:15693   */\n      lt\n        /* \"#utility.yul\":15672:15837   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":15764:15778   */\n      dup2\n      sload\n        /* \"#utility.yul\":15751:15762   */\n      dup12\n      dup3\n      add\n        /* \"#utility.yul\":15744:15779   */\n      mstore\n        /* \"#utility.yul\":15807:15823   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":15701:15711   */\n      dup4\n      add\n        /* \"#utility.yul\":15672:15837   */\n      jump(tag_505)\n    tag_507:\n        /* \"#utility.yul\":15676:15679   */\n      pop\n      pop\n        /* \"#utility.yul\":15866:15872   */\n      dup5\n        /* \"#utility.yul\":15861:15864   */\n      dup10\n        /* \"#utility.yul\":15857:15873   */\n      add\n        /* \"#utility.yul\":15850:15873   */\n      swap7\n      pop\n        /* \"#utility.yul\":15358:15883   */\n    tag_501:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15899:15929   */\n      tag_508\n        /* \"#utility.yul\":15925:15928   */\n      dup2\n        /* \"#utility.yul\":15917:15923   */\n      dup6\n        /* \"#utility.yul\":15899:15929   */\n      tag_370\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":15892:15929   */\n      swap6\n        /* \"#utility.yul\":14646:15935   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17166:17294   */\n    tag_245:\n        /* \"#utility.yul\":17206:17209   */\n      0x00\n        /* \"#utility.yul\":17237:17238   */\n      dup3\n        /* \"#utility.yul\":17233:17239   */\n      not\n        /* \"#utility.yul\":17230:17231   */\n      dup3\n        /* \"#utility.yul\":17227:17240   */\n      gt\n        /* \"#utility.yul\":17224:17263   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":17243:17261   */\n      tag_514\n      tag_371\n      jump\t// in\n    tag_514:\n      pop\n        /* \"#utility.yul\":17279:17288   */\n      add\n      swap1\n        /* \"#utility.yul\":17166:17294   */\n      jump\t// out\n        /* \"#utility.yul\":17299:17764   */\n    tag_248:\n        /* \"#utility.yul\":17556:17558   */\n      0x40\n        /* \"#utility.yul\":17545:17554   */\n      dup2\n        /* \"#utility.yul\":17538:17559   */\n      mstore\n        /* \"#utility.yul\":17519:17523   */\n      0x00\n        /* \"#utility.yul\":17582:17638   */\n      tag_516\n        /* \"#utility.yul\":17634:17636   */\n      0x40\n        /* \"#utility.yul\":17623:17632   */\n      dup4\n        /* \"#utility.yul\":17619:17637   */\n      add\n        /* \"#utility.yul\":17611:17617   */\n      dup6\n        /* \"#utility.yul\":17582:17638   */\n      tag_368\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":17686:17695   */\n      dup3\n        /* \"#utility.yul\":17678:17684   */\n      dup2\n        /* \"#utility.yul\":17674:17696   */\n      sub\n        /* \"#utility.yul\":17669:17671   */\n      0x20\n        /* \"#utility.yul\":17658:17667   */\n      dup5\n        /* \"#utility.yul\":17654:17672   */\n      add\n        /* \"#utility.yul\":17647:17697   */\n      mstore\n        /* \"#utility.yul\":17714:17758   */\n      tag_508\n        /* \"#utility.yul\":17751:17757   */\n      dup2\n        /* \"#utility.yul\":17743:17749   */\n      dup6\n        /* \"#utility.yul\":17714:17758   */\n      tag_368\n      jump\t// in\n        /* \"#utility.yul\":18834:19695   */\n    tag_304:\n        /* \"#utility.yul\":19156:19160   */\n      0x00\n        /* \"#utility.yul\":19185:19227   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19266:19268   */\n      dup1\n        /* \"#utility.yul\":19258:19264   */\n      dup9\n        /* \"#utility.yul\":19254:19269   */\n      and\n        /* \"#utility.yul\":19243:19252   */\n      dup4\n        /* \"#utility.yul\":19236:19270   */\n      mstore\n        /* \"#utility.yul\":19318:19320   */\n      dup1\n        /* \"#utility.yul\":19310:19316   */\n      dup8\n        /* \"#utility.yul\":19306:19321   */\n      and\n        /* \"#utility.yul\":19301:19303   */\n      0x20\n        /* \"#utility.yul\":19290:19299   */\n      dup5\n        /* \"#utility.yul\":19286:19304   */\n      add\n        /* \"#utility.yul\":19279:19322   */\n      mstore\n      pop\n        /* \"#utility.yul\":19358:19361   */\n      0xa0\n        /* \"#utility.yul\":19353:19355   */\n      0x40\n        /* \"#utility.yul\":19342:19351   */\n      dup4\n        /* \"#utility.yul\":19338:19356   */\n      add\n        /* \"#utility.yul\":19331:19362   */\n      mstore\n        /* \"#utility.yul\":19385:19442   */\n      tag_522\n        /* \"#utility.yul\":19437:19440   */\n      0xa0\n        /* \"#utility.yul\":19426:19435   */\n      dup4\n        /* \"#utility.yul\":19422:19441   */\n      add\n        /* \"#utility.yul\":19414:19420   */\n      dup7\n        /* \"#utility.yul\":19385:19442   */\n      tag_368\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":19490:19499   */\n      dup3\n        /* \"#utility.yul\":19482:19488   */\n      dup2\n        /* \"#utility.yul\":19478:19500   */\n      sub\n        /* \"#utility.yul\":19473:19475   */\n      0x60\n        /* \"#utility.yul\":19462:19471   */\n      dup5\n        /* \"#utility.yul\":19458:19476   */\n      add\n        /* \"#utility.yul\":19451:19501   */\n      mstore\n        /* \"#utility.yul\":19524:19568   */\n      tag_523\n        /* \"#utility.yul\":19561:19567   */\n      dup2\n        /* \"#utility.yul\":19553:19559   */\n      dup7\n        /* \"#utility.yul\":19524:19568   */\n      tag_368\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":19510:19568   */\n      swap1\n      pop\n        /* \"#utility.yul\":19617:19626   */\n      dup3\n        /* \"#utility.yul\":19609:19615   */\n      dup2\n        /* \"#utility.yul\":19605:19627   */\n      sub\n        /* \"#utility.yul\":19599:19602   */\n      0x80\n        /* \"#utility.yul\":19588:19597   */\n      dup5\n        /* \"#utility.yul\":19584:19603   */\n      add\n        /* \"#utility.yul\":19577:19628   */\n      mstore\n        /* \"#utility.yul\":19645:19689   */\n      tag_524\n        /* \"#utility.yul\":19682:19688   */\n      dup2\n        /* \"#utility.yul\":19674:19680   */\n      dup6\n        /* \"#utility.yul\":19645:19689   */\n      tag_363\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":19637:19689   */\n      swap9\n        /* \"#utility.yul\":18834:19695   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19700:19949   */\n    tag_307:\n        /* \"#utility.yul\":19769:19775   */\n      0x00\n        /* \"#utility.yul\":19822:19824   */\n      0x20\n        /* \"#utility.yul\":19810:19819   */\n      dup3\n        /* \"#utility.yul\":19801:19808   */\n      dup5\n        /* \"#utility.yul\":19797:19820   */\n      sub\n        /* \"#utility.yul\":19793:19825   */\n      slt\n        /* \"#utility.yul\":19790:19842   */\n      iszero\n      tag_526\n      jumpi\n        /* \"#utility.yul\":19838:19839   */\n      0x00\n        /* \"#utility.yul\":19835:19836   */\n      dup1\n        /* \"#utility.yul\":19828:19840   */\n      revert\n        /* \"#utility.yul\":19790:19842   */\n    tag_526:\n        /* \"#utility.yul\":19870:19879   */\n      dup2\n        /* \"#utility.yul\":19864:19880   */\n      mload\n        /* \"#utility.yul\":19889:19919   */\n      tag_113\n        /* \"#utility.yul\":19913:19918   */\n      dup2\n        /* \"#utility.yul\":19889:19919   */\n      tag_361\n      jump\t// in\n        /* \"#utility.yul\":19954:20133   */\n    tag_313:\n        /* \"#utility.yul\":19989:19992   */\n      0x00\n        /* \"#utility.yul\":20031:20032   */\n      0x03\n        /* \"#utility.yul\":20013:20029   */\n      returndatasize\n        /* \"#utility.yul\":20010:20033   */\n      gt\n        /* \"#utility.yul\":20007:20127   */\n      iszero\n      tag_529\n      jumpi\n        /* \"#utility.yul\":20077:20078   */\n      0x04\n        /* \"#utility.yul\":20074:20075   */\n      0x00\n        /* \"#utility.yul\":20071:20072   */\n      dup1\n        /* \"#utility.yul\":20056:20079   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":20114:20115   */\n      0x00\n        /* \"#utility.yul\":20108:20116   */\n      mload\n        /* \"#utility.yul\":20103:20106   */\n      0xe0\n        /* \"#utility.yul\":20099:20117   */\n      shr\n        /* \"#utility.yul\":20007:20127   */\n    tag_529:\n        /* \"#utility.yul\":19954:20133   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":20138:20869   */\n    tag_315:\n        /* \"#utility.yul\":20177:20180   */\n      0x00\n        /* \"#utility.yul\":20219:20223   */\n      0x44\n        /* \"#utility.yul\":20201:20217   */\n      returndatasize\n        /* \"#utility.yul\":20198:20224   */\n      lt\n        /* \"#utility.yul\":20195:20234   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":20138:20869   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":20195:20234   */\n    tag_531:\n        /* \"#utility.yul\":20261:20263   */\n      0x40\n        /* \"#utility.yul\":20255:20264   */\n      mload\n        /* \"#utility.yul\":20283:20349   */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\n        /* \"#utility.yul\":20404:20406   */\n      dup1\n        /* \"#utility.yul\":20386:20402   */\n      returndatasize\n        /* \"#utility.yul\":20382:20407   */\n      add\n        /* \"#utility.yul\":20379:20380   */\n      0x04\n        /* \"#utility.yul\":20373:20377   */\n      dup4\n        /* \"#utility.yul\":20358:20408   */\n      returndatacopy\n        /* \"#utility.yul\":20437:20441   */\n      dup2\n        /* \"#utility.yul\":20431:20442   */\n      mload\n        /* \"#utility.yul\":20461:20477   */\n      returndatasize\n        /* \"#utility.yul\":20496:20514   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":20567:20569   */\n      dup2\n        /* \"#utility.yul\":20560:20564   */\n      0x24\n        /* \"#utility.yul\":20552:20558   */\n      dup5\n        /* \"#utility.yul\":20548:20565   */\n      add\n        /* \"#utility.yul\":20545:20570   */\n      gt\n        /* \"#utility.yul\":20540:20542   */\n      dup2\n        /* \"#utility.yul\":20532:20538   */\n      dup5\n        /* \"#utility.yul\":20529:20543   */\n      gt\n        /* \"#utility.yul\":20526:20571   */\n      or\n        /* \"#utility.yul\":20523:20581   */\n      iszero\n      tag_532\n      jumpi\n        /* \"#utility.yul\":20574:20579   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":20138:20869   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":20523:20581   */\n    tag_532:\n        /* \"#utility.yul\":20611:20617   */\n      dup3\n        /* \"#utility.yul\":20605:20609   */\n      dup6\n        /* \"#utility.yul\":20601:20618   */\n      add\n        /* \"#utility.yul\":20590:20618   */\n      swap2\n      pop\n        /* \"#utility.yul\":20647:20650   */\n      dup2\n        /* \"#utility.yul\":20641:20651   */\n      mload\n        /* \"#utility.yul\":20674:20676   */\n      dup2\n        /* \"#utility.yul\":20666:20672   */\n      dup2\n        /* \"#utility.yul\":20663:20677   */\n      gt\n        /* \"#utility.yul\":20660:20687   */\n      iszero\n      tag_533\n      jumpi\n        /* \"#utility.yul\":20680:20685   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":20138:20869   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":20660:20687   */\n    tag_533:\n        /* \"#utility.yul\":20764:20766   */\n      dup5\n        /* \"#utility.yul\":20745:20761   */\n      returndatasize\n        /* \"#utility.yul\":20739:20743   */\n      dup8\n        /* \"#utility.yul\":20735:20762   */\n      add\n        /* \"#utility.yul\":20731:20767   */\n      add\n        /* \"#utility.yul\":20724:20728   */\n      0x20\n        /* \"#utility.yul\":20715:20721   */\n      dup3\n        /* \"#utility.yul\":20710:20713   */\n      dup6\n        /* \"#utility.yul\":20706:20722   */\n      add\n        /* \"#utility.yul\":20702:20729   */\n      add\n        /* \"#utility.yul\":20699:20768   */\n      gt\n        /* \"#utility.yul\":20696:20778   */\n      iszero\n      tag_534\n      jumpi\n        /* \"#utility.yul\":20771:20776   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":20138:20869   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":20696:20778   */\n    tag_534:\n        /* \"#utility.yul\":20787:20844   */\n      tag_535\n        /* \"#utility.yul\":20838:20842   */\n      0x20\n        /* \"#utility.yul\":20829:20835   */\n      dup3\n        /* \"#utility.yul\":20821:20827   */\n      dup7\n        /* \"#utility.yul\":20817:20836   */\n      add\n        /* \"#utility.yul\":20813:20843   */\n      add\n        /* \"#utility.yul\":20807:20811   */\n      dup8\n        /* \"#utility.yul\":20787:20844   */\n      tag_364\n      jump\t// in\n    tag_535:\n      pop\n        /* \"#utility.yul\":20860:20863   */\n      swap1\n      swap6\n        /* \"#utility.yul\":20138:20869   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21704:22299   */\n    tag_334:\n        /* \"#utility.yul\":21926:21930   */\n      0x00\n        /* \"#utility.yul\":21955:21997   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":22036:22038   */\n      dup1\n        /* \"#utility.yul\":22028:22034   */\n      dup9\n        /* \"#utility.yul\":22024:22039   */\n      and\n        /* \"#utility.yul\":22013:22022   */\n      dup4\n        /* \"#utility.yul\":22006:22040   */\n      mstore\n        /* \"#utility.yul\":22088:22090   */\n      dup1\n        /* \"#utility.yul\":22080:22086   */\n      dup8\n        /* \"#utility.yul\":22076:22091   */\n      and\n        /* \"#utility.yul\":22071:22073   */\n      0x20\n        /* \"#utility.yul\":22060:22069   */\n      dup5\n        /* \"#utility.yul\":22056:22074   */\n      add\n        /* \"#utility.yul\":22049:22092   */\n      mstore\n      pop\n        /* \"#utility.yul\":22128:22134   */\n      dup5\n        /* \"#utility.yul\":22123:22125   */\n      0x40\n        /* \"#utility.yul\":22112:22121   */\n      dup4\n        /* \"#utility.yul\":22108:22126   */\n      add\n        /* \"#utility.yul\":22101:22135   */\n      mstore\n        /* \"#utility.yul\":22171:22177   */\n      dup4\n        /* \"#utility.yul\":22166:22168   */\n      0x60\n        /* \"#utility.yul\":22155:22164   */\n      dup4\n        /* \"#utility.yul\":22151:22169   */\n      add\n        /* \"#utility.yul\":22144:22178   */\n      mstore\n        /* \"#utility.yul\":22215:22218   */\n      0xa0\n        /* \"#utility.yul\":22209:22212   */\n      0x80\n        /* \"#utility.yul\":22198:22207   */\n      dup4\n        /* \"#utility.yul\":22194:22213   */\n      add\n        /* \"#utility.yul\":22187:22219   */\n      mstore\n        /* \"#utility.yul\":22236:22293   */\n      tag_539\n        /* \"#utility.yul\":22288:22291   */\n      0xa0\n        /* \"#utility.yul\":22277:22286   */\n      dup4\n        /* \"#utility.yul\":22273:22292   */\n      add\n        /* \"#utility.yul\":22265:22271   */\n      dup5\n        /* \"#utility.yul\":22236:22293   */\n      tag_363\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":22228:22293   */\n      swap8\n        /* \"#utility.yul\":21704:22299   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a1b9537867b984f63e09898a2139eebbca3ac6857189b4611d46f1c8a6c2a8c364736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2280": {
									"entryPoint": null,
									"id": 2280,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_555": {
									"entryPoint": 128,
									"id": 555,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_address_fromMemory": {
									"entryPoint": 370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 319,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1889:12",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "206:117:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "216:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "231:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "225:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "225:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "216:5:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "301:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "310:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "313:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "303:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "303:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "303:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "260:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "271:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "286:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "291:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "282:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "282:11:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "295:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "278:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "278:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "267:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "267:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "257:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "257:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "250:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "250:50:12"
															},
															"nodeType": "YulIf",
															"src": "247:70:12"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "185:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "196:5:12",
														"type": ""
													}
												],
												"src": "146:177:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "436:1066:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "482:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "491:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "494:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "484:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "484:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "484:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "457:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "466:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "453:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "453:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "478:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "449:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "449:32:12"
															},
															"nodeType": "YulIf",
															"src": "446:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "507:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "527:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "521:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:16:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "511:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "546:28:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "564:2:12",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "568:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "560:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "560:10:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "572:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "556:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:18:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "550:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "601:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "610:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "613:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "603:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "603:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "603:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "589:6:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "597:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "586:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "586:14:12"
															},
															"nodeType": "YulIf",
															"src": "583:34:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "626:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "640:9:12"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "651:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "636:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "636:22:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "630:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "706:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "715:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "718:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "708:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "708:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "708:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "685:2:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "689:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "681:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "681:13:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "696:7:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "677:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "677:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "670:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "670:35:12"
															},
															"nodeType": "YulIf",
															"src": "667:55:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "731:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "747:2:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "741:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "741:9:12"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "735:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "773:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "775:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "775:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "775:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "765:2:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "769:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "762:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:10:12"
															},
															"nodeType": "YulIf",
															"src": "759:36:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "804:17:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "818:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "814:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "814:7:12"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "808:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "830:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "850:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "844:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "844:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "834:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "862:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "884:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "908:2:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "912:4:12",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "904:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "904:13:12"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "919:2:12"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "900:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "900:22:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "924:2:12",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "896:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "896:31:12"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "929:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "892:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "892:40:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "880:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "880:53:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "866:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "992:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "994:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "994:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "994:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "951:10:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "963:2:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "948:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "948:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "971:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "983:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "968:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "968:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "945:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:46:12"
															},
															"nodeType": "YulIf",
															"src": "942:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1030:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1034:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1023:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1023:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1023:22:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1061:6:12"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1069:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1054:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1054:18:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1054:18:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1081:14:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1091:4:12",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "1085:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1141:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1150:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1153:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1143:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1143:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1143:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1118:2:12"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1122:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1114:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1114:11:12"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "1127:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1110:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1110:20:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1132:7:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1107:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:33:12"
															},
															"nodeType": "YulIf",
															"src": "1104:53:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1166:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1175:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1170:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1231:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1260:6:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1268:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1256:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1256:14:12"
																						},
																						{
																							"name": "_5",
																							"nodeType": "YulIdentifier",
																							"src": "1272:2:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1252:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1252:23:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_2",
																											"nodeType": "YulIdentifier",
																											"src": "1291:2:12"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1295:1:12"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1287:3:12"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1287:10:12"
																								},
																								{
																									"name": "_5",
																									"nodeType": "YulIdentifier",
																									"src": "1299:2:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1283:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1283:19:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1277:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1277:26:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1245:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1245:59:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1245:59:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1196:1:12"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1199:2:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1193:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:9:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1203:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1205:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1214:1:12"
																				},
																				{
																					"name": "_5",
																					"nodeType": "YulIdentifier",
																					"src": "1217:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1210:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1210:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1205:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1189:3:12",
																"statements": []
															},
															"src": "1185:129:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1344:59:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1373:6:12"
																								},
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "1381:2:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1369:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1369:15:12"
																						},
																						{
																							"name": "_5",
																							"nodeType": "YulIdentifier",
																							"src": "1386:2:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1365:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1365:24:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1391:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1358:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1358:35:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1358:35:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1329:1:12"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1332:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1326:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1326:9:12"
															},
															"nodeType": "YulIf",
															"src": "1323:80:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1412:16:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1422:6:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1412:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1437:59:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1481:9:12"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "1492:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1477:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1477:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1447:29:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1447:49:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1437:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "394:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "405:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "417:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "425:6:12",
														"type": ""
													}
												],
												"src": "328:1174:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1562:325:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1572:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1586:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1589:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1572:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1603:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1633:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1639:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1629:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1629:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1607:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1680:31:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1682:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1696:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1704:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1692:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1692:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1682:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1660:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1653:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1653:26:12"
															},
															"nodeType": "YulIf",
															"src": "1650:61:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1770:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1791:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1798:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1803:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1794:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1794:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1784:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1784:31:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1784:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1835:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1838:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1828:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1828:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1828:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1863:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1866:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1856:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1856:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1856:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1726:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1749:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1757:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1746:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1746:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1723:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1723:38:12"
															},
															"nodeType": "YulIf",
															"src": "1720:161:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1542:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1551:6:12",
														"type": ""
													}
												],
												"src": "1507:380:12"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        let _5 := 0x20\n        if gt(add(add(_2, _3), _5), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _3) { i := add(i, _5) }\n        {\n            mstore(add(add(memPtr, i), _5), mload(add(add(_2, i), _5)))\n        }\n        if gt(i, _3)\n        {\n            mstore(add(add(memPtr, _3), _5), 0)\n        }\n        value0 := memPtr\n        value1 := abi_decode_address_fromMemory(add(headStart, _5))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040819052600060808190526200001b9160049162000099565b503480156200002957600080fd5b50604051620029e5380380620029e58339810160408190526200004c9162000172565b81620000588162000080565b50600780546001600160a01b0319166001600160a01b0392909216919091179055506200029f565b80516200009590600290602084019062000099565b5050565b828054620000a79062000263565b90600052602060002090601f016020900481019282620000cb576000855562000116565b82601f10620000e657805160ff191683800117855562000116565b8280016001018555821562000116579182015b8281111562000116578251825591602001919060010190620000f9565b506200012492915062000128565b5090565b5b8082111562000124576000815560010162000129565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200016d57600080fd5b919050565b600080604083850312156200018657600080fd5b82516001600160401b03808211156200019e57600080fd5b818501915085601f830112620001b357600080fd5b815181811115620001c857620001c86200013f565b604051601f8201601f19908116603f01168101908382118183101715620001f357620001f36200013f565b816040528281526020935088848487010111156200021057600080fd5b600091505b8282101562000234578482018401518183018501529083019062000215565b82821115620002465760008484830101525b95506200025891505085820162000155565b925050509250929050565b600181811c908216806200027857607f821691505b6020821081036200029957634e487b7160e01b600052602260045260246000fd5b50919050565b61273680620002af6000396000f3fe608060405234801561001057600080fd5b506004361061011a5760003560e01c80636c0360eb116100b2578063bd85b03911610081578063d14186c611610066578063d14186c6146102ab578063e985e9c5146102be578063f242432a1461030757600080fd5b8063bd85b03914610278578063cb4507721461029857600080fd5b80636c0360eb146102375780636c8b703f1461023f578063a22cb46514610252578063bb7fde711461026557600080fd5b80634b8c9c2d116100ee5780634b8c9c2d1461019d5780634e1273f4146101e25780634f558e791461020257806355f804b31461022457600080fd5b8062fdd58e1461011f57806301ffc9a7146101455780630e89341c146101685780632eb2c2d614610188575b600080fd5b61013261012d366004611c8a565b61031a565b6040519081526020015b60405180910390f35b610158610153366004611ce5565b6103f7565b604051901515815260200161013c565b61017b610176366004611d02565b6104dc565b60405161013c9190611d95565b61019b610196366004611f49565b610533565b005b6007546101bd9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161013c565b6101f56101f0366004611ff3565b6105fc565b60405161013c91906120f9565b610158610210366004611d02565b600090815260036020526040902054151590565b61019b610232366004612155565b610754565b61017b610818565b61017b61024d366004611d02565b6108aa565b61019b610260366004612197565b61094c565b61019b6102733660046121d3565b610957565b610132610286366004611d02565b60009081526003602052604090205490565b61019b6102a636600461223b565b610a41565b61019b6102b9366004612197565b610bdb565b6101586102cc366004612256565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205460ff1690565b61019b610315366004612289565b610d3e565b600073ffffffffffffffffffffffffffffffffffffffff83166103c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b5060009081526020818152604080832073ffffffffffffffffffffffffffffffffffffffff949094168352929052205490565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fd9b67a2600000000000000000000000000000000000000000000000000000000148061048a57507fffffffff0000000000000000000000000000000000000000000000000000000082167f0e89341c00000000000000000000000000000000000000000000000000000000145b806104d657507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b606060006104e9836108aa565b90506000815111610502576104fd83610e00565b61052c565b61050a610818565b8160405160200161051c92919061230a565b6040516020818303038152906040525b9392505050565b73ffffffffffffffffffffffffffffffffffffffff851633148061055c575061055c85336102cc565b6105e8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f766564000000000000000000000000000060648201526084016103bb565b6105f58585858585610ec4565b5050505050565b6060815183511461068f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d61746368000000000000000000000000000000000000000000000060648201526084016103bb565b6000835167ffffffffffffffff8111156106ab576106ab611da8565b6040519080825280602002602001820160405280156106d4578160200160208202803683370190505b50905060005b845181101561074c5761071f8582815181106106f8576106f8612361565b602002602001015185838151811061071257610712612361565b602002602001015161031a565b82828151811061073157610731612361565b6020908102919091010152610745816123bf565b90506106da565b509392505050565b60075473ffffffffffffffffffffffffffffffffffffffff1633146107d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f596f7520617265206e6f742077686974656c69737465642e000000000000000060448201526064016103bb565b61081482828080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506111fe92505050565b5050565b606060048054610827906123f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610853906123f7565b80156108a05780601f10610875576101008083540402835291602001916108a0565b820191906000526020600020905b81548152906001019060200180831161088357829003601f168201915b5050505050905090565b60008181526005602052604090208054606091906108c7906123f7565b80601f01602080910402602001604051908101604052809291908181526020018280546108f3906123f7565b80156109405780601f1061091557610100808354040283529160200191610940565b820191906000526020600020905b81548152906001019060200180831161092357829003601f168201915b50505050509050919050565b610814338383611211565b3360009081526006602052604090205460ff166109d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f596f7520617265206e6f742077686974656c69737465642e000000000000000060448201526064016103bb565b600084815260036020526040902054600003610a2657610a268483838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061136492505050565b6105f585858560405180602001604052806000815250611388565b60075473ffffffffffffffffffffffffffffffffffffffff163314610ac2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f596f7520617265206e6f742077686974656c69737465642e000000000000000060448201526064016103bb565b60075473ffffffffffffffffffffffffffffffffffffffff808316911603610b6c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f50726f7669646564206164647265737320616c7265616479207361666520616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103bb565b600780547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517fd4c1af98b758421a8d47b0bc04ecfa30233d5506955e8cde282417aa0d31d3b690600090a250565b60075473ffffffffffffffffffffffffffffffffffffffff163314610c5c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f596f7520617265206e6f742077686974656c69737465642e000000000000000060448201526064016103bb565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260066020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168215801591909117909155610cf95760405173ffffffffffffffffffffffffffffffffffffffff8316907f526af00f9bc92d53f2d0b4c603a1305395a04f7fb6a0a7962867d8d23046754790600090a25050565b60405173ffffffffffffffffffffffffffffffffffffffff8316907fe8185c1a3f6241a6224d99ff39e932ac24fc0d2c51b17e56c5d6f52aff1b5da190600090a25050565b73ffffffffffffffffffffffffffffffffffffffff8516331480610d675750610d6785336102cc565b610df3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f766564000000000000000000000000000000000000000000000060648201526084016103bb565b6105f585858585856114f9565b600081815260056020526040812080546060929190610e1e906123f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610e4a906123f7565b8015610e975780601f10610e6c57610100808354040283529160200191610e97565b820191906000526020600020905b815481529060010190602001808311610e7a57829003601f168201915b505050505090506000815111610eb0576104fd83611737565b60048160405160200161051c92919061244a565b8151835114610f55576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d6174636800000000000000000000000000000000000000000000000060648201526084016103bb565b73ffffffffffffffffffffffffffffffffffffffff8416610ff8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103bb565b3360005b845181101561116957600085828151811061101957611019612361565b60200260200101519050600085838151811061103757611037612361565b6020908102919091018101516000848152808352604080822073ffffffffffffffffffffffffffffffffffffffff8e168352909352919091205490915081811015611104576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e736665720000000000000000000000000000000000000000000060648201526084016103bb565b60008381526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8e8116855292528083208585039055908b1682528120805484929061114e908490612527565b9250508190555050505080611162906123bf565b9050610ffc565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516111e092919061253f565b60405180910390a46111f6818787878787611746565b505050505050565b8051610814906004906020840190611bc8565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112cc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c66000000000000000000000000000000000000000000000060648201526084016103bb565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6000828152600560209081526040909120825161138392840190611bc8565b505050565b73ffffffffffffffffffffffffffffffffffffffff841661142b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016103bb565b336000611437856119d0565b90506000611444856119d0565b905060008681526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8b16845290915281208054879290611483908490612527565b9091555050604080518781526020810187905273ffffffffffffffffffffffffffffffffffffffff808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46114f083600089898989611a1b565b50505050505050565b73ffffffffffffffffffffffffffffffffffffffff841661159c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103bb565b3360006115a8856119d0565b905060006115b5856119d0565b905060008681526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8c16845290915290205485811015611675576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e736665720000000000000000000000000000000000000000000060648201526084016103bb565b60008781526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8d8116855292528083208985039055908a168252812080548892906116bf908490612527565b9091555050604080518881526020810188905273ffffffffffffffffffffffffffffffffffffffff808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461172c848a8a8a8a8a611a1b565b505050505050505050565b6060600280546108c7906123f7565b73ffffffffffffffffffffffffffffffffffffffff84163b156111f6576040517fbc197c8100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063bc197c81906117bd9089908990889088908890600401612564565b6020604051808303816000875af1925050508015611816575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252611813918101906125cf565b60015b6118ff576118226125ec565b806308c379a0036118755750611836612608565b806118415750611877565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bb9190611d95565b505b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e74657200000000000000000000000060648201526084016103bb565b7fffffffff0000000000000000000000000000000000000000000000000000000081167fbc197c8100000000000000000000000000000000000000000000000000000000146114f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e7300000000000000000000000000000000000000000000000060648201526084016103bb565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611a0a57611a0a612361565b602090810291909101015292915050565b73ffffffffffffffffffffffffffffffffffffffff84163b156111f6576040517ff23a6e6100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063f23a6e6190611a9290899089908890889088906004016126b0565b6020604051808303816000875af1925050508015611aeb575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252611ae8918101906125cf565b60015b611af7576118226125ec565b7fffffffff0000000000000000000000000000000000000000000000000000000081167ff23a6e6100000000000000000000000000000000000000000000000000000000146114f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e7300000000000000000000000000000000000000000000000060648201526084016103bb565b828054611bd4906123f7565b90600052602060002090601f016020900481019282611bf65760008555611c3c565b82601f10611c0f57805160ff1916838001178555611c3c565b82800160010185558215611c3c579182015b82811115611c3c578251825591602001919060010190611c21565b50611c48929150611c4c565b5090565b5b80821115611c485760008155600101611c4d565b803573ffffffffffffffffffffffffffffffffffffffff81168114611c8557600080fd5b919050565b60008060408385031215611c9d57600080fd5b611ca683611c61565b946020939093013593505050565b7fffffffff0000000000000000000000000000000000000000000000000000000081168114611ce257600080fd5b50565b600060208284031215611cf757600080fd5b813561052c81611cb4565b600060208284031215611d1457600080fd5b5035919050565b60005b83811015611d36578181015183820152602001611d1e565b83811115611d45576000848401525b50505050565b60008151808452611d63816020860160208601611d1b565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061052c6020830184611d4b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff82111715611e1b57611e1b611da8565b6040525050565b600067ffffffffffffffff821115611e3c57611e3c611da8565b5060051b60200190565b600082601f830112611e5757600080fd5b81356020611e6482611e22565b604051611e718282611dd7565b83815260059390931b8501820192828101915086841115611e9157600080fd5b8286015b84811015611eac5780358352918301918301611e95565b509695505050505050565b600082601f830112611ec857600080fd5b813567ffffffffffffffff811115611ee257611ee2611da8565b604051611f1760207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8501160182611dd7565b818152846020838601011115611f2c57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215611f6157600080fd5b611f6a86611c61565b9450611f7860208701611c61565b9350604086013567ffffffffffffffff80821115611f9557600080fd5b611fa189838a01611e46565b94506060880135915080821115611fb757600080fd5b611fc389838a01611e46565b93506080880135915080821115611fd957600080fd5b50611fe688828901611eb7565b9150509295509295909350565b6000806040838503121561200657600080fd5b823567ffffffffffffffff8082111561201e57600080fd5b818501915085601f83011261203257600080fd5b8135602061203f82611e22565b60405161204c8282611dd7565b83815260059390931b850182019282810191508984111561206c57600080fd5b948201945b838610156120915761208286611c61565b82529482019490820190612071565b965050860135925050808211156120a757600080fd5b506120b485828601611e46565b9150509250929050565b600081518084526020808501945080840160005b838110156120ee578151875295820195908201906001016120d2565b509495945050505050565b60208152600061052c60208301846120be565b60008083601f84011261211e57600080fd5b50813567ffffffffffffffff81111561213657600080fd5b60208301915083602082850101111561214e57600080fd5b9250929050565b6000806020838503121561216857600080fd5b823567ffffffffffffffff81111561217f57600080fd5b61218b8582860161210c565b90969095509350505050565b600080604083850312156121aa57600080fd5b6121b383611c61565b9150602083013580151581146121c857600080fd5b809150509250929050565b6000806000806000608086880312156121eb57600080fd5b6121f486611c61565b94506020860135935060408601359250606086013567ffffffffffffffff81111561221e57600080fd5b61222a8882890161210c565b969995985093965092949392505050565b60006020828403121561224d57600080fd5b61052c82611c61565b6000806040838503121561226957600080fd5b61227283611c61565b915061228060208401611c61565b90509250929050565b600080600080600060a086880312156122a157600080fd5b6122aa86611c61565b94506122b860208701611c61565b93506040860135925060608601359150608086013567ffffffffffffffff8111156122e257600080fd5b611fe688828901611eb7565b60008151612300818560208601611d1b565b9290920192915050565b6000835161231c818460208801611d1b565b835190830190612330818360208801611d1b565b7f2f6d657461646174612e6a736f6e0000000000000000000000000000000000009101908152600e01949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036123f0576123f0612390565b5060010190565b600181811c9082168061240b57607f821691505b602082108103612444577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600080845481600182811c91508083168061246657607f831692505b6020808410820361249e577f4e487b710000000000000000000000000000000000000000000000000000000086526022600452602486fd5b8180156124b257600181146124e15761250e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0086168952848901965061250e565b60008b81526020902060005b868110156125065781548b8201529085019083016124ed565b505084890196505b50505050505061251e81856122ee565b95945050505050565b6000821982111561253a5761253a612390565b500190565b60408152600061255260408301856120be565b828103602084015261251e81856120be565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525060a0604083015261259d60a08301866120be565b82810360608401526125af81866120be565b905082810360808401526125c38185611d4b565b98975050505050505050565b6000602082840312156125e157600080fd5b815161052c81611cb4565b600060033d11156126055760046000803e5060005160e01c5b90565b600060443d10156126165790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff816024840111818411171561266457505050505090565b828501915081518181111561267c5750505050505090565b843d87010160208285010111156126965750505050505090565b6126a560208286010187611dd7565b509095945050505050565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525084604083015283606083015260a060808301526126f560a0830184611d4b565b97965050505050505056fea2646970667358221220a1b9537867b984f63e09898a2139eebbca3ac6857189b4611d46f1c8a6c2a8c364736f6c634300080e0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH3 0x1B SWAP2 PUSH1 0x4 SWAP2 PUSH3 0x99 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x29E5 CODESIZE SUB DUP1 PUSH3 0x29E5 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x4C SWAP2 PUSH3 0x172 JUMP JUMPDEST DUP2 PUSH3 0x58 DUP2 PUSH3 0x80 JUMP JUMPDEST POP PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP PUSH3 0x29F JUMP JUMPDEST DUP1 MLOAD PUSH3 0x95 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x99 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xA7 SWAP1 PUSH3 0x263 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xCB JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x116 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xE6 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x116 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x116 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x116 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xF9 JUMP JUMPDEST POP PUSH3 0x124 SWAP3 SWAP2 POP PUSH3 0x128 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x124 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x129 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x1C8 JUMPI PUSH3 0x1C8 PUSH3 0x13F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x1F3 JUMPI PUSH3 0x1F3 PUSH3 0x13F JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE PUSH1 0x20 SWAP4 POP DUP9 DUP5 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP3 DUP3 LT ISZERO PUSH3 0x234 JUMPI DUP5 DUP3 ADD DUP5 ADD MLOAD DUP2 DUP4 ADD DUP6 ADD MSTORE SWAP1 DUP4 ADD SWAP1 PUSH3 0x215 JUMP JUMPDEST DUP3 DUP3 GT ISZERO PUSH3 0x246 JUMPI PUSH1 0x0 DUP5 DUP5 DUP4 ADD ADD MSTORE JUMPDEST SWAP6 POP PUSH3 0x258 SWAP2 POP POP DUP6 DUP3 ADD PUSH3 0x155 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x278 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x299 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2736 DUP1 PUSH3 0x2AF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C0360EB GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0xBD85B039 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xD14186C6 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD14186C6 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0xCB450772 EQ PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x6C8B703F EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0xBB7FDE71 EQ PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4B8C9C2D GT PUSH2 0xEE JUMPI DUP1 PUSH4 0x4B8C9C2D EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x4F558E79 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x188 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x132 PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x1C8A JUMP JUMPDEST PUSH2 0x31A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x153 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0x3F7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13C JUMP JUMPDEST PUSH2 0x17B PUSH2 0x176 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D02 JUMP JUMPDEST PUSH2 0x4DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x1D95 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F49 JUMP JUMPDEST PUSH2 0x533 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1BD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13C JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x1F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FF3 JUMP JUMPDEST PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x20F9 JUMP JUMPDEST PUSH2 0x158 PUSH2 0x210 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0x2155 JUMP JUMPDEST PUSH2 0x754 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x818 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x24D CALLDATASIZE PUSH1 0x4 PUSH2 0x1D02 JUMP JUMPDEST PUSH2 0x8AA JUMP JUMPDEST PUSH2 0x19B PUSH2 0x260 CALLDATASIZE PUSH1 0x4 PUSH2 0x2197 JUMP JUMPDEST PUSH2 0x94C JUMP JUMPDEST PUSH2 0x19B PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0x21D3 JUMP JUMPDEST PUSH2 0x957 JUMP JUMPDEST PUSH2 0x132 PUSH2 0x286 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x2A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x223B JUMP JUMPDEST PUSH2 0xA41 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x2B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2197 JUMP JUMPDEST PUSH2 0xBDB JUMP JUMPDEST PUSH2 0x158 PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x2256 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x315 CALLDATASIZE PUSH1 0x4 PUSH2 0x2289 JUMP JUMPDEST PUSH2 0xD3E JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x3C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x48A JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x4D6 JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x4E9 DUP4 PUSH2 0x8AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x502 JUMPI PUSH2 0x4FD DUP4 PUSH2 0xE00 JUMP JUMPDEST PUSH2 0x52C JUMP JUMPDEST PUSH2 0x50A PUSH2 0x818 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x51C SWAP3 SWAP2 SWAP1 PUSH2 0x230A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND CALLER EQ DUP1 PUSH2 0x55C JUMPI POP PUSH2 0x55C DUP6 CALLER PUSH2 0x2CC JUMP JUMPDEST PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F776E6572206E6F7220617070726F7665640000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH2 0x5F5 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xEC4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x68F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6AB JUMPI PUSH2 0x6AB PUSH2 0x1DA8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6D4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x74C JUMPI PUSH2 0x71F DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6F8 JUMPI PUSH2 0x6F8 PUSH2 0x2361 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x712 JUMPI PUSH2 0x712 PUSH2 0x2361 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x31A JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x731 JUMPI PUSH2 0x731 PUSH2 0x2361 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x745 DUP2 PUSH2 0x23BF JUMP JUMPDEST SWAP1 POP PUSH2 0x6DA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x7D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F742077686974656C69737465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH2 0x814 DUP3 DUP3 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x11FE SWAP3 POP POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x827 SWAP1 PUSH2 0x23F7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x853 SWAP1 PUSH2 0x23F7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8A0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x875 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8A0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x883 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH2 0x8C7 SWAP1 PUSH2 0x23F7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8F3 SWAP1 PUSH2 0x23F7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x940 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x915 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x940 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x923 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x814 CALLER DUP4 DUP4 PUSH2 0x1211 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x9D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F742077686974656C69737465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x0 SUB PUSH2 0xA26 JUMPI PUSH2 0xA26 DUP5 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1364 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x5F5 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1388 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xAC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F742077686974656C69737465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND SWAP2 AND SUB PUSH2 0xB6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F7669646564206164647265737320616C72656164792073616665206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xD4C1AF98B758421A8D47B0BC04ECFA30233D5506955E8CDE282417AA0D31D3B6 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xC5C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F742077686974656C69737465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP3 ISZERO DUP1 ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH2 0xCF9 JUMPI PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH32 0x526AF00F9BC92D53F2D0B4C603A1305395A04F7FB6A0A7962867D8D230467547 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH32 0xE8185C1A3F6241A6224D99FF39E932AC24FC0D2C51B17E56C5D6F52AFF1B5DA1 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND CALLER EQ DUP1 PUSH2 0xD67 JUMPI POP PUSH2 0xD67 DUP6 CALLER PUSH2 0x2CC JUMP JUMPDEST PUSH2 0xDF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20617070726F7665640000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH2 0x5F5 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x14F9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP3 SWAP2 SWAP1 PUSH2 0xE1E SWAP1 PUSH2 0x23F7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE4A SWAP1 PUSH2 0x23F7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE97 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE6C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE97 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE7A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xEB0 JUMPI PUSH2 0x4FD DUP4 PUSH2 0x1737 JUMP JUMPDEST PUSH1 0x4 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x51C SWAP3 SWAP2 SWAP1 PUSH2 0x244A JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xF55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0xFF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1169 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1019 JUMPI PUSH2 0x1019 PUSH2 0x2361 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1037 JUMPI PUSH2 0x1037 PUSH2 0x2361 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x1104 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x114E SWAP1 DUP5 SWAP1 PUSH2 0x2527 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x1162 SWAP1 PUSH2 0x23BF JUMP JUMPDEST SWAP1 POP PUSH2 0xFFC JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x11E0 SWAP3 SWAP2 SWAP1 PUSH2 0x253F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x11F6 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1746 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0x814 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1BC8 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD PUSH2 0x1383 SWAP3 DUP5 ADD SWAP1 PUSH2 0x1BC8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x142B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x1437 DUP6 PUSH2 0x19D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1444 DUP6 PUSH2 0x19D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x1483 SWAP1 DUP5 SWAP1 PUSH2 0x2527 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP11 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP8 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x14F0 DUP4 PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 PUSH2 0x1A1B JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x159C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x15A8 DUP6 PUSH2 0x19D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x15B5 DUP6 PUSH2 0x19D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x1675 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x16BF SWAP1 DUP5 SWAP1 PUSH2 0x2527 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x172C DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1A1B JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x8C7 SWAP1 PUSH2 0x23F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND EXTCODESIZE ISZERO PUSH2 0x11F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x17BD SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2564 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1816 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1813 SWAP2 DUP2 ADD SWAP1 PUSH2 0x25CF JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x18FF JUMPI PUSH2 0x1822 PUSH2 0x25EC JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1875 JUMPI POP PUSH2 0x1836 PUSH2 0x2608 JUMP JUMPDEST DUP1 PUSH2 0x1841 JUMPI POP PUSH2 0x1877 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0x1D95 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 EQ PUSH2 0x14F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1A0A JUMPI PUSH2 0x1A0A PUSH2 0x2361 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND EXTCODESIZE ISZERO PUSH2 0x11F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x1A92 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x26B0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1AEB JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1AE8 SWAP2 DUP2 ADD SWAP1 PUSH2 0x25CF JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1AF7 JUMPI PUSH2 0x1822 PUSH2 0x25EC JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 EQ PUSH2 0x14F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1BD4 SWAP1 PUSH2 0x23F7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1BF6 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1C3C JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1C0F JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1C3C JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1C3C JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1C3C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1C21 JUMP JUMPDEST POP PUSH2 0x1C48 SWAP3 SWAP2 POP PUSH2 0x1C4C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1C48 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1C4D JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1C85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CA6 DUP4 PUSH2 0x1C61 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x1CE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x52C DUP2 PUSH2 0x1CB4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D36 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1D1E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1D45 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1D63 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1D1B JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x52C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D4B JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1E1B JUMPI PUSH2 0x1E1B PUSH2 0x1DA8 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E3C JUMPI PUSH2 0x1E3C PUSH2 0x1DA8 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1E64 DUP3 PUSH2 0x1E22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E71 DUP3 DUP3 PUSH2 0x1DD7 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x1E91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1EAC JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1E95 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1EC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EE2 JUMPI PUSH2 0x1EE2 PUSH2 0x1DA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F17 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP6 ADD AND ADD DUP3 PUSH2 0x1DD7 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1F2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1F61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F6A DUP7 PUSH2 0x1C61 JUMP JUMPDEST SWAP5 POP PUSH2 0x1F78 PUSH1 0x20 DUP8 ADD PUSH2 0x1C61 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1F95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FA1 DUP10 DUP4 DUP11 ADD PUSH2 0x1E46 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1FB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FC3 DUP10 DUP4 DUP11 ADD PUSH2 0x1E46 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1FD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE6 DUP9 DUP3 DUP10 ADD PUSH2 0x1EB7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2006 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x201E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2032 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x203F DUP3 PUSH2 0x1E22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204C DUP3 DUP3 PUSH2 0x1DD7 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x206C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x2091 JUMPI PUSH2 0x2082 DUP7 PUSH2 0x1C61 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x2071 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x20A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20B4 DUP6 DUP3 DUP7 ADD PUSH2 0x1E46 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20EE JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x20D2 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x52C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20BE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x211E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x214E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x217F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x218B DUP6 DUP3 DUP7 ADD PUSH2 0x210C JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21B3 DUP4 PUSH2 0x1C61 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x21C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x21EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21F4 DUP7 PUSH2 0x1C61 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x221E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x222A DUP9 DUP3 DUP10 ADD PUSH2 0x210C JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x224D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x52C DUP3 PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2272 DUP4 PUSH2 0x1C61 JUMP JUMPDEST SWAP2 POP PUSH2 0x2280 PUSH1 0x20 DUP5 ADD PUSH2 0x1C61 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x22A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22AA DUP7 PUSH2 0x1C61 JUMP JUMPDEST SWAP5 POP PUSH2 0x22B8 PUSH1 0x20 DUP8 ADD PUSH2 0x1C61 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FE6 DUP9 DUP3 DUP10 ADD PUSH2 0x1EB7 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH2 0x2300 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D1B JUMP JUMPDEST SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x231C DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1D1B JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x2330 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1D1B JUMP JUMPDEST PUSH32 0x2F6D657461646174612E6A736F6E000000000000000000000000000000000000 SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0xE ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x23F0 JUMPI PUSH2 0x23F0 PUSH2 0x2390 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x240B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2444 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x2466 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 SUB PUSH2 0x249E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x24B2 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x24E1 JUMPI PUSH2 0x250E JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x250E JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x2506 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x24ED JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP POP POP POP POP POP PUSH2 0x251E DUP2 DUP6 PUSH2 0x22EE JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x253A JUMPI PUSH2 0x253A PUSH2 0x2390 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2552 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x20BE JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x251E DUP2 DUP6 PUSH2 0x20BE JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x259D PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x20BE JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x25AF DUP2 DUP7 PUSH2 0x20BE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x25C3 DUP2 DUP6 PUSH2 0x1D4B JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x52C DUP2 PUSH2 0x1CB4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x2605 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x2616 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP1 RETURNDATASIZE ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x2664 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x267C JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2696 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x26A5 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x1DD7 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x26F5 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1D4B JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xB9 MSTORE8 PUSH25 0x67B984F63E09898A2139EEBBCA3AC6857189B4611D46F1C8A6 0xC2 0xA8 0xC3 PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "543:28:10:-:0;323:1976:11;543:28:10;;;-1:-1:-1;323:1976:11;543:28:10;;;;;;;;:::i;:::-;;881:95:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;935:4;1149:13:0;935:4:11;1149:7:0;:13::i;:::-;-1:-1:-1;952:9:11::1;:16:::0;;-1:-1:-1;;;;;;952:16:11::1;-1:-1:-1::0;;;;;952:16:11;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;323:1976:11;;8171:86:0;8237:13;;;;:4;;:13;;;;;:::i;:::-;;8171:86;:::o;323:1976:11:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;323:1976:11;;;-1:-1:-1;323:1976:11;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:12;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:177;225:13;;-1:-1:-1;;;;;267:31:12;;257:42;;247:70;;313:1;310;303:12;247:70;146:177;;;:::o;328:1174::-;417:6;425;478:2;466:9;457:7;453:23;449:32;446:52;;;494:1;491;484:12;446:52;521:16;;-1:-1:-1;;;;;586:14:12;;;583:34;;;613:1;610;603:12;583:34;651:6;640:9;636:22;626:32;;696:7;689:4;685:2;681:13;677:27;667:55;;718:1;715;708:12;667:55;747:2;741:9;769:2;765;762:10;759:36;;;775:18;;:::i;:::-;850:2;844:9;818:2;904:13;;-1:-1:-1;;900:22:12;;;924:2;896:31;892:40;880:53;;;948:18;;;968:22;;;945:46;942:72;;;994:18;;:::i;:::-;1034:10;1030:2;1023:22;1069:2;1061:6;1054:18;1091:4;1081:14;;1132:7;1127:2;1122;1118;1114:11;1110:20;1107:33;1104:53;;;1153:1;1150;1143:12;1104:53;1175:1;1166:10;;1185:129;1199:2;1196:1;1193:9;1185:129;;;1287:10;;;1283:19;;1277:26;1256:14;;;1252:23;;1245:59;1210:10;;;;1185:129;;;1332:2;1329:1;1326:9;1323:80;;;1391:1;1386:2;1381;1373:6;1369:15;1365:24;1358:35;1323:80;1422:6;-1:-1:-1;1447:49:12;;-1:-1:-1;;1477:18:12;;;1447:49;:::i;:::-;1437:59;;;;328:1174;;;;;:::o;1507:380::-;1586:1;1582:12;;;;1629;;;1650:61;;1704:4;1696:6;1692:17;1682:27;;1650:61;1757:2;1749:6;1746:14;1726:18;1723:38;1720:161;;1803:10;1798:3;1794:20;1791:1;1784:31;1838:4;1835:1;1828:15;1866:4;1863:1;1856:15;1720:161;;1507:380;;;:::o;:::-;323:1976:11;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1065": {
									"entryPoint": null,
									"id": 1065,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_asSingletonArray_1221": {
									"entryPoint": 6608,
									"id": 1221,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_2402": {
									"entryPoint": null,
									"id": 2402,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1193": {
									"entryPoint": 5958,
									"id": 1193,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1128": {
									"entryPoint": 6683,
									"id": 1128,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mint_656": {
									"entryPoint": 5000,
									"id": 656,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_1864": {
									"entryPoint": null,
									"id": 1864,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_544": {
									"entryPoint": 3780,
									"id": 544,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_409": {
									"entryPoint": 5369,
									"id": 409,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1027": {
									"entryPoint": 4625,
									"id": 1027,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setBaseURI_2213": {
									"entryPoint": 4606,
									"id": 2213,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_2202": {
									"entryPoint": 4964,
									"id": 2202,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@adminSafe_2229": {
									"entryPoint": null,
									"id": 2229,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@balanceOfBatch_179": {
									"entryPoint": 1532,
									"id": 179,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_115": {
									"entryPoint": 794,
									"id": 115,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@baseURI_2150": {
									"entryPoint": 2072,
									"id": 2150,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@changeAdminSafe_2303": {
									"entryPoint": 2625,
									"id": 2303,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@exists_1424": {
									"entryPoint": null,
									"id": 1424,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_214": {
									"entryPoint": null,
									"id": 214,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1575": {
									"entryPoint": null,
									"id": 1575,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_2435": {
									"entryPoint": 2391,
									"id": 2435,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeBatchTransferFrom_292": {
									"entryPoint": 1331,
									"id": 292,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_252": {
									"entryPoint": 3390,
									"id": 252,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_196": {
									"entryPoint": 2380,
									"id": 196,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setBaseURI_2381": {
									"entryPoint": 1876,
									"id": 2381,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setTraderPermission_2329": {
									"entryPoint": 3035,
									"id": 2329,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_2100": {
									"entryPoint": null,
									"id": 2100,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_75": {
									"entryPoint": 1015,
									"id": 75,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURIs_2142": {
									"entryPoint": 2218,
									"id": 2142,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_1408": {
									"entryPoint": null,
									"id": 1408,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_2187": {
									"entryPoint": 3584,
									"id": 2187,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_2369": {
									"entryPoint": 1244,
									"id": 2369,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_87": {
									"entryPoint": 5943,
									"id": 87,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 7265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 7750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 7863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_string_calldata": {
									"entryPoint": 8460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8763,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 8009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 8841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 8599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_string_calldata_ptr": {
									"entryPoint": 8659,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 9679,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_calldata_ptr": {
									"entryPoint": 8533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 8382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 8942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string_memory_ptr": {
									"entryPoint": 7499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_stringliteral_36729b1384b41036aa5c7ea0f008334bd05ce4ca3b51916e8ea94d31c3454c5c__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8970,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9290,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9572,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9904,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 9535,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bfcf428da2a377287b5d352c63b3be9ac4e5d20c502a185ebf9b34d347503e1a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fa3d7547ebdbd3d83688f57f208c1ceb8b68fc0b773db8e47be5f62dfed50852__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 7714,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 7451,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 9207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 9151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9104,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9057,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7592,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 9708,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 9736,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_bytes4": {
									"entryPoint": 7348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:22301:12",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:147:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "188:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "197:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "200:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "190:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "190:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "190:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "142:42:12",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:54:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:65:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:73:12"
															},
															"nodeType": "YulIf",
															"src": "111:93:12"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:12",
														"type": ""
													}
												],
												"src": "14:196:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "302:167:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "348:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "357:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "360:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "350:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "350:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "350:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "323:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "332:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "319:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "319:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "344:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "315:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "315:32:12"
															},
															"nodeType": "YulIf",
															"src": "312:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "373:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "402:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "383:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "383:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "373:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "421:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "448:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "459:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "444:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "444:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "431:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "431:32:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "421:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "260:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "271:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "283:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "291:6:12",
														"type": ""
													}
												],
												"src": "215:254:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "575:76:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "585:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "597:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "608:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "593:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "593:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "585:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "627:9:12"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "638:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "620:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "620:25:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "620:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "544:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "555:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "566:4:12",
														"type": ""
													}
												],
												"src": "474:177:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "700:133:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "811:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "820:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "823:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "813:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "813:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "813:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "723:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "734:5:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "741:66:12",
																						"type": "",
																						"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "730:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "730:78:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "720:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "720:89:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "713:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "713:97:12"
															},
															"nodeType": "YulIf",
															"src": "710:117:12"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "689:5:12",
														"type": ""
													}
												],
												"src": "656:177:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:176:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "962:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "965:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "955:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:12"
															},
															"nodeType": "YulIf",
															"src": "917:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "978:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1004:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "991:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "991:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "982:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1047:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "1023:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1023:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1023:30:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1062:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1072:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1062:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "873:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "884:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "896:6:12",
														"type": ""
													}
												],
												"src": "838:245:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1183:92:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1193:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1205:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1216:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1201:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1201:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1193:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1235:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1260:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1253:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1253:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1246:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1246:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1228:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1228:41:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1228:41:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1152:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1163:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1174:4:12",
														"type": ""
													}
												],
												"src": "1088:187:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1350:110:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1396:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1405:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1408:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1398:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1398:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1371:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1380:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1367:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1367:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1392:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1363:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1363:32:12"
															},
															"nodeType": "YulIf",
															"src": "1360:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1421:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1444:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1431:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1431:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1421:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1316:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1327:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1339:6:12",
														"type": ""
													}
												],
												"src": "1280:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1518:205:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1528:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1537:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1532:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1597:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1622:3:12"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1627:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1618:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1618:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1641:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1646:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1637:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1637:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1631:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1631:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1611:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1611:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1611:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1558:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1561:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1555:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1555:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1569:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1571:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1580:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1583:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1576:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1576:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1571:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1551:3:12",
																"statements": []
															},
															"src": "1547:113:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1686:31:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1699:3:12"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1704:6:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1695:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1695:16:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1688:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1688:27:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1688:27:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1675:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1678:6:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1672:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1672:13:12"
															},
															"nodeType": "YulIf",
															"src": "1669:48:12"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1496:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1501:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1506:6:12",
														"type": ""
													}
												],
												"src": "1465:258:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1789:267:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1799:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1819:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1813:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1813:12:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1803:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1841:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1846:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1834:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1834:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1834:19:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1888:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1895:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1884:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1884:16:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1906:3:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1911:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1902:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1902:14:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1918:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1862:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1862:63:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1862:63:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1934:116:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1949:3:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1962:6:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1970:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1958:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1958:15:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1975:66:12",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1954:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1954:88:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1945:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1945:98:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2045:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1941:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1941:109:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1934:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1766:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1773:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1781:3:12",
														"type": ""
													}
												],
												"src": "1728:328:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2182:110:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2199:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2210:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2192:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2192:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2192:21:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2222:64:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2259:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2271:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2282:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2267:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2267:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2230:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2230:56:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2222:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2151:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2162:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2173:4:12",
														"type": ""
													}
												],
												"src": "2061:231:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2329:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2346:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2349:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2339:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2339:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2339:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2443:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2446:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2436:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2436:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2436:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2467:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2470:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2460:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2460:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2460:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2297:184:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2533:261:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2543:117:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2565:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "2581:4:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2587:2:12",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2577:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2577:13:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2592:66:12",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2573:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2573:86:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2561:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2561:99:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2547:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2735:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2737:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2737:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2737:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2678:10:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2690:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2675:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2675:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2714:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2726:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2711:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2711:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2672:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2672:62:12"
															},
															"nodeType": "YulIf",
															"src": "2669:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2773:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2777:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2766:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2766:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2766:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2515:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2523:4:12",
														"type": ""
													}
												],
												"src": "2486:308:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2868:114:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2912:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2914:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2914:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2914:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2884:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2892:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2881:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2881:30:12"
															},
															"nodeType": "YulIf",
															"src": "2878:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2943:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2959:1:12",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2962:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2955:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2955:14:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2971:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2951:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2951:25:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2943:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2848:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2859:4:12",
														"type": ""
													}
												],
												"src": "2799:183:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3051:660:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3100:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3109:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3112:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3102:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3102:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3102:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3079:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3087:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3075:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3075:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3094:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3071:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3071:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3064:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3064:35:12"
															},
															"nodeType": "YulIf",
															"src": "3061:55:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3125:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3148:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3135:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3135:20:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3129:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3164:14:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3174:4:12",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3168:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3187:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3237:2:12"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "3197:39:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3197:43:12"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3191:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3249:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3269:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3263:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3263:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3253:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3301:6:12"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "3309:2:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3281:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3281:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3281:31:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3321:17:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3332:6:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3325:3:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3354:6:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3362:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3347:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3347:18:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3347:18:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3374:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3385:6:12"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3393:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3381:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3381:15:12"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3374:3:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3405:46:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3427:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3439:1:12",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3442:2:12"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3435:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3435:10:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3423:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3423:23:12"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3448:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3419:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3419:32:12"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3409:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3479:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3488:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3491:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3481:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3481:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3481:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3466:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3474:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3463:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3463:15:12"
															},
															"nodeType": "YulIf",
															"src": "3460:35:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3504:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3519:6:12"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3527:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3515:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3515:15:12"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "3508:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3595:86:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3616:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "3634:3:12"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "3621:12:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3621:17:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3609:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3609:30:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3609:30:12"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3652:19:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3663:3:12"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3668:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3659:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3659:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3652:3:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3550:3:12"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3555:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3547:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3547:15:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3563:23:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3565:19:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3576:3:12"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3581:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3572:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3572:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3565:3:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3543:3:12",
																"statements": []
															},
															"src": "3539:142:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3690:15:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3699:6:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3690:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3025:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3033:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3041:5:12",
														"type": ""
													}
												],
												"src": "2987:724:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3768:562:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3817:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3826:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3829:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3819:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3819:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3819:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3796:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3804:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3792:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3792:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3811:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3788:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3788:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3781:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3781:35:12"
															},
															"nodeType": "YulIf",
															"src": "3778:55:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3842:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3865:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3852:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3852:20:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3846:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3911:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3913:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3913:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3913:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3887:2:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3891:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3884:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3884:26:12"
															},
															"nodeType": "YulIf",
															"src": "3881:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3942:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3962:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3956:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3956:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3946:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3994:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "4014:2:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4018:4:12",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4010:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4010:13:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4025:66:12",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4006:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4006:86:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4094:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4002:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4002:97:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3974:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3974:126:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3974:126:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4116:6:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4124:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4109:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4109:18:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4109:18:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4175:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4184:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4187:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4177:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4177:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4177:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4150:6:12"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "4158:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4146:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4146:15:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4163:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4142:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4142:26:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4170:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4139:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4139:35:12"
															},
															"nodeType": "YulIf",
															"src": "4136:55:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4217:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4225:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4213:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4213:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4236:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4244:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4232:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4232:17:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4251:2:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4200:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4200:54:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4200:54:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "4278:6:12"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "4286:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4274:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4274:15:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4291:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4270:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4270:26:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4298:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4263:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4263:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4263:37:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4309:15:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4318:6:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4309:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3742:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3750:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3758:5:12",
														"type": ""
													}
												],
												"src": "3716:614:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4532:746:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4579:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4588:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4591:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4581:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4581:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4581:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4553:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4562:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4549:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4549:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4574:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4545:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4545:33:12"
															},
															"nodeType": "YulIf",
															"src": "4542:53:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4604:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4633:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4614:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4614:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4604:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4652:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4685:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4696:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4681:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4681:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4662:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4662:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4652:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4709:46:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4740:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4751:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4736:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4736:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4723:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4723:32:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4713:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4764:28:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4774:18:12",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4768:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4819:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4828:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4831:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4821:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4821:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4821:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4807:6:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4815:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4804:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4804:14:12"
															},
															"nodeType": "YulIf",
															"src": "4801:34:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4844:71:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4887:9:12"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4898:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4883:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4883:22:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4907:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4854:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4854:61:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4844:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4924:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4957:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4968:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4953:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4953:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4940:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4940:32:12"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4928:8:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5001:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5010:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5013:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5003:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5003:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5003:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4987:8:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4997:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4984:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4984:16:12"
															},
															"nodeType": "YulIf",
															"src": "4981:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5026:73:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5069:9:12"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "5080:8:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5065:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5065:24:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5091:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5036:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5036:63:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "5026:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5108:49:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5141:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5152:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5137:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5137:19:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5124:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5124:33:12"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "5112:8:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5186:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5195:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5198:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5188:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5188:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5188:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "5172:8:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5182:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5169:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5169:16:12"
															},
															"nodeType": "YulIf",
															"src": "5166:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5211:61:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5242:9:12"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "5253:8:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5238:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5238:24:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5264:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5221:16:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5221:51:12"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "5211:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4466:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4477:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4489:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4497:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4505:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4513:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4521:6:12",
														"type": ""
													}
												],
												"src": "4335:943:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5384:125:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5394:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5406:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5417:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5402:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5402:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5394:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5436:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5451:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5459:42:12",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5447:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5447:55:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5429:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5429:74:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5429:74:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5353:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5364:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5375:4:12",
														"type": ""
													}
												],
												"src": "5283:226:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5651:1071:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5697:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5706:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5709:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5699:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5699:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5699:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5672:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5681:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5668:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5668:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5693:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5664:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5664:32:12"
															},
															"nodeType": "YulIf",
															"src": "5661:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5722:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5749:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5736:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5736:23:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5726:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5768:28:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5778:18:12",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5772:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5823:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5832:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5835:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5825:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5825:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5825:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5811:6:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5819:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5808:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5808:14:12"
															},
															"nodeType": "YulIf",
															"src": "5805:34:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5848:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5862:9:12"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5873:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5858:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5858:22:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "5852:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5928:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5937:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5940:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5930:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5930:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5930:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "5907:2:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5911:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5903:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5903:13:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5918:7:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5899:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5899:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5892:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5892:35:12"
															},
															"nodeType": "YulIf",
															"src": "5889:55:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5953:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5976:2:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5963:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5963:16:12"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "5957:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5988:14:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5998:4:12",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "5992:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6011:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "6061:2:12"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6021:39:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6021:43:12"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "6015:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6073:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6093:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6087:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6087:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "6077:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6125:6:12"
																	},
																	{
																		"name": "_5",
																		"nodeType": "YulIdentifier",
																		"src": "6133:2:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "6105:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6105:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6105:31:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6145:17:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "6156:6:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "6149:3:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6178:6:12"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "6186:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6171:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6171:18:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6171:18:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6198:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6209:6:12"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "6217:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6205:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6205:15:12"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "6198:3:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6229:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "6251:2:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6259:1:12",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "6262:2:12"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "6255:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6255:10:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6247:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6247:19:12"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "6268:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6243:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6243:28:12"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "6233:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6303:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6312:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6315:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6305:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6305:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6305:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6286:6:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6294:7:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6283:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6283:19:12"
															},
															"nodeType": "YulIf",
															"src": "6280:39:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6328:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6343:2:12"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "6347:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6339:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6339:11:12"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "6332:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6415:92:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6436:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "6460:3:12"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "6441:18:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6441:23:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6429:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6429:36:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6429:36:12"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6478:19:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6489:3:12"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "6494:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6485:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6485:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6478:3:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6370:3:12"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6375:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6367:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6367:15:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6383:23:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6385:19:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "6396:3:12"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "6401:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6392:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6392:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6385:3:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6363:3:12",
																"statements": []
															},
															"src": "6359:148:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6516:16:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "6526:6:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6516:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6541:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6574:9:12"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "6585:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6570:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6570:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6557:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6557:32:12"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "6545:8:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6618:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6627:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6630:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6620:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6620:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6620:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "6604:8:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6614:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6601:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6601:16:12"
															},
															"nodeType": "YulIf",
															"src": "6598:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6643:73:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6686:9:12"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "6697:8:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6682:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6682:24:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6708:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6653:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6653:63:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6643:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5609:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5620:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5632:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5640:6:12",
														"type": ""
													}
												],
												"src": "5514:1208:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6788:374:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6798:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6818:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6812:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6812:12:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6802:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6840:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6845:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6833:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6833:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6833:19:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6861:14:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6871:4:12",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6865:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6884:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6895:3:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6900:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6891:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6891:12:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6884:3:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6912:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6930:5:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6937:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6926:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6926:14:12"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6916:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6949:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6958:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6953:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7017:120:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7038:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "7049:6:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7043:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7043:13:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7031:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7031:26:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7031:26:12"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7070:19:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7081:3:12"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7086:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7077:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7077:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7070:3:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7102:25:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "7116:6:12"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7124:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7112:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7112:15:12"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7102:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6979:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6982:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6976:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6976:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6990:18:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6992:14:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7001:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7004:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6997:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6997:9:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6992:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6972:3:12",
																"statements": []
															},
															"src": "6968:169:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7146:10:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7153:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7146:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6765:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6772:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6780:3:12",
														"type": ""
													}
												],
												"src": "6727:435:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7318:110:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7335:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7346:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7328:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7328:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7328:21:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7358:64:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7395:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7407:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7418:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7403:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7403:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7366:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7366:56:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7358:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7287:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7298:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7309:4:12",
														"type": ""
													}
												],
												"src": "7167:261:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7506:275:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7555:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7564:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7567:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7557:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7557:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7557:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7534:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7542:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7530:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7530:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "7549:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "7526:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7526:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7519:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7519:35:12"
															},
															"nodeType": "YulIf",
															"src": "7516:55:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7580:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7603:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7590:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7590:20:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7580:6:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7653:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7662:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7665:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7655:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7655:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7655:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7625:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7633:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7622:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7622:30:12"
															},
															"nodeType": "YulIf",
															"src": "7619:50:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7678:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7694:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7702:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7690:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7690:17:12"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "7678:8:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7759:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7768:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7771:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7761:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7761:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7761:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7730:6:12"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "7738:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7726:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7726:19:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7747:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7722:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7722:30:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7754:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7719:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7719:39:12"
															},
															"nodeType": "YulIf",
															"src": "7716:59:12"
														}
													]
												},
												"name": "abi_decode_string_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7469:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7477:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "7485:8:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7495:6:12",
														"type": ""
													}
												],
												"src": "7433:348:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7876:321:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7922:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7931:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7934:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7924:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7924:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7924:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7897:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7906:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7893:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7893:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7918:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7889:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7889:32:12"
															},
															"nodeType": "YulIf",
															"src": "7886:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7947:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7974:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7961:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7961:23:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "7951:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8027:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8036:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8039:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8029:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8029:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8029:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7999:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8007:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7996:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7996:30:12"
															},
															"nodeType": "YulIf",
															"src": "7993:50:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8052:85:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8109:9:12"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8120:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8105:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8105:22:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8129:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "8078:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8078:59:12"
															},
															"variables": [
																{
																	"name": "value0_1",
																	"nodeType": "YulTypedName",
																	"src": "8056:8:12",
																	"type": ""
																},
																{
																	"name": "value1_1",
																	"nodeType": "YulTypedName",
																	"src": "8066:8:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8146:18:12",
															"value": {
																"name": "value0_1",
																"nodeType": "YulIdentifier",
																"src": "8156:8:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8146:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8173:18:12",
															"value": {
																"name": "value1_1",
																"nodeType": "YulIdentifier",
																"src": "8183:8:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "8173:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7834:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7845:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7857:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7865:6:12",
														"type": ""
													}
												],
												"src": "7786:411:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8286:263:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8332:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8341:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8344:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8334:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8334:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8334:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8307:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8316:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8303:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8303:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8328:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8299:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8299:32:12"
															},
															"nodeType": "YulIf",
															"src": "8296:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8357:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8386:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "8367:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8367:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8357:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8405:45:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8435:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8446:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8431:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8431:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8418:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8418:32:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "8409:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8503:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8512:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8515:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8505:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8505:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8505:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8472:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "8493:5:12"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "8486:6:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8486:13:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8479:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8479:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8469:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8469:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8462:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8462:40:12"
															},
															"nodeType": "YulIf",
															"src": "8459:60:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8528:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8538:5:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "8528:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8244:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8255:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8267:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8275:6:12",
														"type": ""
													}
												],
												"src": "8202:347:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8695:481:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8742:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8751:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8754:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8744:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8744:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8744:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8716:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8725:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8712:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8712:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8737:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8708:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8708:33:12"
															},
															"nodeType": "YulIf",
															"src": "8705:53:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8767:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8796:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "8777:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8777:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8767:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8815:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8842:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8853:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8838:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8838:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8825:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8825:32:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "8815:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8866:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8893:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8904:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8889:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8889:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8876:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8876:32:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "8866:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8917:46:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8948:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8959:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8944:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8944:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8931:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8931:32:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "8921:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9006:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9015:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9018:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9008:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9008:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9008:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8978:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8986:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8975:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8975:30:12"
															},
															"nodeType": "YulIf",
															"src": "8972:50:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9031:85:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9088:9:12"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9099:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9084:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9084:22:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "9108:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "9057:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9057:59:12"
															},
															"variables": [
																{
																	"name": "value3_1",
																	"nodeType": "YulTypedName",
																	"src": "9035:8:12",
																	"type": ""
																},
																{
																	"name": "value4_1",
																	"nodeType": "YulTypedName",
																	"src": "9045:8:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9125:18:12",
															"value": {
																"name": "value3_1",
																"nodeType": "YulIdentifier",
																"src": "9135:8:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "9125:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9152:18:12",
															"value": {
																"name": "value4_1",
																"nodeType": "YulIdentifier",
																"src": "9162:8:12"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "9152:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_string_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8629:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8640:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8652:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8660:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8668:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8676:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8684:6:12",
														"type": ""
													}
												],
												"src": "8554:622:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9251:116:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9297:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9306:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9309:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9299:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9299:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9299:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9272:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9281:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9268:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9268:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9293:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9264:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9264:32:12"
															},
															"nodeType": "YulIf",
															"src": "9261:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9322:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9351:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "9332:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9332:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9322:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9217:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9228:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9240:6:12",
														"type": ""
													}
												],
												"src": "9181:186:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9459:173:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9505:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9514:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9517:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9507:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9507:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9507:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9480:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9489:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9476:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9476:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9501:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9472:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9472:32:12"
															},
															"nodeType": "YulIf",
															"src": "9469:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9530:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9559:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "9540:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9540:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9530:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9578:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9611:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9622:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9607:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9607:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "9588:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9588:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "9578:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9417:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9428:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9440:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9448:6:12",
														"type": ""
													}
												],
												"src": "9372:260:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9784:459:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9831:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9840:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9843:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9833:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9833:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9833:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9805:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9814:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9801:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9801:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9826:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9797:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9797:33:12"
															},
															"nodeType": "YulIf",
															"src": "9794:53:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9856:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9885:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "9866:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9866:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9856:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9904:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9937:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9948:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9933:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9933:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "9914:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9914:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "9904:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9961:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9988:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9999:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9984:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9984:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9971:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9971:32:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "9961:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10012:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10039:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10050:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10035:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10035:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10022:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10022:32:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "10012:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10063:47:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10094:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10105:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10090:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10090:19:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10077:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10077:33:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "10067:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10153:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10162:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10165:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10155:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10155:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10155:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10125:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10133:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10122:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10122:30:12"
															},
															"nodeType": "YulIf",
															"src": "10119:50:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10178:59:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10209:9:12"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "10220:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10205:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10205:22:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10229:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "10188:16:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10188:49:12"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "10178:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9718:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9729:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9741:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9749:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9757:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9765:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "9773:6:12",
														"type": ""
													}
												],
												"src": "9637:606:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10422:233:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10439:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10450:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10432:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10432:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10432:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10473:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10484:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10469:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10469:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10489:2:12",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10462:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10462:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10462:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10512:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10523:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10508:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10508:18:12"
																	},
																	{
																		"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10528:34:12",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10501:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10501:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10501:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10583:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10594:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10579:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10579:18:12"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10599:13:12",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10572:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10572:41:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10572:41:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10622:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10634:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10645:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10630:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10630:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10622:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10399:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10413:4:12",
														"type": ""
													}
												],
												"src": "10248:407:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10710:135:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10720:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10740:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10734:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10734:12:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10724:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10781:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10788:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10777:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10777:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10795:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10800:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "10755:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10755:52:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10755:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10816:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10827:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10832:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10823:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10823:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10816:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10687:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10694:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10702:3:12",
														"type": ""
													}
												],
												"src": "10660:185:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11138:359:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11148:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11168:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11162:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11162:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11152:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11210:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11218:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11206:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11206:17:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11225:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11230:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11184:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11184:53:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11184:53:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11246:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11263:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11268:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11259:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11259:16:12"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "11250:5:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11284:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11306:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11300:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11300:13:12"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "11288:8:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11348:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11356:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11344:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11344:17:12"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "11363:5:12"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "11370:8:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11322:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11322:57:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11322:57:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11388:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "11405:5:12"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "11412:8:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11401:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11401:20:12"
															},
															"variables": [
																{
																	"name": "end_2",
																	"nodeType": "YulTypedName",
																	"src": "11392:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "end_2",
																		"nodeType": "YulIdentifier",
																		"src": "11437:5:12"
																	},
																	{
																		"hexValue": "2f6d657461646174612e6a736f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11444:16:12",
																		"type": "",
																		"value": "/metadata.json"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11430:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11430:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11430:31:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11470:21:12",
															"value": {
																"arguments": [
																	{
																		"name": "end_2",
																		"nodeType": "YulIdentifier",
																		"src": "11481:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11488:2:12",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11477:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11477:14:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11470:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_stringliteral_36729b1384b41036aa5c7ea0f008334bd05ce4ca3b51916e8ea94d31c3454c5c__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11106:3:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11111:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11119:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11130:3:12",
														"type": ""
													}
												],
												"src": "10850:647:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11676:240:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11693:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11704:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11686:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11686:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11686:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11727:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11738:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11723:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11723:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11743:2:12",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11716:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11716:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11716:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11766:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11777:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11762:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11762:18:12"
																	},
																	{
																		"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11782:34:12",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11755:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11755:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11755:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11837:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11848:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11833:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11833:18:12"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11853:20:12",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11826:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11826:48:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11826:48:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11883:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11895:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11906:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11891:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11891:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11883:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11653:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11667:4:12",
														"type": ""
													}
												],
												"src": "11502:414:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12095:231:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12112:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12123:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12105:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12105:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12105:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12146:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12157:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12142:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12142:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12162:2:12",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12135:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12135:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12135:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12185:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12196:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12181:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12181:18:12"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12201:34:12",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12174:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12174:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12174:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12256:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12267:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12252:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12252:18:12"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12272:11:12",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12245:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12245:39:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12245:39:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12293:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12305:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12316:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12301:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12301:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12293:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12072:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12086:4:12",
														"type": ""
													}
												],
												"src": "11921:405:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12363:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12380:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12383:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12373:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12373:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12373:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12477:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12480:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12470:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12470:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12470:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12501:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12504:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12494:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12494:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12494:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "12331:184:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12552:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12569:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12572:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12562:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12562:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12562:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12666:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12669:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12659:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12659:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12659:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12690:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12693:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12683:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12683:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12683:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12520:184:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12756:148:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12847:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12849:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12849:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12849:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12772:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12779:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12769:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12769:77:12"
															},
															"nodeType": "YulIf",
															"src": "12766:103:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12878:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12889:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12896:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12885:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12885:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "12878:3:12"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12738:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "12748:3:12",
														"type": ""
													}
												],
												"src": "12709:195:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13083:174:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13100:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13111:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13093:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13093:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13093:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13134:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13145:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13130:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13130:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13150:2:12",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13123:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13123:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13123:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13173:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13184:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13169:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13169:18:12"
																	},
																	{
																		"hexValue": "596f7520617265206e6f742077686974656c69737465642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13189:26:12",
																		"type": "",
																		"value": "You are not whitelisted."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13162:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13162:54:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13162:54:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13225:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13237:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13248:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13233:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13233:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13225:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bfcf428da2a377287b5d352c63b3be9ac4e5d20c502a185ebf9b34d347503e1a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13060:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13074:4:12",
														"type": ""
													}
												],
												"src": "12909:348:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13317:382:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13327:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13341:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "13344:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "13337:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13337:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "13327:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13358:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "13388:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13394:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13384:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13384:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "13362:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13435:31:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13437:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "13451:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13459:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "13447:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13447:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "13437:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "13415:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13408:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13408:26:12"
															},
															"nodeType": "YulIf",
															"src": "13405:61:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13525:168:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13546:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13549:77:12",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13539:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13539:88:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13539:88:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13647:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13650:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13640:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13640:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13640:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13675:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13678:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13668:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13668:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13668:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "13481:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "13504:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13512:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "13501:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13501:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "13478:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13478:38:12"
															},
															"nodeType": "YulIf",
															"src": "13475:218:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "13297:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13306:6:12",
														"type": ""
													}
												],
												"src": "13262:437:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13878:227:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13895:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13906:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13888:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13888:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13888:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13929:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13940:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13925:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13925:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13945:2:12",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13918:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13918:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13918:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13968:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13979:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13964:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13964:18:12"
																	},
																	{
																		"hexValue": "50726f7669646564206164647265737320616c72656164792073616665206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13984:34:12",
																		"type": "",
																		"value": "Provided address already safe ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13957:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13957:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13957:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14039:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14050:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14035:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14035:18:12"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14055:7:12",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14028:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14028:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14028:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14072:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14084:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14095:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14080:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14080:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14072:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fa3d7547ebdbd3d83688f57f208c1ceb8b68fc0b773db8e47be5f62dfed50852__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13855:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13869:4:12",
														"type": ""
													}
												],
												"src": "13704:401:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14284:231:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14301:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14312:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14294:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14294:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14294:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14335:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14346:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14331:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14331:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14351:2:12",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14324:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14324:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14324:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14374:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14385:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14370:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14370:18:12"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14390:34:12",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14363:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14363:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14363:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14445:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14456:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14441:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14441:18:12"
																	},
																	{
																		"hexValue": "20617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14461:11:12",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14434:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14434:39:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14434:39:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14482:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14494:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14505:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14490:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14490:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14482:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14261:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14275:4:12",
														"type": ""
													}
												],
												"src": "14110:405:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14576:65:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14593:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "14596:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14586:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14586:14:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14586:14:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14609:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14627:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14630:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "14617:9:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14617:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "14609:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "14559:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "14567:4:12",
														"type": ""
													}
												],
												"src": "14520:121:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14830:1105:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14840:12:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14851:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "ret",
																	"nodeType": "YulTypedName",
																	"src": "14844:3:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14861:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14884:6:12"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "14878:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14878:13:12"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nodeType": "YulTypedName",
																	"src": "14865:9:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14900:17:12",
															"value": {
																"name": "ret",
																"nodeType": "YulIdentifier",
																"src": "14914:3:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14904:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14926:11:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14936:1:12",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "14930:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14946:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "14960:2:12"
																	},
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "14964:9:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "14956:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14956:18:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "14946:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14983:44:12",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "15013:9:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "15024:2:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15009:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15009:18:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "14987:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15066:31:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "15068:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "15082:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15090:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "15078:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15078:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "15068:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "15046:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15039:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15039:26:12"
															},
															"nodeType": "YulIf",
															"src": "15036:61:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15106:12:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15116:2:12",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "15110:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15177:172:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ret",
																					"nodeType": "YulIdentifier",
																					"src": "15198:3:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15203:77:12",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15191:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15191:90:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15191:90:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15301:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15304:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15294:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15294:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15294:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ret",
																					"nodeType": "YulIdentifier",
																					"src": "15329:3:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15334:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15322:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15322:17:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15322:17:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "15133:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "15156:6:12"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "15164:2:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "15153:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15153:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "15130:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15130:38:12"
															},
															"nodeType": "YulIf",
															"src": "15127:222:12"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "15399:155:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "15420:3:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nodeType": "YulIdentifier",
																									"src": "15429:9:12"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "15440:66:12",
																									"type": "",
																									"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "15425:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "15425:82:12"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "15413:6:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15413:95:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "15413:95:12"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "15521:23:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "15532:3:12"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "15537:6:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "15528:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15528:16:12"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "15521:3:12"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "15392:162:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15397:1:12",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "15570:313:12",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "15584:52:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "value0",
																							"nodeType": "YulIdentifier",
																							"src": "15629:6:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "15599:29:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15599:37:12"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nodeType": "YulTypedName",
																						"src": "15588:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "15649:10:12",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15658:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "15653:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "15726:111:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nodeType": "YulIdentifier",
																												"src": "15755:3:12"
																											},
																											{
																												"name": "i",
																												"nodeType": "YulIdentifier",
																												"src": "15760:1:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "15751:3:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "15751:11:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nodeType": "YulIdentifier",
																												"src": "15770:7:12"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nodeType": "YulIdentifier",
																											"src": "15764:5:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "15764:14:12"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nodeType": "YulIdentifier",
																									"src": "15744:6:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "15744:35:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "15744:35:12"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "15796:27:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nodeType": "YulIdentifier",
																										"src": "15811:7:12"
																									},
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "15820:2:12"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "15807:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "15807:16:12"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nodeType": "YulIdentifier",
																									"src": "15796:7:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "15683:1:12"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "15686:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "15680:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15680:13:12"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "15694:19:12",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "15696:15:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "15705:1:12"
																									},
																									{
																										"name": "_2",
																										"nodeType": "YulIdentifier",
																										"src": "15708:2:12"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "15701:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "15701:10:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "15696:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "15676:3:12",
																					"statements": []
																				},
																				"src": "15672:165:12"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "15850:23:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "15861:3:12"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "15866:6:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "15857:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15857:16:12"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "15850:3:12"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "15563:320:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15568:1:12",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"name": "outOfPlaceEncoding",
																"nodeType": "YulIdentifier",
																"src": "15365:18:12"
															},
															"nodeType": "YulSwitch",
															"src": "15358:525:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15892:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15917:6:12"
																	},
																	{
																		"name": "ret",
																		"nodeType": "YulIdentifier",
																		"src": "15925:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "15899:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15899:30:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15892:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14798:3:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14803:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14811:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14822:3:12",
														"type": ""
													}
												],
												"src": "14646:1289:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16114:230:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16131:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16142:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16124:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16124:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16124:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16165:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16176:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16161:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16161:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16181:2:12",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16154:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16154:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16154:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16204:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16215:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16200:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16200:18:12"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16220:34:12",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16193:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16193:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16193:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16275:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16286:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16271:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16271:18:12"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16291:10:12",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16264:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16264:38:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16264:38:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16311:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16323:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16334:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16319:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16319:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16311:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16091:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16105:4:12",
														"type": ""
													}
												],
												"src": "15940:404:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16523:227:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16540:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16551:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16533:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16533:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16533:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16574:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16585:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16570:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16570:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16590:2:12",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16563:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16563:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16563:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16613:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16624:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16609:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16609:18:12"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16629:34:12",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16602:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16602:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16602:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16684:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16695:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16680:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16680:18:12"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16700:7:12",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16673:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16673:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16673:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16717:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16729:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16740:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16725:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16725:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16717:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16500:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16514:4:12",
														"type": ""
													}
												],
												"src": "16349:401:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16929:232:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16946:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16957:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16939:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16939:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16939:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16980:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16991:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16976:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16976:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16996:2:12",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16969:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16969:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16969:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17019:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17030:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17015:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17015:18:12"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17035:34:12",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17008:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17008:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17008:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17090:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17101:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17086:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17086:18:12"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17106:12:12",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17079:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17079:40:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17079:40:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17128:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17140:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17151:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17136:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17136:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17128:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16906:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16920:4:12",
														"type": ""
													}
												],
												"src": "16755:406:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17214:80:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17241:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17243:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17243:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17243:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17230:1:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "17237:1:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "17233:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17233:6:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17227:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17227:13:12"
															},
															"nodeType": "YulIf",
															"src": "17224:39:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17272:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17283:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17286:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17279:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17279:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "17272:3:12"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17197:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17200:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "17206:3:12",
														"type": ""
													}
												],
												"src": "17166:128:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17528:236:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17545:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17556:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17538:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17538:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17538:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17568:70:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17611:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17623:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17634:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17619:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17619:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "17582:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17582:56:12"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "17572:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17658:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17669:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17654:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17654:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "17678:6:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17686:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17674:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17674:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17647:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17647:50:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17647:50:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17706:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17743:6:12"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "17751:6:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "17714:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17714:44:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17706:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17489:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17500:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17508:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17519:4:12",
														"type": ""
													}
												],
												"src": "17299:465:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17943:231:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17960:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17971:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17953:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17953:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17953:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17994:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18005:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17990:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17990:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18010:2:12",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17983:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17983:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17983:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18033:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18044:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18029:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18029:18:12"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18049:34:12",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18022:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18022:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18022:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18104:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18115:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18100:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18100:18:12"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18120:11:12",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18093:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18093:39:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18093:39:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18141:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18153:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18164:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18149:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18149:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18141:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17920:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17934:4:12",
														"type": ""
													}
												],
												"src": "17769:405:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18353:223:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18370:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18381:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18363:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18363:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18363:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18404:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18415:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18400:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18400:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18420:2:12",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18393:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18393:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18393:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18443:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18454:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18439:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18439:18:12"
																	},
																	{
																		"hexValue": "455243313135353a206d696e7420746f20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18459:34:12",
																		"type": "",
																		"value": "ERC1155: mint to the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18432:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18432:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18432:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18514:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18525:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18510:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18510:18:12"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18530:3:12",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18503:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18503:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18503:31:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18543:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18555:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18566:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18551:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18551:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18543:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18330:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18344:4:12",
														"type": ""
													}
												],
												"src": "18179:397:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18710:119:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18720:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18732:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18743:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18728:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18728:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18720:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18762:9:12"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18773:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18755:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18755:25:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18755:25:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18800:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18811:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18796:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18796:18:12"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "18816:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18789:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18789:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18789:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18671:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18682:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18690:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18701:4:12",
														"type": ""
													}
												],
												"src": "18581:248:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19165:530:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19175:52:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "19185:42:12",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "19179:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19243:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "19258:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "19266:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "19254:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19254:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19236:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19236:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19236:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19290:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19301:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19286:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19286:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "19310:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "19318:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "19306:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19306:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19279:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19279:43:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19279:43:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19342:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19353:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19338:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19338:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19358:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19331:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19331:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19331:31:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19371:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "19414:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19426:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19437:3:12",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19422:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19422:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "19385:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19385:57:12"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "19375:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19462:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19473:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19458:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19458:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "19482:6:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19490:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19478:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19478:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19451:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19451:50:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19451:50:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19510:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "19553:6:12"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "19561:6:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "19524:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19524:44:12"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "19514:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19588:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19599:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19584:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19584:19:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "19609:6:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19617:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19605:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19605:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19577:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19577:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19577:51:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19637:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "19674:6:12"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "19682:6:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "19645:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19645:44:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19637:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19102:9:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "19113:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "19121:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "19129:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19137:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19145:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19156:4:12",
														"type": ""
													}
												],
												"src": "18834:861:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19780:169:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19826:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19835:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19838:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19828:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19828:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19828:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19801:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19810:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19797:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19797:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19822:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "19793:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19793:32:12"
															},
															"nodeType": "YulIf",
															"src": "19790:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19851:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19870:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19864:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19864:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "19855:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19913:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "19889:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19889:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19889:30:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19928:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "19938:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "19928:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19746:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "19757:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19769:6:12",
														"type": ""
													}
												],
												"src": "19700:249:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19997:136:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20042:85:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20071:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20074:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20077:1:12",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "20056:14:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20056:23:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20056:23:12"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "20092:25:12",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20103:3:12",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "20114:1:12",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "20108:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20108:8:12"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "20099:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20099:18:12"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "20092:3:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "20013:14:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20013:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20031:1:12",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20010:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20010:23:12"
															},
															"nodeType": "YulIf",
															"src": "20007:120:12"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "19989:3:12",
														"type": ""
													}
												],
												"src": "19954:179:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20185:684:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20225:9:12",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "20227:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "20201:14:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20201:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20219:4:12",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "20198:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20198:26:12"
															},
															"nodeType": "YulIf",
															"src": "20195:39:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20243:21:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20261:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20255:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20255:9:12"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "20247:4:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20273:76:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "20283:66:12",
																"type": "",
																"value": "0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "20277:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "20373:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20379:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "20386:14:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20386:16:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "20404:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20382:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20382:25:12"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "20358:14:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20358:50:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20358:50:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20417:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "20437:4:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20431:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20431:11:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "20421:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20451:26:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "20461:14:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20461:16:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "20455:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20486:28:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "20496:18:12",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "20490:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20572:9:12",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "20574:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "20532:6:12"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "20540:2:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "20529:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20529:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20552:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20560:4:12",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20548:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20548:17:12"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "20567:2:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "20545:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20545:25:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "20526:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20526:45:12"
															},
															"nodeType": "YulIf",
															"src": "20523:58:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20590:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "20605:4:12"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "20611:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20601:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20601:17:12"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "20594:3:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20627:24:12",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "20647:3:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20641:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20641:10:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "20631:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20678:9:12",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "20680:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20666:6:12"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "20674:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20663:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20663:14:12"
															},
															"nodeType": "YulIf",
															"src": "20660:27:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20769:9:12",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "20771:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "20710:3:12"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "20715:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20706:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20706:16:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20724:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20702:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20702:27:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "20739:4:12"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "20745:14:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "20745:16:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20735:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20735:27:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "20764:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20731:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20731:36:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20699:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20699:69:12"
															},
															"nodeType": "YulIf",
															"src": "20696:82:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "20807:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20821:6:12"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "20829:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20817:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20817:19:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20838:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20813:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20813:30:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "20787:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20787:57:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20787:57:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20853:10:12",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "20860:3:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "20853:3:12"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "20177:3:12",
														"type": ""
													}
												],
												"src": "20138:731:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21048:242:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21065:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21076:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21058:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21058:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21058:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21099:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21110:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21095:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21095:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21115:2:12",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21088:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21088:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21088:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21138:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21149:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21134:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21134:18:12"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21154:34:12",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21127:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21127:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21127:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21209:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21220:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21205:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21205:18:12"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21225:22:12",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21198:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21198:50:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21198:50:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21257:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21269:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21280:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21265:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21265:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21257:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21025:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21039:4:12",
														"type": ""
													}
												],
												"src": "20874:416:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21469:230:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21486:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21497:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21479:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21479:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21479:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21520:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21531:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21516:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21516:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21536:2:12",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21509:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21509:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21509:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21559:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21570:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21555:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21555:18:12"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21575:34:12",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21548:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21548:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21548:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21630:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21641:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21626:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21626:18:12"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21646:10:12",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21619:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21619:38:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21619:38:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21666:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21678:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21689:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21674:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21674:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21666:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21446:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21460:4:12",
														"type": ""
													}
												],
												"src": "21295:404:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21935:364:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21945:52:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "21955:42:12",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "21949:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22013:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "22028:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "22036:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "22024:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22024:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22006:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22006:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22006:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22060:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22071:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22056:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22056:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "22080:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "22088:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "22076:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22076:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22049:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22049:43:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22049:43:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22112:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22123:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22108:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22108:18:12"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "22128:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22101:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22101:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22101:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22155:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22166:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22151:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22151:18:12"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "22171:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22144:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22144:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22144:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22198:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22209:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22194:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22194:19:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22215:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22187:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22187:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22187:32:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22228:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "22265:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22277:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22288:3:12",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22273:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22273:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "22236:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22236:57:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22228:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21872:9:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "21883:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "21891:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "21899:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "21907:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21915:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21926:4:12",
														"type": ""
													}
												],
												"src": "21704:595:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_string_memory_ptr(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string_memory_ptr(value0, add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_uint256_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_uint256_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_string_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1155: balance query for the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_stringliteral_36729b1384b41036aa5c7ea0f008334bd05ce4ca3b51916e8ea94d31c3454c5c__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        let end_2 := add(end_1, length_1)\n        mstore(end_2, \"/metadata.json\")\n        end := add(end_2, 14)\n    }\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1155: transfer caller is not \")\n        mstore(add(headStart, 96), \"owner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_bfcf428da2a377287b5d352c63b3be9ac4e5d20c502a185ebf9b34d347503e1a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"You are not whitelisted.\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_fa3d7547ebdbd3d83688f57f208c1ceb8b68fc0b773db8e47be5f62dfed50852__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Provided address already safe ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: caller is not owner nor\")\n        mstore(add(headStart, 96), \" approved\")\n        tail := add(headStart, 128)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := ret\n        let _1 := 1\n        length := shr(_1, slotValue)\n        let outOfPlaceEncoding := and(slotValue, _1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        let _2 := 32\n        if eq(outOfPlaceEncoding, lt(length, _2))\n        {\n            mstore(ret, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(ret, 0x24)\n        }\n        switch outOfPlaceEncoding\n        case 0 {\n            mstore(pos, and(slotValue, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00))\n            ret := add(pos, length)\n        }\n        case 1 {\n            let dataPos := array_dataslot_string_storage(value0)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        end := abi_encode_string(value1, ret)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC1155: mint to the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string_memory_ptr(value4, tail_2)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string_memory_ptr(value4, add(headStart, 160))\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061011a5760003560e01c80636c0360eb116100b2578063bd85b03911610081578063d14186c611610066578063d14186c6146102ab578063e985e9c5146102be578063f242432a1461030757600080fd5b8063bd85b03914610278578063cb4507721461029857600080fd5b80636c0360eb146102375780636c8b703f1461023f578063a22cb46514610252578063bb7fde711461026557600080fd5b80634b8c9c2d116100ee5780634b8c9c2d1461019d5780634e1273f4146101e25780634f558e791461020257806355f804b31461022457600080fd5b8062fdd58e1461011f57806301ffc9a7146101455780630e89341c146101685780632eb2c2d614610188575b600080fd5b61013261012d366004611c8a565b61031a565b6040519081526020015b60405180910390f35b610158610153366004611ce5565b6103f7565b604051901515815260200161013c565b61017b610176366004611d02565b6104dc565b60405161013c9190611d95565b61019b610196366004611f49565b610533565b005b6007546101bd9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161013c565b6101f56101f0366004611ff3565b6105fc565b60405161013c91906120f9565b610158610210366004611d02565b600090815260036020526040902054151590565b61019b610232366004612155565b610754565b61017b610818565b61017b61024d366004611d02565b6108aa565b61019b610260366004612197565b61094c565b61019b6102733660046121d3565b610957565b610132610286366004611d02565b60009081526003602052604090205490565b61019b6102a636600461223b565b610a41565b61019b6102b9366004612197565b610bdb565b6101586102cc366004612256565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205460ff1690565b61019b610315366004612289565b610d3e565b600073ffffffffffffffffffffffffffffffffffffffff83166103c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b5060009081526020818152604080832073ffffffffffffffffffffffffffffffffffffffff949094168352929052205490565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fd9b67a2600000000000000000000000000000000000000000000000000000000148061048a57507fffffffff0000000000000000000000000000000000000000000000000000000082167f0e89341c00000000000000000000000000000000000000000000000000000000145b806104d657507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b606060006104e9836108aa565b90506000815111610502576104fd83610e00565b61052c565b61050a610818565b8160405160200161051c92919061230a565b6040516020818303038152906040525b9392505050565b73ffffffffffffffffffffffffffffffffffffffff851633148061055c575061055c85336102cc565b6105e8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f766564000000000000000000000000000060648201526084016103bb565b6105f58585858585610ec4565b5050505050565b6060815183511461068f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d61746368000000000000000000000000000000000000000000000060648201526084016103bb565b6000835167ffffffffffffffff8111156106ab576106ab611da8565b6040519080825280602002602001820160405280156106d4578160200160208202803683370190505b50905060005b845181101561074c5761071f8582815181106106f8576106f8612361565b602002602001015185838151811061071257610712612361565b602002602001015161031a565b82828151811061073157610731612361565b6020908102919091010152610745816123bf565b90506106da565b509392505050565b60075473ffffffffffffffffffffffffffffffffffffffff1633146107d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f596f7520617265206e6f742077686974656c69737465642e000000000000000060448201526064016103bb565b61081482828080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506111fe92505050565b5050565b606060048054610827906123f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610853906123f7565b80156108a05780601f10610875576101008083540402835291602001916108a0565b820191906000526020600020905b81548152906001019060200180831161088357829003601f168201915b5050505050905090565b60008181526005602052604090208054606091906108c7906123f7565b80601f01602080910402602001604051908101604052809291908181526020018280546108f3906123f7565b80156109405780601f1061091557610100808354040283529160200191610940565b820191906000526020600020905b81548152906001019060200180831161092357829003601f168201915b50505050509050919050565b610814338383611211565b3360009081526006602052604090205460ff166109d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f596f7520617265206e6f742077686974656c69737465642e000000000000000060448201526064016103bb565b600084815260036020526040902054600003610a2657610a268483838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061136492505050565b6105f585858560405180602001604052806000815250611388565b60075473ffffffffffffffffffffffffffffffffffffffff163314610ac2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f596f7520617265206e6f742077686974656c69737465642e000000000000000060448201526064016103bb565b60075473ffffffffffffffffffffffffffffffffffffffff808316911603610b6c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f50726f7669646564206164647265737320616c7265616479207361666520616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103bb565b600780547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517fd4c1af98b758421a8d47b0bc04ecfa30233d5506955e8cde282417aa0d31d3b690600090a250565b60075473ffffffffffffffffffffffffffffffffffffffff163314610c5c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f596f7520617265206e6f742077686974656c69737465642e000000000000000060448201526064016103bb565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260066020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168215801591909117909155610cf95760405173ffffffffffffffffffffffffffffffffffffffff8316907f526af00f9bc92d53f2d0b4c603a1305395a04f7fb6a0a7962867d8d23046754790600090a25050565b60405173ffffffffffffffffffffffffffffffffffffffff8316907fe8185c1a3f6241a6224d99ff39e932ac24fc0d2c51b17e56c5d6f52aff1b5da190600090a25050565b73ffffffffffffffffffffffffffffffffffffffff8516331480610d675750610d6785336102cc565b610df3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f766564000000000000000000000000000000000000000000000060648201526084016103bb565b6105f585858585856114f9565b600081815260056020526040812080546060929190610e1e906123f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610e4a906123f7565b8015610e975780601f10610e6c57610100808354040283529160200191610e97565b820191906000526020600020905b815481529060010190602001808311610e7a57829003601f168201915b505050505090506000815111610eb0576104fd83611737565b60048160405160200161051c92919061244a565b8151835114610f55576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d6174636800000000000000000000000000000000000000000000000060648201526084016103bb565b73ffffffffffffffffffffffffffffffffffffffff8416610ff8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103bb565b3360005b845181101561116957600085828151811061101957611019612361565b60200260200101519050600085838151811061103757611037612361565b6020908102919091018101516000848152808352604080822073ffffffffffffffffffffffffffffffffffffffff8e168352909352919091205490915081811015611104576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e736665720000000000000000000000000000000000000000000060648201526084016103bb565b60008381526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8e8116855292528083208585039055908b1682528120805484929061114e908490612527565b9250508190555050505080611162906123bf565b9050610ffc565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516111e092919061253f565b60405180910390a46111f6818787878787611746565b505050505050565b8051610814906004906020840190611bc8565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112cc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c66000000000000000000000000000000000000000000000060648201526084016103bb565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6000828152600560209081526040909120825161138392840190611bc8565b505050565b73ffffffffffffffffffffffffffffffffffffffff841661142b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016103bb565b336000611437856119d0565b90506000611444856119d0565b905060008681526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8b16845290915281208054879290611483908490612527565b9091555050604080518781526020810187905273ffffffffffffffffffffffffffffffffffffffff808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46114f083600089898989611a1b565b50505050505050565b73ffffffffffffffffffffffffffffffffffffffff841661159c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103bb565b3360006115a8856119d0565b905060006115b5856119d0565b905060008681526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8c16845290915290205485811015611675576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e736665720000000000000000000000000000000000000000000060648201526084016103bb565b60008781526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8d8116855292528083208985039055908a168252812080548892906116bf908490612527565b9091555050604080518881526020810188905273ffffffffffffffffffffffffffffffffffffffff808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461172c848a8a8a8a8a611a1b565b505050505050505050565b6060600280546108c7906123f7565b73ffffffffffffffffffffffffffffffffffffffff84163b156111f6576040517fbc197c8100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063bc197c81906117bd9089908990889088908890600401612564565b6020604051808303816000875af1925050508015611816575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252611813918101906125cf565b60015b6118ff576118226125ec565b806308c379a0036118755750611836612608565b806118415750611877565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bb9190611d95565b505b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e74657200000000000000000000000060648201526084016103bb565b7fffffffff0000000000000000000000000000000000000000000000000000000081167fbc197c8100000000000000000000000000000000000000000000000000000000146114f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e7300000000000000000000000000000000000000000000000060648201526084016103bb565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611a0a57611a0a612361565b602090810291909101015292915050565b73ffffffffffffffffffffffffffffffffffffffff84163b156111f6576040517ff23a6e6100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063f23a6e6190611a9290899089908890889088906004016126b0565b6020604051808303816000875af1925050508015611aeb575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252611ae8918101906125cf565b60015b611af7576118226125ec565b7fffffffff0000000000000000000000000000000000000000000000000000000081167ff23a6e6100000000000000000000000000000000000000000000000000000000146114f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e7300000000000000000000000000000000000000000000000060648201526084016103bb565b828054611bd4906123f7565b90600052602060002090601f016020900481019282611bf65760008555611c3c565b82601f10611c0f57805160ff1916838001178555611c3c565b82800160010185558215611c3c579182015b82811115611c3c578251825591602001919060010190611c21565b50611c48929150611c4c565b5090565b5b80821115611c485760008155600101611c4d565b803573ffffffffffffffffffffffffffffffffffffffff81168114611c8557600080fd5b919050565b60008060408385031215611c9d57600080fd5b611ca683611c61565b946020939093013593505050565b7fffffffff0000000000000000000000000000000000000000000000000000000081168114611ce257600080fd5b50565b600060208284031215611cf757600080fd5b813561052c81611cb4565b600060208284031215611d1457600080fd5b5035919050565b60005b83811015611d36578181015183820152602001611d1e565b83811115611d45576000848401525b50505050565b60008151808452611d63816020860160208601611d1b565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061052c6020830184611d4b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff82111715611e1b57611e1b611da8565b6040525050565b600067ffffffffffffffff821115611e3c57611e3c611da8565b5060051b60200190565b600082601f830112611e5757600080fd5b81356020611e6482611e22565b604051611e718282611dd7565b83815260059390931b8501820192828101915086841115611e9157600080fd5b8286015b84811015611eac5780358352918301918301611e95565b509695505050505050565b600082601f830112611ec857600080fd5b813567ffffffffffffffff811115611ee257611ee2611da8565b604051611f1760207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8501160182611dd7565b818152846020838601011115611f2c57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215611f6157600080fd5b611f6a86611c61565b9450611f7860208701611c61565b9350604086013567ffffffffffffffff80821115611f9557600080fd5b611fa189838a01611e46565b94506060880135915080821115611fb757600080fd5b611fc389838a01611e46565b93506080880135915080821115611fd957600080fd5b50611fe688828901611eb7565b9150509295509295909350565b6000806040838503121561200657600080fd5b823567ffffffffffffffff8082111561201e57600080fd5b818501915085601f83011261203257600080fd5b8135602061203f82611e22565b60405161204c8282611dd7565b83815260059390931b850182019282810191508984111561206c57600080fd5b948201945b838610156120915761208286611c61565b82529482019490820190612071565b965050860135925050808211156120a757600080fd5b506120b485828601611e46565b9150509250929050565b600081518084526020808501945080840160005b838110156120ee578151875295820195908201906001016120d2565b509495945050505050565b60208152600061052c60208301846120be565b60008083601f84011261211e57600080fd5b50813567ffffffffffffffff81111561213657600080fd5b60208301915083602082850101111561214e57600080fd5b9250929050565b6000806020838503121561216857600080fd5b823567ffffffffffffffff81111561217f57600080fd5b61218b8582860161210c565b90969095509350505050565b600080604083850312156121aa57600080fd5b6121b383611c61565b9150602083013580151581146121c857600080fd5b809150509250929050565b6000806000806000608086880312156121eb57600080fd5b6121f486611c61565b94506020860135935060408601359250606086013567ffffffffffffffff81111561221e57600080fd5b61222a8882890161210c565b969995985093965092949392505050565b60006020828403121561224d57600080fd5b61052c82611c61565b6000806040838503121561226957600080fd5b61227283611c61565b915061228060208401611c61565b90509250929050565b600080600080600060a086880312156122a157600080fd5b6122aa86611c61565b94506122b860208701611c61565b93506040860135925060608601359150608086013567ffffffffffffffff8111156122e257600080fd5b611fe688828901611eb7565b60008151612300818560208601611d1b565b9290920192915050565b6000835161231c818460208801611d1b565b835190830190612330818360208801611d1b565b7f2f6d657461646174612e6a736f6e0000000000000000000000000000000000009101908152600e01949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036123f0576123f0612390565b5060010190565b600181811c9082168061240b57607f821691505b602082108103612444577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600080845481600182811c91508083168061246657607f831692505b6020808410820361249e577f4e487b710000000000000000000000000000000000000000000000000000000086526022600452602486fd5b8180156124b257600181146124e15761250e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0086168952848901965061250e565b60008b81526020902060005b868110156125065781548b8201529085019083016124ed565b505084890196505b50505050505061251e81856122ee565b95945050505050565b6000821982111561253a5761253a612390565b500190565b60408152600061255260408301856120be565b828103602084015261251e81856120be565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525060a0604083015261259d60a08301866120be565b82810360608401526125af81866120be565b905082810360808401526125c38185611d4b565b98975050505050505050565b6000602082840312156125e157600080fd5b815161052c81611cb4565b600060033d11156126055760046000803e5060005160e01c5b90565b600060443d10156126165790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff816024840111818411171561266457505050505090565b828501915081518181111561267c5750505050505090565b843d87010160208285010111156126965750505050505090565b6126a560208286010187611dd7565b509095945050505050565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525084604083015283606083015260a060808301526126f560a0830184611d4b565b97965050505050505056fea2646970667358221220a1b9537867b984f63e09898a2139eebbca3ac6857189b4611d46f1c8a6c2a8c364736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C0360EB GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0xBD85B039 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xD14186C6 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD14186C6 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0xCB450772 EQ PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x6C8B703F EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0xBB7FDE71 EQ PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4B8C9C2D GT PUSH2 0xEE JUMPI DUP1 PUSH4 0x4B8C9C2D EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x4F558E79 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x188 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x132 PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x1C8A JUMP JUMPDEST PUSH2 0x31A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x153 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0x3F7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13C JUMP JUMPDEST PUSH2 0x17B PUSH2 0x176 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D02 JUMP JUMPDEST PUSH2 0x4DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x1D95 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F49 JUMP JUMPDEST PUSH2 0x533 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1BD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13C JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x1F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FF3 JUMP JUMPDEST PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x20F9 JUMP JUMPDEST PUSH2 0x158 PUSH2 0x210 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0x2155 JUMP JUMPDEST PUSH2 0x754 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x818 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x24D CALLDATASIZE PUSH1 0x4 PUSH2 0x1D02 JUMP JUMPDEST PUSH2 0x8AA JUMP JUMPDEST PUSH2 0x19B PUSH2 0x260 CALLDATASIZE PUSH1 0x4 PUSH2 0x2197 JUMP JUMPDEST PUSH2 0x94C JUMP JUMPDEST PUSH2 0x19B PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0x21D3 JUMP JUMPDEST PUSH2 0x957 JUMP JUMPDEST PUSH2 0x132 PUSH2 0x286 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D02 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x2A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x223B JUMP JUMPDEST PUSH2 0xA41 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x2B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2197 JUMP JUMPDEST PUSH2 0xBDB JUMP JUMPDEST PUSH2 0x158 PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x2256 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x315 CALLDATASIZE PUSH1 0x4 PUSH2 0x2289 JUMP JUMPDEST PUSH2 0xD3E JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x3C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x48A JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x4D6 JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x4E9 DUP4 PUSH2 0x8AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x502 JUMPI PUSH2 0x4FD DUP4 PUSH2 0xE00 JUMP JUMPDEST PUSH2 0x52C JUMP JUMPDEST PUSH2 0x50A PUSH2 0x818 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x51C SWAP3 SWAP2 SWAP1 PUSH2 0x230A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND CALLER EQ DUP1 PUSH2 0x55C JUMPI POP PUSH2 0x55C DUP6 CALLER PUSH2 0x2CC JUMP JUMPDEST PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F776E6572206E6F7220617070726F7665640000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH2 0x5F5 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xEC4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x68F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6AB JUMPI PUSH2 0x6AB PUSH2 0x1DA8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6D4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x74C JUMPI PUSH2 0x71F DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6F8 JUMPI PUSH2 0x6F8 PUSH2 0x2361 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x712 JUMPI PUSH2 0x712 PUSH2 0x2361 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x31A JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x731 JUMPI PUSH2 0x731 PUSH2 0x2361 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x745 DUP2 PUSH2 0x23BF JUMP JUMPDEST SWAP1 POP PUSH2 0x6DA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x7D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F742077686974656C69737465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH2 0x814 DUP3 DUP3 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x11FE SWAP3 POP POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x827 SWAP1 PUSH2 0x23F7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x853 SWAP1 PUSH2 0x23F7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8A0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x875 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8A0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x883 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH2 0x8C7 SWAP1 PUSH2 0x23F7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8F3 SWAP1 PUSH2 0x23F7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x940 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x915 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x940 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x923 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x814 CALLER DUP4 DUP4 PUSH2 0x1211 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x9D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F742077686974656C69737465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x0 SUB PUSH2 0xA26 JUMPI PUSH2 0xA26 DUP5 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1364 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x5F5 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1388 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xAC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F742077686974656C69737465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND SWAP2 AND SUB PUSH2 0xB6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F7669646564206164647265737320616C72656164792073616665206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xD4C1AF98B758421A8D47B0BC04ECFA30233D5506955E8CDE282417AA0D31D3B6 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xC5C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F742077686974656C69737465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP3 ISZERO DUP1 ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH2 0xCF9 JUMPI PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH32 0x526AF00F9BC92D53F2D0B4C603A1305395A04F7FB6A0A7962867D8D230467547 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH32 0xE8185C1A3F6241A6224D99FF39E932AC24FC0D2C51B17E56C5D6F52AFF1B5DA1 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND CALLER EQ DUP1 PUSH2 0xD67 JUMPI POP PUSH2 0xD67 DUP6 CALLER PUSH2 0x2CC JUMP JUMPDEST PUSH2 0xDF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20617070726F7665640000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH2 0x5F5 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x14F9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP3 SWAP2 SWAP1 PUSH2 0xE1E SWAP1 PUSH2 0x23F7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE4A SWAP1 PUSH2 0x23F7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE97 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE6C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE97 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE7A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xEB0 JUMPI PUSH2 0x4FD DUP4 PUSH2 0x1737 JUMP JUMPDEST PUSH1 0x4 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x51C SWAP3 SWAP2 SWAP1 PUSH2 0x244A JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xF55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0xFF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1169 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1019 JUMPI PUSH2 0x1019 PUSH2 0x2361 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1037 JUMPI PUSH2 0x1037 PUSH2 0x2361 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x1104 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x114E SWAP1 DUP5 SWAP1 PUSH2 0x2527 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x1162 SWAP1 PUSH2 0x23BF JUMP JUMPDEST SWAP1 POP PUSH2 0xFFC JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x11E0 SWAP3 SWAP2 SWAP1 PUSH2 0x253F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x11F6 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1746 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0x814 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1BC8 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD PUSH2 0x1383 SWAP3 DUP5 ADD SWAP1 PUSH2 0x1BC8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x142B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x1437 DUP6 PUSH2 0x19D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1444 DUP6 PUSH2 0x19D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x1483 SWAP1 DUP5 SWAP1 PUSH2 0x2527 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP11 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP8 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x14F0 DUP4 PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 PUSH2 0x1A1B JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x159C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x15A8 DUP6 PUSH2 0x19D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x15B5 DUP6 PUSH2 0x19D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x1675 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x16BF SWAP1 DUP5 SWAP1 PUSH2 0x2527 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x172C DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1A1B JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x8C7 SWAP1 PUSH2 0x23F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND EXTCODESIZE ISZERO PUSH2 0x11F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x17BD SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2564 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1816 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1813 SWAP2 DUP2 ADD SWAP1 PUSH2 0x25CF JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x18FF JUMPI PUSH2 0x1822 PUSH2 0x25EC JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1875 JUMPI POP PUSH2 0x1836 PUSH2 0x2608 JUMP JUMPDEST DUP1 PUSH2 0x1841 JUMPI POP PUSH2 0x1877 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0x1D95 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 EQ PUSH2 0x14F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1A0A JUMPI PUSH2 0x1A0A PUSH2 0x2361 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND EXTCODESIZE ISZERO PUSH2 0x11F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x1A92 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x26B0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1AEB JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1AE8 SWAP2 DUP2 ADD SWAP1 PUSH2 0x25CF JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1AF7 JUMPI PUSH2 0x1822 PUSH2 0x25EC JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 EQ PUSH2 0x14F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1BD4 SWAP1 PUSH2 0x23F7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1BF6 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1C3C JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1C0F JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1C3C JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1C3C JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1C3C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1C21 JUMP JUMPDEST POP PUSH2 0x1C48 SWAP3 SWAP2 POP PUSH2 0x1C4C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1C48 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1C4D JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1C85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CA6 DUP4 PUSH2 0x1C61 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x1CE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x52C DUP2 PUSH2 0x1CB4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D36 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1D1E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1D45 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1D63 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1D1B JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x52C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D4B JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1E1B JUMPI PUSH2 0x1E1B PUSH2 0x1DA8 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E3C JUMPI PUSH2 0x1E3C PUSH2 0x1DA8 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1E64 DUP3 PUSH2 0x1E22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E71 DUP3 DUP3 PUSH2 0x1DD7 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x1E91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1EAC JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1E95 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1EC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EE2 JUMPI PUSH2 0x1EE2 PUSH2 0x1DA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F17 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP6 ADD AND ADD DUP3 PUSH2 0x1DD7 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1F2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1F61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F6A DUP7 PUSH2 0x1C61 JUMP JUMPDEST SWAP5 POP PUSH2 0x1F78 PUSH1 0x20 DUP8 ADD PUSH2 0x1C61 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1F95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FA1 DUP10 DUP4 DUP11 ADD PUSH2 0x1E46 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1FB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FC3 DUP10 DUP4 DUP11 ADD PUSH2 0x1E46 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1FD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE6 DUP9 DUP3 DUP10 ADD PUSH2 0x1EB7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2006 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x201E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2032 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x203F DUP3 PUSH2 0x1E22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204C DUP3 DUP3 PUSH2 0x1DD7 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x206C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x2091 JUMPI PUSH2 0x2082 DUP7 PUSH2 0x1C61 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x2071 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x20A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20B4 DUP6 DUP3 DUP7 ADD PUSH2 0x1E46 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20EE JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x20D2 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x52C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20BE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x211E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x214E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x217F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x218B DUP6 DUP3 DUP7 ADD PUSH2 0x210C JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21B3 DUP4 PUSH2 0x1C61 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x21C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x21EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21F4 DUP7 PUSH2 0x1C61 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x221E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x222A DUP9 DUP3 DUP10 ADD PUSH2 0x210C JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x224D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x52C DUP3 PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2272 DUP4 PUSH2 0x1C61 JUMP JUMPDEST SWAP2 POP PUSH2 0x2280 PUSH1 0x20 DUP5 ADD PUSH2 0x1C61 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x22A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22AA DUP7 PUSH2 0x1C61 JUMP JUMPDEST SWAP5 POP PUSH2 0x22B8 PUSH1 0x20 DUP8 ADD PUSH2 0x1C61 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FE6 DUP9 DUP3 DUP10 ADD PUSH2 0x1EB7 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH2 0x2300 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D1B JUMP JUMPDEST SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x231C DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1D1B JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x2330 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1D1B JUMP JUMPDEST PUSH32 0x2F6D657461646174612E6A736F6E000000000000000000000000000000000000 SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0xE ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x23F0 JUMPI PUSH2 0x23F0 PUSH2 0x2390 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x240B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2444 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x2466 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 SUB PUSH2 0x249E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x24B2 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x24E1 JUMPI PUSH2 0x250E JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x250E JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x2506 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x24ED JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP POP POP POP POP POP PUSH2 0x251E DUP2 DUP6 PUSH2 0x22EE JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x253A JUMPI PUSH2 0x253A PUSH2 0x2390 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2552 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x20BE JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x251E DUP2 DUP6 PUSH2 0x20BE JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x259D PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x20BE JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x25AF DUP2 DUP7 PUSH2 0x20BE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x25C3 DUP2 DUP6 PUSH2 0x1D4B JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x52C DUP2 PUSH2 0x1CB4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x2605 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x2616 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP1 RETURNDATASIZE ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x2664 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x267C JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2696 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x26A5 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x1DD7 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x26F5 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1D4B JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xB9 MSTORE8 PUSH25 0x67B984F63E09898A2139EEBBCA3AC6857189B4611D46F1C8A6 0xC2 0xA8 0xC3 PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "323:1976:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2185:228:0;;;;;;:::i;:::-;;:::i;:::-;;;620:25:12;;;608:2;593:18;2185:228:0;;;;;;;;1236:305;;;;;;:::i;:::-;;:::i;:::-;;;1253:14:12;;1246:22;1228:41;;1216:2;1201:18;1236:305:0;1088:187:12;1450:298:11;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4060:430:0:-;;;;;;:::i;:::-;;:::i;:::-;;429:24:11;;;;;;;;;;;;5459:42:12;5447:55;;;5429:74;;5417:2;5402:18;429:24:11;5283:226:12;2570:508:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;901:120:3:-;;;;;;:::i;:::-;958:4;785:16;;;:12;:16;;;;;;-1:-1:-1;;;901:120:3;1756:107:11;;;;;;:::i;:::-;;:::i;794:94:10:-;;;:::i;674:112::-;;;;;;:::i;:::-;;:::i;3146:153:0:-;;;;;;:::i;:::-;;:::i;2066:228:11:-;;;;;;:::i;:::-;;:::i;697:111:3:-;;;;;;:::i;:::-;759:7;785:16;;;:12;:16;;;;;;;697:111;984:214:11;;;;;;:::i;:::-;;:::i;1206:236::-;;;;;;:::i;:::-;;:::i;3366:166:0:-;;;;;;:::i;:::-;3488:27;;;;3465:4;3488:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3366:166;3599:389;;;;;;:::i;:::-;;:::i;2185:228::-;2271:7;2298:21;;;2290:77;;;;;;;10450:2:12;2290:77:0;;;10432:21:12;10489:2;10469:18;;;10462:30;10528:34;10508:18;;;10501:62;10599:13;10579:18;;;10572:41;10630:19;;2290:77:0;;;;;;;;;-1:-1:-1;2384:9:0;:13;;;;;;;;;;;:22;;;;;;;;;;;;;2185:228::o;1236:305::-;1338:4;1373:41;;;1388:26;1373:41;;:109;;-1:-1:-1;1430:52:0;;;1445:37;1430:52;1373:109;:161;;;-1:-1:-1;952:25:8;937:40;;;;1498:36:0;1354:180;1236:305;-1:-1:-1;;1236:305:0:o;1450:298:11:-;1538:13;1564:22;1589:18;1599:7;1589:9;:18::i;:::-;1564:43;;1652:1;1633:8;1627:22;:26;:113;;1722:18;1732:7;1722:9;:18::i;:::-;1627:113;;;1680:9;:7;:9::i;:::-;1691:8;1663:55;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1627:113;1620:120;1450:298;-1:-1:-1;;;1450:298:11:o;4060:430:0:-;4285:20;;;719:10:6;4285:20:0;;:60;;-1:-1:-1;4309:36:0;4326:4;719:10:6;3366:166:0;:::i;4309:36::-;4264:157;;;;;;;11704:2:12;4264:157:0;;;11686:21:12;11743:2;11723:18;;;11716:30;11782:34;11762:18;;;11755:62;11853:20;11833:18;;;11826:48;11891:19;;4264:157:0;11502:414:12;4264:157:0;4431:52;4454:4;4460:2;4464:3;4469:7;4478:4;4431:22;:52::i;:::-;4060:430;;;;;:::o;2570:508::-;2721:16;2780:3;:10;2761:8;:15;:29;2753:83;;;;;;;12123:2:12;2753:83:0;;;12105:21:12;12162:2;12142:18;;;12135:30;12201:34;12181:18;;;12174:62;12272:11;12252:18;;;12245:39;12301:19;;2753:83:0;11921:405:12;2753:83:0;2847:30;2894:8;:15;2880:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2880:30:0;;2847:63;;2926:9;2921:120;2945:8;:15;2941:1;:19;2921:120;;;3000:30;3010:8;3019:1;3010:11;;;;;;;;:::i;:::-;;;;;;;3023:3;3027:1;3023:6;;;;;;;;:::i;:::-;;;;;;;3000:9;:30::i;:::-;2981:13;2995:1;2981:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2962:3;;;:::i;:::-;;;2921:120;;;-1:-1:-1;3058:13:0;2570:508;-1:-1:-1;;;2570:508:0:o;1756:107:11:-;815:9;;;;803:10;:21;795:58;;;;;;;13111:2:12;795:58:11;;;13093:21:12;13150:2;13130:18;;;13123:30;13189:26;13169:18;;;13162:54;13233:18;;795:58:11;12909:348:12;795:58:11;1835:20:::1;1847:7;;1835:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;1835:11:11::1;::::0;-1:-1:-1;;;1835:20:11:i:1;:::-;1756:107:::0;;:::o;794:94:10:-;834:13;872:8;865:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:94;:::o;674:112::-;764:14;;;;:10;:14;;;;;757:21;;726:13;;764:14;757:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;674:112;;;:::o;3146:153:0:-;3240:52;719:10:6;3273:8:0;3283;3240:18;:52::i;2066:228:11:-;693:10;685:19;;;;:7;:19;;;;;;;;677:56;;;;;;;13111:2:12;677:56:11;;;13093:21:12;13150:2;13130:18;;;13123:30;13189:26;13169:18;;;13162:54;13233:18;;677:56:11;12909:348:12;677:56:11;759:7:3;785:16;;;:12;:16;;;;;;2196:1:11::1;2177:20:::0;2173:78:::1;;2223:16;2231:2;2235:3;;2223:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;2223:7:11::1;::::0;-1:-1:-1;;;2223:16:11:i:1;:::-;2261:25;2267:2;2271;2275:6;2261:25;;;;;;;;;;;::::0;:5:::1;:25::i;984:214::-:0;815:9;;;;803:10;:21;795:58;;;;;;;13111:2:12;795:58:11;;;13093:21:12;13150:2;13130:18;;;13123:30;13189:26;13169:18;;;13162:54;13233:18;;795:58:11;12909:348:12;795:58:11;1068:9:::1;::::0;:15:::1;::::0;;::::1;:9:::0;::::1;:15:::0;1060:65:::1;;;::::0;::::1;::::0;;13906:2:12;1060:65:11::1;::::0;::::1;13888:21:12::0;13945:2;13925:18;;;13918:30;13984:34;13964:18;;;13957:62;14055:7;14035:18;;;14028:35;14080:19;;1060:65:11::1;13704:401:12::0;1060:65:11::1;1136:9;:16:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;1168:22:::1;::::0;::::1;::::0;-1:-1:-1;;1168:22:11::1;984:214:::0;:::o;1206:236::-;815:9;;;;803:10;:21;795:58;;;;;;;13111:2:12;795:58:11;;;13093:21:12;13150:2;13130:18;;;13123:30;13189:26;13169:18;;;13162:54;13233:18;;795:58:11;12909:348:12;795:58:11;1306:15:::1;::::0;::::1;;::::0;;;:7:::1;:15;::::0;;;;:25;;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;;;1342:92:::1;;1362:24;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;1756:107:::0;;:::o;1342:92::-:1;1407:27;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;1206:236:::0;;:::o;3599:389:0:-;3799:20;;;719:10:6;3799:20:0;;:60;;-1:-1:-1;3823:36:0;3840:4;719:10:6;3366:166:0;:::i;3823:36::-;3778:148;;;;;;;14312:2:12;3778:148:0;;;14294:21:12;14351:2;14331:18;;;14324:30;14390:34;14370:18;;;14363:62;14461:11;14441:18;;;14434:39;14490:19;;3778:148:0;14110:405:12;3778:148:0;3936:45;3954:4;3960:2;3964;3968:6;3976:4;3936:17;:45::i;1633:351:10:-;1727:22;1752:19;;;:10;:19;;;;;1727:44;;1701:13;;1727:22;1752:19;1727:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1907:1;1888:8;1882:22;:26;:94;;1958:18;1968:7;1958:9;:18::i;1882:94::-;1935:8;1945;1918:36;;;;;;;;;:::i;6233:1115:0:-;6453:7;:14;6439:3;:10;:28;6431:81;;;;;;;16142:2:12;6431:81:0;;;16124:21:12;16181:2;16161:18;;;16154:30;16220:34;16200:18;;;16193:62;16291:10;16271:18;;;16264:38;16319:19;;6431:81:0;15940:404:12;6431:81:0;6530:16;;;6522:66;;;;;;;16551:2:12;6522:66:0;;;16533:21:12;16590:2;16570:18;;;16563:30;16629:34;16609:18;;;16602:62;16700:7;16680:18;;;16673:35;16725:19;;6522:66:0;16349:401:12;6522:66:0;719:10:6;6599:16:0;6712:411;6736:3;:10;6732:1;:14;6712:411;;;6767:10;6780:3;6784:1;6780:6;;;;;;;;:::i;:::-;;;;;;;6767:19;;6800:14;6817:7;6825:1;6817:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6842:19;6864:13;;;;;;;;;;:19;;;;;;;;;;;;;6817:10;;-1:-1:-1;6905:21:0;;;;6897:76;;;;;;;16957:2:12;6897:76:0;;;16939:21:12;16996:2;16976:18;;;16969:30;17035:34;17015:18;;;17008:62;17106:12;17086:18;;;17079:40;17136:19;;6897:76:0;16755:406:12;6897:76:0;7015:9;:13;;;;;;;;;;;:19;;;;;;;;;;;7037:20;;;7015:42;;7085:17;;;;;;;:27;;7037:20;;7015:9;7085:27;;7037:20;;7085:27;:::i;:::-;;;;;;;;6753:370;;;6748:3;;;;:::i;:::-;;;6712:411;;;;7168:2;7138:47;;7162:4;7138:47;;7152:8;7138:47;;;7172:3;7177:7;7138:47;;;;;;;:::i;:::-;;;;;;;;7266:75;7302:8;7312:4;7318:2;7322:3;7327:7;7336:4;7266:35;:75::i;:::-;6421:927;6233:1115;;;;;:::o;2324:102:10:-;2398:20;;;;:8;;:20;;;;;:::i;12773:323:0:-;12923:8;12914:17;;:5;:17;;;12906:71;;;;;;;17971:2:12;12906:71:0;;;17953:21:12;18010:2;17990:18;;;17983:30;18049:34;18029:18;;;18022:62;18120:11;18100:18;;;18093:39;18149:19;;12906:71:0;17769:405:12;12906:71:0;12987:25;;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;;;;;;;;;;;;13048:41;;1228::12;;;13048::0;;1201:18:12;13048:41:0;;;;;;;12773:323;;;:::o;2069:168:10:-;2155:19;;;;:10;:19;;;;;;;;:30;;;;;;;;:::i;:::-;;2069:168;;:::o;8630:709:0:-;8777:16;;;8769:62;;;;;;;18381:2:12;8769:62:0;;;18363:21:12;18420:2;18400:18;;;18393:30;18459:34;18439:18;;;18432:62;18530:3;18510:18;;;18503:31;18551:19;;8769:62:0;18179:397:12;8769:62:0;719:10:6;8842:16:0;8906:21;8924:2;8906:17;:21::i;:::-;8883:44;;8937:24;8964:25;8982:6;8964:17;:25::i;:::-;8937:52;;9077:9;:13;;;;;;;;;;;:17;;;;;;;;;;:27;;9098:6;;9077:9;:27;;9098:6;;9077:27;:::i;:::-;;;;-1:-1:-1;;9119:52:0;;;18755:25:12;;;18811:2;18796:18;;18789:34;;;9119:52:0;;;;;9152:1;;9119:52;;;;;;18728:18:12;9119:52:0;;;;;;;9258:74;9289:8;9307:1;9311:2;9315;9319:6;9327:4;9258:30;:74::i;:::-;8759:580;;;8630:709;;;;:::o;4940:947::-;5121:16;;;5113:66;;;;;;;16551:2:12;5113:66:0;;;16533:21:12;16590:2;16570:18;;;16563:30;16629:34;16609:18;;;16602:62;16700:7;16680:18;;;16673:35;16725:19;;5113:66:0;16349:401:12;5113:66:0;719:10:6;5190:16:0;5254:21;5272:2;5254:17;:21::i;:::-;5231:44;;5285:24;5312:25;5330:6;5312:17;:25::i;:::-;5285:52;;5419:19;5441:13;;;;;;;;;;;:19;;;;;;;;;;;5478:21;;;;5470:76;;;;;;;16957:2:12;5470:76:0;;;16939:21:12;16996:2;16976:18;;;16969:30;17035:34;17015:18;;;17008:62;17106:12;17086:18;;;17079:40;17136:19;;5470:76:0;16755:406:12;5470:76:0;5580:9;:13;;;;;;;;;;;:19;;;;;;;;;;;5602:20;;;5580:42;;5642:17;;;;;;;:27;;5602:20;;5580:9;5642:27;;5602:20;;5642:27;:::i;:::-;;;;-1:-1:-1;;5685:46:0;;;18755:25:12;;;18811:2;18796:18;;18789:34;;;5685:46:0;;;;;;;;;;;;;;;18728:18:12;5685:46:0;;;;;;;5812:68;5843:8;5853:4;5859:2;5863;5867:6;5875:4;5812:30;:68::i;:::-;5103:784;;;;4940:947;;;;;:::o;1940:103::-;2000:13;2032:4;2025:11;;;;;:::i;16127:792::-;16359:13;;;1465:19:5;:23;16355:558:0;;16394:79;;;;;:43;;;;;;:79;;16438:8;;16448:4;;16454:3;;16459:7;;16468:4;;16394:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16394:79:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;16390:513;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;16779:6;16772:14;;;;;;;;;;;:::i;16390:513::-;;;16826:62;;;;;21076:2:12;16826:62:0;;;21058:21:12;21115:2;21095:18;;;21088:30;21154:34;21134:18;;;21127:62;21225:22;21205:18;;;21198:50;21265:19;;16826:62:0;20874:416:12;16390:513:0;16552:60;;;16564:48;16552:60;16548:157;;16636:50;;;;;21497:2:12;16636:50:0;;;21479:21:12;21536:2;21516:18;;;21509:30;21575:34;21555:18;;;21548:62;21646:10;21626:18;;;21619:38;21674:19;;16636:50:0;21295:404:12;16925:193:0;17044:16;;;17058:1;17044:16;;;;;;;;;16991;;17019:22;;17044:16;;;;;;;;;;;;-1:-1:-1;17044:16:0;17019:41;;17081:7;17070:5;17076:1;17070:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;17106:5;16925:193;-1:-1:-1;;16925:193:0:o;15396:725::-;15603:13;;;1465:19:5;:23;15599:516:0;;15638:72;;;;;:38;;;;;;:72;;15677:8;;15687:4;;15693:2;;15697:6;;15705:4;;15638:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15638:72:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15634:471;;;;:::i;:::-;15759:55;;;15771:43;15759:55;15755:152;;15838:50;;;;;21497:2:12;15838:50:0;;;21479:21:12;21536:2;21516:18;;;21509:30;21575:34;21555:18;;;21548:62;21646:10;21626:18;;;21619:38;21674:19;;15838:50:0;21295:404:12;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:196:12;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:254::-;283:6;291;344:2;332:9;323:7;319:23;315:32;312:52;;;360:1;357;350:12;312:52;383:29;402:9;383:29;:::i;:::-;373:39;459:2;444:18;;;;431:32;;-1:-1:-1;;;215:254:12:o;656:177::-;741:66;734:5;730:78;723:5;720:89;710:117;;823:1;820;813:12;710:117;656:177;:::o;838:245::-;896:6;949:2;937:9;928:7;924:23;920:32;917:52;;;965:1;962;955:12;917:52;1004:9;991:23;1023:30;1047:5;1023:30;:::i;1280:180::-;1339:6;1392:2;1380:9;1371:7;1367:23;1363:32;1360:52;;;1408:1;1405;1398:12;1360:52;-1:-1:-1;1431:23:12;;1280:180;-1:-1:-1;1280:180:12:o;1465:258::-;1537:1;1547:113;1561:6;1558:1;1555:13;1547:113;;;1637:11;;;1631:18;1618:11;;;1611:39;1583:2;1576:10;1547:113;;;1678:6;1675:1;1672:13;1669:48;;;1713:1;1704:6;1699:3;1695:16;1688:27;1669:48;;1465:258;;;:::o;1728:328::-;1781:3;1819:5;1813:12;1846:6;1841:3;1834:19;1862:63;1918:6;1911:4;1906:3;1902:14;1895:4;1888:5;1884:16;1862:63;:::i;:::-;1970:2;1958:15;1975:66;1954:88;1945:98;;;;2045:4;1941:109;;1728:328;-1:-1:-1;;1728:328:12:o;2061:231::-;2210:2;2199:9;2192:21;2173:4;2230:56;2282:2;2271:9;2267:18;2259:6;2230:56;:::i;2297:184::-;2349:77;2346:1;2339:88;2446:4;2443:1;2436:15;2470:4;2467:1;2460:15;2486:308;2592:66;2587:2;2581:4;2577:13;2573:86;2565:6;2561:99;2726:6;2714:10;2711:22;2690:18;2678:10;2675:34;2672:62;2669:88;;;2737:18;;:::i;:::-;2773:2;2766:22;-1:-1:-1;;2486:308:12:o;2799:183::-;2859:4;2892:18;2884:6;2881:30;2878:56;;;2914:18;;:::i;:::-;-1:-1:-1;2959:1:12;2955:14;2971:4;2951:25;;2799:183::o;2987:724::-;3041:5;3094:3;3087:4;3079:6;3075:17;3071:27;3061:55;;3112:1;3109;3102:12;3061:55;3148:6;3135:20;3174:4;3197:43;3237:2;3197:43;:::i;:::-;3269:2;3263:9;3281:31;3309:2;3301:6;3281:31;:::i;:::-;3347:18;;;3439:1;3435:10;;;;3423:23;;3419:32;;;3381:15;;;;-1:-1:-1;3463:15:12;;;3460:35;;;3491:1;3488;3481:12;3460:35;3527:2;3519:6;3515:15;3539:142;3555:6;3550:3;3547:15;3539:142;;;3621:17;;3609:30;;3659:12;;;;3572;;3539:142;;;-1:-1:-1;3699:6:12;2987:724;-1:-1:-1;;;;;;2987:724:12:o;3716:614::-;3758:5;3811:3;3804:4;3796:6;3792:17;3788:27;3778:55;;3829:1;3826;3819:12;3778:55;3865:6;3852:20;3891:18;3887:2;3884:26;3881:52;;;3913:18;;:::i;:::-;3962:2;3956:9;3974:126;4094:4;4025:66;4018:4;4014:2;4010:13;4006:86;4002:97;3994:6;3974:126;:::i;:::-;4124:2;4116:6;4109:18;4170:3;4163:4;4158:2;4150:6;4146:15;4142:26;4139:35;4136:55;;;4187:1;4184;4177:12;4136:55;4251:2;4244:4;4236:6;4232:17;4225:4;4217:6;4213:17;4200:54;4298:1;4274:15;;;4291:4;4270:26;4263:37;;;;4278:6;3716:614;-1:-1:-1;;;3716:614:12:o;4335:943::-;4489:6;4497;4505;4513;4521;4574:3;4562:9;4553:7;4549:23;4545:33;4542:53;;;4591:1;4588;4581:12;4542:53;4614:29;4633:9;4614:29;:::i;:::-;4604:39;;4662:38;4696:2;4685:9;4681:18;4662:38;:::i;:::-;4652:48;;4751:2;4740:9;4736:18;4723:32;4774:18;4815:2;4807:6;4804:14;4801:34;;;4831:1;4828;4821:12;4801:34;4854:61;4907:7;4898:6;4887:9;4883:22;4854:61;:::i;:::-;4844:71;;4968:2;4957:9;4953:18;4940:32;4924:48;;4997:2;4987:8;4984:16;4981:36;;;5013:1;5010;5003:12;4981:36;5036:63;5091:7;5080:8;5069:9;5065:24;5036:63;:::i;:::-;5026:73;;5152:3;5141:9;5137:19;5124:33;5108:49;;5182:2;5172:8;5169:16;5166:36;;;5198:1;5195;5188:12;5166:36;;5221:51;5264:7;5253:8;5242:9;5238:24;5221:51;:::i;:::-;5211:61;;;4335:943;;;;;;;;:::o;5514:1208::-;5632:6;5640;5693:2;5681:9;5672:7;5668:23;5664:32;5661:52;;;5709:1;5706;5699:12;5661:52;5749:9;5736:23;5778:18;5819:2;5811:6;5808:14;5805:34;;;5835:1;5832;5825:12;5805:34;5873:6;5862:9;5858:22;5848:32;;5918:7;5911:4;5907:2;5903:13;5899:27;5889:55;;5940:1;5937;5930:12;5889:55;5976:2;5963:16;5998:4;6021:43;6061:2;6021:43;:::i;:::-;6093:2;6087:9;6105:31;6133:2;6125:6;6105:31;:::i;:::-;6171:18;;;6259:1;6255:10;;;;6247:19;;6243:28;;;6205:15;;;;-1:-1:-1;6283:19:12;;;6280:39;;;6315:1;6312;6305:12;6280:39;6339:11;;;;6359:148;6375:6;6370:3;6367:15;6359:148;;;6441:23;6460:3;6441:23;:::i;:::-;6429:36;;6392:12;;;;6485;;;;6359:148;;;6526:6;-1:-1:-1;;6570:18:12;;6557:32;;-1:-1:-1;;6601:16:12;;;6598:36;;;6630:1;6627;6620:12;6598:36;;6653:63;6708:7;6697:8;6686:9;6682:24;6653:63;:::i;:::-;6643:73;;;5514:1208;;;;;:::o;6727:435::-;6780:3;6818:5;6812:12;6845:6;6840:3;6833:19;6871:4;6900:2;6895:3;6891:12;6884:19;;6937:2;6930:5;6926:14;6958:1;6968:169;6982:6;6979:1;6976:13;6968:169;;;7043:13;;7031:26;;7077:12;;;;7112:15;;;;7004:1;6997:9;6968:169;;;-1:-1:-1;7153:3:12;;6727:435;-1:-1:-1;;;;;6727:435:12:o;7167:261::-;7346:2;7335:9;7328:21;7309:4;7366:56;7418:2;7407:9;7403:18;7395:6;7366:56;:::i;7433:348::-;7485:8;7495:6;7549:3;7542:4;7534:6;7530:17;7526:27;7516:55;;7567:1;7564;7557:12;7516:55;-1:-1:-1;7590:20:12;;7633:18;7622:30;;7619:50;;;7665:1;7662;7655:12;7619:50;7702:4;7694:6;7690:17;7678:29;;7754:3;7747:4;7738:6;7730;7726:19;7722:30;7719:39;7716:59;;;7771:1;7768;7761:12;7716:59;7433:348;;;;;:::o;7786:411::-;7857:6;7865;7918:2;7906:9;7897:7;7893:23;7889:32;7886:52;;;7934:1;7931;7924:12;7886:52;7974:9;7961:23;8007:18;7999:6;7996:30;7993:50;;;8039:1;8036;8029:12;7993:50;8078:59;8129:7;8120:6;8109:9;8105:22;8078:59;:::i;:::-;8156:8;;8052:85;;-1:-1:-1;7786:411:12;-1:-1:-1;;;;7786:411:12:o;8202:347::-;8267:6;8275;8328:2;8316:9;8307:7;8303:23;8299:32;8296:52;;;8344:1;8341;8334:12;8296:52;8367:29;8386:9;8367:29;:::i;:::-;8357:39;;8446:2;8435:9;8431:18;8418:32;8493:5;8486:13;8479:21;8472:5;8469:32;8459:60;;8515:1;8512;8505:12;8459:60;8538:5;8528:15;;;8202:347;;;;;:::o;8554:622::-;8652:6;8660;8668;8676;8684;8737:3;8725:9;8716:7;8712:23;8708:33;8705:53;;;8754:1;8751;8744:12;8705:53;8777:29;8796:9;8777:29;:::i;:::-;8767:39;;8853:2;8842:9;8838:18;8825:32;8815:42;;8904:2;8893:9;8889:18;8876:32;8866:42;;8959:2;8948:9;8944:18;8931:32;8986:18;8978:6;8975:30;8972:50;;;9018:1;9015;9008:12;8972:50;9057:59;9108:7;9099:6;9088:9;9084:22;9057:59;:::i;:::-;8554:622;;;;-1:-1:-1;8554:622:12;;-1:-1:-1;9135:8:12;;9031:85;8554:622;-1:-1:-1;;;8554:622:12:o;9181:186::-;9240:6;9293:2;9281:9;9272:7;9268:23;9264:32;9261:52;;;9309:1;9306;9299:12;9261:52;9332:29;9351:9;9332:29;:::i;9372:260::-;9440:6;9448;9501:2;9489:9;9480:7;9476:23;9472:32;9469:52;;;9517:1;9514;9507:12;9469:52;9540:29;9559:9;9540:29;:::i;:::-;9530:39;;9588:38;9622:2;9611:9;9607:18;9588:38;:::i;:::-;9578:48;;9372:260;;;;;:::o;9637:606::-;9741:6;9749;9757;9765;9773;9826:3;9814:9;9805:7;9801:23;9797:33;9794:53;;;9843:1;9840;9833:12;9794:53;9866:29;9885:9;9866:29;:::i;:::-;9856:39;;9914:38;9948:2;9937:9;9933:18;9914:38;:::i;:::-;9904:48;;9999:2;9988:9;9984:18;9971:32;9961:42;;10050:2;10039:9;10035:18;10022:32;10012:42;;10105:3;10094:9;10090:19;10077:33;10133:18;10125:6;10122:30;10119:50;;;10165:1;10162;10155:12;10119:50;10188:49;10229:7;10220:6;10209:9;10205:22;10188:49;:::i;10660:185::-;10702:3;10740:5;10734:12;10755:52;10800:6;10795:3;10788:4;10781:5;10777:16;10755:52;:::i;:::-;10823:16;;;;;10660:185;-1:-1:-1;;10660:185:12:o;10850:647::-;11130:3;11168:6;11162:13;11184:53;11230:6;11225:3;11218:4;11210:6;11206:17;11184:53;:::i;:::-;11300:13;;11259:16;;;;11322:57;11300:13;11259:16;11356:4;11344:17;;11322:57;:::i;:::-;11444:16;11401:20;;11430:31;;;11488:2;11477:14;;10850:647;-1:-1:-1;;;;10850:647:12:o;12331:184::-;12383:77;12380:1;12373:88;12480:4;12477:1;12470:15;12504:4;12501:1;12494:15;12520:184;12572:77;12569:1;12562:88;12669:4;12666:1;12659:15;12693:4;12690:1;12683:15;12709:195;12748:3;12779:66;12772:5;12769:77;12766:103;;12849:18;;:::i;:::-;-1:-1:-1;12896:1:12;12885:13;;12709:195::o;13262:437::-;13341:1;13337:12;;;;13384;;;13405:61;;13459:4;13451:6;13447:17;13437:27;;13405:61;13512:2;13504:6;13501:14;13481:18;13478:38;13475:218;;13549:77;13546:1;13539:88;13650:4;13647:1;13640:15;13678:4;13675:1;13668:15;13475:218;;13262:437;;;:::o;14646:1289::-;14822:3;14851:1;14884:6;14878:13;14914:3;14936:1;14964:9;14960:2;14956:18;14946:28;;15024:2;15013:9;15009:18;15046;15036:61;;15090:4;15082:6;15078:17;15068:27;;15036:61;15116:2;15164;15156:6;15153:14;15133:18;15130:38;15127:222;;15203:77;15198:3;15191:90;15304:4;15301:1;15294:15;15334:4;15329:3;15322:17;15127:222;15365:18;15392:162;;;;15568:1;15563:320;;;;15358:525;;15392:162;15440:66;15429:9;15425:82;15420:3;15413:95;15537:6;15532:3;15528:16;15521:23;;15392:162;;15563:320;14593:1;14586:14;;;14630:4;14617:18;;15658:1;15672:165;15686:6;15683:1;15680:13;15672:165;;;15764:14;;15751:11;;;15744:35;15807:16;;;;15701:10;;15672:165;;;15676:3;;15866:6;15861:3;15857:16;15850:23;;15358:525;;;;;;;15899:30;15925:3;15917:6;15899:30;:::i;:::-;15892:37;14646:1289;-1:-1:-1;;;;;14646:1289:12:o;17166:128::-;17206:3;17237:1;17233:6;17230:1;17227:13;17224:39;;;17243:18;;:::i;:::-;-1:-1:-1;17279:9:12;;17166:128::o;17299:465::-;17556:2;17545:9;17538:21;17519:4;17582:56;17634:2;17623:9;17619:18;17611:6;17582:56;:::i;:::-;17686:9;17678:6;17674:22;17669:2;17658:9;17654:18;17647:50;17714:44;17751:6;17743;17714:44;:::i;18834:861::-;19156:4;19185:42;19266:2;19258:6;19254:15;19243:9;19236:34;19318:2;19310:6;19306:15;19301:2;19290:9;19286:18;19279:43;;19358:3;19353:2;19342:9;19338:18;19331:31;19385:57;19437:3;19426:9;19422:19;19414:6;19385:57;:::i;:::-;19490:9;19482:6;19478:22;19473:2;19462:9;19458:18;19451:50;19524:44;19561:6;19553;19524:44;:::i;:::-;19510:58;;19617:9;19609:6;19605:22;19599:3;19588:9;19584:19;19577:51;19645:44;19682:6;19674;19645:44;:::i;:::-;19637:52;18834:861;-1:-1:-1;;;;;;;;18834:861:12:o;19700:249::-;19769:6;19822:2;19810:9;19801:7;19797:23;19793:32;19790:52;;;19838:1;19835;19828:12;19790:52;19870:9;19864:16;19889:30;19913:5;19889:30;:::i;19954:179::-;19989:3;20031:1;20013:16;20010:23;20007:120;;;20077:1;20074;20071;20056:23;-1:-1:-1;20114:1:12;20108:8;20103:3;20099:18;20007:120;19954:179;:::o;20138:731::-;20177:3;20219:4;20201:16;20198:26;20195:39;;;20138:731;:::o;20195:39::-;20261:2;20255:9;20283:66;20404:2;20386:16;20382:25;20379:1;20373:4;20358:50;20437:4;20431:11;20461:16;20496:18;20567:2;20560:4;20552:6;20548:17;20545:25;20540:2;20532:6;20529:14;20526:45;20523:58;;;20574:5;;;;;20138:731;:::o;20523:58::-;20611:6;20605:4;20601:17;20590:28;;20647:3;20641:10;20674:2;20666:6;20663:14;20660:27;;;20680:5;;;;;;20138:731;:::o;20660:27::-;20764:2;20745:16;20739:4;20735:27;20731:36;20724:4;20715:6;20710:3;20706:16;20702:27;20699:69;20696:82;;;20771:5;;;;;;20138:731;:::o;20696:82::-;20787:57;20838:4;20829:6;20821;20817:19;20813:30;20807:4;20787:57;:::i;:::-;-1:-1:-1;20860:3:12;;20138:731;-1:-1:-1;;;;;20138:731:12:o;21704:595::-;21926:4;21955:42;22036:2;22028:6;22024:15;22013:9;22006:34;22088:2;22080:6;22076:15;22071:2;22060:9;22056:18;22049:43;;22128:6;22123:2;22112:9;22108:18;22101:34;22171:6;22166:2;22155:9;22151:18;22144:34;22215:3;22209;22198:9;22194:19;22187:32;22236:57;22288:3;22277:9;22273:19;22265:6;22236:57;:::i;:::-;22228:65;21704:595;-1:-1:-1;;;;;;;21704:595:12:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2007600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"adminSafe()": "2336",
								"balanceOf(address,uint256)": "2659",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"baseURI()": "infinite",
								"changeAdminSafe(address)": "30004",
								"exists(uint256)": "2517",
								"isApprovedForAll(address,address)": "infinite",
								"mint(address,uint256,uint256,string)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26699",
								"setBaseURI(string)": "infinite",
								"setTraderPermission(address,bool)": "28012",
								"supportsInterface(bytes4)": "489",
								"tokenURIs(uint256)": "infinite",
								"totalSupply(uint256)": "2472",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 543,
									"end": 571,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 543,
									"end": 571,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 543,
									"end": 571,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 543,
									"end": 571,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 543,
									"end": 571,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 543,
									"end": 571,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 543,
									"end": 571,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 543,
									"end": 571,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 543,
									"end": 571,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 543,
									"end": 571,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 543,
									"end": 571,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 543,
									"end": 571,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 543,
									"end": 571,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 543,
									"end": 571,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 543,
									"end": 571,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 543,
									"end": 571,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 881,
									"end": 976,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 881,
									"end": 976,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 881,
									"end": 976,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 881,
									"end": 976,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 881,
									"end": 976,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 881,
									"end": 976,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 881,
									"end": 976,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 881,
									"end": 976,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 881,
									"end": 976,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 881,
									"end": 976,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 881,
									"end": 976,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 881,
									"end": 976,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 881,
									"end": 976,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 881,
									"end": 976,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 881,
									"end": 976,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 881,
									"end": 976,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 881,
									"end": 976,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 881,
									"end": 976,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 881,
									"end": 976,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 881,
									"end": 976,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 881,
									"end": 976,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 881,
									"end": 976,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 881,
									"end": 976,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 881,
									"end": 976,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 881,
									"end": 976,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 881,
									"end": 976,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 881,
									"end": 976,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 881,
									"end": 976,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 881,
									"end": 976,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "5"
								},
								{
									"begin": 881,
									"end": 976,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 881,
									"end": 976,
									"name": "tag",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 881,
									"end": 976,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 935,
									"end": 939,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 935,
									"end": 939,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1149,
									"end": 1156,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1149,
									"end": 1162,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 952,
									"end": 961,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "7"
								},
								{
									"begin": 952,
									"end": 968,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 952,
									"end": 968,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 952,
									"end": 968,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 952,
									"end": 968,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 952,
									"end": 968,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 952,
									"end": 968,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 952,
									"end": 968,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 952,
									"end": 968,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 952,
									"end": 968,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 952,
									"end": 968,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 952,
									"end": 968,
									"modifierDepth": 1,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 952,
									"end": 968,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 952,
									"end": 968,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8171,
									"end": 8257,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 8171,
									"end": 8257,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8241,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 8237,
									"end": 8241,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 8237,
									"end": 8250,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8171,
									"end": 8257,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8171,
									"end": 8257,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 323,
									"end": 2299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "tag",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "tag",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 323,
									"end": 2299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 146,
									"end": 323,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 146,
									"end": 323,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 225,
									"end": 238,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 225,
									"end": 238,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 267,
									"end": 298,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 267,
									"end": 298,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 257,
									"end": 299,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 257,
									"end": 299,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 247,
									"end": 317,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 247,
									"end": 317,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 313,
									"end": 314,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 311,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 303,
									"end": 315,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 247,
									"end": 317,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 247,
									"end": 317,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 146,
									"end": 323,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 146,
									"end": 323,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 146,
									"end": 323,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 146,
									"end": 323,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 328,
									"end": 1502,
									"name": "tag",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 328,
									"end": 1502,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 417,
									"end": 423,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 425,
									"end": 431,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 478,
									"end": 480,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 466,
									"end": 475,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 457,
									"end": 464,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 453,
									"end": 476,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 449,
									"end": 481,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 446,
									"end": 498,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 446,
									"end": 498,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 446,
									"end": 498,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 494,
									"end": 495,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 491,
									"end": 492,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 484,
									"end": 496,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 446,
									"end": 498,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 446,
									"end": 498,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 521,
									"end": 537,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 521,
									"end": 537,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 586,
									"end": 600,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 586,
									"end": 600,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 586,
									"end": 600,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 583,
									"end": 617,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 583,
									"end": 617,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 583,
									"end": 617,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 613,
									"end": 614,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 610,
									"end": 611,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 603,
									"end": 615,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 583,
									"end": 617,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 583,
									"end": 617,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 651,
									"end": 657,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 640,
									"end": 649,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 636,
									"end": 658,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 626,
									"end": 658,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 626,
									"end": 658,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 703,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 685,
									"end": 687,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 681,
									"end": 694,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 677,
									"end": 704,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 667,
									"end": 722,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 667,
									"end": 722,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 718,
									"end": 719,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 715,
									"end": 716,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 708,
									"end": 720,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 667,
									"end": 722,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 667,
									"end": 722,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 747,
									"end": 749,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 741,
									"end": 750,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 769,
									"end": 771,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 765,
									"end": 767,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 762,
									"end": 772,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 759,
									"end": 795,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 759,
									"end": 795,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 759,
									"end": 795,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 775,
									"end": 793,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 775,
									"end": 793,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 775,
									"end": 793,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 775,
									"end": 793,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 775,
									"end": 793,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 850,
									"end": 852,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 844,
									"end": 853,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 818,
									"end": 820,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 904,
									"end": 917,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 904,
									"end": 917,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 900,
									"end": 922,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 900,
									"end": 922,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 900,
									"end": 922,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 924,
									"end": 926,
									"name": "PUSH",
									"source": 12,
									"value": "3F"
								},
								{
									"begin": 896,
									"end": 927,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 892,
									"end": 932,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 880,
									"end": 933,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 880,
									"end": 933,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 880,
									"end": 933,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 948,
									"end": 966,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 948,
									"end": 966,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 948,
									"end": 966,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 968,
									"end": 990,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 968,
									"end": 990,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 968,
									"end": 990,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 945,
									"end": 991,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 942,
									"end": 1014,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 942,
									"end": 1014,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 942,
									"end": 1014,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 994,
									"end": 1012,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 994,
									"end": 1012,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 994,
									"end": 1012,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 994,
									"end": 1012,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 994,
									"end": 1012,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1034,
									"end": 1044,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1032,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1023,
									"end": 1045,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1069,
									"end": 1071,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1061,
									"end": 1067,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1054,
									"end": 1072,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1091,
									"end": 1095,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1081,
									"end": 1095,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1081,
									"end": 1095,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1132,
									"end": 1139,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 1127,
									"end": 1129,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1122,
									"end": 1124,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1118,
									"end": 1120,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1114,
									"end": 1125,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1110,
									"end": 1130,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1107,
									"end": 1140,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1104,
									"end": 1157,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1104,
									"end": 1157,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1104,
									"end": 1157,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1153,
									"end": 1154,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1151,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1143,
									"end": 1155,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1104,
									"end": 1157,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1104,
									"end": 1157,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1175,
									"end": 1176,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1166,
									"end": 1176,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1166,
									"end": 1176,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1185,
									"end": 1314,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 1185,
									"end": 1314,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1199,
									"end": 1201,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1196,
									"end": 1197,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1193,
									"end": 1202,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1185,
									"end": 1314,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1185,
									"end": 1314,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 1185,
									"end": 1314,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1287,
									"end": 1297,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1287,
									"end": 1297,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1287,
									"end": 1297,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1283,
									"end": 1302,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1283,
									"end": 1302,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1277,
									"end": 1303,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1256,
									"end": 1270,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1256,
									"end": 1270,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1256,
									"end": 1270,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1252,
									"end": 1275,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1252,
									"end": 1275,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 1304,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1210,
									"end": 1220,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1210,
									"end": 1220,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1210,
									"end": 1220,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1210,
									"end": 1220,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1185,
									"end": 1314,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 1185,
									"end": 1314,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1185,
									"end": 1314,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 1185,
									"end": 1314,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1332,
									"end": 1334,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1329,
									"end": 1330,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1326,
									"end": 1335,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1323,
									"end": 1403,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1323,
									"end": 1403,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 1323,
									"end": 1403,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1391,
									"end": 1392,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1381,
									"end": 1383,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1373,
									"end": 1379,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1369,
									"end": 1384,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1365,
									"end": 1389,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1393,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1323,
									"end": 1403,
									"name": "tag",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 1323,
									"end": 1403,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1422,
									"end": 1428,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1447,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 1447,
									"end": 1496,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1477,
									"end": 1495,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1477,
									"end": 1495,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1477,
									"end": 1495,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1447,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 1447,
									"end": 1496,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1447,
									"end": 1496,
									"name": "tag",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 1447,
									"end": 1496,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1437,
									"end": 1496,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1437,
									"end": 1496,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1437,
									"end": 1496,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1437,
									"end": 1496,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 328,
									"end": 1502,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 328,
									"end": 1502,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 328,
									"end": 1502,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 328,
									"end": 1502,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 328,
									"end": 1502,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 328,
									"end": 1502,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1507,
									"end": 1887,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 1507,
									"end": 1887,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1586,
									"end": 1587,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1582,
									"end": 1594,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1582,
									"end": 1594,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1582,
									"end": 1594,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1582,
									"end": 1594,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1629,
									"end": 1641,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1629,
									"end": 1641,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1629,
									"end": 1641,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1650,
									"end": 1711,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 1650,
									"end": 1711,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1704,
									"end": 1708,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 1696,
									"end": 1702,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1692,
									"end": 1709,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1682,
									"end": 1709,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1682,
									"end": 1709,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1650,
									"end": 1711,
									"name": "tag",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 1650,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1757,
									"end": 1759,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1749,
									"end": 1755,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1746,
									"end": 1760,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1726,
									"end": 1744,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1723,
									"end": 1761,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1720,
									"end": 1881,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 1720,
									"end": 1881,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1803,
									"end": 1813,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 1798,
									"end": 1801,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 1794,
									"end": 1814,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1791,
									"end": 1792,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1784,
									"end": 1815,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1838,
									"end": 1842,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1835,
									"end": 1836,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1828,
									"end": 1843,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1866,
									"end": 1870,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1863,
									"end": 1864,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1856,
									"end": 1871,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1720,
									"end": 1881,
									"name": "tag",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 1720,
									"end": 1881,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1720,
									"end": 1881,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1507,
									"end": 1887,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1507,
									"end": 1887,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1507,
									"end": 1887,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1507,
									"end": 1887,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1507,
									"end": 1887,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 1507,
									"end": 1887,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 323,
									"end": 2299,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a1b9537867b984f63e09898a2139eebbca3ac6857189b4611d46f1c8a6c2a8c364736f6c634300080e0033",
									".code": [
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH",
											"source": 11,
											"value": "6C0360EB"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH",
											"source": 11,
											"value": "BD85B039"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH",
											"source": 11,
											"value": "D14186C6"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH",
											"source": 11,
											"value": "D14186C6"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH",
											"source": 11,
											"value": "E985E9C5"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH",
											"source": 11,
											"value": "F242432A"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH",
											"source": 11,
											"value": "BD85B039"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH",
											"source": 11,
											"value": "CB450772"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH",
											"source": 11,
											"value": "6C0360EB"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH",
											"source": 11,
											"value": "6C8B703F"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH",
											"source": 11,
											"value": "A22CB465"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH",
											"source": 11,
											"value": "BB7FDE71"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH",
											"source": 11,
											"value": "4B8C9C2D"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH",
											"source": 11,
											"value": "4B8C9C2D"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH",
											"source": 11,
											"value": "4E1273F4"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH",
											"source": 11,
											"value": "4F558E79"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH",
											"source": 11,
											"value": "55F804B3"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH",
											"source": 11,
											"value": "FDD58E"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A7"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH",
											"source": 11,
											"value": "E89341C"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH",
											"source": 11,
											"value": "2EB2C2D6"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 323,
											"end": 2299,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2185,
											"end": 2413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2185,
											"end": 2413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 620,
											"end": 645,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 620,
											"end": 645,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 620,
											"end": 645,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 608,
											"end": 610,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 593,
											"end": 611,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1236,
											"end": 1541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1236,
											"end": 1541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1253,
											"end": 1267,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1253,
											"end": 1267,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1246,
											"end": 1268,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1228,
											"end": 1269,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1228,
											"end": 1269,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1216,
											"end": 1218,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1219,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1088,
											"end": 1275,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1450,
											"end": 1748,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 1450,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1450,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 1450,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 1450,
											"end": 1748,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1450,
											"end": 1748,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1450,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 1450,
											"end": 1748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1450,
											"end": 1748,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 1450,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1450,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 1450,
											"end": 1748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1450,
											"end": 1748,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 1450,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1450,
											"end": 1748,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1450,
											"end": 1748,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1450,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 1450,
											"end": 1748,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1450,
											"end": 1748,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1450,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1450,
											"end": 1748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4060,
											"end": 4490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4060,
											"end": 4490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 429,
											"end": 453,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 429,
											"end": 453,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 429,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 429,
											"end": 453,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 429,
											"end": 453,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 429,
											"end": 453,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 429,
											"end": 453,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 429,
											"end": 453,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5459,
											"end": 5501,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5447,
											"end": 5502,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5447,
											"end": 5502,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5447,
											"end": 5502,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5429,
											"end": 5503,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5429,
											"end": 5503,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5417,
											"end": 5419,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5402,
											"end": 5420,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 429,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 5283,
											"end": 5509,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2570,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2570,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2570,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 901,
											"end": 1021,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 901,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 901,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 901,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 901,
											"end": 1021,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 901,
											"end": 1021,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 901,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 901,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 901,
											"end": 1021,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 901,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 958,
											"end": 962,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 801,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 785,
											"end": 801,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 785,
											"end": 801,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 785,
											"end": 797,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 785,
											"end": 801,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 785,
											"end": 801,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 785,
											"end": 801,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 801,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 785,
											"end": 801,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 785,
											"end": 801,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 901,
											"end": 1021,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1756,
											"end": 1863,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 1756,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1756,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 1756,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 1756,
											"end": 1863,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1756,
											"end": 1863,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1756,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 1756,
											"end": 1863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1756,
											"end": 1863,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 1756,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1756,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 1756,
											"end": 1863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 794,
											"end": 888,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 794,
											"end": 888,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 794,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 794,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 794,
											"end": 888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 674,
											"end": 786,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 674,
											"end": 786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 674,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 674,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 674,
											"end": 786,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 674,
											"end": 786,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 674,
											"end": 786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 674,
											"end": 786,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 674,
											"end": 786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 674,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 674,
											"end": 786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3146,
											"end": 3299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3146,
											"end": 3299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2294,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 2066,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 2066,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 2066,
											"end": 2294,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2294,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2066,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 2066,
											"end": 2294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2294,
											"name": "tag",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 2066,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 2066,
											"end": 2294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 697,
											"end": 808,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 697,
											"end": 808,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 697,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 697,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 697,
											"end": 808,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 697,
											"end": 808,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 697,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 697,
											"end": 808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 697,
											"end": 808,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 697,
											"end": 808,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 759,
											"end": 766,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 801,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 785,
											"end": 801,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 785,
											"end": 801,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 785,
											"end": 797,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 785,
											"end": 801,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 785,
											"end": 801,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 785,
											"end": 801,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 801,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 785,
											"end": 801,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 785,
											"end": 801,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 785,
											"end": 801,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 697,
											"end": 808,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1198,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 984,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 984,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 984,
											"end": 1198,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1198,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 984,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 984,
											"end": 1198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1198,
											"name": "tag",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 984,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 984,
											"end": 1198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1206,
											"end": 1442,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 1206,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1206,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 1206,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 1206,
											"end": 1442,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1206,
											"end": 1442,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1206,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1206,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1206,
											"end": 1442,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 1206,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1206,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 1206,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3366,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3506,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3599,
											"end": 3988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3599,
											"end": 3988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2271,
											"end": 2278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10450,
											"end": 10452,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10432,
											"end": 10453,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10489,
											"end": 10491,
											"name": "PUSH",
											"source": 12,
											"value": "2B"
										},
										{
											"begin": 10469,
											"end": 10487,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10469,
											"end": 10487,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10469,
											"end": 10487,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10462,
											"end": 10492,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10528,
											"end": 10562,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 10508,
											"end": 10526,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 10508,
											"end": 10526,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10508,
											"end": 10526,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10501,
											"end": 10563,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10599,
											"end": 10612,
											"name": "PUSH",
											"source": 12,
											"value": "65726F2061646472657373000000000000000000000000000000000000000000"
										},
										{
											"begin": 10579,
											"end": 10597,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 10579,
											"end": 10597,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10579,
											"end": 10597,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10572,
											"end": 10613,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10630,
											"end": 10649,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 10630,
											"end": 10649,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2384,
											"end": 2393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1414,
											"name": "PUSH",
											"source": 0,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1498,
											"end": 1534,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1498,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1534,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1236,
											"end": 1541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1748,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 1450,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1538,
											"end": 1551,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1564,
											"end": 1586,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 1599,
											"end": 1606,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1589,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1589,
											"end": 1607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1589,
											"end": 1607,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 1589,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1564,
											"end": 1607,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1564,
											"end": 1607,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1652,
											"end": 1653,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1633,
											"end": 1641,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1627,
											"end": 1649,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1627,
											"end": 1653,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1627,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 1627,
											"end": 1740,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1722,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 1732,
											"end": 1739,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1722,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 1722,
											"end": 1740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1722,
											"end": 1740,
											"name": "tag",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 1722,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1627,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 1627,
											"end": 1740,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1627,
											"end": 1740,
											"name": "tag",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 1627,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1680,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 1680,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 1680,
											"end": 1689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1680,
											"end": 1689,
											"name": "tag",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 1680,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1691,
											"end": 1699,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1718,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1663,
											"end": 1718,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1718,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1663,
											"end": 1718,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 1663,
											"end": 1718,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1718,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1718,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 1663,
											"end": 1718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1718,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 1663,
											"end": 1718,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1718,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1663,
											"end": 1718,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1718,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1663,
											"end": 1718,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1718,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1718,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1718,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1718,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1718,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1718,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 1718,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1663,
											"end": 1718,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1627,
											"end": 1740,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 1627,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1620,
											"end": 1740,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1450,
											"end": 1748,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1450,
											"end": 1748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4285,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 4285,
											"end": 4345,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4309,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 4326,
											"end": 4330,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3366,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4309,
											"end": 4345,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 4309,
											"end": 4345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11704,
											"end": 11706,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11686,
											"end": 11707,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11743,
											"end": 11745,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 11723,
											"end": 11741,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11723,
											"end": 11741,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11723,
											"end": 11741,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11716,
											"end": 11746,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11782,
											"end": 11816,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 11762,
											"end": 11780,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 11762,
											"end": 11780,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11762,
											"end": 11780,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11755,
											"end": 11817,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11853,
											"end": 11873,
											"name": "PUSH",
											"source": 12,
											"value": "6F776E6572206E6F7220617070726F7665640000000000000000000000000000"
										},
										{
											"begin": 11833,
											"end": 11851,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 11833,
											"end": 11851,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11833,
											"end": 11851,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11874,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11891,
											"end": 11910,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 11891,
											"end": 11910,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 11502,
											"end": 11916,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 4454,
											"end": 4458,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4460,
											"end": 4462,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4467,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4476,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4482,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 4431,
											"end": 4483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4483,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 4431,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2737,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2780,
											"end": 2783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2780,
											"end": 2790,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2769,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2790,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12123,
											"end": 12125,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12105,
											"end": 12126,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12162,
											"end": 12164,
											"name": "PUSH",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 12142,
											"end": 12160,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 12142,
											"end": 12160,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12142,
											"end": 12160,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12135,
											"end": 12165,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12201,
											"end": 12235,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 12181,
											"end": 12199,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 12181,
											"end": 12199,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12181,
											"end": 12199,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12174,
											"end": 12236,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12272,
											"end": 12283,
											"name": "PUSH",
											"source": 12,
											"value": "206D69736D617463680000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12252,
											"end": 12270,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 12252,
											"end": 12270,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12252,
											"end": 12270,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12245,
											"end": 12284,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12301,
											"end": 12320,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 12301,
											"end": 12320,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 11921,
											"end": 12326,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2847,
											"end": 2877,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2902,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 2909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2880,
											"end": 2910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2847,
											"end": 2910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2847,
											"end": 2910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2926,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 2953,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 2960,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2941,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2941,
											"end": 2960,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3000,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 3010,
											"end": 3018,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3020,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3010,
											"end": 3021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3026,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3027,
											"end": 3028,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3023,
											"end": 3029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3000,
											"end": 3030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3000,
											"end": 3030,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 3000,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2994,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 2996,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2981,
											"end": 2997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 3030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2962,
											"end": 2965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3058,
											"end": 3071,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 3078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1863,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 1756,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 815,
											"end": 824,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 815,
											"end": 824,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 815,
											"end": 824,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 815,
											"end": 824,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 803,
											"end": 813,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 803,
											"end": 824,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 795,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 795,
											"end": 853,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 795,
											"end": 853,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 795,
											"end": 853,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 795,
											"end": 853,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 795,
											"end": 853,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 795,
											"end": 853,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13111,
											"end": 13113,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 795,
											"end": 853,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 795,
											"end": 853,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 795,
											"end": 853,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13093,
											"end": 13114,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13150,
											"end": 13152,
											"name": "PUSH",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 13130,
											"end": 13148,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 13130,
											"end": 13148,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13130,
											"end": 13148,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13123,
											"end": 13153,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13189,
											"end": 13215,
											"name": "PUSH",
											"source": 12,
											"value": "596F7520617265206E6F742077686974656C69737465642E0000000000000000"
										},
										{
											"begin": 13169,
											"end": 13187,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 13169,
											"end": 13187,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13169,
											"end": 13187,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13162,
											"end": 13216,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13233,
											"end": 13251,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 13233,
											"end": 13251,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 795,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 12909,
											"end": 13257,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 795,
											"end": 853,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 795,
											"end": 853,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 1847,
											"end": 1854,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1847,
											"end": 1854,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1835,
											"end": 1855,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1835,
											"end": 1846,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 1835,
											"end": 1846,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1835,
											"end": 1855,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 1835,
											"end": 1855,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1756,
											"end": 1863,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1756,
											"end": 1863,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1756,
											"end": 1863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 794,
											"end": 888,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 794,
											"end": 888,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 834,
											"end": 847,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 872,
											"end": 880,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 865,
											"end": 880,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 865,
											"end": 880,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 865,
											"end": 880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 865,
											"end": 880,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 865,
											"end": 880,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 865,
											"end": 880,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 865,
											"end": 880,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 865,
											"end": 880,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 865,
											"end": 880,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 865,
											"end": 880,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 865,
											"end": 880,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 865,
											"end": 880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 865,
											"end": 880,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 865,
											"end": 880,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 865,
											"end": 880,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 865,
											"end": 880,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 865,
											"end": 880,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 865,
											"end": 880,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 865,
											"end": 880,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 865,
											"end": 880,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 880,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 865,
											"end": 880,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 880,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 865,
											"end": 880,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 865,
											"end": 880,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 865,
											"end": 880,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 865,
											"end": 880,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 865,
											"end": 880,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 865,
											"end": 880,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 865,
											"end": 880,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 794,
											"end": 888,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 794,
											"end": 888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 674,
											"end": 786,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 674,
											"end": 786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 764,
											"end": 778,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 764,
											"end": 778,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 764,
											"end": 778,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 764,
											"end": 778,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 764,
											"end": 774,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 764,
											"end": 778,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 764,
											"end": 778,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 764,
											"end": 778,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 764,
											"end": 778,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 764,
											"end": 778,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 726,
											"end": 739,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 726,
											"end": 739,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 764,
											"end": 778,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 757,
											"end": 778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 757,
											"end": 778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 757,
											"end": 778,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 674,
											"end": 786,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 674,
											"end": 786,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 674,
											"end": 786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 674,
											"end": 786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3240,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3273,
											"end": 3281,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3283,
											"end": 3291,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3240,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 3240,
											"end": 3292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2294,
											"name": "tag",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 2066,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 693,
											"end": 703,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 685,
											"end": 704,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 704,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 685,
											"end": 704,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 685,
											"end": 704,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 685,
											"end": 692,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 685,
											"end": 704,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 704,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 685,
											"end": 704,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 685,
											"end": 704,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 685,
											"end": 704,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 685,
											"end": 704,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 685,
											"end": 704,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 685,
											"end": 704,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 677,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 677,
											"end": 733,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 677,
											"end": 733,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 677,
											"end": 733,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 677,
											"end": 733,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 677,
											"end": 733,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 677,
											"end": 733,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13111,
											"end": 13113,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 677,
											"end": 733,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 677,
											"end": 733,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 677,
											"end": 733,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13093,
											"end": 13114,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13150,
											"end": 13152,
											"name": "PUSH",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 13130,
											"end": 13148,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 13130,
											"end": 13148,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13130,
											"end": 13148,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13123,
											"end": 13153,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13189,
											"end": 13215,
											"name": "PUSH",
											"source": 12,
											"value": "596F7520617265206E6F742077686974656C69737465642E0000000000000000"
										},
										{
											"begin": 13169,
											"end": 13187,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 13169,
											"end": 13187,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13169,
											"end": 13187,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13162,
											"end": 13216,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13233,
											"end": 13251,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 13233,
											"end": 13251,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 677,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 12909,
											"end": 13257,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 677,
											"end": 733,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 677,
											"end": 733,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 759,
											"end": 766,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 801,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 785,
											"end": 801,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 785,
											"end": 801,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 785,
											"end": 797,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 785,
											"end": 801,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 785,
											"end": 801,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 785,
											"end": 801,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 801,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 785,
											"end": 801,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 785,
											"end": 801,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2177,
											"end": 2197,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2173,
											"end": 2251,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 2173,
											"end": 2251,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 2231,
											"end": 2233,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2235,
											"end": 2238,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2235,
											"end": 2238,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2223,
											"end": 2239,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2223,
											"end": 2230,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 2223,
											"end": 2230,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2223,
											"end": 2239,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 2223,
											"end": 2239,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2286,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 2267,
											"end": 2269,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2273,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2275,
											"end": 2281,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2261,
											"end": 2286,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2286,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2261,
											"end": 2286,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2261,
											"end": 2286,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2286,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2286,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2286,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2286,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2266,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 2261,
											"end": 2286,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1198,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 984,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 815,
											"end": 824,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 815,
											"end": 824,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 815,
											"end": 824,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 815,
											"end": 824,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 803,
											"end": 813,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 803,
											"end": 824,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 795,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 795,
											"end": 853,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 795,
											"end": 853,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 795,
											"end": 853,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 795,
											"end": 853,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 795,
											"end": 853,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 795,
											"end": 853,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13111,
											"end": 13113,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 795,
											"end": 853,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 795,
											"end": 853,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 795,
											"end": 853,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13093,
											"end": 13114,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13150,
											"end": 13152,
											"name": "PUSH",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 13130,
											"end": 13148,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 13130,
											"end": 13148,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13130,
											"end": 13148,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13123,
											"end": 13153,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13189,
											"end": 13215,
											"name": "PUSH",
											"source": 12,
											"value": "596F7520617265206E6F742077686974656C69737465642E0000000000000000"
										},
										{
											"begin": 13169,
											"end": 13187,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 13169,
											"end": 13187,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13169,
											"end": 13187,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13162,
											"end": 13216,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13233,
											"end": 13251,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 13233,
											"end": 13251,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 795,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 12909,
											"end": 13257,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 795,
											"end": 853,
											"name": "tag",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 795,
											"end": 853,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1068,
											"end": 1077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 1068,
											"end": 1077,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1068,
											"end": 1083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1068,
											"end": 1083,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1068,
											"end": 1083,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1068,
											"end": 1083,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1068,
											"end": 1077,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1068,
											"end": 1077,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1068,
											"end": 1083,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1060,
											"end": 1125,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 1060,
											"end": 1125,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1060,
											"end": 1125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1060,
											"end": 1125,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1060,
											"end": 1125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1060,
											"end": 1125,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1060,
											"end": 1125,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13906,
											"end": 13908,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1060,
											"end": 1125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1060,
											"end": 1125,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1060,
											"end": 1125,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13888,
											"end": 13909,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13945,
											"end": 13947,
											"name": "PUSH",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 13925,
											"end": 13943,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 13925,
											"end": 13943,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13925,
											"end": 13943,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13918,
											"end": 13948,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13984,
											"end": 14018,
											"name": "PUSH",
											"source": 12,
											"value": "50726F7669646564206164647265737320616C72656164792073616665206164"
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13957,
											"end": 14019,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14055,
											"end": 14062,
											"name": "PUSH",
											"source": 12,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14035,
											"end": 14053,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 14035,
											"end": 14053,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14035,
											"end": 14053,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14028,
											"end": 14063,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14080,
											"end": 14099,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 14080,
											"end": 14099,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1125,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 13704,
											"end": 14105,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1125,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 1060,
											"end": 1125,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1145,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 1136,
											"end": 1152,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1152,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1152,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 1136,
											"end": 1152,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1136,
											"end": 1152,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1152,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1152,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1152,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1152,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1152,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1152,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1152,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1168,
											"end": 1190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1168,
											"end": 1190,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1168,
											"end": 1190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "D4C1AF98B758421A8D47B0BC04ECFA30233D5506955E8CDE282417AA0D31D3B6"
										},
										{
											"begin": 1168,
											"end": 1190,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1190,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1198,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1206,
											"end": 1442,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 1206,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 815,
											"end": 824,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 815,
											"end": 824,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 815,
											"end": 824,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 815,
											"end": 824,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 803,
											"end": 813,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 803,
											"end": 824,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 795,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 795,
											"end": 853,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 795,
											"end": 853,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 795,
											"end": 853,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 795,
											"end": 853,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 795,
											"end": 853,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 795,
											"end": 853,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13111,
											"end": 13113,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 795,
											"end": 853,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 795,
											"end": 853,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 795,
											"end": 853,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13093,
											"end": 13114,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13150,
											"end": 13152,
											"name": "PUSH",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 13130,
											"end": 13148,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 13130,
											"end": 13148,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13130,
											"end": 13148,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13123,
											"end": 13153,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13189,
											"end": 13215,
											"name": "PUSH",
											"source": 12,
											"value": "596F7520617265206E6F742077686974656C69737465642E0000000000000000"
										},
										{
											"begin": 13169,
											"end": 13187,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 13169,
											"end": 13187,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13169,
											"end": 13187,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13162,
											"end": 13216,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13233,
											"end": 13251,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 13233,
											"end": 13251,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 795,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 12909,
											"end": 13257,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 795,
											"end": 853,
											"name": "tag",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 795,
											"end": 853,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1321,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1321,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1321,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 1306,
											"end": 1321,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1331,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1331,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1331,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 1306,
											"end": 1331,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1331,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1331,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1331,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1331,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1331,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1331,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1331,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1331,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1331,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1331,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1331,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1342,
											"end": 1434,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 1342,
											"end": 1434,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1362,
											"end": 1386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1362,
											"end": 1386,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1362,
											"end": 1386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1362,
											"end": 1386,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1362,
											"end": 1386,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1362,
											"end": 1386,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1362,
											"end": 1386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "526AF00F9BC92D53F2D0B4C603A1305395A04F7FB6A0A7962867D8D230467547"
										},
										{
											"begin": 1362,
											"end": 1386,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1362,
											"end": 1386,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 1386,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1362,
											"end": 1386,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 1756,
											"end": 1863,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1756,
											"end": 1863,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1756,
											"end": 1863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1342,
											"end": 1434,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 1342,
											"end": 1434,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1407,
											"end": 1434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 1434,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1407,
											"end": 1434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1407,
											"end": 1434,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1407,
											"end": 1434,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1407,
											"end": 1434,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1407,
											"end": 1434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E8185C1A3F6241A6224D99FF39E932AC24FC0D2C51B17E56C5D6F52AFF1B5DA1"
										},
										{
											"begin": 1407,
											"end": 1434,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1407,
											"end": 1434,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 1434,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1407,
											"end": 1434,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 1206,
											"end": 1442,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1206,
											"end": 1442,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1206,
											"end": 1442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3799,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 3799,
											"end": 3859,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3823,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 3840,
											"end": 3844,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3366,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3859,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 3823,
											"end": 3859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14312,
											"end": 14314,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14294,
											"end": 14315,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14351,
											"end": 14353,
											"name": "PUSH",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 14331,
											"end": 14349,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 14331,
											"end": 14349,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14331,
											"end": 14349,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14324,
											"end": 14354,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14390,
											"end": 14424,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 14370,
											"end": 14388,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 14370,
											"end": 14388,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14370,
											"end": 14388,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14363,
											"end": 14425,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14461,
											"end": 14472,
											"name": "PUSH",
											"source": 12,
											"value": "20617070726F7665640000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14441,
											"end": 14459,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 14441,
											"end": 14459,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14441,
											"end": 14459,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14434,
											"end": 14473,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14490,
											"end": 14509,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 14490,
											"end": 14509,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 14110,
											"end": 14515,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3936,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3954,
											"end": 3958,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3960,
											"end": 3962,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3964,
											"end": 3966,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3968,
											"end": 3974,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 3980,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3936,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 3936,
											"end": 3981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1633,
											"end": 1984,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 1633,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1749,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1752,
											"end": 1771,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1752,
											"end": 1771,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1752,
											"end": 1771,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1752,
											"end": 1762,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1752,
											"end": 1771,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1752,
											"end": 1771,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1752,
											"end": 1771,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1752,
											"end": 1771,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1752,
											"end": 1771,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1714,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1701,
											"end": 1714,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1749,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1752,
											"end": 1771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 1727,
											"end": 1771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 1727,
											"end": 1771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1907,
											"end": 1908,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1896,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1882,
											"end": 1904,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1882,
											"end": 1908,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1882,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 1882,
											"end": 1976,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1958,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 1968,
											"end": 1975,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1958,
											"end": 1967,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 1958,
											"end": 1976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1882,
											"end": 1976,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 1882,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1935,
											"end": 1943,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1945,
											"end": 1953,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1918,
											"end": 1954,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1918,
											"end": 1954,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1918,
											"end": 1954,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1918,
											"end": 1954,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1918,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 1918,
											"end": 1954,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1918,
											"end": 1954,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1918,
											"end": 1954,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1918,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 1918,
											"end": 1954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6453,
											"end": 6460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6453,
											"end": 6467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6439,
											"end": 6442,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6439,
											"end": 6449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6439,
											"end": 6467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16142,
											"end": 16144,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16124,
											"end": 16145,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16181,
											"end": 16183,
											"name": "PUSH",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 16161,
											"end": 16179,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 16161,
											"end": 16179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16161,
											"end": 16179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16154,
											"end": 16184,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16220,
											"end": 16254,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 16200,
											"end": 16218,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 16200,
											"end": 16218,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16200,
											"end": 16218,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16193,
											"end": 16255,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16291,
											"end": 16301,
											"name": "PUSH",
											"source": 12,
											"value": "6D69736D61746368000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16271,
											"end": 16289,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 16271,
											"end": 16289,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16271,
											"end": 16289,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16264,
											"end": 16302,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16319,
											"end": 16338,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 16319,
											"end": 16338,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 15940,
											"end": 16344,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16551,
											"end": 16553,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16554,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16590,
											"end": 16592,
											"name": "PUSH",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 16570,
											"end": 16588,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 16570,
											"end": 16588,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16570,
											"end": 16588,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16563,
											"end": 16593,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16629,
											"end": 16663,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 16609,
											"end": 16627,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 16609,
											"end": 16627,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16609,
											"end": 16627,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16602,
											"end": 16664,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16700,
											"end": 16707,
											"name": "PUSH",
											"source": 12,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16680,
											"end": 16698,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 16680,
											"end": 16698,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16680,
											"end": 16698,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16673,
											"end": 16708,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16725,
											"end": 16744,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 16725,
											"end": 16744,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 16349,
											"end": 16750,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6599,
											"end": 6615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6736,
											"end": 6739,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6736,
											"end": 6746,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6746,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 6777,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6780,
											"end": 6783,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6785,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 6780,
											"end": 6786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 6786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 6786,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6817,
											"end": 6824,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6825,
											"end": 6826,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 6817,
											"end": 6827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6861,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6905,
											"end": 6926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6905,
											"end": 6926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6905,
											"end": 6926,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6905,
											"end": 6926,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16957,
											"end": 16959,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16939,
											"end": 16960,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16996,
											"end": 16998,
											"name": "PUSH",
											"source": 12,
											"value": "2A"
										},
										{
											"begin": 16976,
											"end": 16994,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 16976,
											"end": 16994,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16976,
											"end": 16994,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16969,
											"end": 16999,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17035,
											"end": 17069,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 17015,
											"end": 17033,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 17015,
											"end": 17033,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17015,
											"end": 17033,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17008,
											"end": 17070,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17106,
											"end": 17118,
											"name": "PUSH",
											"source": 12,
											"value": "72207472616E7366657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 17086,
											"end": 17104,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 17086,
											"end": 17104,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17086,
											"end": 17104,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17079,
											"end": 17119,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17136,
											"end": 17155,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 17136,
											"end": 17155,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 16755,
											"end": 17161,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7057,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 7085,
											"end": 7112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6753,
											"end": 7123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6753,
											"end": 7123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6753,
											"end": 7123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 6748,
											"end": 6751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7168,
											"end": 7170,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7162,
											"end": 7166,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7160,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7172,
											"end": 7175,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7177,
											"end": 7184,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 7138,
											"end": 7185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7266,
											"end": 7341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 7302,
											"end": 7310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7312,
											"end": 7316,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7318,
											"end": 7320,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7322,
											"end": 7325,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7327,
											"end": 7334,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7340,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7266,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 7266,
											"end": 7341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7266,
											"end": 7341,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 7266,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6421,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2426,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 2324,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2398,
											"end": 2406,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2398,
											"end": 2406,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 2398,
											"end": 2418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12923,
											"end": 12931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12914,
											"end": 12919,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17971,
											"end": 17973,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 17974,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18010,
											"end": 18012,
											"name": "PUSH",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 17990,
											"end": 18008,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 17990,
											"end": 18008,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17990,
											"end": 18008,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17983,
											"end": 18013,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18049,
											"end": 18083,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 18029,
											"end": 18047,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 18029,
											"end": 18047,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18029,
											"end": 18047,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18022,
											"end": 18084,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18120,
											"end": 18131,
											"name": "PUSH",
											"source": 12,
											"value": "20666F722073656C660000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18100,
											"end": 18118,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 18100,
											"end": 18118,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18100,
											"end": 18118,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18093,
											"end": 18132,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18149,
											"end": 18168,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 18149,
											"end": 18168,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 17769,
											"end": 18174,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13005,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1228,
											"end": 1269,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1228,
											"end": 1269,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1228,
											"end": 1269,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1219,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12773,
											"end": 13096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2237,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 2069,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2174,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2155,
											"end": 2174,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2174,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2174,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2165,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2155,
											"end": 2174,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2155,
											"end": 2174,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2174,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2174,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2174,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2155,
											"end": 2174,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2174,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2174,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 2155,
											"end": 2185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2185,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2069,
											"end": 2237,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2069,
											"end": 2237,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2069,
											"end": 2237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8630,
											"end": 9339,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 8630,
											"end": 9339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8777,
											"end": 8793,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8777,
											"end": 8793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8777,
											"end": 8793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8769,
											"end": 8831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 8769,
											"end": 8831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8769,
											"end": 8831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8769,
											"end": 8831,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8769,
											"end": 8831,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8769,
											"end": 8831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8769,
											"end": 8831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18381,
											"end": 18383,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8769,
											"end": 8831,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8769,
											"end": 8831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8769,
											"end": 8831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18363,
											"end": 18384,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18420,
											"end": 18422,
											"name": "PUSH",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 18400,
											"end": 18418,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 18400,
											"end": 18418,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18400,
											"end": 18418,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18393,
											"end": 18423,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18459,
											"end": 18493,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A206D696E7420746F20746865207A65726F20616464726573"
										},
										{
											"begin": 18439,
											"end": 18457,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 18439,
											"end": 18457,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18439,
											"end": 18457,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18432,
											"end": 18494,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18530,
											"end": 18533,
											"name": "PUSH",
											"source": 12,
											"value": "7300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18510,
											"end": 18528,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 18510,
											"end": 18528,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18510,
											"end": 18528,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18503,
											"end": 18534,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18551,
											"end": 18570,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 18551,
											"end": 18570,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8769,
											"end": 8831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 18179,
											"end": 18576,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8769,
											"end": 8831,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 8769,
											"end": 8831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8842,
											"end": 8858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8906,
											"end": 8927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 8924,
											"end": 8926,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8906,
											"end": 8923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 8906,
											"end": 8927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8906,
											"end": 8927,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 8906,
											"end": 8927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8883,
											"end": 8927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8883,
											"end": 8927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 8961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8964,
											"end": 8989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 8982,
											"end": 8988,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8964,
											"end": 8981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 8964,
											"end": 8989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8964,
											"end": 8989,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 8964,
											"end": 8989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 8989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8937,
											"end": 8989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9086,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9077,
											"end": 9090,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9090,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9090,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9077,
											"end": 9090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9090,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9090,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9077,
											"end": 9090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9090,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9090,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9094,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9077,
											"end": 9094,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9094,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9094,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9094,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9094,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9104,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9098,
											"end": 9104,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9098,
											"end": 9104,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 9077,
											"end": 9104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9098,
											"end": 9104,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9098,
											"end": 9104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 9077,
											"end": 9104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9104,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 9077,
											"end": 9104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9104,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9077,
											"end": 9104,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18755,
											"end": 18780,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 18755,
											"end": 18780,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18755,
											"end": 18780,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18811,
											"end": 18813,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18796,
											"end": 18814,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18796,
											"end": 18814,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18789,
											"end": 18823,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 18789,
											"end": 18823,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18789,
											"end": 18823,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9152,
											"end": 9153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9152,
											"end": 9153,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18728,
											"end": 18746,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9119,
											"end": 9171,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 9289,
											"end": 9297,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9308,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9311,
											"end": 9313,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 9315,
											"end": 9317,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 9319,
											"end": 9325,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 9327,
											"end": 9331,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 9258,
											"end": 9332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9332,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 9258,
											"end": 9332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8759,
											"end": 9339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8759,
											"end": 9339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8759,
											"end": 9339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8630,
											"end": 9339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8630,
											"end": 9339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8630,
											"end": 9339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8630,
											"end": 9339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8630,
											"end": 9339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16551,
											"end": 16553,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16554,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16590,
											"end": 16592,
											"name": "PUSH",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 16570,
											"end": 16588,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 16570,
											"end": 16588,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16570,
											"end": 16588,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16563,
											"end": 16593,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16629,
											"end": 16663,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 16609,
											"end": 16627,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 16609,
											"end": 16627,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16609,
											"end": 16627,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16602,
											"end": 16664,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16700,
											"end": 16707,
											"name": "PUSH",
											"source": 12,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16680,
											"end": 16698,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 16680,
											"end": 16698,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16680,
											"end": 16698,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16673,
											"end": 16708,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16725,
											"end": 16744,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 16725,
											"end": 16744,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 16349,
											"end": 16750,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5190,
											"end": 5206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 5272,
											"end": 5274,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 5254,
											"end": 5275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5231,
											"end": 5275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5231,
											"end": 5275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5285,
											"end": 5309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 5330,
											"end": 5336,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5312,
											"end": 5329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 5312,
											"end": 5337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5285,
											"end": 5337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5285,
											"end": 5337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5499,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5499,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5499,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16957,
											"end": 16959,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16939,
											"end": 16960,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16996,
											"end": 16998,
											"name": "PUSH",
											"source": 12,
											"value": "2A"
										},
										{
											"begin": 16976,
											"end": 16994,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 16976,
											"end": 16994,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16976,
											"end": 16994,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16969,
											"end": 16999,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17035,
											"end": 17069,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 17015,
											"end": 17033,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 17015,
											"end": 17033,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17015,
											"end": 17033,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17008,
											"end": 17070,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17106,
											"end": 17118,
											"name": "PUSH",
											"source": 12,
											"value": "72207472616E7366657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 17086,
											"end": 17104,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 17086,
											"end": 17104,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17086,
											"end": 17104,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17079,
											"end": 17119,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17136,
											"end": 17155,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 17136,
											"end": 17155,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 16755,
											"end": 17161,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5622,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 5642,
											"end": 5669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18755,
											"end": 18780,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 18755,
											"end": 18780,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18755,
											"end": 18780,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18811,
											"end": 18813,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18796,
											"end": 18814,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18796,
											"end": 18814,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18789,
											"end": 18823,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 18789,
											"end": 18823,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18789,
											"end": 18823,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18728,
											"end": 18746,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 5843,
											"end": 5851,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5857,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5859,
											"end": 5861,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5863,
											"end": 5865,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5867,
											"end": 5873,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5875,
											"end": 5879,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 5812,
											"end": 5880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5880,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 5812,
											"end": 5880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2000,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2032,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2025,
											"end": 2036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16359,
											"end": 16372,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16359,
											"end": 16372,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16359,
											"end": 16372,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 16355,
											"end": 16913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 16355,
											"end": 16913,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C8100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16438,
											"end": 16446,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 16438,
											"end": 16446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16448,
											"end": 16452,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 16448,
											"end": 16452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16454,
											"end": 16457,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16454,
											"end": 16457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16459,
											"end": 16466,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16459,
											"end": 16466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16468,
											"end": 16472,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16468,
											"end": 16472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 16394,
											"end": 16473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 16394,
											"end": 16473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 16390,
											"end": 16903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A0"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 16390,
											"end": 16903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16779,
											"end": 16785,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 16772,
											"end": 16786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21076,
											"end": 21078,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21058,
											"end": 21079,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21115,
											"end": 21117,
											"name": "PUSH",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 21095,
											"end": 21113,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 21095,
											"end": 21113,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21095,
											"end": 21113,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21088,
											"end": 21118,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21154,
											"end": 21188,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 21134,
											"end": 21152,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 21134,
											"end": 21152,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21134,
											"end": 21152,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21127,
											"end": 21189,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21225,
											"end": 21247,
											"name": "PUSH",
											"source": 12,
											"value": "526563656976657220696D706C656D656E746572000000000000000000000000"
										},
										{
											"begin": 21205,
											"end": 21223,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 21205,
											"end": 21223,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21205,
											"end": 21223,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21198,
											"end": 21248,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21265,
											"end": 21284,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 21265,
											"end": 21284,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 20874,
											"end": 21290,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16552,
											"end": 16612,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16552,
											"end": 16612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16552,
											"end": 16612,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16564,
											"end": 16612,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C8100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16552,
											"end": 16612,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16548,
											"end": 16705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 16548,
											"end": 16705,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21497,
											"end": 21499,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21479,
											"end": 21500,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21536,
											"end": 21538,
											"name": "PUSH",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 21516,
											"end": 21534,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 21516,
											"end": 21534,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21516,
											"end": 21534,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21509,
											"end": 21539,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21575,
											"end": 21609,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 21555,
											"end": 21573,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 21555,
											"end": 21573,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21555,
											"end": 21573,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21548,
											"end": 21610,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21646,
											"end": 21656,
											"name": "PUSH",
											"source": 12,
											"value": "6420746F6B656E73000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21626,
											"end": 21644,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 21626,
											"end": 21644,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21626,
											"end": 21644,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21619,
											"end": 21657,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21674,
											"end": 21693,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 21674,
											"end": 21693,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 21295,
											"end": 21699,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16925,
											"end": 17118,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 16925,
											"end": 17118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17058,
											"end": 17059,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16991,
											"end": 17007,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16991,
											"end": 17007,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17019,
											"end": 17041,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17019,
											"end": 17041,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17019,
											"end": 17060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17019,
											"end": 17060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17081,
											"end": 17088,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17076,
											"end": 17077,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 17070,
											"end": 17078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17088,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17106,
											"end": 17111,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 17118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16925,
											"end": 17118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15396,
											"end": 16121,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 15396,
											"end": 16121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15603,
											"end": 15616,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15603,
											"end": 15616,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15603,
											"end": 15616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15599,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 15599,
											"end": 16115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E6100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15685,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15687,
											"end": 15691,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 15687,
											"end": 15691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15693,
											"end": 15695,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15693,
											"end": 15695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15697,
											"end": 15703,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15697,
											"end": 15703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15705,
											"end": 15709,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15705,
											"end": 15709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 15638,
											"end": 15710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 15638,
											"end": 15710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 15634,
											"end": 16105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15759,
											"end": 15814,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15759,
											"end": 15814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15759,
											"end": 15814,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15771,
											"end": 15814,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E6100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15759,
											"end": 15814,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15755,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 15755,
											"end": 15907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21497,
											"end": 21499,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21479,
											"end": 21500,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21536,
											"end": 21538,
											"name": "PUSH",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 21516,
											"end": 21534,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 21516,
											"end": 21534,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21516,
											"end": 21534,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21509,
											"end": 21539,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21575,
											"end": 21609,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 21555,
											"end": 21573,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 21555,
											"end": 21573,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21555,
											"end": 21573,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21548,
											"end": 21610,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21646,
											"end": 21656,
											"name": "PUSH",
											"source": 12,
											"value": "6420746F6B656E73000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21626,
											"end": 21644,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 21626,
											"end": 21644,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21626,
											"end": 21644,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21619,
											"end": 21657,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21674,
											"end": 21693,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 21674,
											"end": 21693,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 21295,
											"end": 21699,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "255"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "350"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "160"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "350"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "352"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "355"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "352"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "353"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "355"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "353"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "355"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "354"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "355"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "354"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "355"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "356"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "357"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "356"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "357"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "358"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "356"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "358"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 210,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 142,
											"end": 184,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 131,
											"end": 185,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 131,
											"end": 185,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 121,
											"end": 186,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 121,
											"end": 186,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 111,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 111,
											"end": 204,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 200,
											"end": 201,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 198,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 190,
											"end": 202,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 111,
											"end": 204,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 111,
											"end": 204,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14,
											"end": 210,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14,
											"end": 210,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14,
											"end": 210,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14,
											"end": 210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 215,
											"end": 469,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 215,
											"end": 469,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 283,
											"end": 289,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 297,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 344,
											"end": 346,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 323,
											"end": 330,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 319,
											"end": 342,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 315,
											"end": 347,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 312,
											"end": 364,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 312,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 312,
											"end": 364,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 360,
											"end": 361,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 358,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 350,
											"end": 362,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 312,
											"end": 364,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 312,
											"end": 364,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 383,
											"end": 412,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 402,
											"end": 411,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 383,
											"end": 412,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 383,
											"end": 412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 383,
											"end": 412,
											"name": "tag",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 383,
											"end": 412,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 373,
											"end": 412,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 459,
											"end": 461,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 444,
											"end": 462,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 444,
											"end": 462,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 444,
											"end": 462,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 444,
											"end": 462,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 431,
											"end": 463,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 431,
											"end": 463,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 215,
											"end": 469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 656,
											"end": 833,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 656,
											"end": 833,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 741,
											"end": 807,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 734,
											"end": 739,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 730,
											"end": 808,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 723,
											"end": 728,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 720,
											"end": 809,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 710,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 710,
											"end": 827,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 821,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 813,
											"end": 825,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 710,
											"end": 827,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 710,
											"end": 827,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 656,
											"end": 833,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 656,
											"end": 833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 838,
											"end": 1083,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 838,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 896,
											"end": 902,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 917,
											"end": 969,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 917,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 917,
											"end": 969,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 965,
											"end": 966,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 962,
											"end": 963,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 955,
											"end": 967,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 917,
											"end": 969,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 917,
											"end": 969,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1004,
											"end": 1013,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 991,
											"end": 1014,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1023,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 1047,
											"end": 1052,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1023,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 1023,
											"end": 1053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1280,
											"end": 1460,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 1280,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1339,
											"end": 1345,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1394,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1389,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1371,
											"end": 1378,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1367,
											"end": 1390,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1395,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1412,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 1360,
											"end": 1412,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1408,
											"end": 1409,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1406,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1398,
											"end": 1410,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1412,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 1360,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1431,
											"end": 1454,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1431,
											"end": 1454,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1280,
											"end": 1460,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1280,
											"end": 1460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1465,
											"end": 1723,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 1465,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1547,
											"end": 1660,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 1547,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1561,
											"end": 1567,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1555,
											"end": 1568,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1547,
											"end": 1660,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1547,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 1547,
											"end": 1660,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1637,
											"end": 1648,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1637,
											"end": 1648,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1637,
											"end": 1648,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1631,
											"end": 1649,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1629,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1629,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1629,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1611,
											"end": 1650,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1585,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1576,
											"end": 1586,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1547,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 1547,
											"end": 1660,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1547,
											"end": 1660,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 1547,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1678,
											"end": 1684,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1675,
											"end": 1676,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1672,
											"end": 1685,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1669,
											"end": 1717,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1669,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 1669,
											"end": 1717,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1704,
											"end": 1710,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1699,
											"end": 1702,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1695,
											"end": 1711,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1688,
											"end": 1715,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1669,
											"end": 1717,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 1669,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1669,
											"end": 1717,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1465,
											"end": 1723,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1465,
											"end": 1723,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1465,
											"end": 1723,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1465,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1728,
											"end": 2056,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 1728,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1781,
											"end": 1784,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1824,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1846,
											"end": 1852,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1841,
											"end": 1844,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1834,
											"end": 1853,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1862,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 1918,
											"end": 1924,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1911,
											"end": 1915,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1906,
											"end": 1909,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1902,
											"end": 1916,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1895,
											"end": 1899,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1888,
											"end": 1893,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1884,
											"end": 1900,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1862,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 1862,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1862,
											"end": 1925,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 1862,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1970,
											"end": 1972,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1958,
											"end": 1973,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2041,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 1954,
											"end": 2042,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1945,
											"end": 2043,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1945,
											"end": 2043,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1945,
											"end": 2043,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1945,
											"end": 2043,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2045,
											"end": 2049,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1941,
											"end": 2050,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1941,
											"end": 2050,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1728,
											"end": 2056,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1728,
											"end": 2056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2061,
											"end": 2292,
											"name": "tag",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 2061,
											"end": 2292,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2210,
											"end": 2212,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2199,
											"end": 2208,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2192,
											"end": 2213,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2173,
											"end": 2177,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 2282,
											"end": 2284,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2271,
											"end": 2280,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2267,
											"end": 2285,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2259,
											"end": 2265,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 2230,
											"end": 2286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2297,
											"end": 2481,
											"name": "tag",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 2297,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2349,
											"end": 2426,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2346,
											"end": 2347,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2427,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2446,
											"end": 2450,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 2443,
											"end": 2444,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2436,
											"end": 2451,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2470,
											"end": 2474,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2467,
											"end": 2468,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2475,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2486,
											"end": 2794,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 2486,
											"end": 2794,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2592,
											"end": 2658,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 2587,
											"end": 2589,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2581,
											"end": 2585,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2577,
											"end": 2590,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2573,
											"end": 2659,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2565,
											"end": 2571,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2561,
											"end": 2660,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2714,
											"end": 2724,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2711,
											"end": 2733,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2690,
											"end": 2708,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2678,
											"end": 2688,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2675,
											"end": 2709,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2672,
											"end": 2734,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2669,
											"end": 2757,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2669,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 2669,
											"end": 2757,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2737,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 2737,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 2737,
											"end": 2755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2737,
											"end": 2755,
											"name": "tag",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 2737,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2773,
											"end": 2775,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2486,
											"end": 2794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2799,
											"end": 2982,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 2799,
											"end": 2982,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2859,
											"end": 2863,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2892,
											"end": 2910,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2884,
											"end": 2890,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2881,
											"end": 2911,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2878,
											"end": 2934,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2878,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 2878,
											"end": 2934,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2914,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 2914,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 2914,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2914,
											"end": 2932,
											"name": "tag",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 2914,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2959,
											"end": 2960,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 2955,
											"end": 2969,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2971,
											"end": 2975,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2951,
											"end": 2976,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2951,
											"end": 2976,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2799,
											"end": 2982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2987,
											"end": 3711,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 2987,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3041,
											"end": 3046,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3094,
											"end": 3097,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3087,
											"end": 3091,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3079,
											"end": 3085,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3075,
											"end": 3092,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3098,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3061,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 3061,
											"end": 3116,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3112,
											"end": 3113,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3109,
											"end": 3110,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3102,
											"end": 3114,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3061,
											"end": 3116,
											"name": "tag",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 3061,
											"end": 3116,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3148,
											"end": 3154,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3135,
											"end": 3155,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3174,
											"end": 3178,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3197,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 3237,
											"end": 3239,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3197,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 3197,
											"end": 3240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3197,
											"end": 3240,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 3197,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3269,
											"end": 3271,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3263,
											"end": 3272,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3281,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 3309,
											"end": 3311,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3301,
											"end": 3307,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3281,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 3281,
											"end": 3312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3281,
											"end": 3312,
											"name": "tag",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 3281,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3347,
											"end": 3365,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3347,
											"end": 3365,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3347,
											"end": 3365,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3439,
											"end": 3440,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 3435,
											"end": 3445,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3435,
											"end": 3445,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3435,
											"end": 3445,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3435,
											"end": 3445,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 3423,
											"end": 3446,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3423,
											"end": 3446,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3419,
											"end": 3451,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3419,
											"end": 3451,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3419,
											"end": 3451,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3381,
											"end": 3396,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3381,
											"end": 3396,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3381,
											"end": 3396,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3381,
											"end": 3396,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3463,
											"end": 3478,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3463,
											"end": 3478,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3463,
											"end": 3478,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3460,
											"end": 3495,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3460,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 3460,
											"end": 3495,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3491,
											"end": 3492,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3488,
											"end": 3489,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3481,
											"end": 3493,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3460,
											"end": 3495,
											"name": "tag",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 3460,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3527,
											"end": 3529,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3519,
											"end": 3525,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3515,
											"end": 3530,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3539,
											"end": 3681,
											"name": "tag",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 3539,
											"end": 3681,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3555,
											"end": 3561,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3550,
											"end": 3553,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3547,
											"end": 3562,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3539,
											"end": 3681,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3539,
											"end": 3681,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 3539,
											"end": 3681,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3621,
											"end": 3638,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3621,
											"end": 3638,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3609,
											"end": 3639,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3609,
											"end": 3639,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3659,
											"end": 3671,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3659,
											"end": 3671,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3659,
											"end": 3671,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3659,
											"end": 3671,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3572,
											"end": 3584,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3572,
											"end": 3584,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3539,
											"end": 3681,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 3539,
											"end": 3681,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3539,
											"end": 3681,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 3539,
											"end": 3681,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3699,
											"end": 3705,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 2987,
											"end": 3711,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2987,
											"end": 3711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3716,
											"end": 4330,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 3716,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3758,
											"end": 3763,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3811,
											"end": 3814,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3804,
											"end": 3808,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3796,
											"end": 3802,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3792,
											"end": 3809,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3788,
											"end": 3815,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3778,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 3778,
											"end": 3833,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3829,
											"end": 3830,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3826,
											"end": 3827,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3819,
											"end": 3831,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3778,
											"end": 3833,
											"name": "tag",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 3778,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3865,
											"end": 3871,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3852,
											"end": 3872,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3891,
											"end": 3909,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3887,
											"end": 3889,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3884,
											"end": 3910,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3881,
											"end": 3933,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3881,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 3881,
											"end": 3933,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3913,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 3913,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 3913,
											"end": 3931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3913,
											"end": 3931,
											"name": "tag",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 3913,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3962,
											"end": 3964,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3956,
											"end": 3965,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3974,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 4094,
											"end": 4098,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4025,
											"end": 4091,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 4018,
											"end": 4022,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 4014,
											"end": 4016,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4023,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4006,
											"end": 4092,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4002,
											"end": 4099,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 4000,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3974,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 3974,
											"end": 4100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3974,
											"end": 4100,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 3974,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4124,
											"end": 4126,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4116,
											"end": 4122,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4170,
											"end": 4173,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4163,
											"end": 4167,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4158,
											"end": 4160,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4150,
											"end": 4156,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4146,
											"end": 4161,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4142,
											"end": 4168,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4139,
											"end": 4174,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4136,
											"end": 4191,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4136,
											"end": 4191,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 4136,
											"end": 4191,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4187,
											"end": 4188,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4184,
											"end": 4185,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4177,
											"end": 4189,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4136,
											"end": 4191,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 4136,
											"end": 4191,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4251,
											"end": 4253,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4244,
											"end": 4248,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4236,
											"end": 4242,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4232,
											"end": 4249,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4225,
											"end": 4229,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4217,
											"end": 4223,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4213,
											"end": 4230,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4200,
											"end": 4254,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 4298,
											"end": 4299,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4274,
											"end": 4289,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4274,
											"end": 4289,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4274,
											"end": 4289,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4291,
											"end": 4295,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4270,
											"end": 4296,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4263,
											"end": 4300,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4263,
											"end": 4300,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4263,
											"end": 4300,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4263,
											"end": 4300,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4278,
											"end": 4284,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3716,
											"end": 4330,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3716,
											"end": 4330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4335,
											"end": 5278,
											"name": "tag",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4335,
											"end": 5278,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4489,
											"end": 4495,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4497,
											"end": 4503,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4505,
											"end": 4511,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4513,
											"end": 4519,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4521,
											"end": 4527,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4574,
											"end": 4577,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 4562,
											"end": 4571,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4553,
											"end": 4560,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4549,
											"end": 4572,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4545,
											"end": 4578,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4542,
											"end": 4595,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4542,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 4542,
											"end": 4595,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4591,
											"end": 4592,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4588,
											"end": 4589,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4581,
											"end": 4593,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4542,
											"end": 4595,
											"name": "tag",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 4542,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4614,
											"end": 4643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 4633,
											"end": 4642,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4614,
											"end": 4643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 4614,
											"end": 4643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4614,
											"end": 4643,
											"name": "tag",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 4614,
											"end": 4643,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4604,
											"end": 4643,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 4604,
											"end": 4643,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4662,
											"end": 4700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 4696,
											"end": 4698,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4685,
											"end": 4694,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4662,
											"end": 4700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 4662,
											"end": 4700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4662,
											"end": 4700,
											"name": "tag",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 4662,
											"end": 4700,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4700,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4700,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4751,
											"end": 4753,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4740,
											"end": 4749,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4736,
											"end": 4754,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4723,
											"end": 4755,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4774,
											"end": 4792,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4815,
											"end": 4817,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4807,
											"end": 4813,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4804,
											"end": 4818,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4801,
											"end": 4835,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4801,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 4801,
											"end": 4835,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4831,
											"end": 4832,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4828,
											"end": 4829,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4821,
											"end": 4833,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4801,
											"end": 4835,
											"name": "tag",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 4801,
											"end": 4835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4854,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 4907,
											"end": 4914,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 4898,
											"end": 4904,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4887,
											"end": 4896,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 4883,
											"end": 4905,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4854,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 4854,
											"end": 4915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4854,
											"end": 4915,
											"name": "tag",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 4854,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4844,
											"end": 4915,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 4844,
											"end": 4915,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4968,
											"end": 4970,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4957,
											"end": 4966,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4953,
											"end": 4971,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4940,
											"end": 4972,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4924,
											"end": 4972,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4924,
											"end": 4972,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4997,
											"end": 4999,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 4995,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4984,
											"end": 5000,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4981,
											"end": 5017,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4981,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 4981,
											"end": 5017,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5010,
											"end": 5011,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5003,
											"end": 5015,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4981,
											"end": 5017,
											"name": "tag",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 4981,
											"end": 5017,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5036,
											"end": 5099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 5091,
											"end": 5098,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 5080,
											"end": 5088,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5069,
											"end": 5078,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 5065,
											"end": 5089,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5036,
											"end": 5099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 5036,
											"end": 5099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5036,
											"end": 5099,
											"name": "tag",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 5036,
											"end": 5099,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 5099,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 5099,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5152,
											"end": 5155,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 5141,
											"end": 5150,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 5137,
											"end": 5156,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5157,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5108,
											"end": 5157,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5108,
											"end": 5157,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5182,
											"end": 5184,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5172,
											"end": 5180,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5169,
											"end": 5185,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5166,
											"end": 5202,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5166,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 5166,
											"end": 5202,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5198,
											"end": 5199,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5195,
											"end": 5196,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5188,
											"end": 5200,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5166,
											"end": 5202,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 5166,
											"end": 5202,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5166,
											"end": 5202,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5221,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 5264,
											"end": 5271,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 5253,
											"end": 5261,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5242,
											"end": 5251,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 5238,
											"end": 5262,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5221,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 5221,
											"end": 5272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5221,
											"end": 5272,
											"name": "tag",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 5221,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5211,
											"end": 5272,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5211,
											"end": 5272,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5211,
											"end": 5272,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4335,
											"end": 5278,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4335,
											"end": 5278,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 4335,
											"end": 5278,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4335,
											"end": 5278,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4335,
											"end": 5278,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 4335,
											"end": 5278,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4335,
											"end": 5278,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4335,
											"end": 5278,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4335,
											"end": 5278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5514,
											"end": 6722,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 5514,
											"end": 6722,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5632,
											"end": 5638,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5640,
											"end": 5646,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5693,
											"end": 5695,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5681,
											"end": 5690,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5672,
											"end": 5679,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5668,
											"end": 5691,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5664,
											"end": 5696,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5661,
											"end": 5713,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5661,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 5661,
											"end": 5713,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5709,
											"end": 5710,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5706,
											"end": 5707,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5699,
											"end": 5711,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5661,
											"end": 5713,
											"name": "tag",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 5661,
											"end": 5713,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5749,
											"end": 5758,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5736,
											"end": 5759,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5778,
											"end": 5796,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5819,
											"end": 5821,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5811,
											"end": 5817,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5808,
											"end": 5822,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5805,
											"end": 5839,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5805,
											"end": 5839,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 5805,
											"end": 5839,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5835,
											"end": 5836,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5832,
											"end": 5833,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5825,
											"end": 5837,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5805,
											"end": 5839,
											"name": "tag",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 5805,
											"end": 5839,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5873,
											"end": 5879,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5862,
											"end": 5871,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5858,
											"end": 5880,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5848,
											"end": 5880,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5848,
											"end": 5880,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5918,
											"end": 5925,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5911,
											"end": 5915,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 5907,
											"end": 5909,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5903,
											"end": 5916,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5899,
											"end": 5926,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5889,
											"end": 5944,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 5889,
											"end": 5944,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5940,
											"end": 5941,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5937,
											"end": 5938,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5930,
											"end": 5942,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5889,
											"end": 5944,
											"name": "tag",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 5889,
											"end": 5944,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5976,
											"end": 5978,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5963,
											"end": 5979,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5998,
											"end": 6002,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6021,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 6061,
											"end": 6063,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6021,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 6021,
											"end": 6064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6021,
											"end": 6064,
											"name": "tag",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 6021,
											"end": 6064,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6093,
											"end": 6095,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6087,
											"end": 6096,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6105,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 6133,
											"end": 6135,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6125,
											"end": 6131,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6105,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 6105,
											"end": 6136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6105,
											"end": 6136,
											"name": "tag",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 6105,
											"end": 6136,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6171,
											"end": 6189,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6171,
											"end": 6189,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6171,
											"end": 6189,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6259,
											"end": 6260,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 6255,
											"end": 6265,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6255,
											"end": 6265,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6255,
											"end": 6265,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6255,
											"end": 6265,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 6247,
											"end": 6266,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6247,
											"end": 6266,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6243,
											"end": 6271,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6243,
											"end": 6271,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6243,
											"end": 6271,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6205,
											"end": 6220,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6205,
											"end": 6220,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6205,
											"end": 6220,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6205,
											"end": 6220,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6283,
											"end": 6302,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 6283,
											"end": 6302,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6283,
											"end": 6302,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6280,
											"end": 6319,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6280,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 6280,
											"end": 6319,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6315,
											"end": 6316,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6312,
											"end": 6313,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6305,
											"end": 6317,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6280,
											"end": 6319,
											"name": "tag",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 6280,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6339,
											"end": 6350,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6339,
											"end": 6350,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6339,
											"end": 6350,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6339,
											"end": 6350,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6359,
											"end": 6507,
											"name": "tag",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 6359,
											"end": 6507,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6375,
											"end": 6381,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6370,
											"end": 6373,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6367,
											"end": 6382,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 6359,
											"end": 6507,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6359,
											"end": 6507,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 6359,
											"end": 6507,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6441,
											"end": 6464,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 6460,
											"end": 6463,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6441,
											"end": 6464,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 6441,
											"end": 6464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6441,
											"end": 6464,
											"name": "tag",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 6441,
											"end": 6464,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6429,
											"end": 6465,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6429,
											"end": 6465,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6392,
											"end": 6404,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6392,
											"end": 6404,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6392,
											"end": 6404,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6392,
											"end": 6404,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6485,
											"end": 6497,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6485,
											"end": 6497,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6485,
											"end": 6497,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6485,
											"end": 6497,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6359,
											"end": 6507,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 6359,
											"end": 6507,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6359,
											"end": 6507,
											"name": "tag",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 6359,
											"end": 6507,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6526,
											"end": 6532,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6570,
											"end": 6588,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6570,
											"end": 6588,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6557,
											"end": 6589,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6557,
											"end": 6589,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6601,
											"end": 6617,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6601,
											"end": 6617,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6601,
											"end": 6617,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6598,
											"end": 6634,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6598,
											"end": 6634,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 6598,
											"end": 6634,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6630,
											"end": 6631,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6627,
											"end": 6628,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6620,
											"end": 6632,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6598,
											"end": 6634,
											"name": "tag",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 6598,
											"end": 6634,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6598,
											"end": 6634,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6653,
											"end": 6716,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 6708,
											"end": 6715,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6697,
											"end": 6705,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6686,
											"end": 6695,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6682,
											"end": 6706,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6653,
											"end": 6716,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 6653,
											"end": 6716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6653,
											"end": 6716,
											"name": "tag",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 6653,
											"end": 6716,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6643,
											"end": 6716,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6643,
											"end": 6716,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6643,
											"end": 6716,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5514,
											"end": 6722,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5514,
											"end": 6722,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5514,
											"end": 6722,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5514,
											"end": 6722,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5514,
											"end": 6722,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5514,
											"end": 6722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6727,
											"end": 7162,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 6727,
											"end": 7162,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6780,
											"end": 6783,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6818,
											"end": 6823,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6812,
											"end": 6824,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6845,
											"end": 6851,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6840,
											"end": 6843,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6833,
											"end": 6852,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6871,
											"end": 6875,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6900,
											"end": 6902,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6895,
											"end": 6898,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6891,
											"end": 6903,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6884,
											"end": 6903,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6884,
											"end": 6903,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6937,
											"end": 6939,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6930,
											"end": 6935,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6926,
											"end": 6940,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6958,
											"end": 6959,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6968,
											"end": 7137,
											"name": "tag",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 6968,
											"end": 7137,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6982,
											"end": 6988,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6979,
											"end": 6980,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6976,
											"end": 6989,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 6968,
											"end": 7137,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6968,
											"end": 7137,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 6968,
											"end": 7137,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7043,
											"end": 7056,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7043,
											"end": 7056,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7031,
											"end": 7057,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 7031,
											"end": 7057,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7077,
											"end": 7089,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 7077,
											"end": 7089,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7077,
											"end": 7089,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7077,
											"end": 7089,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 7112,
											"end": 7127,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7112,
											"end": 7127,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7112,
											"end": 7127,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7112,
											"end": 7127,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7004,
											"end": 7005,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 6997,
											"end": 7006,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6968,
											"end": 7137,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 6968,
											"end": 7137,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6968,
											"end": 7137,
											"name": "tag",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 6968,
											"end": 7137,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7153,
											"end": 7156,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 7153,
											"end": 7156,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 6727,
											"end": 7162,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6727,
											"end": 7162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7167,
											"end": 7428,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 7167,
											"end": 7428,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7346,
											"end": 7348,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7335,
											"end": 7344,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7328,
											"end": 7349,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7309,
											"end": 7313,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7366,
											"end": 7422,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 7418,
											"end": 7420,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7407,
											"end": 7416,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7403,
											"end": 7421,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7395,
											"end": 7401,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7366,
											"end": 7422,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 7366,
											"end": 7422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7433,
											"end": 7781,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 7433,
											"end": 7781,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7485,
											"end": 7493,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7495,
											"end": 7501,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7549,
											"end": 7552,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7546,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 7534,
											"end": 7540,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7530,
											"end": 7547,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7526,
											"end": 7553,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7516,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 7516,
											"end": 7571,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7567,
											"end": 7568,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7564,
											"end": 7565,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7557,
											"end": 7569,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7516,
											"end": 7571,
											"name": "tag",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 7516,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7590,
											"end": 7610,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7590,
											"end": 7610,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7633,
											"end": 7651,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7622,
											"end": 7652,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7622,
											"end": 7652,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7619,
											"end": 7669,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7619,
											"end": 7669,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 7619,
											"end": 7669,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7665,
											"end": 7666,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7662,
											"end": 7663,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7655,
											"end": 7667,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7619,
											"end": 7669,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 7619,
											"end": 7669,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7702,
											"end": 7706,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7694,
											"end": 7700,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7690,
											"end": 7707,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7678,
											"end": 7707,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7678,
											"end": 7707,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7754,
											"end": 7757,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7747,
											"end": 7751,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7738,
											"end": 7744,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7730,
											"end": 7736,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7726,
											"end": 7745,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7722,
											"end": 7752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7719,
											"end": 7758,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7716,
											"end": 7775,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7716,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 7716,
											"end": 7775,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7771,
											"end": 7772,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7769,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7761,
											"end": 7773,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7716,
											"end": 7775,
											"name": "tag",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 7716,
											"end": 7775,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7433,
											"end": 7781,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7433,
											"end": 7781,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7433,
											"end": 7781,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7433,
											"end": 7781,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7433,
											"end": 7781,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7433,
											"end": 7781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7786,
											"end": 8197,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 7786,
											"end": 8197,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7857,
											"end": 7863,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7865,
											"end": 7871,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7918,
											"end": 7920,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7906,
											"end": 7915,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7897,
											"end": 7904,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7893,
											"end": 7916,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7889,
											"end": 7921,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7886,
											"end": 7938,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7886,
											"end": 7938,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 7886,
											"end": 7938,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7934,
											"end": 7935,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7931,
											"end": 7932,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7924,
											"end": 7936,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7886,
											"end": 7938,
											"name": "tag",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 7886,
											"end": 7938,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7974,
											"end": 7983,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7961,
											"end": 7984,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8007,
											"end": 8025,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7999,
											"end": 8005,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7996,
											"end": 8026,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7993,
											"end": 8043,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7993,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 7993,
											"end": 8043,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8039,
											"end": 8040,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8036,
											"end": 8037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8029,
											"end": 8041,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7993,
											"end": 8043,
											"name": "tag",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 7993,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8078,
											"end": 8137,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 8129,
											"end": 8136,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8120,
											"end": 8126,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8109,
											"end": 8118,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8105,
											"end": 8127,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8078,
											"end": 8137,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 8078,
											"end": 8137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8078,
											"end": 8137,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 8078,
											"end": 8137,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8156,
											"end": 8164,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8156,
											"end": 8164,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 8052,
											"end": 8137,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8052,
											"end": 8137,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7786,
											"end": 8197,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7786,
											"end": 8197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8202,
											"end": 8549,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 8202,
											"end": 8549,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8267,
											"end": 8273,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8275,
											"end": 8281,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8328,
											"end": 8330,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8316,
											"end": 8325,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8307,
											"end": 8314,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8303,
											"end": 8326,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8299,
											"end": 8331,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8296,
											"end": 8348,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8296,
											"end": 8348,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 8296,
											"end": 8348,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8344,
											"end": 8345,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8341,
											"end": 8342,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8334,
											"end": 8346,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8296,
											"end": 8348,
											"name": "tag",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 8296,
											"end": 8348,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8367,
											"end": 8396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 8386,
											"end": 8395,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8367,
											"end": 8396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 8367,
											"end": 8396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8367,
											"end": 8396,
											"name": "tag",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 8367,
											"end": 8396,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8357,
											"end": 8396,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8357,
											"end": 8396,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8446,
											"end": 8448,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8435,
											"end": 8444,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8431,
											"end": 8449,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8418,
											"end": 8450,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8493,
											"end": 8498,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8486,
											"end": 8499,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8479,
											"end": 8500,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8472,
											"end": 8477,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8469,
											"end": 8501,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 8459,
											"end": 8519,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 8459,
											"end": 8519,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8515,
											"end": 8516,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8512,
											"end": 8513,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8505,
											"end": 8517,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8459,
											"end": 8519,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 8459,
											"end": 8519,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8538,
											"end": 8543,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8528,
											"end": 8543,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8528,
											"end": 8543,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8528,
											"end": 8543,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8202,
											"end": 8549,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8202,
											"end": 8549,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8202,
											"end": 8549,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8202,
											"end": 8549,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8202,
											"end": 8549,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8202,
											"end": 8549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8554,
											"end": 9176,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 8554,
											"end": 9176,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8652,
											"end": 8658,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8660,
											"end": 8666,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8668,
											"end": 8674,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8676,
											"end": 8682,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8684,
											"end": 8690,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8737,
											"end": 8740,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 8725,
											"end": 8734,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8716,
											"end": 8723,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8712,
											"end": 8735,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8708,
											"end": 8741,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8705,
											"end": 8758,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8705,
											"end": 8758,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 8705,
											"end": 8758,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8754,
											"end": 8755,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8751,
											"end": 8752,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8744,
											"end": 8756,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8705,
											"end": 8758,
											"name": "tag",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 8705,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8777,
											"end": 8806,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 8796,
											"end": 8805,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8777,
											"end": 8806,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 8777,
											"end": 8806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8777,
											"end": 8806,
											"name": "tag",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 8777,
											"end": 8806,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8767,
											"end": 8806,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 8767,
											"end": 8806,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8853,
											"end": 8855,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8842,
											"end": 8851,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8838,
											"end": 8856,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8825,
											"end": 8857,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8815,
											"end": 8857,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 8815,
											"end": 8857,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8904,
											"end": 8906,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8893,
											"end": 8902,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8889,
											"end": 8907,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8876,
											"end": 8908,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8866,
											"end": 8908,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8866,
											"end": 8908,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8959,
											"end": 8961,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 8948,
											"end": 8957,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8944,
											"end": 8962,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8931,
											"end": 8963,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8986,
											"end": 9004,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8978,
											"end": 8984,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8975,
											"end": 9005,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8972,
											"end": 9022,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8972,
											"end": 9022,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 8972,
											"end": 9022,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9018,
											"end": 9019,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9015,
											"end": 9016,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9008,
											"end": 9020,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8972,
											"end": 9022,
											"name": "tag",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 8972,
											"end": 9022,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9057,
											"end": 9116,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 9108,
											"end": 9115,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9099,
											"end": 9105,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9088,
											"end": 9097,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 9084,
											"end": 9106,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9057,
											"end": 9116,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 9057,
											"end": 9116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9057,
											"end": 9116,
											"name": "tag",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 9057,
											"end": 9116,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8554,
											"end": 9176,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 8554,
											"end": 9176,
											"name": "SWAP10",
											"source": 12
										},
										{
											"begin": 8554,
											"end": 9176,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 8554,
											"end": 9176,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8554,
											"end": 9176,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 8554,
											"end": 9176,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9135,
											"end": 9143,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9135,
											"end": 9143,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 9031,
											"end": 9116,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 8554,
											"end": 9176,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8554,
											"end": 9176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9181,
											"end": 9367,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 9181,
											"end": 9367,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9240,
											"end": 9246,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9293,
											"end": 9295,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9281,
											"end": 9290,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9272,
											"end": 9279,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9268,
											"end": 9291,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9264,
											"end": 9296,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 9261,
											"end": 9313,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9261,
											"end": 9313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 9261,
											"end": 9313,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9309,
											"end": 9310,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9306,
											"end": 9307,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9299,
											"end": 9311,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9261,
											"end": 9313,
											"name": "tag",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 9261,
											"end": 9313,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9332,
											"end": 9361,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 9351,
											"end": 9360,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9332,
											"end": 9361,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 9332,
											"end": 9361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9372,
											"end": 9632,
											"name": "tag",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 9372,
											"end": 9632,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9440,
											"end": 9446,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9448,
											"end": 9454,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9501,
											"end": 9503,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9489,
											"end": 9498,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9480,
											"end": 9487,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9476,
											"end": 9499,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9472,
											"end": 9504,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 9469,
											"end": 9521,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9469,
											"end": 9521,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 9469,
											"end": 9521,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9517,
											"end": 9518,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9514,
											"end": 9515,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9507,
											"end": 9519,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9469,
											"end": 9521,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 9469,
											"end": 9521,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9540,
											"end": 9569,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 9559,
											"end": 9568,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9540,
											"end": 9569,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 9540,
											"end": 9569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9540,
											"end": 9569,
											"name": "tag",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 9540,
											"end": 9569,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9530,
											"end": 9569,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9530,
											"end": 9569,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9588,
											"end": 9626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 9622,
											"end": 9624,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9611,
											"end": 9620,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9607,
											"end": 9625,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9588,
											"end": 9626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 9588,
											"end": 9626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9588,
											"end": 9626,
											"name": "tag",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 9588,
											"end": 9626,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9578,
											"end": 9626,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9578,
											"end": 9626,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9372,
											"end": 9632,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9372,
											"end": 9632,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9372,
											"end": 9632,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9372,
											"end": 9632,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9372,
											"end": 9632,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9372,
											"end": 9632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9637,
											"end": 10243,
											"name": "tag",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 9637,
											"end": 10243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9741,
											"end": 9747,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9749,
											"end": 9755,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9763,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9765,
											"end": 9771,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9773,
											"end": 9779,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9826,
											"end": 9829,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 9814,
											"end": 9823,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9805,
											"end": 9812,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9801,
											"end": 9824,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9797,
											"end": 9830,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 9794,
											"end": 9847,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9794,
											"end": 9847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 9794,
											"end": 9847,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9843,
											"end": 9844,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9840,
											"end": 9841,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9833,
											"end": 9845,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9794,
											"end": 9847,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 9794,
											"end": 9847,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9866,
											"end": 9895,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 9885,
											"end": 9894,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9866,
											"end": 9895,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 9866,
											"end": 9895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9866,
											"end": 9895,
											"name": "tag",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 9866,
											"end": 9895,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9856,
											"end": 9895,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 9856,
											"end": 9895,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9914,
											"end": 9952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 9948,
											"end": 9950,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9937,
											"end": 9946,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9933,
											"end": 9951,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9914,
											"end": 9952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 9914,
											"end": 9952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9914,
											"end": 9952,
											"name": "tag",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 9914,
											"end": 9952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9904,
											"end": 9952,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9904,
											"end": 9952,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9999,
											"end": 10001,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9988,
											"end": 9997,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9984,
											"end": 10002,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9971,
											"end": 10003,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 9961,
											"end": 10003,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9961,
											"end": 10003,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10050,
											"end": 10052,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 10039,
											"end": 10048,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10035,
											"end": 10053,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10022,
											"end": 10054,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 10012,
											"end": 10054,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10012,
											"end": 10054,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10105,
											"end": 10108,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 10094,
											"end": 10103,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10090,
											"end": 10109,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10077,
											"end": 10110,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 10133,
											"end": 10151,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10125,
											"end": 10131,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10122,
											"end": 10152,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 10119,
											"end": 10169,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10119,
											"end": 10169,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 10119,
											"end": 10169,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10165,
											"end": 10166,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10162,
											"end": 10163,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10155,
											"end": 10167,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10119,
											"end": 10169,
											"name": "tag",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 10119,
											"end": 10169,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10188,
											"end": 10237,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 10229,
											"end": 10236,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 10220,
											"end": 10226,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10209,
											"end": 10218,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 10205,
											"end": 10227,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10188,
											"end": 10237,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 10188,
											"end": 10237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10660,
											"end": 10845,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 10660,
											"end": 10845,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10702,
											"end": 10705,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10740,
											"end": 10745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10734,
											"end": 10746,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10755,
											"end": 10807,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 10800,
											"end": 10806,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10795,
											"end": 10798,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10788,
											"end": 10792,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10781,
											"end": 10786,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10777,
											"end": 10793,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10755,
											"end": 10807,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 10755,
											"end": 10807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10755,
											"end": 10807,
											"name": "tag",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 10755,
											"end": 10807,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10823,
											"end": 10839,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10823,
											"end": 10839,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10823,
											"end": 10839,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10823,
											"end": 10839,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10823,
											"end": 10839,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10660,
											"end": 10845,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10660,
											"end": 10845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10850,
											"end": 11497,
											"name": "tag",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 10850,
											"end": 11497,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11130,
											"end": 11133,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11168,
											"end": 11174,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11162,
											"end": 11175,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11184,
											"end": 11237,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 11230,
											"end": 11236,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11225,
											"end": 11228,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11218,
											"end": 11222,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11210,
											"end": 11216,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 11206,
											"end": 11223,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11184,
											"end": 11237,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 11184,
											"end": 11237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11184,
											"end": 11237,
											"name": "tag",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 11184,
											"end": 11237,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11300,
											"end": 11313,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11300,
											"end": 11313,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11259,
											"end": 11275,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11259,
											"end": 11275,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11259,
											"end": 11275,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11259,
											"end": 11275,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11322,
											"end": 11379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 11300,
											"end": 11313,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11259,
											"end": 11275,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11356,
											"end": 11360,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11344,
											"end": 11361,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 11344,
											"end": 11361,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11322,
											"end": 11379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 11322,
											"end": 11379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11322,
											"end": 11379,
											"name": "tag",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 11322,
											"end": 11379,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11444,
											"end": 11460,
											"name": "PUSH",
											"source": 12,
											"value": "2F6D657461646174612E6A736F6E000000000000000000000000000000000000"
										},
										{
											"begin": 11401,
											"end": 11421,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11401,
											"end": 11421,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11430,
											"end": 11461,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11430,
											"end": 11461,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11430,
											"end": 11461,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11488,
											"end": 11490,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 11477,
											"end": 11491,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11477,
											"end": 11491,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 10850,
											"end": 11497,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10850,
											"end": 11497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12331,
											"end": 12515,
											"name": "tag",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 12331,
											"end": 12515,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12383,
											"end": 12460,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12380,
											"end": 12381,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12373,
											"end": 12461,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12480,
											"end": 12484,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 12477,
											"end": 12478,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 12470,
											"end": 12485,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12504,
											"end": 12508,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 12501,
											"end": 12502,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12494,
											"end": 12509,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 12520,
											"end": 12704,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 12520,
											"end": 12704,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12572,
											"end": 12649,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12569,
											"end": 12570,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12562,
											"end": 12650,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12669,
											"end": 12673,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 12666,
											"end": 12667,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 12659,
											"end": 12674,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12693,
											"end": 12697,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 12690,
											"end": 12691,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12683,
											"end": 12698,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 12709,
											"end": 12904,
											"name": "tag",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 12709,
											"end": 12904,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12748,
											"end": 12751,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12779,
											"end": 12845,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12772,
											"end": 12777,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12769,
											"end": 12846,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12766,
											"end": 12869,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 12766,
											"end": 12869,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12849,
											"end": 12867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 12849,
											"end": 12867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 12849,
											"end": 12867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12849,
											"end": 12867,
											"name": "tag",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 12849,
											"end": 12867,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12896,
											"end": 12897,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12885,
											"end": 12898,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12885,
											"end": 12898,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12709,
											"end": 12904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13262,
											"end": 13699,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 13262,
											"end": 13699,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13341,
											"end": 13342,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 13337,
											"end": 13349,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13337,
											"end": 13349,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13337,
											"end": 13349,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 13337,
											"end": 13349,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13384,
											"end": 13396,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13384,
											"end": 13396,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13384,
											"end": 13396,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13405,
											"end": 13466,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 13405,
											"end": 13466,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13459,
											"end": 13463,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 13451,
											"end": 13457,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13447,
											"end": 13464,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13437,
											"end": 13464,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13437,
											"end": 13464,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13405,
											"end": 13466,
											"name": "tag",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 13405,
											"end": 13466,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13512,
											"end": 13514,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13504,
											"end": 13510,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13501,
											"end": 13515,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 13481,
											"end": 13499,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13478,
											"end": 13516,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13475,
											"end": 13693,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 13475,
											"end": 13693,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13549,
											"end": 13626,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13546,
											"end": 13547,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13539,
											"end": 13627,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13650,
											"end": 13654,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 13647,
											"end": 13648,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 13640,
											"end": 13655,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13678,
											"end": 13682,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 13675,
											"end": 13676,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13668,
											"end": 13683,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 13475,
											"end": 13693,
											"name": "tag",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 13475,
											"end": 13693,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13475,
											"end": 13693,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13262,
											"end": 13699,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13262,
											"end": 13699,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13262,
											"end": 13699,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13262,
											"end": 13699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14646,
											"end": 15935,
											"name": "tag",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 14646,
											"end": 15935,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14822,
											"end": 14825,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14851,
											"end": 14852,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14884,
											"end": 14890,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14878,
											"end": 14891,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 14914,
											"end": 14917,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14936,
											"end": 14937,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 14964,
											"end": 14973,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14960,
											"end": 14962,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14956,
											"end": 14974,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 14946,
											"end": 14974,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14946,
											"end": 14974,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15024,
											"end": 15026,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15013,
											"end": 15022,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15009,
											"end": 15027,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 15046,
											"end": 15064,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15036,
											"end": 15097,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 15036,
											"end": 15097,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15090,
											"end": 15094,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 15082,
											"end": 15088,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15078,
											"end": 15095,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 15068,
											"end": 15095,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15068,
											"end": 15095,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15036,
											"end": 15097,
											"name": "tag",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 15036,
											"end": 15097,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15116,
											"end": 15118,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15164,
											"end": 15166,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15156,
											"end": 15162,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15153,
											"end": 15167,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 15133,
											"end": 15151,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15130,
											"end": 15168,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15127,
											"end": 15349,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 15127,
											"end": 15349,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15203,
											"end": 15280,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15198,
											"end": 15201,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 15191,
											"end": 15281,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15304,
											"end": 15308,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 15301,
											"end": 15302,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 15294,
											"end": 15309,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15334,
											"end": 15338,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 15329,
											"end": 15332,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 15322,
											"end": 15339,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 15127,
											"end": 15349,
											"name": "tag",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 15127,
											"end": 15349,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15365,
											"end": 15383,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15392,
											"end": 15554,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15392,
											"end": 15554,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15392,
											"end": 15554,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 15392,
											"end": 15554,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15568,
											"end": 15569,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 15563,
											"end": 15883,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15563,
											"end": 15883,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 15563,
											"end": 15883,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 15563,
											"end": 15883,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15358,
											"end": 15883,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 15358,
											"end": 15883,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15392,
											"end": 15554,
											"name": "tag",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 15392,
											"end": 15554,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15440,
											"end": 15506,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 15429,
											"end": 15438,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 15425,
											"end": 15507,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 15420,
											"end": 15423,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 15413,
											"end": 15508,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15537,
											"end": 15543,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15532,
											"end": 15535,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 15528,
											"end": 15544,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15521,
											"end": 15544,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 15521,
											"end": 15544,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15392,
											"end": 15554,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 15392,
											"end": 15554,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15563,
											"end": 15883,
											"name": "tag",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 15563,
											"end": 15883,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14593,
											"end": 14594,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14586,
											"end": 14600,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 14586,
											"end": 14600,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14586,
											"end": 14600,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14630,
											"end": 14634,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14617,
											"end": 14635,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14617,
											"end": 14635,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 15658,
											"end": 15659,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15672,
											"end": 15837,
											"name": "tag",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 15672,
											"end": 15837,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15686,
											"end": 15692,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 15683,
											"end": 15684,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15680,
											"end": 15693,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 15672,
											"end": 15837,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15672,
											"end": 15837,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 15672,
											"end": 15837,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15764,
											"end": 15778,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15764,
											"end": 15778,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 15751,
											"end": 15762,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 15751,
											"end": 15762,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15751,
											"end": 15762,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15744,
											"end": 15779,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15807,
											"end": 15823,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15807,
											"end": 15823,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15807,
											"end": 15823,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15807,
											"end": 15823,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15701,
											"end": 15711,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15701,
											"end": 15711,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15672,
											"end": 15837,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 15672,
											"end": 15837,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15672,
											"end": 15837,
											"name": "tag",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 15672,
											"end": 15837,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15676,
											"end": 15679,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15676,
											"end": 15679,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15866,
											"end": 15872,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15861,
											"end": 15864,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 15857,
											"end": 15873,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15850,
											"end": 15873,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 15850,
											"end": 15873,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15358,
											"end": 15883,
											"name": "tag",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 15358,
											"end": 15883,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15358,
											"end": 15883,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15358,
											"end": 15883,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15358,
											"end": 15883,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15358,
											"end": 15883,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15358,
											"end": 15883,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15358,
											"end": 15883,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15899,
											"end": 15929,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 15925,
											"end": 15928,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15917,
											"end": 15923,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15899,
											"end": 15929,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 15899,
											"end": 15929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15899,
											"end": 15929,
											"name": "tag",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 15899,
											"end": 15929,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15892,
											"end": 15929,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 14646,
											"end": 15935,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14646,
											"end": 15935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17166,
											"end": 17294,
											"name": "tag",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 17166,
											"end": 17294,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17206,
											"end": 17209,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17237,
											"end": 17238,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17233,
											"end": 17239,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 17230,
											"end": 17231,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17227,
											"end": 17240,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 17224,
											"end": 17263,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17224,
											"end": 17263,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 17224,
											"end": 17263,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17243,
											"end": 17261,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 17243,
											"end": 17261,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 17243,
											"end": 17261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17243,
											"end": 17261,
											"name": "tag",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 17243,
											"end": 17261,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17279,
											"end": 17288,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17279,
											"end": 17288,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17166,
											"end": 17294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17299,
											"end": 17764,
											"name": "tag",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 17299,
											"end": 17764,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17556,
											"end": 17558,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 17545,
											"end": 17554,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17538,
											"end": 17559,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17519,
											"end": 17523,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17582,
											"end": 17638,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 17634,
											"end": 17636,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 17623,
											"end": 17632,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17619,
											"end": 17637,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17611,
											"end": 17617,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17582,
											"end": 17638,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 17582,
											"end": 17638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17582,
											"end": 17638,
											"name": "tag",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 17582,
											"end": 17638,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17686,
											"end": 17695,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17678,
											"end": 17684,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17674,
											"end": 17696,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17669,
											"end": 17671,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17658,
											"end": 17667,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17654,
											"end": 17672,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17647,
											"end": 17697,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17714,
											"end": 17758,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 17751,
											"end": 17757,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17743,
											"end": 17749,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17714,
											"end": 17758,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 17714,
											"end": 17758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18834,
											"end": 19695,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 18834,
											"end": 19695,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19156,
											"end": 19160,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19185,
											"end": 19227,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19266,
											"end": 19268,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19258,
											"end": 19264,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 19254,
											"end": 19269,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 19243,
											"end": 19252,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19236,
											"end": 19270,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19318,
											"end": 19320,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19310,
											"end": 19316,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 19306,
											"end": 19321,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 19301,
											"end": 19303,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19290,
											"end": 19299,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19286,
											"end": 19304,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19279,
											"end": 19322,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19279,
											"end": 19322,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19358,
											"end": 19361,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 19353,
											"end": 19355,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 19342,
											"end": 19351,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19338,
											"end": 19356,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19331,
											"end": 19362,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19385,
											"end": 19442,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 19437,
											"end": 19440,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 19426,
											"end": 19435,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19422,
											"end": 19441,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19414,
											"end": 19420,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 19385,
											"end": 19442,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 19385,
											"end": 19442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19385,
											"end": 19442,
											"name": "tag",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 19385,
											"end": 19442,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19490,
											"end": 19499,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19482,
											"end": 19488,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19478,
											"end": 19500,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19473,
											"end": 19475,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 19462,
											"end": 19471,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19458,
											"end": 19476,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19451,
											"end": 19501,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19524,
											"end": 19568,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 19561,
											"end": 19567,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19553,
											"end": 19559,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 19524,
											"end": 19568,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 19524,
											"end": 19568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19524,
											"end": 19568,
											"name": "tag",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 19524,
											"end": 19568,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19510,
											"end": 19568,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19510,
											"end": 19568,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19617,
											"end": 19626,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19609,
											"end": 19615,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19605,
											"end": 19627,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19599,
											"end": 19602,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 19588,
											"end": 19597,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19584,
											"end": 19603,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19577,
											"end": 19628,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19645,
											"end": 19689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 19682,
											"end": 19688,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19674,
											"end": 19680,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 19645,
											"end": 19689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 19645,
											"end": 19689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19645,
											"end": 19689,
											"name": "tag",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 19645,
											"end": 19689,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19637,
											"end": 19689,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 18834,
											"end": 19695,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18834,
											"end": 19695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19700,
											"end": 19949,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 19700,
											"end": 19949,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19769,
											"end": 19775,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19822,
											"end": 19824,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19810,
											"end": 19819,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19801,
											"end": 19808,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19797,
											"end": 19820,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19793,
											"end": 19825,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 19790,
											"end": 19842,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 19790,
											"end": 19842,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 19790,
											"end": 19842,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19838,
											"end": 19839,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19835,
											"end": 19836,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19828,
											"end": 19840,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 19790,
											"end": 19842,
											"name": "tag",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 19790,
											"end": 19842,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19870,
											"end": 19879,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19864,
											"end": 19880,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 19889,
											"end": 19919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 19913,
											"end": 19918,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19889,
											"end": 19919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 19889,
											"end": 19919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19954,
											"end": 20133,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 19954,
											"end": 20133,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19989,
											"end": 19992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20031,
											"end": 20032,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 20013,
											"end": 20029,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 20010,
											"end": 20033,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 20007,
											"end": 20127,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 20007,
											"end": 20127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 20007,
											"end": 20127,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 20077,
											"end": 20078,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 20074,
											"end": 20075,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20071,
											"end": 20072,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 20056,
											"end": 20079,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20114,
											"end": 20115,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20108,
											"end": 20116,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 20103,
											"end": 20106,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 20099,
											"end": 20117,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 20007,
											"end": 20127,
											"name": "tag",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 20007,
											"end": 20127,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19954,
											"end": 20133,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19954,
											"end": 20133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20138,
											"end": 20869,
											"name": "tag",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 20138,
											"end": 20869,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20177,
											"end": 20180,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20219,
											"end": 20223,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 20201,
											"end": 20217,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 20198,
											"end": 20224,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 20195,
											"end": 20234,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 20195,
											"end": 20234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 20195,
											"end": 20234,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 20138,
											"end": 20869,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20138,
											"end": 20869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20195,
											"end": 20234,
											"name": "tag",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 20195,
											"end": 20234,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20261,
											"end": 20263,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 20255,
											"end": 20264,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 20283,
											"end": 20349,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC"
										},
										{
											"begin": 20404,
											"end": 20406,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 20386,
											"end": 20402,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 20382,
											"end": 20407,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20379,
											"end": 20380,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 20373,
											"end": 20377,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20358,
											"end": 20408,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 20437,
											"end": 20441,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20431,
											"end": 20442,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 20461,
											"end": 20477,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 20496,
											"end": 20514,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20567,
											"end": 20569,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20560,
											"end": 20564,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 20552,
											"end": 20558,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20548,
											"end": 20565,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20545,
											"end": 20570,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 20540,
											"end": 20542,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20532,
											"end": 20538,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20529,
											"end": 20543,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 20526,
											"end": 20571,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 20523,
											"end": 20581,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 20523,
											"end": 20581,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 20523,
											"end": 20581,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 20574,
											"end": 20579,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20574,
											"end": 20579,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20574,
											"end": 20579,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20574,
											"end": 20579,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20574,
											"end": 20579,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20138,
											"end": 20869,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20138,
											"end": 20869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20523,
											"end": 20581,
											"name": "tag",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 20523,
											"end": 20581,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20611,
											"end": 20617,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20605,
											"end": 20609,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 20601,
											"end": 20618,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20590,
											"end": 20618,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20590,
											"end": 20618,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20647,
											"end": 20650,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20641,
											"end": 20651,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 20674,
											"end": 20676,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20666,
											"end": 20672,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20663,
											"end": 20677,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 20660,
											"end": 20687,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 20660,
											"end": 20687,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 20660,
											"end": 20687,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 20680,
											"end": 20685,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20680,
											"end": 20685,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20680,
											"end": 20685,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20680,
											"end": 20685,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20680,
											"end": 20685,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20680,
											"end": 20685,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20138,
											"end": 20869,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20138,
											"end": 20869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20660,
											"end": 20687,
											"name": "tag",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 20660,
											"end": 20687,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20764,
											"end": 20766,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20745,
											"end": 20761,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 20739,
											"end": 20743,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 20735,
											"end": 20762,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20731,
											"end": 20767,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20724,
											"end": 20728,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20715,
											"end": 20721,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20710,
											"end": 20713,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 20706,
											"end": 20722,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20702,
											"end": 20729,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20699,
											"end": 20768,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 20696,
											"end": 20778,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 20696,
											"end": 20778,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 20696,
											"end": 20778,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 20771,
											"end": 20776,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20771,
											"end": 20776,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20771,
											"end": 20776,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20771,
											"end": 20776,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20771,
											"end": 20776,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20771,
											"end": 20776,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20138,
											"end": 20869,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20138,
											"end": 20869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20696,
											"end": 20778,
											"name": "tag",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 20696,
											"end": 20778,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20787,
											"end": 20844,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 20838,
											"end": 20842,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20829,
											"end": 20835,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20821,
											"end": 20827,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 20817,
											"end": 20836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20813,
											"end": 20843,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20807,
											"end": 20811,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 20787,
											"end": 20844,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 20787,
											"end": 20844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20787,
											"end": 20844,
											"name": "tag",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 20787,
											"end": 20844,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20860,
											"end": 20863,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20860,
											"end": 20863,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 20138,
											"end": 20869,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20138,
											"end": 20869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21704,
											"end": 22299,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 21704,
											"end": 22299,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21926,
											"end": 21930,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21955,
											"end": 21997,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22036,
											"end": 22038,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 22028,
											"end": 22034,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 22024,
											"end": 22039,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 22013,
											"end": 22022,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22006,
											"end": 22040,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22088,
											"end": 22090,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 22080,
											"end": 22086,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 22076,
											"end": 22091,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 22071,
											"end": 22073,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22060,
											"end": 22069,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 22056,
											"end": 22074,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22049,
											"end": 22092,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22049,
											"end": 22092,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22128,
											"end": 22134,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 22123,
											"end": 22125,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 22112,
											"end": 22121,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22108,
											"end": 22126,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22101,
											"end": 22135,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22171,
											"end": 22177,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22166,
											"end": 22168,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 22155,
											"end": 22164,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22151,
											"end": 22169,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22144,
											"end": 22178,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22215,
											"end": 22218,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 22209,
											"end": 22212,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 22198,
											"end": 22207,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22194,
											"end": 22213,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22187,
											"end": 22219,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22236,
											"end": 22293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 22288,
											"end": 22291,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 22277,
											"end": 22286,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22273,
											"end": 22292,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22265,
											"end": 22271,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 22236,
											"end": 22293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 22236,
											"end": 22293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22236,
											"end": 22293,
											"name": "tag",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 22236,
											"end": 22293,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22228,
											"end": 22293,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 21704,
											"end": 22299,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21704,
											"end": 22299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/GU-NFT/ERC1155URIStorage.sol",
								"contracts/GU-NFT/GUCollections.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"adminSafe()": "4b8c9c2d",
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"baseURI()": "6c0360eb",
							"changeAdminSafe(address)": "cb450772",
							"exists(uint256)": "4f558e79",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,uint256,uint256,string)": "bb7fde71",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setBaseURI(string)": "55f804b3",
							"setTraderPermission(address,bool)": "d14186c6",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenURIs(uint256)": "6c8b703f",
							"totalSupply(uint256)": "bd85b039",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"safeAddress\",\"type\":\"address\"}],\"name\":\"AdminSafeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"traderAddress\",\"type\":\"address\"}],\"name\":\"TraderAuthorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"traderAddress\",\"type\":\"address\"}],\"name\":\"TraderDisauthorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"adminSafe\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"}],\"name\":\"changeAdminSafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"cid\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"permitted\",\"type\":\"bool\"}],\"name\":\"setTraderPermission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"tokenURIs\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"exists(uint256)\":{\"details\":\"Indicates whether any token exist with a given id, or not.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"totalSupply(uint256)\":{\"details\":\"Total amount of tokens in with a given id.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GU-NFT/GUCollections.sol\":\"GUCollections\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x74216d303b87202736b6d571fc3e9b530aa98ff017a41516170f1c555e518669\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0228d82cef8911972f4cbf7e33dfb9ceebb813d15771335949e06fc0f4a3f1b\",\"dweb:/ipfs/QmYCgp6PABoEe9iDmZTeUc31wp7ekraVavgKF1vVSnd438\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":{\"keccak256\":\"0xe3deb5f3b0c9d12944f62ab680f041bbf1910d9d3ac6b545b4b8e399643c538d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1f5bc920c2f9859b02dce02d7d0211608398287c643d42ad048555c9b204dc8\",\"dweb:/ipfs/QmSu2MFkCSPNG6pRsXxMai7Do7EDqLwpnnHVDB7q2wHJnr\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/GU-NFT/ERC1155URIStorage.sol\":{\"keccak256\":\"0x3bd21ed09d57d19c096600c0c4686c1e21e6daaac30e003779326e3dacbc6f81\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd5d62a30cdf635ba296114bfd8866032584bbf1871978ad6ea43f8f0f6a4dfc\",\"dweb:/ipfs/QmXULbh2FqigXYjTrgzJpS2jn3UbHBJdGoBwEAG3vMvLq6\"]},\"contracts/GU-NFT/GUCollections.sol\":{\"keccak256\":\"0x3416e93af6141ee4aa044eb5a2a0834352ba5195a9488cb79dcbf83d1bc6d7be\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://352743d90d4fbcbce76583ce4b492b2f8175c90ac267ed08223170d21fe3dc99\",\"dweb:/ipfs/QmfNfjSXzEqsBeDbDfg54RePBZ8nXfgsK5B4mrsQYvJaDN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 25,
								"contract": "contracts/GU-NFT/GUCollections.sol:GUCollections",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 31,
								"contract": "contracts/GU-NFT/GUCollections.sol:GUCollections",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 33,
								"contract": "contracts/GU-NFT/GUCollections.sol:GUCollections",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 1395,
								"contract": "contracts/GU-NFT/GUCollections.sol:GUCollections",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 2126,
								"contract": "contracts/GU-NFT/GUCollections.sol:GUCollections",
								"label": "_baseURI",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 2130,
								"contract": "contracts/GU-NFT/GUCollections.sol:GUCollections",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 2227,
								"contract": "contracts/GU-NFT/GUCollections.sol:GUCollections",
								"label": "traders",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 2229,
								"contract": "contracts/GU-NFT/GUCollections.sol:GUCollections",
								"label": "adminSafe",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Address": [
							1852
						],
						"Context": [
							1874
						],
						"ERC1155": [
							1222
						],
						"ERC165": [
							2101
						],
						"IERC1155": [
							1344
						],
						"IERC1155MetadataURI": [
							1557
						],
						"IERC1155Receiver": [
							1385
						],
						"IERC165": [
							2113
						]
					},
					"id": 1223,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 1345,
							"src": "134:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 1386,
							"src": "159:32:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 1558,
							"src": "192:46:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 1853,
							"src": "239:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 1875,
							"src": "273:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 2102,
							"src": "307:46:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1874,
										"src": "590:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "590:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2101,
										"src": "599:6:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "599:6:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1344,
										"src": "607:8:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "607:8:0"
								},
								{
									"baseName": {
										"id": 15,
										"name": "IERC1155MetadataURI",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1557,
										"src": "617:19:0"
									},
									"id": 16,
									"nodeType": "InheritanceSpecifier",
									"src": "617:19:0"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "355:214:0",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1222,
							"linearizedBaseContracts": [
								1222,
								1557,
								1344,
								2101,
								2113,
								1874
							],
							"name": "ERC1155",
							"nameLocation": "579:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 19,
									"libraryName": {
										"id": 17,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1852,
										"src": "649:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "643:26:0",
									"typeName": {
										"id": 18,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "661:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "780:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1222,
									"src": "724:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 24,
										"keyType": {
											"id": 20,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "732:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "724:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 23,
											"keyType": {
												"id": 21,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "751:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "743:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 22,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "762:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 31,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "899:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1222,
									"src": "846:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 30,
										"keyType": {
											"id": 26,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "854:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "846:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 29,
											"keyType": {
												"id": 27,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "873:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "865:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 28,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "884:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 33,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1053:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 1222,
									"src": "1038:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 32,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1038:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "1139:30:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 40,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "1157:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 39,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "1149:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1149:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "1149:13:0"
											}
										]
									},
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1064:38:0",
										"text": " @dev See {_setURI}."
									},
									"id": 44,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1133:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1119:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 35,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1119:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1118:20:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1139:0:0"
									},
									"scope": 1222,
									"src": "1107:62:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2100,
										2112
									],
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "1344:197:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 55,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1373:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 57,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1344,
																			"src": "1393:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1344_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1344_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 56,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1388:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 58,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1388:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1344",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 59,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1388:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1373:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 61,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1430:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 63,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1557,
																			"src": "1450:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1557_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1557_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 62,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1445:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 64,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1445:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1557",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1445:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1430:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1373:109:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 70,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1522:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 68,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1498:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1222_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2100,
															"src": "1498:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1498:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1373:161:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 54,
												"id": 73,
												"nodeType": "Return",
												"src": "1354:180:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1175:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1245:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 51,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 49,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2101,
												"src": "1312:6:0"
											},
											{
												"id": 50,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2113,
												"src": "1320:7:0"
											}
										],
										"src": "1303:25:0"
									},
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1270:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1263:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 46,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1263:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:20:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1338:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 52,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1338:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1337:6:0"
									},
									"scope": 1222,
									"src": "1236:305:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1556
									],
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "2015:28:0",
										"statements": [
											{
												"expression": {
													"id": 84,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 33,
													"src": "2032:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 83,
												"id": 85,
												"nodeType": "Return",
												"src": "2025:11:0"
											}
										]
									},
									"documentation": {
										"id": 76,
										"nodeType": "StructuredDocumentation",
										"src": "1547:388:0",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "1949:3:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 80,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1982:8:0"
									},
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "1953:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1953:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1952:9:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2000:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 81,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2000:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1999:15:0"
									},
									"scope": 1222,
									"src": "1940:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1282
									],
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "2280:133:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 99,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "2298:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2317:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2309:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 100,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2309:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2309:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2298:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2321:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															},
															"value": "ERC1155: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															}
														],
														"id": 98,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2290:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "2290:77:0"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 108,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "2384:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 110,
														"indexExpression": {
															"id": 109,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "2394:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2384:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 112,
													"indexExpression": {
														"id": 111,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "2398:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2384:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 97,
												"id": 113,
												"nodeType": "Return",
												"src": "2377:29:0"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "2049:131:0",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2194:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 94,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2253:8:0"
									},
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2212:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2204:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2204:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2203:29:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2271:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2270:9:0"
									},
									"scope": 1222,
									"src": "2185:228:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1295
									],
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "2743:335:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 130,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "2761:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2761:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 132,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "2780:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2780:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2761:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2792:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 129,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2753:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2753:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "2753:83:0"
											},
											{
												"assignments": [
													142
												],
												"declarations": [
													{
														"constant": false,
														"id": 142,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2864:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 178,
														"src": "2847:30:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 140,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2847:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 141,
															"nodeType": "ArrayTypeName",
															"src": "2847:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 149,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 146,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 119,
																"src": "2894:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2894:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2880:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 143,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2884:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 144,
															"nodeType": "ArrayTypeName",
															"src": "2884:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2880:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2847:63:0"
											},
											{
												"body": {
													"id": 174,
													"nodeType": "Block",
													"src": "2967:74:0",
													"statements": [
														{
															"expression": {
																"id": 172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 161,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 142,
																		"src": "2981:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 163,
																	"indexExpression": {
																		"id": 162,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 151,
																		"src": "2995:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2981:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 165,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 119,
																				"src": "3010:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 167,
																			"indexExpression": {
																				"id": 166,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 151,
																				"src": "3019:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3010:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 168,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 122,
																				"src": "3023:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 170,
																			"indexExpression": {
																				"id": 169,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 151,
																				"src": "3027:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3023:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 164,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "3000:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3000:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2981:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 173,
															"nodeType": "ExpressionStatement",
															"src": "2981:49:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 154,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "2941:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 155,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "2945:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2945:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 175,
												"initializationExpression": {
													"assignments": [
														151
													],
													"declarations": [
														{
															"constant": false,
															"id": 151,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2934:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 175,
															"src": "2926:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 150,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2926:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 153,
													"initialValue": {
														"hexValue": "30",
														"id": 152,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2938:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2926:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2962:3:0",
														"subExpression": {
															"id": 158,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "2964:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 160,
													"nodeType": "ExpressionStatement",
													"src": "2962:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2921:120:0"
											},
											{
												"expression": {
													"id": 176,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 142,
													"src": "3058:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 128,
												"id": 177,
												"nodeType": "Return",
												"src": "3051:20:0"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "2419:146:0",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2579:14:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 124,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2695:8:0"
									},
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2611:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2594:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 117,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2594:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 118,
													"nodeType": "ArrayTypeName",
													"src": "2594:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2638:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2621:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 120,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2621:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 121,
													"nodeType": "ArrayTypeName",
													"src": "2621:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2593:49:0"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2721:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 125,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2721:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 126,
													"nodeType": "ArrayTypeName",
													"src": "2721:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2720:18:0"
									},
									"scope": 1222,
									"src": "2570:508:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1303
									],
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "3230:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 189,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1864,
																"src": "3259:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3259:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 191,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "3273:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 192,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "3283:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 188,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1027,
														"src": "3240:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3240:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 194,
												"nodeType": "ExpressionStatement",
												"src": "3240:52:0"
											}
										]
									},
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "3084:57:0",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3155:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 186,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3221:8:0"
									},
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3181:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "3173:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3173:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3196:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "3191:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 183,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3191:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3172:33:0"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3230:0:0"
									},
									"scope": 1222,
									"src": "3146:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1313
									],
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "3471:61:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 207,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "3488:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 209,
														"indexExpression": {
															"id": 208,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "3507:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3488:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 211,
													"indexExpression": {
														"id": 210,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "3516:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3488:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 206,
												"id": 212,
												"nodeType": "Return",
												"src": "3481:44:0"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "3305:56:0",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3375:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 203,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3447:8:0"
									},
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3400:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3392:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3392:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3417:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3409:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3391:35:0"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3465:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3465:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3464:6:0"
									},
									"scope": 1222,
									"src": "3366:166:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1327
									],
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "3768:220:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 230,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "3799:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 231,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1864,
																		"src": "3807:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3807:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3799:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 235,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 217,
																		"src": "3840:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 236,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1864,
																			"src": "3846:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3846:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 234,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "3823:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3823:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3799:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3873:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3778:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3778:148:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "3778:148:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 244,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "3954:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 245,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "3960:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 246,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "3964:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 247,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "3968:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 248,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "3976:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 243,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "3936:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3936:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "3936:45:0"
											}
										]
									},
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3538:56:0",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3608:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 227,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3759:8:0"
									},
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3642:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3634:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3664:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3656:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3656:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3684:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3676:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3676:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3704:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3696:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3733:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3720:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 224,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3720:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3624:119:0"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3768:0:0"
									},
									"scope": 1222,
									"src": "3599:389:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1343
									],
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "4254:236:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 270,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 255,
																	"src": "4285:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 271,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1864,
																		"src": "4293:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4293:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4285:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 275,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 255,
																		"src": "4326:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 276,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1864,
																			"src": "4332:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4332:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 274,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "4309:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4309:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4285:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4359:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															},
															"value": "ERC1155: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															}
														],
														"id": 269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4264:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4264:157:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "4264:157:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 284,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "4454:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 285,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "4460:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 286,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "4464:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 287,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "4469:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 288,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "4478:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 283,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "4431:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4431:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "4431:52:0"
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "3994:61:0",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4069:21:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 267,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4245:8:0"
									},
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4108:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4100:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4100:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4130:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4122:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4122:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4159:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4142:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 258,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4142:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 259,
													"nodeType": "ArrayTypeName",
													"src": "4142:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4189:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4172:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 261,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4172:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 262,
													"nodeType": "ArrayTypeName",
													"src": "4172:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4219:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4206:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 264,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4206:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4090:139:0"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4254:0:0"
									},
									"scope": 1222,
									"src": "4060:430:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "5103:784:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 307,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 297,
																"src": "5121:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5135:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5127:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 308,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5127:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5127:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5121:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5139:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 306,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5113:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5113:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "5113:66:0"
											},
											{
												"assignments": [
													317
												],
												"declarations": [
													{
														"constant": false,
														"id": 317,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5198:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "5190:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 316,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5190:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 320,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 318,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "5209:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5209:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5190:31:0"
											},
											{
												"assignments": [
													325
												],
												"declarations": [
													{
														"constant": false,
														"id": 325,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "5248:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "5231:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 323,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5231:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 324,
															"nodeType": "ArrayTypeName",
															"src": "5231:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 329,
												"initialValue": {
													"arguments": [
														{
															"id": 327,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "5272:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 326,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "5254:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5254:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5231:44:0"
											},
											{
												"assignments": [
													334
												],
												"declarations": [
													{
														"constant": false,
														"id": 334,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "5302:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "5285:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 332,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5285:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 333,
															"nodeType": "ArrayTypeName",
															"src": "5285:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 338,
												"initialValue": {
													"arguments": [
														{
															"id": 336,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "5330:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 335,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "5312:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5312:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5285:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "5369:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 341,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "5379:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 342,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5385:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 343,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "5389:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 344,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "5394:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 345,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "5403:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 339,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "5348:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5348:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "5348:60:0"
											},
											{
												"assignments": [
													349
												],
												"declarations": [
													{
														"constant": false,
														"id": 349,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "5427:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "5419:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 348,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5419:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 355,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 350,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "5441:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 352,
														"indexExpression": {
															"id": 351,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "5451:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5441:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 354,
													"indexExpression": {
														"id": 353,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5455:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5441:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5419:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 357,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "5478:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 358,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "5493:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5478:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5501:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 356,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5470:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5470:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "5470:76:0"
											},
											{
												"id": 373,
												"nodeType": "UncheckedBlock",
												"src": "5556:77:0",
												"statements": [
													{
														"expression": {
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 363,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "5580:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 366,
																	"indexExpression": {
																		"id": 364,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 299,
																		"src": "5590:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5580:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 367,
																"indexExpression": {
																	"id": 365,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "5594:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5580:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 368,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "5602:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 369,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "5616:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5602:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5580:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 372,
														"nodeType": "ExpressionStatement",
														"src": "5580:42:0"
													}
												]
											},
											{
												"expression": {
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 374,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "5642:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 377,
															"indexExpression": {
																"id": 375,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "5652:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5642:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 378,
														"indexExpression": {
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5656:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5642:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 379,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "5663:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5642:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "5642:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 383,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "5700:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 384,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "5710:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 385,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5716:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "5720:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 387,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "5724:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 382,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "5685:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5685:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "EmitStatement",
												"src": "5680:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 391,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "5762:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 392,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "5772:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 393,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5778:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 394,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "5782:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 395,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "5787:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 396,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "5796:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 390,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "5742:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5742:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "5742:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 400,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "5843:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 401,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "5853:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5859:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "5863:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 404,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "5867:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 405,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "5875:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 399,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "5812:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5812:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "5812:68:0"
											}
										]
									},
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "4496:439:0",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "4949:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4984:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "4976:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4976:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5006:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "4998:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4998:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5026:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "5018:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5046:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "5038:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5038:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5075:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "5062:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 302,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5062:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4966:119:0"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5103:0:0"
									},
									"scope": 1222,
									"src": "4940:947:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "6421:927:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 426,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "6439:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6439:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 428,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "6453:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6453:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6439:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6469:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 425,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6431:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6431:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 433,
												"nodeType": "ExpressionStatement",
												"src": "6431:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 435,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 414,
																"src": "6530:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6544:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6536:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 436,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6536:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6536:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6530:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6548:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 434,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6522:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6522:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "6522:66:0"
											},
											{
												"assignments": [
													445
												],
												"declarations": [
													{
														"constant": false,
														"id": 445,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "6607:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 543,
														"src": "6599:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 444,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6599:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 448,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 446,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "6618:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6618:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6599:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 450,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "6662:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 451,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "6672:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 452,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "6678:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "6682:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 454,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "6687:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 455,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "6696:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 449,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "6641:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6641:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "6641:60:0"
											},
											{
												"body": {
													"id": 515,
													"nodeType": "Block",
													"src": "6753:370:0",
													"statements": [
														{
															"assignments": [
																470
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 470,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6775:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 515,
																	"src": "6767:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 469,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6767:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 474,
															"initialValue": {
																"baseExpression": {
																	"id": 471,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "6780:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 473,
																"indexExpression": {
																	"id": 472,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 459,
																	"src": "6784:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6780:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6767:19:0"
														},
														{
															"assignments": [
																476
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 476,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "6808:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 515,
																	"src": "6800:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 475,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6800:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 480,
															"initialValue": {
																"baseExpression": {
																	"id": 477,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "6817:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 479,
																"indexExpression": {
																	"id": 478,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 459,
																	"src": "6825:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6817:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6800:27:0"
														},
														{
															"assignments": [
																482
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 482,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6850:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 515,
																	"src": "6842:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 481,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6842:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 488,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 483,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "6864:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 485,
																	"indexExpression": {
																		"id": 484,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 470,
																		"src": "6874:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6864:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 487,
																"indexExpression": {
																	"id": 486,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 412,
																	"src": "6878:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6864:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6842:41:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 490,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 482,
																			"src": "6905:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 491,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 476,
																			"src": "6920:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6905:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																		"id": 493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6928:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		},
																		"value": "ERC1155: insufficient balance for transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		}
																	],
																	"id": 489,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6897:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6897:76:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 495,
															"nodeType": "ExpressionStatement",
															"src": "6897:76:0"
														},
														{
															"id": 506,
															"nodeType": "UncheckedBlock",
															"src": "6987:85:0",
															"statements": [
																{
																	"expression": {
																		"id": 504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 496,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 25,
																					"src": "7015:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 499,
																				"indexExpression": {
																					"id": 497,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 470,
																					"src": "7025:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7015:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 500,
																			"indexExpression": {
																				"id": 498,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 412,
																				"src": "7029:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7015:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 503,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 501,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 482,
																				"src": "7037:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 502,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 476,
																				"src": "7051:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7037:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7015:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 505,
																	"nodeType": "ExpressionStatement",
																	"src": "7015:42:0"
																}
															]
														},
														{
															"expression": {
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 507,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "7085:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 510,
																		"indexExpression": {
																			"id": 508,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 470,
																			"src": "7095:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7085:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 511,
																	"indexExpression": {
																		"id": 509,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 414,
																		"src": "7099:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7085:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 512,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 476,
																	"src": "7106:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7085:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 514,
															"nodeType": "ExpressionStatement",
															"src": "7085:27:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 462,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "6732:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 463,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "6736:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6736:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6732:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 516,
												"initializationExpression": {
													"assignments": [
														459
													],
													"declarations": [
														{
															"constant": false,
															"id": 459,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6725:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 516,
															"src": "6717:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 458,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6717:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 461,
													"initialValue": {
														"hexValue": "30",
														"id": 460,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6729:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6717:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6748:3:0",
														"subExpression": {
															"id": 466,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "6750:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 468,
													"nodeType": "ExpressionStatement",
													"src": "6748:3:0"
												},
												"nodeType": "ForStatement",
												"src": "6712:411:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 518,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "7152:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 519,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "7162:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "7168:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 521,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "7172:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 522,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "7177:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 517,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "7138:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7138:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "EmitStatement",
												"src": "7133:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 526,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "7216:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 527,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "7226:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 528,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "7232:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 529,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "7236:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 530,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "7241:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 531,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "7250:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 525,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "7196:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7196:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "7196:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "7302:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "7312:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "7318:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 538,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "7322:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 539,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "7327:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 540,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "7336:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 534,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "7266:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7266:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "7266:75:0"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "5893:335:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "6242:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6282:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "6274:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6274:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6304:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "6296:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6296:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "6333:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "6316:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 415,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6316:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 416,
													"nodeType": "ArrayTypeName",
													"src": "6316:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "6363:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "6346:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 418,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6346:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 419,
													"nodeType": "ArrayTypeName",
													"src": "6346:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6393:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "6380:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6380:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6264:139:0"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6421:0:0"
									},
									"scope": 1222,
									"src": "6233:1115:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "8227:30:0",
										"statements": [
											{
												"expression": {
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 550,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "8237:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 551,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "8244:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8237:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "8237:13:0"
											}
										]
									},
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "7354:812:0",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "8180:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "8202:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "8188:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 546,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8188:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8187:22:0"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8227:0:0"
									},
									"scope": 1222,
									"src": "8171:86:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "8759:580:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 568,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 558,
																"src": "8777:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8791:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8783:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 569,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8783:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8783:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8777:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8795:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 567,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8769:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8769:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "ExpressionStatement",
												"src": "8769:62:0"
											},
											{
												"assignments": [
													578
												],
												"declarations": [
													{
														"constant": false,
														"id": 578,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "8850:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 655,
														"src": "8842:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 577,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8842:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 581,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 579,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "8861:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8861:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8842:31:0"
											},
											{
												"assignments": [
													586
												],
												"declarations": [
													{
														"constant": false,
														"id": 586,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "8900:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 655,
														"src": "8883:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 584,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8883:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 585,
															"nodeType": "ArrayTypeName",
															"src": "8883:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 590,
												"initialValue": {
													"arguments": [
														{
															"id": 588,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "8924:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 587,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "8906:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8906:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8883:44:0"
											},
											{
												"assignments": [
													595
												],
												"declarations": [
													{
														"constant": false,
														"id": 595,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "8954:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 655,
														"src": "8937:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 593,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8937:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 594,
															"nodeType": "ArrayTypeName",
															"src": "8937:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 599,
												"initialValue": {
													"arguments": [
														{
															"id": 597,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "8982:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 596,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "8964:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8964:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8937:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 601,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "9021:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9039:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9031:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 602,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9031:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9031:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "9043:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "9047:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 608,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "9052:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 609,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "9061:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 600,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "9000:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9000:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 611,
												"nodeType": "ExpressionStatement",
												"src": "9000:66:0"
											},
											{
												"expression": {
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 612,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "9077:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 615,
															"indexExpression": {
																"id": 613,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 560,
																"src": "9087:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9077:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 616,
														"indexExpression": {
															"id": 614,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "9091:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9077:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 617,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "9098:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9077:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "9077:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 621,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "9134:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9152:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9144:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 622,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9144:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9144:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 626,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "9156:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 627,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "9160:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 628,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "9164:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 620,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "9119:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9119:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 630,
												"nodeType": "EmitStatement",
												"src": "9114:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "9202:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9220:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9212:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 633,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9212:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9212:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 637,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "9224:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 638,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "9228:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 639,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "9233:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 640,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "9242:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 631,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "9182:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9182:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "9182:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "9289:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9307:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9299:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 645,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9299:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9299:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 649,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "9311:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 650,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "9315:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 651,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "9319:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 652,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "9327:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 643,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "9258:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9258:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 654,
												"nodeType": "ExpressionStatement",
												"src": "9258:74:0"
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "8263:362:0",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8639:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8662:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "8654:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8682:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "8674:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8702:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "8694:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8731:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "8718:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 563,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8718:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8644:97:0"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8759:0:0"
									},
									"scope": 1222,
									"src": "8630:709:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "9838:637:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 671,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "9856:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9870:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9862:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 672,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9862:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9862:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9856:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9874:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 670,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9848:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9848:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "9848:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 681,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 662,
																	"src": "9928:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9928:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 683,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "9942:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9942:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9928:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9958:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 680,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9920:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9920:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9920:81:0"
											},
											{
												"assignments": [
													690
												],
												"declarations": [
													{
														"constant": false,
														"id": 690,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "10020:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 766,
														"src": "10012:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 689,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10012:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 693,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 691,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "10031:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10031:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10012:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 695,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "10075:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10093:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10085:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 696,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10085:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10085:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "10097:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 701,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "10101:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 702,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "10106:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 703,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "10115:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 694,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "10054:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10054:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 705,
												"nodeType": "ExpressionStatement",
												"src": "10054:66:0"
											},
											{
												"body": {
													"id": 729,
													"nodeType": "Block",
													"src": "10172:60:0",
													"statements": [
														{
															"expression": {
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 717,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "10186:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 722,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 718,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 662,
																				"src": "10196:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 720,
																			"indexExpression": {
																				"id": 719,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 707,
																				"src": "10200:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10196:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10186:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 723,
																	"indexExpression": {
																		"id": 721,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 659,
																		"src": "10204:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10186:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 724,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "10211:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 726,
																	"indexExpression": {
																		"id": 725,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 707,
																		"src": "10219:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10211:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10186:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 728,
															"nodeType": "ExpressionStatement",
															"src": "10186:35:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 710,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "10151:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 711,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "10155:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10155:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10151:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 730,
												"initializationExpression": {
													"assignments": [
														707
													],
													"declarations": [
														{
															"constant": false,
															"id": 707,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10144:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 730,
															"src": "10136:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 706,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10136:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 709,
													"initialValue": {
														"hexValue": "30",
														"id": 708,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10148:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10136:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 715,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10167:3:0",
														"subExpression": {
															"id": 714,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "10167:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 716,
													"nodeType": "ExpressionStatement",
													"src": "10167:3:0"
												},
												"nodeType": "ForStatement",
												"src": "10131:101:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 732,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "10261:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10279:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10271:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 733,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10271:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10271:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 737,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "10283:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 738,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "10287:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 739,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "10292:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 731,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "10247:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10247:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 741,
												"nodeType": "EmitStatement",
												"src": "10242:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 743,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "10331:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10349:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10341:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 744,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10341:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10341:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 748,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "10353:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 749,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "10357:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 750,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "10362:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 751,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "10371:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 742,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "10311:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10311:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "10311:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 755,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "10423:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10441:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 757,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10433:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 756,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10433:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10433:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 760,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "10445:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 761,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "10449:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 762,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "10454:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 763,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "10463:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 754,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "10387:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10387:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "10387:81:0"
											}
										]
									},
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "9345:334:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "9693:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9721:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "9713:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9713:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9750:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "9733:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 660,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9733:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 661,
													"nodeType": "ArrayTypeName",
													"src": "9733:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "9780:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "9763:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 663,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9763:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 664,
													"nodeType": "ArrayTypeName",
													"src": "9763:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9810:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "9797:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 666,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9797:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9703:117:0"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9838:0:0"
									},
									"scope": 1222,
									"src": "9684:791:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 871,
										"nodeType": "Block",
										"src": "10819:682:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 778,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "10837:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10853:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10845:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 779,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10845:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10845:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10837:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10857:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 777,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10829:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10829:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "10829:66:0"
											},
											{
												"assignments": [
													788
												],
												"declarations": [
													{
														"constant": false,
														"id": 788,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "10914:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 871,
														"src": "10906:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 787,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10906:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 791,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 789,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "10925:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10925:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10906:31:0"
											},
											{
												"assignments": [
													796
												],
												"declarations": [
													{
														"constant": false,
														"id": 796,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "10964:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 871,
														"src": "10947:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 794,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10947:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 795,
															"nodeType": "ArrayTypeName",
															"src": "10947:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 800,
												"initialValue": {
													"arguments": [
														{
															"id": 798,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "10988:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 797,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "10970:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10970:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10947:44:0"
											},
											{
												"assignments": [
													805
												],
												"declarations": [
													{
														"constant": false,
														"id": 805,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "11018:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 871,
														"src": "11001:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 803,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11001:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 804,
															"nodeType": "ArrayTypeName",
															"src": "11001:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 809,
												"initialValue": {
													"arguments": [
														{
															"id": 807,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "11046:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 806,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "11028:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11028:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11001:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 811,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "11085:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 812,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "11095:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11109:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11101:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 813,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11101:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11101:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 817,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "11113:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 818,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "11118:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11127:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 810,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "11064:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11064:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "11064:66:0"
											},
											{
												"assignments": [
													823
												],
												"declarations": [
													{
														"constant": false,
														"id": 823,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "11149:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 871,
														"src": "11141:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 822,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11141:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 829,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 824,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "11163:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 826,
														"indexExpression": {
															"id": 825,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "11173:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11163:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 828,
													"indexExpression": {
														"id": 827,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "11177:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11163:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11141:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 831,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 823,
																"src": "11200:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 832,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 774,
																"src": "11215:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11200:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11223:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															},
															"value": "ERC1155: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															}
														],
														"id": 830,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11192:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11192:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 836,
												"nodeType": "ExpressionStatement",
												"src": "11192:70:0"
											},
											{
												"id": 847,
												"nodeType": "UncheckedBlock",
												"src": "11272:77:0",
												"statements": [
													{
														"expression": {
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 837,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "11296:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 840,
																	"indexExpression": {
																		"id": 838,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 772,
																		"src": "11306:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11296:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 841,
																"indexExpression": {
																	"id": 839,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 770,
																	"src": "11310:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "11296:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 842,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "11318:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 843,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 774,
																	"src": "11332:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11318:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11296:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 846,
														"nodeType": "ExpressionStatement",
														"src": "11296:42:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 849,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "11379:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 850,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "11389:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11403:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11395:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 851,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11395:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11395:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "11407:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 856,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "11411:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 848,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "11364:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11364:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 858,
												"nodeType": "EmitStatement",
												"src": "11359:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 860,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "11449:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 861,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "11459:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11473:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11465:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 862,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11465:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11465:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 866,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "11477:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 867,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "11482:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11491:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 859,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "11429:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11429:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "11429:65:0"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "10481:229:0",
										"text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
									},
									"id": 872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10724:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10747:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "10739:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10739:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10769:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "10761:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10761:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10789:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "10781:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10729:72:0"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10819:0:0"
									},
									"scope": 1222,
									"src": "10715:786:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "11824:814:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 885,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 875,
																"src": "11842:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11858:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11850:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 886,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11850:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11850:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11842:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11862:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 884,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11834:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11834:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "11834:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 895,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "11918:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11918:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 897,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "11932:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11932:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11918:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11948:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 894,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11910:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11910:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "11910:81:0"
											},
											{
												"assignments": [
													904
												],
												"declarations": [
													{
														"constant": false,
														"id": 904,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "12010:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 994,
														"src": "12002:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 903,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12002:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 907,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 905,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "12021:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12021:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12002:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 909,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "12065:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 910,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "12075:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12089:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 912,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12081:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 911,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12081:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12081:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 915,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "12093:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 916,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "12098:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12107:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 908,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "12044:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12044:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "12044:66:0"
											},
											{
												"body": {
													"id": 969,
													"nodeType": "Block",
													"src": "12162:323:0",
													"statements": [
														{
															"assignments": [
																932
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 932,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "12184:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 969,
																	"src": "12176:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 931,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12176:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 936,
															"initialValue": {
																"baseExpression": {
																	"id": 933,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "12189:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 935,
																"indexExpression": {
																	"id": 934,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 921,
																	"src": "12193:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12189:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12176:19:0"
														},
														{
															"assignments": [
																938
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 938,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "12217:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 969,
																	"src": "12209:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 937,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12209:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 942,
															"initialValue": {
																"baseExpression": {
																	"id": 939,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "12226:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 941,
																"indexExpression": {
																	"id": 940,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 921,
																	"src": "12234:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12226:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12209:27:0"
														},
														{
															"assignments": [
																944
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 944,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "12259:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 969,
																	"src": "12251:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 943,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12251:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 950,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 945,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "12273:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 947,
																	"indexExpression": {
																		"id": 946,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 932,
																		"src": "12283:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12273:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 949,
																"indexExpression": {
																	"id": 948,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "12287:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12273:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12251:41:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 952,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 944,
																			"src": "12314:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 953,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 938,
																			"src": "12329:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12314:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																		"id": 955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12337:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		},
																		"value": "ERC1155: burn amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		}
																	],
																	"id": 951,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "12306:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12306:70:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 957,
															"nodeType": "ExpressionStatement",
															"src": "12306:70:0"
														},
														{
															"id": 968,
															"nodeType": "UncheckedBlock",
															"src": "12390:85:0",
															"statements": [
																{
																	"expression": {
																		"id": 966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 958,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 25,
																					"src": "12418:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 961,
																				"indexExpression": {
																					"id": 959,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 932,
																					"src": "12428:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "12418:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 962,
																			"indexExpression": {
																				"id": 960,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 875,
																				"src": "12432:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "12418:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 965,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 963,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 944,
																				"src": "12440:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 964,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 938,
																				"src": "12454:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12440:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12418:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 967,
																	"nodeType": "ExpressionStatement",
																	"src": "12418:42:0"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 924,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "12141:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 925,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "12145:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12145:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12141:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 970,
												"initializationExpression": {
													"assignments": [
														921
													],
													"declarations": [
														{
															"constant": false,
															"id": 921,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12134:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 970,
															"src": "12126:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 920,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12126:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 923,
													"initialValue": {
														"hexValue": "30",
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12138:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12126:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 929,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "12157:3:0",
														"subExpression": {
															"id": 928,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "12157:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 930,
													"nodeType": "ExpressionStatement",
													"src": "12157:3:0"
												},
												"nodeType": "ForStatement",
												"src": "12121:364:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 972,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "12514:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 973,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "12524:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12538:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12530:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 974,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12530:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12530:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 978,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "12542:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 979,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "12547:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 971,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "12500:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12500:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 981,
												"nodeType": "EmitStatement",
												"src": "12495:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 983,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "12586:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 984,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "12596:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12610:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12602:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 985,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12602:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12602:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 989,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "12614:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 990,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "12619:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12628:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 982,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "12566:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12566:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 993,
												"nodeType": "ExpressionStatement",
												"src": "12566:65:0"
											}
										]
									},
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "11507:183:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "11704:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11732:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "11724:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11724:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11763:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "11746:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 876,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11746:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 877,
													"nodeType": "ArrayTypeName",
													"src": "11746:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "11793:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "11776:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 879,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11776:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 880,
													"nodeType": "ArrayTypeName",
													"src": "11776:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11714:92:0"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11824:0:0"
									},
									"scope": 1222,
									"src": "11695:943:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1026,
										"nodeType": "Block",
										"src": "12896:200:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1006,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 998,
																"src": "12914:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1007,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "12923:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12914:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12933:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 1005,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12906:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12906:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1011,
												"nodeType": "ExpressionStatement",
												"src": "12906:71:0"
											},
											{
												"expression": {
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1012,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "12987:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1015,
															"indexExpression": {
																"id": 1013,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 998,
																"src": "13006:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12987:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1016,
														"indexExpression": {
															"id": 1014,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "13013:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12987:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1017,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "13025:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12987:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "12987:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1021,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "13063:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1022,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "13070:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1023,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "13080:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1020,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1265,
														"src": "13048:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13048:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1025,
												"nodeType": "EmitStatement",
												"src": "13043:46:0"
											}
										]
									},
									"documentation": {
										"id": 996,
										"nodeType": "StructuredDocumentation",
										"src": "12644:124:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
									},
									"id": 1027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "12782:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12818:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "12810:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12810:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "12841:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "12833:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12833:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "12864:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "12859:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1001,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12859:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12800:78:0"
									},
									"returnParameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12896:0:0"
									},
									"scope": 1222,
									"src": "12773:323:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "14242:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1028,
										"nodeType": "StructuredDocumentation",
										"src": "13102:923:0",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "14039:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14077:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14069:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14069:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14103:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14095:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14095:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14125:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14117:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14117:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "14154:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14137:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1035,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14137:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1036,
													"nodeType": "ArrayTypeName",
													"src": "14137:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "14184:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14167:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1038,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14167:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1039,
													"nodeType": "ArrayTypeName",
													"src": "14167:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14214:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14201:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1041,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14201:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14059:165:0"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14242:0:0"
									},
									"scope": 1222,
									"src": "14030:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1064,
										"nodeType": "Block",
										"src": "15388:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "14250:922:0",
										"text": " @dev Hook that is called after any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1065,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "15186:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15223:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "15215:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15215:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15249:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "15241:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15241:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15271:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "15263:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15263:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "15300:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "15283:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1054,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15283:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1055,
													"nodeType": "ArrayTypeName",
													"src": "15283:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "15330:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "15313:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1057,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15313:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1058,
													"nodeType": "ArrayTypeName",
													"src": "15313:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15360:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "15347:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1060,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15347:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15205:165:0"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15388:0:0"
									},
									"scope": 1222,
									"src": "15177:213:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "15589:532:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1080,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "15603:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1081,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1575,
														"src": "15603:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15603:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1126,
												"nodeType": "IfStatement",
												"src": "15599:516:0",
												"trueBody": {
													"id": 1125,
													"nodeType": "Block",
													"src": "15620:495:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1107,
																		"nodeType": "Block",
																		"src": "15737:184:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1100,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1096,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1094,
																						"src": "15759:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1097,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1385,
																								"src": "15771:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1385_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1098,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1366,
																							"src": "15771:34:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1099,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "15771:43:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "15759:55:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1106,
																				"nodeType": "IfStatement",
																				"src": "15755:152:0",
																				"trueBody": {
																					"id": 1105,
																					"nodeType": "Block",
																					"src": "15816:91:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1102,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "15845:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1101,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "15838:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1103,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15838:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1104,
																							"nodeType": "ExpressionStatement",
																							"src": "15838:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1108,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1095,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1094,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "15727:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1108,
																				"src": "15720:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1093,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "15720:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15719:17:0"
																	},
																	"src": "15711:210:0"
																},
																{
																	"block": {
																		"id": 1116,
																		"nodeType": "Block",
																		"src": "15956:47:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1113,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1110,
																							"src": "15981:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1112,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "15974:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1114,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "15974:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1115,
																				"nodeType": "ExpressionStatement",
																				"src": "15974:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1117,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1111,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1110,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "15948:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1117,
																				"src": "15934:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1109,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "15934:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15933:22:0"
																	},
																	"src": "15922:81:0"
																},
																{
																	"block": {
																		"id": 1122,
																		"nodeType": "Block",
																		"src": "16010:95:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1119,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "16035:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1118,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16028:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1120,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16028:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1121,
																				"nodeType": "ExpressionStatement",
																				"src": "16028:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1123,
																	"nodeType": "TryCatchClause",
																	"src": "16004:101:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1087,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1067,
																		"src": "15677:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1088,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1069,
																		"src": "15687:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1089,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1073,
																		"src": "15693:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1090,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1075,
																		"src": "15697:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1091,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1077,
																		"src": "15705:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1084,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1071,
																				"src": "15655:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1083,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1385,
																			"src": "15638:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1385_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1085,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15638:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1385",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1366,
																	"src": "15638:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15638:72:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1124,
															"nodeType": "TryStatement",
															"src": "15634:471:0"
														}
													]
												}
											}
										]
									},
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "15405:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15453:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "15445:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15445:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15479:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "15471:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15471:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15501:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "15493:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15493:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "15521:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "15513:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15541:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "15533:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15533:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15570:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "15557:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1076,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15557:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15435:145:0"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15589:0:0"
									},
									"scope": 1222,
									"src": "15396:725:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1192,
										"nodeType": "Block",
										"src": "16345:574:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1145,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "16359:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1575,
														"src": "16359:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16359:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1191,
												"nodeType": "IfStatement",
												"src": "16355:558:0",
												"trueBody": {
													"id": 1190,
													"nodeType": "Block",
													"src": "16376:537:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1172,
																		"nodeType": "Block",
																		"src": "16530:189:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1165,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1161,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1159,
																						"src": "16552:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1162,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1385,
																								"src": "16564:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1385_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1163,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1384,
																							"src": "16564:39:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1164,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "16564:48:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "16552:60:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1171,
																				"nodeType": "IfStatement",
																				"src": "16548:157:0",
																				"trueBody": {
																					"id": 1170,
																					"nodeType": "Block",
																					"src": "16614:91:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1167,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "16643:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1166,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "16636:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1168,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16636:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1169,
																							"nodeType": "ExpressionStatement",
																							"src": "16636:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1173,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1160,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1159,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "16507:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1173,
																				"src": "16500:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1158,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "16500:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16482:47:0"
																	},
																	"src": "16474:245:0"
																},
																{
																	"block": {
																		"id": 1181,
																		"nodeType": "Block",
																		"src": "16754:47:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1178,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1175,
																							"src": "16779:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1177,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16772:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1179,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16772:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1180,
																				"nodeType": "ExpressionStatement",
																				"src": "16772:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1182,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1176,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1175,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "16746:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1182,
																				"src": "16732:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1174,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "16732:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16731:22:0"
																	},
																	"src": "16720:81:0"
																},
																{
																	"block": {
																		"id": 1187,
																		"nodeType": "Block",
																		"src": "16808:95:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1184,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "16833:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1183,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16826:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1185,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16826:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1186,
																				"nodeType": "ExpressionStatement",
																				"src": "16826:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1188,
																	"nodeType": "TryCatchClause",
																	"src": "16802:101:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1152,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1130,
																		"src": "16438:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1153,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1132,
																		"src": "16448:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1154,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1137,
																		"src": "16454:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1155,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1140,
																		"src": "16459:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1156,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1142,
																		"src": "16468:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1149,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1134,
																				"src": "16411:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1148,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1385,
																			"src": "16394:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1385_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16394:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1385",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1384,
																	"src": "16394:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16394:79:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1189,
															"nodeType": "TryStatement",
															"src": "16390:513:0"
														}
													]
												}
											}
										]
									},
									"id": 1193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "16136:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16189:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "16181:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16181:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16215:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "16207:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16207:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16237:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "16229:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16229:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "16266:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "16249:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1135,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16249:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1136,
													"nodeType": "ArrayTypeName",
													"src": "16249:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "16296:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "16279:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1138,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16279:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1139,
													"nodeType": "ArrayTypeName",
													"src": "16279:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16326:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "16313:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1141,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16313:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16171:165:0"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16345:0:0"
									},
									"scope": 1222,
									"src": "16127:792:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1220,
										"nodeType": "Block",
										"src": "17009:109:0",
										"statements": [
											{
												"assignments": [
													1205
												],
												"declarations": [
													{
														"constant": false,
														"id": 1205,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "17036:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1220,
														"src": "17019:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1203,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17019:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1204,
															"nodeType": "ArrayTypeName",
															"src": "17019:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1211,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17058:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "17044:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1206,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17048:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1207,
															"nodeType": "ArrayTypeName",
															"src": "17048:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17044:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17019:41:0"
											},
											{
												"expression": {
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1212,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "17070:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1214,
														"indexExpression": {
															"hexValue": "30",
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17076:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17070:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1215,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "17081:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17070:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1217,
												"nodeType": "ExpressionStatement",
												"src": "17070:18:0"
											},
											{
												"expression": {
													"id": 1218,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1205,
													"src": "17106:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1200,
												"id": 1219,
												"nodeType": "Return",
												"src": "17099:12:0"
											}
										]
									},
									"id": 1221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "16934:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "16960:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "16952:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16952:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16951:17:0"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "16991:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1197,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16991:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1198,
													"nodeType": "ArrayTypeName",
													"src": "16991:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16990:18:0"
									},
									"scope": 1222,
									"src": "16925:193:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1223,
							"src": "570:16550:0",
							"usedErrors": []
						}
					],
					"src": "109:17012:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1344
						],
						"IERC165": [
							2113
						]
					},
					"id": 1345,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1224,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1225,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1345,
							"sourceUnit": 2114,
							"src": "120:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1227,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2113,
										"src": "357:7:1"
									},
									"id": 1228,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:1"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1226,
								"nodeType": "StructuredDocumentation",
								"src": "169:165:1",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1344,
							"linearizedBaseContracts": [
								1344,
								2113
							],
							"name": "IERC1155",
							"nameLocation": "345:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "371:121:1",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 1241,
									"name": "TransferSingle",
									"nameLocation": "503:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "534:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "518:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "560:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "544:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "582:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "566:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "594:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "586:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "606:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "598:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:95:1"
									},
									"src": "497:116:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1242,
										"nodeType": "StructuredDocumentation",
										"src": "619:144:1",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 1256,
									"name": "TransferBatch",
									"nameLocation": "774:13:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "813:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "797:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "831:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "877:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "861:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "899:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "889:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1249,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "889:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1250,
													"nodeType": "ArrayTypeName",
													"src": "889:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "922:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "912:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1252,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "912:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1253,
													"nodeType": "ArrayTypeName",
													"src": "912:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:147:1"
									},
									"src": "768:167:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1257,
										"nodeType": "StructuredDocumentation",
										"src": "941:147:1",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1265,
									"name": "ApprovalForAll",
									"nameLocation": "1099:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1130:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "1114:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "1139:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1170:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "1165:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1262,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1165:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:66:1"
									},
									"src": "1093:87:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "1186:343:1",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 1272,
									"name": "URI",
									"nameLocation": "1540:3:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1551:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "1544:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1267,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1544:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1574:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "1558:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:34:1"
									},
									"src": "1534:44:1"
								},
								{
									"documentation": {
										"id": 1273,
										"nodeType": "StructuredDocumentation",
										"src": "1584:173:1",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1771:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1789:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "1781:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1806:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "1798:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1780:29:1"
									},
									"returnParameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "1833:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1833:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1832:9:1"
									},
									"scope": 1344,
									"src": "1762:80:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1283,
										"nodeType": "StructuredDocumentation",
										"src": "1848:188:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1295,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2050:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2084:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "2065:27:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1284,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2065:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1285,
													"nodeType": "ArrayTypeName",
													"src": "2065:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2113:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "2094:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1287,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2094:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1288,
													"nodeType": "ArrayTypeName",
													"src": "2094:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:53:1"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "2165:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1291,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2165:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1292,
													"nodeType": "ArrayTypeName",
													"src": "2165:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:18:1"
									},
									"scope": 1344,
									"src": "2041:142:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1296,
										"nodeType": "StructuredDocumentation",
										"src": "2189:248:1",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1303,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2451:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2477:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "2469:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2492:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "2487:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2487:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:33:1"
									},
									"returnParameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2510:0:1"
									},
									"scope": 1344,
									"src": "2442:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1304,
										"nodeType": "StructuredDocumentation",
										"src": "2517:135:1",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1313,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2666:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2691:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "2683:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2708:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "2700:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:35:1"
									},
									"returnParameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "2741:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1310,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2741:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:6:1"
									},
									"scope": 1344,
									"src": "2657:90:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1314,
										"nodeType": "StructuredDocumentation",
										"src": "2753:559:1",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1327,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3326:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3360:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "3352:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3382:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "3374:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3402:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "3394:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3394:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3422:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "3414:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3414:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3453:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "3438:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1323,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3438:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3342:121:1"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3472:0:1"
									},
									"scope": 1344,
									"src": "3317:156:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "3479:390:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1343,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3883:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3922:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "3914:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3914:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3944:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "3936:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3975:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "3956:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1333,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3956:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1334,
													"nodeType": "ArrayTypeName",
													"src": "3956:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4007:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "3988:26:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1336,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3988:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1337,
													"nodeType": "ArrayTypeName",
													"src": "3988:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4039:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "4024:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1339,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4024:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:145:1"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4058:0:1"
									},
									"scope": 1344,
									"src": "3874:185:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1345,
							"src": "335:3726:1",
							"usedErrors": []
						}
					],
					"src": "95:3967:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1385
						],
						"IERC165": [
							2113
						]
					},
					"id": 1386,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1346,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1347,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1386,
							"sourceUnit": 2114,
							"src": "143:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1349,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2113,
										"src": "262:7:2"
									},
									"id": 1350,
									"nodeType": "InheritanceSpecifier",
									"src": "262:7:2"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1348,
								"nodeType": "StructuredDocumentation",
								"src": "192:39:2",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1385,
							"linearizedBaseContracts": [
								1385,
								2113
							],
							"name": "IERC1155Receiver",
							"nameLocation": "242:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "276:826:2",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1366,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1116:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1151:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "1143:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1177:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "1169:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1199:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "1191:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1219:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "1211:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1249:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "1234:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1360,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1234:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:126:2"
									},
									"returnParameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "1278:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1363,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1278:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1277:8:2"
									},
									"scope": 1385,
									"src": "1107:179:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1367,
										"nodeType": "StructuredDocumentation",
										"src": "1292:994:2",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1384,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2300:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2340:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "2332:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2366:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "2358:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2399:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "2380:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1372,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2380:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1373,
													"nodeType": "ArrayTypeName",
													"src": "2380:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2431:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "2412:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1375,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2412:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1376,
													"nodeType": "ArrayTypeName",
													"src": "2412:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2462:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "2447:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1378,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2447:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:150:2"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "2491:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1381,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2491:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2490:8:2"
									},
									"scope": 1385,
									"src": "2291:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1386,
							"src": "232:2269:2",
							"usedErrors": []
						}
					],
					"src": "118:2384:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
					"exportedSymbols": {
						"Address": [
							1852
						],
						"Context": [
							1874
						],
						"ERC1155": [
							1222
						],
						"ERC1155Supply": [
							1542
						],
						"ERC165": [
							2101
						],
						"IERC1155": [
							1344
						],
						"IERC1155MetadataURI": [
							1557
						],
						"IERC1155Receiver": [
							1385
						],
						"IERC165": [
							2113
						]
					},
					"id": 1543,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1387,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "126:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "../ERC1155.sol",
							"id": 1388,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1543,
							"sourceUnit": 1223,
							"src": "151:24:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1390,
										"name": "ERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1222,
										"src": "557:7:3"
									},
									"id": 1391,
									"nodeType": "InheritanceSpecifier",
									"src": "557:7:3"
								}
							],
							"canonicalName": "ERC1155Supply",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1389,
								"nodeType": "StructuredDocumentation",
								"src": "177:344:3",
								"text": " @dev Extension of ERC1155 that adds tracking of total supply per id.\n Useful for scenarios where Fungible and Non-fungible tokens have to be\n clearly identified. Note: While a totalSupply of 1 might mean the\n corresponding is an NFT, there is no guarantees that no other token with the\n same id are not going to be minted."
							},
							"fullyImplemented": false,
							"id": 1542,
							"linearizedBaseContracts": [
								1542,
								1222,
								1557,
								1344,
								2101,
								2113,
								1874
							],
							"name": "ERC1155Supply",
							"nameLocation": "540:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1395,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "607:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1542,
									"src": "571:48:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1394,
										"keyType": {
											"id": 1392,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "579:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "571:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 1393,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "590:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1407,
										"nodeType": "Block",
										"src": "768:40:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1403,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1395,
														"src": "785:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1405,
													"indexExpression": {
														"id": 1404,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1398,
														"src": "798:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "785:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1402,
												"id": 1406,
												"nodeType": "Return",
												"src": "778:23:3"
											}
										]
									},
									"documentation": {
										"id": 1396,
										"nodeType": "StructuredDocumentation",
										"src": "626:66:3",
										"text": " @dev Total amount of tokens in with a given id."
									},
									"functionSelector": "bd85b039",
									"id": 1408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "706:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "726:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "718:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "718:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "717:12:3"
									},
									"returnParameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "759:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "759:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:9:3"
									},
									"scope": 1542,
									"src": "697:111:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1423,
										"nodeType": "Block",
										"src": "964:57:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1418,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "1007:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1416,
																"name": "ERC1155Supply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1542,
																"src": "981:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC1155Supply_$1542_$",
																	"typeString": "type(contract ERC1155Supply)"
																}
															},
															"id": 1417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "totalSupply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1408,
															"src": "981:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "981:29:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1420,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1013:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "981:33:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1415,
												"id": 1422,
												"nodeType": "Return",
												"src": "974:40:3"
											}
										]
									},
									"documentation": {
										"id": 1409,
										"nodeType": "StructuredDocumentation",
										"src": "814:82:3",
										"text": " @dev Indicates whether any token exist with a given id, or not."
									},
									"functionSelector": "4f558e79",
									"id": 1424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exists",
									"nameLocation": "910:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "925:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "917:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "916:12:3"
									},
									"returnParameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "958:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1413,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "958:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "957:6:3"
									},
									"scope": 1542,
									"src": "901:120:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1046
									],
									"body": {
										"id": 1540,
										"nodeType": "Block",
										"src": "1312:683:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1446,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "1349:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1447,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1429,
															"src": "1359:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1448,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "1365:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1449,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1434,
															"src": "1369:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1450,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "1374:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1451,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "1383:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1443,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1322:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC1155Supply_$1542_$",
																"typeString": "type(contract super ERC1155Supply)"
															}
														},
														"id": 1445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1046,
														"src": "1322:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1322:66:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1453,
												"nodeType": "ExpressionStatement",
												"src": "1322:66:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1454,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "1403:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1419:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1411:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1455,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1411:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1458,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1411:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1403:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1484,
												"nodeType": "IfStatement",
												"src": "1399:156:3",
												"trueBody": {
													"id": 1483,
													"nodeType": "Block",
													"src": "1423:132:3",
													"statements": [
														{
															"body": {
																"id": 1481,
																"nodeType": "Block",
																"src": "1478:67:3",
																"statements": [
																	{
																		"expression": {
																			"id": 1479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1471,
																					"name": "_totalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1395,
																					"src": "1496:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																						"typeString": "mapping(uint256 => uint256)"
																					}
																				},
																				"id": 1475,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 1472,
																						"name": "ids",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1434,
																						"src": "1509:3:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 1474,
																					"indexExpression": {
																						"id": 1473,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1461,
																						"src": "1513:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "1509:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "1496:20:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1476,
																					"name": "amounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1437,
																					"src": "1520:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 1478,
																				"indexExpression": {
																					"id": 1477,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1461,
																					"src": "1528:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1520:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1496:34:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1480,
																		"nodeType": "ExpressionStatement",
																		"src": "1496:34:3"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1464,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1461,
																	"src": "1457:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1465,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1434,
																		"src": "1461:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "1461:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1457:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1482,
															"initializationExpression": {
																"assignments": [
																	1461
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1461,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "1450:1:3",
																		"nodeType": "VariableDeclaration",
																		"scope": 1482,
																		"src": "1442:9:3",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1460,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1442:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1463,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1454:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "1442:13:3"
															},
															"loopExpression": {
																"expression": {
																	"id": 1469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": true,
																	"src": "1473:3:3",
																	"subExpression": {
																		"id": 1468,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1461,
																		"src": "1475:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1470,
																"nodeType": "ExpressionStatement",
																"src": "1473:3:3"
															},
															"nodeType": "ForStatement",
															"src": "1437:108:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1485,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1431,
														"src": "1569:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1488,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1583:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1575:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1486,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1575:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1489,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1575:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1569:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1539,
												"nodeType": "IfStatement",
												"src": "1565:424:3",
												"trueBody": {
													"id": 1538,
													"nodeType": "Block",
													"src": "1587:402:3",
													"statements": [
														{
															"body": {
																"id": 1536,
																"nodeType": "Block",
																"src": "1642:337:3",
																"statements": [
																	{
																		"assignments": [
																			1503
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1503,
																				"mutability": "mutable",
																				"name": "id",
																				"nameLocation": "1668:2:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1536,
																				"src": "1660:10:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1502,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1660:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1507,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1504,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1434,
																				"src": "1673:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1506,
																			"indexExpression": {
																				"id": 1505,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1492,
																				"src": "1677:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1673:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "1660:19:3"
																	},
																	{
																		"assignments": [
																			1509
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1509,
																				"mutability": "mutable",
																				"name": "amount",
																				"nameLocation": "1705:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1536,
																				"src": "1697:14:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1508,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1697:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1513,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1510,
																				"name": "amounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1437,
																				"src": "1714:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1512,
																			"indexExpression": {
																				"id": 1511,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1492,
																				"src": "1722:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1714:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "1697:27:3"
																	},
																	{
																		"assignments": [
																			1515
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1515,
																				"mutability": "mutable",
																				"name": "supply",
																				"nameLocation": "1750:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1536,
																				"src": "1742:14:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1514,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1742:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1519,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1516,
																				"name": "_totalSupply",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1395,
																				"src": "1759:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1518,
																			"indexExpression": {
																				"id": 1517,
																				"name": "id",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1503,
																				"src": "1772:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1759:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "1742:33:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1523,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1521,
																						"name": "supply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1515,
																						"src": "1801:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"id": 1522,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1509,
																						"src": "1811:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1801:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "455243313135353a206275726e20616d6f756e74206578636565647320746f74616c537570706c79",
																					"id": 1524,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1819:42:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_9eb0869d69143813ac9f244871191d8f2e530e71a4599ba9db4501f0f6110ee4",
																						"typeString": "literal_string \"ERC1155: burn amount exceeds totalSupply\""
																					},
																					"value": "ERC1155: burn amount exceeds totalSupply"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_9eb0869d69143813ac9f244871191d8f2e530e71a4599ba9db4501f0f6110ee4",
																						"typeString": "literal_string \"ERC1155: burn amount exceeds totalSupply\""
																					}
																				],
																				"id": 1520,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "1793:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1793:69:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1526,
																		"nodeType": "ExpressionStatement",
																		"src": "1793:69:3"
																	},
																	{
																		"id": 1535,
																		"nodeType": "UncheckedBlock",
																		"src": "1880:85:3",
																		"statements": [
																			{
																				"expression": {
																					"id": 1533,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"id": 1527,
																							"name": "_totalSupply",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1395,
																							"src": "1912:12:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																								"typeString": "mapping(uint256 => uint256)"
																							}
																						},
																						"id": 1529,
																						"indexExpression": {
																							"id": 1528,
																							"name": "id",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1503,
																							"src": "1925:2:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "1912:16:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1532,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1530,
																							"name": "supply",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1515,
																							"src": "1931:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 1531,
																							"name": "amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1509,
																							"src": "1940:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1931:15:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1912:34:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1534,
																				"nodeType": "ExpressionStatement",
																				"src": "1912:34:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1495,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1492,
																	"src": "1621:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1496,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1434,
																		"src": "1625:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "1625:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1621:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1537,
															"initializationExpression": {
																"assignments": [
																	1492
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1492,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "1614:1:3",
																		"nodeType": "VariableDeclaration",
																		"scope": 1537,
																		"src": "1606:9:3",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1491,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1606:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1494,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1618:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "1606:13:3"
															},
															"loopExpression": {
																"expression": {
																	"id": 1500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": true,
																	"src": "1637:3:3",
																	"subExpression": {
																		"id": 1499,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1492,
																		"src": "1639:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1501,
																"nodeType": "ExpressionStatement",
																"src": "1637:3:3"
															},
															"nodeType": "ForStatement",
															"src": "1601:378:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1425,
										"nodeType": "StructuredDocumentation",
										"src": "1027:59:3",
										"text": " @dev See {ERC1155-_beforeTokenTransfer}."
									},
									"id": 1541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "1100:20:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1441,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1303:8:3"
									},
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1138:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "1130:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1164:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "1156:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1186:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "1178:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "1215:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "1198:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1432,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1198:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1433,
													"nodeType": "ArrayTypeName",
													"src": "1198:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1245:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "1228:24:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1435,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1228:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1436,
													"nodeType": "ArrayTypeName",
													"src": "1228:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1275:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "1262:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1438,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1262:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1120:165:3"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1312:0:3"
									},
									"scope": 1542,
									"src": "1091:904:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1543,
							"src": "522:1475:3",
							"usedErrors": []
						}
					],
					"src": "126:1872:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1344
						],
						"IERC1155MetadataURI": [
							1557
						],
						"IERC165": [
							2113
						]
					},
					"id": 1558,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1544,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "117:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1545,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1558,
							"sourceUnit": 1345,
							"src": "142:25:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1547,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1344,
										"src": "397:8:4"
									},
									"id": 1548,
									"nodeType": "InheritanceSpecifier",
									"src": "397:8:4"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1546,
								"nodeType": "StructuredDocumentation",
								"src": "169:194:4",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1557,
							"linearizedBaseContracts": [
								1557,
								1344,
								2113
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "374:19:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1549,
										"nodeType": "StructuredDocumentation",
										"src": "412:192:4",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1556,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "618:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "630:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "622:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "621:12:4"
									},
									"returnParameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "657:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1553,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "657:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:15:4"
									},
									"scope": 1557,
									"src": "609:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1558,
							"src": "364:310:4",
							"usedErrors": []
						}
					],
					"src": "117:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1852
						]
					},
					"id": 1853,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1559,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1560,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1852,
							"linearizedBaseContracts": [
								1852
							],
							"name": "Address",
							"nameLocation": "202:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1574,
										"nodeType": "Block",
										"src": "1241:254:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1568,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1563,
																"src": "1465:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1571,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1567,
												"id": 1573,
												"nodeType": "Return",
												"src": "1458:30:5"
											}
										]
									},
									"documentation": {
										"id": 1561,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "1195:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:5"
									},
									"returnParameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "1235:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:5"
									},
									"scope": 1852,
									"src": "1175:320:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1608,
										"nodeType": "Block",
										"src": "2483:241:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1586,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1852",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1852",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1584,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1589,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1580,
																"src": "2526:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1591,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1583,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1593,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:5"
											},
											{
												"assignments": [
													1595,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1595,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1608,
														"src": "2578:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1594,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1602,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1596,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1578,
																"src": "2596:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1598,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1580,
																"src": "2618:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1604,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "2647:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1603,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1607,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:5"
											}
										]
									},
									"documentation": {
										"id": 1576,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "2431:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "2458:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:5"
									},
									"returnParameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:5"
									},
									"scope": 1852,
									"src": "2412:312:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1625,
										"nodeType": "Block",
										"src": "3555:84:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1620,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "3585:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1621,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1614,
															"src": "3593:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1619,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1626,
															1646
														],
														"referencedDeclaration": 1646,
														"src": "3572:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1618,
												"id": 1624,
												"nodeType": "Return",
												"src": "3565:67:5"
											}
										]
									},
									"documentation": {
										"id": 1610,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "3488:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "3504:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1613,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:5"
									},
									"returnParameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "3541:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1616,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:5"
									},
									"scope": 1852,
									"src": "3466:173:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1645,
										"nodeType": "Block",
										"src": "4008:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1639,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1629,
															"src": "4047:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1640,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1631,
															"src": "4055:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1642,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1633,
															"src": "4064:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1638,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1666,
															1716
														],
														"referencedDeclaration": 1716,
														"src": "4025:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1637,
												"id": 1644,
												"nodeType": "Return",
												"src": "4018:59:5"
											}
										]
									},
									"documentation": {
										"id": 1627,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "3892:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "3916:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1630,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "3943:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1632,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:5"
									},
									"returnParameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "3994:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1635,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:5"
									},
									"scope": 1852,
									"src": "3861:223:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1665,
										"nodeType": "Block",
										"src": "4589:111:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1659,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1649,
															"src": "4628:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1660,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1651,
															"src": "4636:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1661,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1653,
															"src": "4642:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1658,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1666,
															1716
														],
														"referencedDeclaration": 1716,
														"src": "4606:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1657,
												"id": 1664,
												"nodeType": "Return",
												"src": "4599:94:5"
											}
										]
									},
									"documentation": {
										"id": 1647,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "4486:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "4510:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1650,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "4537:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:5"
									},
									"returnParameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "4575:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1655,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:5"
									},
									"scope": 1852,
									"src": "4446:254:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1715,
										"nodeType": "Block",
										"src": "5127:320:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1683,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1852",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1852",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1681,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1686,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1673,
																"src": "5170:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1680,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1690,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1693,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1669,
																	"src": "5247:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1692,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1575,
																"src": "5236:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1695,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1691,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1697,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:5"
											},
											{
												"assignments": [
													1699,
													1701
												],
												"declarations": [
													{
														"constant": false,
														"id": 1699,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1715,
														"src": "5300:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1698,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1701,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1715,
														"src": "5314:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1700,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1708,
												"initialValue": {
													"arguments": [
														{
															"id": 1706,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "5367:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1702,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1669,
																"src": "5341:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1704,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1673,
																"src": "5360:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1710,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1699,
															"src": "5406:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1711,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1701,
															"src": "5415:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1712,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1675,
															"src": "5427:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1709,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1851,
														"src": "5389:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1679,
												"id": 1714,
												"nodeType": "Return",
												"src": "5382:58:5"
											}
										]
									},
									"documentation": {
										"id": 1667,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "4988:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "5012:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1670,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "5039:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "5062:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1674,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:5"
									},
									"returnParameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "5113:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1677,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:5"
									},
									"scope": 1852,
									"src": "4948:499:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1732,
										"nodeType": "Block",
										"src": "5724:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1727,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "5760:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1728,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1721,
															"src": "5768:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1729,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1726,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1733,
															1768
														],
														"referencedDeclaration": 1768,
														"src": "5741:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1725,
												"id": 1731,
												"nodeType": "Return",
												"src": "5734:80:5"
											}
										]
									},
									"documentation": {
										"id": 1717,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "5652:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "5668:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1720,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:5"
									},
									"returnParameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "5710:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1723,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:5"
									},
									"scope": 1852,
									"src": "5624:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1767,
										"nodeType": "Block",
										"src": "6163:228:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1747,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1736,
																	"src": "6192:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1746,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1575,
																"src": "6181:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1749,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1745,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1751,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:5"
											},
											{
												"assignments": [
													1753,
													1755
												],
												"declarations": [
													{
														"constant": false,
														"id": 1753,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1767,
														"src": "6252:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1752,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1755,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1767,
														"src": "6266:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1754,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1760,
												"initialValue": {
													"arguments": [
														{
															"id": 1758,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1738,
															"src": "6311:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1756,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1736,
															"src": "6293:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1762,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "6350:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1763,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1755,
															"src": "6359:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1764,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1740,
															"src": "6371:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1761,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1851,
														"src": "6333:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1744,
												"id": 1766,
												"nodeType": "Return",
												"src": "6326:58:5"
											}
										]
									},
									"documentation": {
										"id": 1734,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "6042:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "6066:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1737,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "6093:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:5"
									},
									"returnParameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "6149:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1742,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:5"
									},
									"scope": 1852,
									"src": "6005:386:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1784,
										"nodeType": "Block",
										"src": "6667:101:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1779,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1771,
															"src": "6705:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1780,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1773,
															"src": "6713:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1781,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1778,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1785,
															1820
														],
														"referencedDeclaration": 1820,
														"src": "6684:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1777,
												"id": 1783,
												"nodeType": "Return",
												"src": "6677:84:5"
											}
										]
									},
									"documentation": {
										"id": 1769,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "6600:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "6616:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1772,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:5"
									},
									"returnParameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "6653:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1775,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:5"
									},
									"scope": 1852,
									"src": "6570:198:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1819,
										"nodeType": "Block",
										"src": "7109:232:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1799,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1788,
																	"src": "7138:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1798,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1575,
																"src": "7127:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1797,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1803,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:5"
											},
											{
												"assignments": [
													1805,
													1807
												],
												"declarations": [
													{
														"constant": false,
														"id": 1805,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1819,
														"src": "7200:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1804,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1807,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1819,
														"src": "7214:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1806,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1812,
												"initialValue": {
													"arguments": [
														{
															"id": 1810,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1790,
															"src": "7261:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1808,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1788,
															"src": "7241:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1814,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1805,
															"src": "7300:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1815,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1807,
															"src": "7309:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1816,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1792,
															"src": "7321:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1813,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1851,
														"src": "7283:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1796,
												"id": 1818,
												"nodeType": "Return",
												"src": "7276:58:5"
											}
										]
									},
									"documentation": {
										"id": 1786,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "6993:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "7017:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1789,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "7044:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1791,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:5"
									},
									"returnParameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "7095:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1794,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:5"
									},
									"scope": 1852,
									"src": "6954:387:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1850,
										"nodeType": "Block",
										"src": "7721:532:5",
										"statements": [
											{
												"condition": {
													"id": 1832,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1823,
													"src": "7735:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1848,
													"nodeType": "Block",
													"src": "7792:455:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1836,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1825,
																		"src": "7876:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1846,
																"nodeType": "Block",
																"src": "8184:53:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1843,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1827,
																					"src": "8209:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1842,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1845,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:5"
																	}
																]
															},
															"id": 1847,
															"nodeType": "IfStatement",
															"src": "7872:365:5",
															"trueBody": {
																"id": 1841,
																"nodeType": "Block",
																"src": "7899:279:5",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:5",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:5"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:5"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:5",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:5",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:5"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:5"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:5"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:5"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1825,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:5",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1825,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:5",
																				"valueSize": 1
																			}
																		],
																		"id": 1840,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:5"
																	}
																]
															}
														}
													]
												},
												"id": 1849,
												"nodeType": "IfStatement",
												"src": "7731:516:5",
												"trueBody": {
													"id": 1835,
													"nodeType": "Block",
													"src": "7744:42:5",
													"statements": [
														{
															"expression": {
																"id": 1833,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1825,
																"src": "7765:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1831,
															"id": 1834,
															"nodeType": "Return",
															"src": "7758:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1821,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:5",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "7596:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1822,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "7618:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1824,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "7651:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1826,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:5"
									},
									"returnParameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "7707:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1829,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:5"
									},
									"scope": 1852,
									"src": "7561:692:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1853,
							"src": "194:8061:5",
							"usedErrors": []
						}
					],
					"src": "101:8155:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1874
						]
					},
					"id": 1875,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1854,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1855,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1874,
							"linearizedBaseContracts": [
								1874
							],
							"name": "Context",
							"nameLocation": "626:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1863,
										"nodeType": "Block",
										"src": "702:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1860,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1859,
												"id": 1862,
												"nodeType": "Return",
												"src": "712:17:6"
											}
										]
									},
									"id": 1864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:6"
									},
									"returnParameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "693:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:6"
									},
									"scope": 1874,
									"src": "640:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1872,
										"nodeType": "Block",
										"src": "809:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1869,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1868,
												"id": 1871,
												"nodeType": "Return",
												"src": "819:15:6"
											}
										]
									},
									"id": 1873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:6"
									},
									"returnParameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "793:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1866,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:6"
									},
									"scope": 1874,
									"src": "742:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1875,
							"src": "608:235:6",
							"usedErrors": []
						}
					],
					"src": "86:758:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							2077
						]
					},
					"id": 2078,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1876,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1877,
								"nodeType": "StructuredDocumentation",
								"src": "111:34:7",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2077,
							"linearizedBaseContracts": [
								2077
							],
							"name": "Strings",
							"nameLocation": "154:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1880,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "193:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 2077,
									"src": "168:58:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1878,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "168:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1879,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "208:18:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1958,
										"nodeType": "Block",
										"src": "399:632:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1888,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1883,
														"src": "601:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1889,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "610:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "601:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1894,
												"nodeType": "IfStatement",
												"src": "597:51:7",
												"trueBody": {
													"id": 1893,
													"nodeType": "Block",
													"src": "613:35:7",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1891,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "634:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 1887,
															"id": 1892,
															"nodeType": "Return",
															"src": "627:10:7"
														}
													]
												}
											},
											{
												"assignments": [
													1896
												],
												"declarations": [
													{
														"constant": false,
														"id": 1896,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "665:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1958,
														"src": "657:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1895,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "657:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1898,
												"initialValue": {
													"id": 1897,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1883,
													"src": "672:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "657:20:7"
											},
											{
												"assignments": [
													1900
												],
												"declarations": [
													{
														"constant": false,
														"id": 1900,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "695:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1958,
														"src": "687:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1899,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "687:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1901,
												"nodeType": "VariableDeclarationStatement",
												"src": "687:14:7"
											},
											{
												"body": {
													"id": 1912,
													"nodeType": "Block",
													"src": "729:57:7",
													"statements": [
														{
															"expression": {
																"id": 1906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "743:8:7",
																"subExpression": {
																	"id": 1905,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1900,
																	"src": "743:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1907,
															"nodeType": "ExpressionStatement",
															"src": "743:8:7"
														},
														{
															"expression": {
																"id": 1910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1908,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1896,
																	"src": "765:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "773:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "765:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1911,
															"nodeType": "ExpressionStatement",
															"src": "765:10:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1902,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1896,
														"src": "718:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1903,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "726:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "718:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1913,
												"nodeType": "WhileStatement",
												"src": "711:75:7"
											},
											{
												"assignments": [
													1915
												],
												"declarations": [
													{
														"constant": false,
														"id": 1915,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "808:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1958,
														"src": "795:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1914,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "795:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1920,
												"initialValue": {
													"arguments": [
														{
															"id": 1918,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1900,
															"src": "827:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1917,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "817:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1916,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "821:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "817:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "795:39:7"
											},
											{
												"body": {
													"id": 1951,
													"nodeType": "Block",
													"src": "863:131:7",
													"statements": [
														{
															"expression": {
																"id": 1926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1924,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1900,
																	"src": "877:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "887:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "877:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1927,
															"nodeType": "ExpressionStatement",
															"src": "877:11:7"
														},
														{
															"expression": {
																"id": 1945,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1928,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1915,
																		"src": "902:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1930,
																	"indexExpression": {
																		"id": 1929,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1900,
																		"src": "909:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "902:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1942,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 1935,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "932:2:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1940,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1938,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1883,
																									"src": "945:5:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 1939,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "953:2:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "945:10:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1937,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "937:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 1936,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "937:7:7",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1941,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "937:19:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "932:24:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1934,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "926:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1933,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "926:5:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1943,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "926:31:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1932,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "919:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1931,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "919:6:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1944,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "919:39:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "902:56:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1946,
															"nodeType": "ExpressionStatement",
															"src": "902:56:7"
														},
														{
															"expression": {
																"id": 1949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1947,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1883,
																	"src": "972:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "981:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "972:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1950,
															"nodeType": "ExpressionStatement",
															"src": "972:11:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1921,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1883,
														"src": "851:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1922,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "860:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "851:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1952,
												"nodeType": "WhileStatement",
												"src": "844:150:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1955,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1915,
															"src": "1017:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1954,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1010:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1953,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1010:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1887,
												"id": 1957,
												"nodeType": "Return",
												"src": "1003:21:7"
											}
										]
									},
									"documentation": {
										"id": 1881,
										"nodeType": "StructuredDocumentation",
										"src": "233:90:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1959,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "337:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "354:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "346:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:15:7"
									},
									"returnParameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "384:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1885,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "384:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "383:15:7"
									},
									"scope": 2077,
									"src": "328:703:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1999,
										"nodeType": "Block",
										"src": "1210:255:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1967,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1962,
														"src": "1224:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1968,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1233:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1224:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1973,
												"nodeType": "IfStatement",
												"src": "1220:54:7",
												"trueBody": {
													"id": 1972,
													"nodeType": "Block",
													"src": "1236:38:7",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 1970,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1257:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 1966,
															"id": 1971,
															"nodeType": "Return",
															"src": "1250:13:7"
														}
													]
												}
											},
											{
												"assignments": [
													1975
												],
												"declarations": [
													{
														"constant": false,
														"id": 1975,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1291:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1999,
														"src": "1283:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1974,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1283:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1977,
												"initialValue": {
													"id": 1976,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1962,
													"src": "1298:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1283:20:7"
											},
											{
												"assignments": [
													1979
												],
												"declarations": [
													{
														"constant": false,
														"id": 1979,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1321:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1999,
														"src": "1313:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1978,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1313:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1981,
												"initialValue": {
													"hexValue": "30",
													"id": 1980,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1330:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1313:18:7"
											},
											{
												"body": {
													"id": 1992,
													"nodeType": "Block",
													"src": "1359:57:7",
													"statements": [
														{
															"expression": {
																"id": 1986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1373:8:7",
																"subExpression": {
																	"id": 1985,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1979,
																	"src": "1373:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1987,
															"nodeType": "ExpressionStatement",
															"src": "1373:8:7"
														},
														{
															"expression": {
																"id": 1990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1988,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1975,
																	"src": "1395:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 1989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1404:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1395:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1991,
															"nodeType": "ExpressionStatement",
															"src": "1395:10:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1982,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1975,
														"src": "1348:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1983,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1356:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1348:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1993,
												"nodeType": "WhileStatement",
												"src": "1341:75:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1995,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1962,
															"src": "1444:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1996,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1979,
															"src": "1451:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1994,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2000,
															2076
														],
														"referencedDeclaration": 2076,
														"src": "1432:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1432:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1966,
												"id": 1998,
												"nodeType": "Return",
												"src": "1425:33:7"
											}
										]
									},
									"documentation": {
										"id": 1960,
										"nodeType": "StructuredDocumentation",
										"src": "1037:94:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 2000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1145:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1165:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "1157:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:15:7"
									},
									"returnParameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "1195:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1964,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1195:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:15:7"
									},
									"scope": 2077,
									"src": "1136:329:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2075,
										"nodeType": "Block",
										"src": "1678:351:7",
										"statements": [
											{
												"assignments": [
													2011
												],
												"declarations": [
													{
														"constant": false,
														"id": 2011,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1701:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 2075,
														"src": "1688:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2010,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1688:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2020,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1720:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2015,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2005,
																	"src": "1724:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1720:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 2017,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1733:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1720:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2013,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1710:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2012,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1714:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1710:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1688:47:7"
											},
											{
												"expression": {
													"id": 2025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2021,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2011,
															"src": "1745:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2023,
														"indexExpression": {
															"hexValue": "30",
															"id": 2022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1752:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1745:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2024,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1745:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2026,
												"nodeType": "ExpressionStatement",
												"src": "1745:15:7"
											},
											{
												"expression": {
													"id": 2031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2027,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2011,
															"src": "1770:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2029,
														"indexExpression": {
															"hexValue": "31",
															"id": 2028,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1777:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1770:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2030,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1782:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1770:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2032,
												"nodeType": "ExpressionStatement",
												"src": "1770:15:7"
											},
											{
												"body": {
													"id": 2061,
													"nodeType": "Block",
													"src": "1840:87:7",
													"statements": [
														{
															"expression": {
																"id": 2055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2047,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2011,
																		"src": "1854:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2049,
																	"indexExpression": {
																		"id": 2048,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2034,
																		"src": "1861:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1854:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2050,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1880,
																		"src": "1866:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2054,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2053,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2051,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2003,
																			"src": "1879:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2052,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1887:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1879:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1866:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1854:37:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2056,
															"nodeType": "ExpressionStatement",
															"src": "1854:37:7"
														},
														{
															"expression": {
																"id": 2059,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2057,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2003,
																	"src": "1905:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1905:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2060,
															"nodeType": "ExpressionStatement",
															"src": "1905:11:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2041,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2034,
														"src": "1828:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2042,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1832:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1828:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2062,
												"initializationExpression": {
													"assignments": [
														2034
													],
													"declarations": [
														{
															"constant": false,
															"id": 2034,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1808:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 2062,
															"src": "1800:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2033,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1800:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2040,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2039,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1812:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2036,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2005,
																"src": "1816:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1812:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2038,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1825:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1812:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1800:26:7"
												},
												"loopExpression": {
													"expression": {
														"id": 2045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1835:3:7",
														"subExpression": {
															"id": 2044,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2034,
															"src": "1837:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2046,
													"nodeType": "ExpressionStatement",
													"src": "1835:3:7"
												},
												"nodeType": "ForStatement",
												"src": "1795:132:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2064,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2003,
																"src": "1944:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2065,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1953:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1944:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 2067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1956:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 2063,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1936:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1936:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2069,
												"nodeType": "ExpressionStatement",
												"src": "1936:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2072,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2011,
															"src": "2015:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2071,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2008:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2070,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2008:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 2073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2008:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2009,
												"id": 2074,
												"nodeType": "Return",
												"src": "2001:21:7"
											}
										]
									},
									"documentation": {
										"id": 2001,
										"nodeType": "StructuredDocumentation",
										"src": "1471:112:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1597:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1617:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "1609:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1609:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1632:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "1624:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1608:31:7"
									},
									"returnParameters": {
										"id": 2009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "1663:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2007,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1663:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:15:7"
									},
									"scope": 2077,
									"src": "1588:441:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2078,
							"src": "146:1885:7",
							"usedErrors": []
						}
					],
					"src": "86:1946:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2101
						],
						"IERC165": [
							2113
						]
					},
					"id": 2102,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2079,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2080,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2102,
							"sourceUnit": 2114,
							"src": "124:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2082,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2113,
										"src": "754:7:8"
									},
									"id": 2083,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2081,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 2101,
							"linearizedBaseContracts": [
								2101,
								2113
							],
							"name": "ERC165",
							"nameLocation": "744:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2112
									],
									"body": {
										"id": 2099,
										"nodeType": "Block",
										"src": "920:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2092,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2086,
														"src": "937:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2094,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2113,
																	"src": "957:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2113_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2113_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2093,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2095,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2113",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2096,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2091,
												"id": 2098,
												"nodeType": "Return",
												"src": "930:47:8"
											}
										]
									},
									"documentation": {
										"id": 2084,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2088,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:8"
									},
									"parameters": {
										"id": 2087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "856:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2085,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:8"
									},
									"returnParameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "914:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2089,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:8"
									},
									"scope": 2101,
									"src": "829:155:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2102,
							"src": "726:260:8",
							"usedErrors": []
						}
					],
					"src": "99:888:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2113
						]
					},
					"id": 2114,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2103,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2104,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2113,
							"linearizedBaseContracts": [
								2113
							],
							"name": "IERC165",
							"nameLocation": "415:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2105,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 2112,
												"src": "801:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2106,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:9"
									},
									"returnParameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2112,
												"src": "844:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2109,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:9"
									},
									"scope": 2113,
									"src": "774:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2114,
							"src": "405:447:9",
							"usedErrors": []
						}
					],
					"src": "100:753:9"
				},
				"id": 9
			},
			"contracts/GU-NFT/ERC1155URIStorage.sol": {
				"ast": {
					"absolutePath": "contracts/GU-NFT/ERC1155URIStorage.sol",
					"exportedSymbols": {
						"Address": [
							1852
						],
						"Context": [
							1874
						],
						"ERC1155": [
							1222
						],
						"ERC1155URIStorage": [
							2214
						],
						"ERC165": [
							2101
						],
						"IERC1155": [
							1344
						],
						"IERC1155MetadataURI": [
							1557
						],
						"IERC1155Receiver": [
							1385
						],
						"IERC165": [
							2113
						],
						"Strings": [
							2077
						]
					},
					"id": 2215,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2115,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "133:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 2116,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2215,
							"sourceUnit": 2078,
							"src": "160:51:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"id": 2117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2215,
							"sourceUnit": 1223,
							"src": "213:59:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2119,
										"name": "ERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1222,
										"src": "468:7:10"
									},
									"id": 2120,
									"nodeType": "InheritanceSpecifier",
									"src": "468:7:10"
								}
							],
							"canonicalName": "ERC1155URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2118,
								"nodeType": "StructuredDocumentation",
								"src": "276:151:10",
								"text": " @dev ERC1155 token with storage based token URI management.\n Inspired by the ERC721URIStorage extension\n _Available since v4.6._"
							},
							"fullyImplemented": false,
							"id": 2214,
							"linearizedBaseContracts": [
								2214,
								1222,
								1557,
								1344,
								2101,
								2113,
								1874
							],
							"name": "ERC1155URIStorage",
							"nameLocation": "447:17:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2123,
									"libraryName": {
										"id": 2121,
										"name": "Strings",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2077,
										"src": "489:7:10"
									},
									"nodeType": "UsingForDirective",
									"src": "483:26:10",
									"typeName": {
										"id": 2122,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "501:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 2126,
									"mutability": "mutable",
									"name": "_baseURI",
									"nameLocation": "558:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 2214,
									"src": "543:28:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2124,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "543:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "",
										"id": 2125,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "569:2:10",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
											"typeString": "literal_string \"\""
										},
										"value": ""
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2130,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "655:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 2214,
									"src": "620:45:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 2129,
										"keyType": {
											"id": 2127,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "628:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "620:26:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueType": {
											"id": 2128,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "639:6:10",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2141,
										"nodeType": "Block",
										"src": "746:40:10",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2137,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2130,
														"src": "764:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 2139,
													"indexExpression": {
														"id": 2138,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2132,
														"src": "775:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "764:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2136,
												"id": 2140,
												"nodeType": "Return",
												"src": "757:21:10"
											}
										]
									},
									"functionSelector": "6c8b703f",
									"id": 2142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURIs",
									"nameLocation": "683:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "701:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2142,
												"src": "693:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:12:10"
									},
									"returnParameters": {
										"id": 2136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2142,
												"src": "726:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2134,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "726:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "725:15:10"
									},
									"scope": 2214,
									"src": "674:112:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2149,
										"nodeType": "Block",
										"src": "854:34:10",
										"statements": [
											{
												"expression": {
													"id": 2147,
													"name": "_baseURI",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2126,
													"src": "872:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2146,
												"id": 2148,
												"nodeType": "Return",
												"src": "865:15:10"
											}
										]
									},
									"functionSelector": "6c0360eb",
									"id": 2150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "baseURI",
									"nameLocation": "803:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "810:2:10"
									},
									"returnParameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "834:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2144,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "834:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "833:15:10"
									},
									"scope": 2214,
									"src": "794:94:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 2186,
										"nodeType": "Block",
										"src": "1716:268:10",
										"statements": [
											{
												"assignments": [
													2160
												],
												"declarations": [
													{
														"constant": false,
														"id": 2160,
														"mutability": "mutable",
														"name": "tokenURI",
														"nameLocation": "1741:8:10",
														"nodeType": "VariableDeclaration",
														"scope": 2186,
														"src": "1727:22:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 2159,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1727:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2164,
												"initialValue": {
													"baseExpression": {
														"id": 2161,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2130,
														"src": "1752:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 2163,
													"indexExpression": {
														"id": 2162,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2153,
														"src": "1763:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1752:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1727:44:10"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2167,
																		"name": "tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2160,
																		"src": "1888:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1882:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2165,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "1882:5:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1882:15:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1882:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1907:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1882:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"id": 2182,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2153,
																"src": "1968:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2180,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1958:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155URIStorage_$2214_$",
																	"typeString": "type(contract super ERC1155URIStorage)"
																}
															},
															"id": 2181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "uri",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 87,
															"src": "1958:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
																"typeString": "function (uint256) view returns (string memory)"
															}
														},
														"id": 2183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1958:18:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"id": 2184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1882:94:10",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2176,
																		"name": "_baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2126,
																		"src": "1935:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	},
																	{
																		"id": 2177,
																		"name": "tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2160,
																		"src": "1945:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 2174,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "1918:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 2175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "1918:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 2178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1918:36:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1911:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 2172,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1911:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 2179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1911:44:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2158,
												"id": 2185,
												"nodeType": "Return",
												"src": "1875:101:10"
											}
										]
									},
									"documentation": {
										"id": 2151,
										"nodeType": "StructuredDocumentation",
										"src": "894:733:10",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the concatenation of the `_baseURI`\n and the token-specific uri if the latter is set\n This enables the following behaviors:\n - if `_tokenURIs[tokenId]` is set, then the result is the concatenation\n   of `_baseURI` and `_tokenURIs[tokenId]` (keep in mind that `_baseURI`\n   is empty per default);\n - if `_tokenURIs[tokenId]` is NOT set then we fallback to `super.uri()`\n   which in most cases will contain `ERC1155._uri`;\n - if `_tokenURIs[tokenId]` is NOT set, and if the parents do not have a\n   uri value set, then the result is empty."
									},
									"functionSelector": "0e89341c",
									"id": 2187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "1642:3:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2155,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1683:8:10"
									},
									"parameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1654:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2187,
												"src": "1646:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1646:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1645:17:10"
									},
									"returnParameters": {
										"id": 2158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2187,
												"src": "1701:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2156,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1701:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1700:15:10"
									},
									"scope": 2214,
									"src": "1633:351:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2201,
										"nodeType": "Block",
										"src": "2144:93:10",
										"statements": [
											{
												"expression": {
													"id": 2199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2195,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2130,
															"src": "2155:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 2197,
														"indexExpression": {
															"id": 2196,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2190,
															"src": "2166:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2155:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2198,
														"name": "tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2192,
														"src": "2177:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2155:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2200,
												"nodeType": "ExpressionStatement",
												"src": "2155:30:10"
											}
										]
									},
									"documentation": {
										"id": 2188,
										"nodeType": "StructuredDocumentation",
										"src": "1992:71:10",
										"text": " @dev Sets `tokenURI` as the tokenURI of `tokenId`."
									},
									"id": 2202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "2078:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2094:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2202,
												"src": "2086:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2086:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "tokenURI",
												"nameLocation": "2117:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2202,
												"src": "2103:22:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2103:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2085:41:10"
									},
									"returnParameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:10"
									},
									"scope": 2214,
									"src": "2069:168:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2212,
										"nodeType": "Block",
										"src": "2387:39:10",
										"statements": [
											{
												"expression": {
													"id": 2210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2208,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2126,
														"src": "2398:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2209,
														"name": "__baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2205,
														"src": "2409:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2398:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2211,
												"nodeType": "ExpressionStatement",
												"src": "2398:20:10"
											}
										]
									},
									"documentation": {
										"id": 2203,
										"nodeType": "StructuredDocumentation",
										"src": "2245:73:10",
										"text": " @dev Sets `baseURI` as the `_baseURI` for all tokens"
									},
									"id": 2213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBaseURI",
									"nameLocation": "2333:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "__baseURI",
												"nameLocation": "2359:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2213,
												"src": "2345:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2204,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2345:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2344:25:10"
									},
									"returnParameters": {
										"id": 2207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2387:0:10"
									},
									"scope": 2214,
									"src": "2324:102:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2215,
							"src": "429:2000:10",
							"usedErrors": []
						}
					],
					"src": "133:2296:10"
				},
				"id": 10
			},
			"contracts/GU-NFT/GUCollections.sol": {
				"ast": {
					"absolutePath": "contracts/GU-NFT/GUCollections.sol",
					"exportedSymbols": {
						"Address": [
							1852
						],
						"Context": [
							1874
						],
						"ERC1155": [
							1222
						],
						"ERC1155Supply": [
							1542
						],
						"ERC1155URIStorage": [
							2214
						],
						"ERC165": [
							2101
						],
						"GUCollections": [
							2436
						],
						"IERC1155": [
							1344
						],
						"IERC1155MetadataURI": [
							1557
						],
						"IERC1155Receiver": [
							1385
						],
						"IERC165": [
							2113
						],
						"Strings": [
							2077
						]
					},
					"id": 2437,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2216,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "120:23:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"id": 2217,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2437,
							"sourceUnit": 1223,
							"src": "147:59:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
							"id": 2218,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2437,
							"sourceUnit": 1543,
							"src": "208:76:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/GU-NFT/ERC1155URIStorage.sol",
							"file": "./ERC1155URIStorage.sol",
							"id": 2219,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2437,
							"sourceUnit": 2215,
							"src": "286:33:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2220,
										"name": "ERC1155Supply",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1542,
										"src": "349:13:11"
									},
									"id": 2221,
									"nodeType": "InheritanceSpecifier",
									"src": "349:13:11"
								},
								{
									"baseName": {
										"id": 2222,
										"name": "ERC1155URIStorage",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2214,
										"src": "364:17:11"
									},
									"id": 2223,
									"nodeType": "InheritanceSpecifier",
									"src": "364:17:11"
								}
							],
							"canonicalName": "GUCollections",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2436,
							"linearizedBaseContracts": [
								2436,
								2214,
								1542,
								1222,
								1557,
								1344,
								2101,
								2113,
								1874
							],
							"name": "GUCollections",
							"nameLocation": "332:13:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2227,
									"mutability": "mutable",
									"name": "traders",
									"nameLocation": "415:7:11",
									"nodeType": "VariableDeclaration",
									"scope": 2436,
									"src": "389:33:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 2226,
										"keyType": {
											"id": 2224,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "398:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "389:25:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 2225,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "409:4:11",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "4b8c9c2d",
									"id": 2229,
									"mutability": "mutable",
									"name": "adminSafe",
									"nameLocation": "444:9:11",
									"nodeType": "VariableDeclaration",
									"scope": 2436,
									"src": "429:24:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2228,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "429:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "526af00f9bc92d53f2d0b4c603a1305395a04f7fb6a0a7962867d8d230467547",
									"id": 2233,
									"name": "TraderAuthorized",
									"nameLocation": "468:16:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2231,
												"indexed": true,
												"mutability": "mutable",
												"name": "traderAddress",
												"nameLocation": "501:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 2233,
												"src": "485:29:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "485:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "484:31:11"
									},
									"src": "462:54:11"
								},
								{
									"anonymous": false,
									"eventSelector": "e8185c1a3f6241a6224d99ff39e932ac24fc0d2c51b17e56c5d6f52aff1b5da1",
									"id": 2237,
									"name": "TraderDisauthorized",
									"nameLocation": "528:19:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2235,
												"indexed": true,
												"mutability": "mutable",
												"name": "traderAddress",
												"nameLocation": "564:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "548:29:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "548:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "547:31:11"
									},
									"src": "522:57:11"
								},
								{
									"anonymous": false,
									"eventSelector": "d4c1af98b758421a8d47b0bc04ecfa30233d5506955e8cde282417aa0d31d3b6",
									"id": 2241,
									"name": "AdminSafeChanged",
									"nameLocation": "591:16:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2239,
												"indexed": true,
												"mutability": "mutable",
												"name": "safeAddress",
												"nameLocation": "624:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2241,
												"src": "608:27:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "608:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "607:29:11"
									},
									"src": "585:52:11"
								},
								{
									"body": {
										"id": 2252,
										"nodeType": "Block",
										"src": "666:87:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 2244,
																"name": "traders",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2227,
																"src": "685:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 2247,
															"indexExpression": {
																"expression": {
																	"id": 2245,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "693:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "693:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "685:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f742077686974656c69737465642e",
															"id": 2248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "706:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bfcf428da2a377287b5d352c63b3be9ac4e5d20c502a185ebf9b34d347503e1a",
																"typeString": "literal_string \"You are not whitelisted.\""
															},
															"value": "You are not whitelisted."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bfcf428da2a377287b5d352c63b3be9ac4e5d20c502a185ebf9b34d347503e1a",
																"typeString": "literal_string \"You are not whitelisted.\""
															}
														],
														"id": 2243,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "677:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "677:56:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2250,
												"nodeType": "ExpressionStatement",
												"src": "677:56:11"
											},
											{
												"id": 2251,
												"nodeType": "PlaceholderStatement",
												"src": "744:1:11"
											}
										]
									},
									"id": 2253,
									"name": "onlyTraders",
									"nameLocation": "654:11:11",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "666:0:11"
									},
									"src": "645:108:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2264,
										"nodeType": "Block",
										"src": "784:89:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2256,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "803:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "803:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2258,
																"name": "adminSafe",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2229,
																"src": "815:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "803:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f742077686974656c69737465642e",
															"id": 2260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "826:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bfcf428da2a377287b5d352c63b3be9ac4e5d20c502a185ebf9b34d347503e1a",
																"typeString": "literal_string \"You are not whitelisted.\""
															},
															"value": "You are not whitelisted."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bfcf428da2a377287b5d352c63b3be9ac4e5d20c502a185ebf9b34d347503e1a",
																"typeString": "literal_string \"You are not whitelisted.\""
															}
														],
														"id": 2255,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "795:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "795:58:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2262,
												"nodeType": "ExpressionStatement",
												"src": "795:58:11"
											},
											{
												"id": 2263,
												"nodeType": "PlaceholderStatement",
												"src": "864:1:11"
											}
										]
									},
									"id": 2265,
									"name": "onlyAdminSafe",
									"nameLocation": "770:13:11",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "784:0:11"
									},
									"src": "761:112:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2279,
										"nodeType": "Block",
										"src": "941:35:11",
										"statements": [
											{
												"expression": {
													"id": 2277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2275,
														"name": "adminSafe",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2229,
														"src": "952:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2276,
														"name": "safe",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2269,
														"src": "964:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "952:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2278,
												"nodeType": "ExpressionStatement",
												"src": "952:16:11"
											}
										]
									},
									"id": 2280,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2272,
													"name": "uri_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2267,
													"src": "935:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 2273,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2271,
												"name": "ERC1155",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1222,
												"src": "927:7:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "927:13:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "907:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2280,
												"src": "893:18:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "893:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "safe",
												"nameLocation": "921:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2280,
												"src": "913:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "913:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "892:34:11"
									},
									"returnParameters": {
										"id": 2274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "941:0:11"
									},
									"scope": 2436,
									"src": "881:95:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2302,
										"nodeType": "Block",
										"src": "1049:149:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2288,
																"name": "adminSafe",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2229,
																"src": "1068:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2289,
																"name": "safe",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2282,
																"src": "1079:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1068:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726f7669646564206164647265737320616c726561647920736166652061646472657373",
															"id": 2291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1085:39:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fa3d7547ebdbd3d83688f57f208c1ceb8b68fc0b773db8e47be5f62dfed50852",
																"typeString": "literal_string \"Provided address already safe address\""
															},
															"value": "Provided address already safe address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fa3d7547ebdbd3d83688f57f208c1ceb8b68fc0b773db8e47be5f62dfed50852",
																"typeString": "literal_string \"Provided address already safe address\""
															}
														],
														"id": 2287,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1060:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1060:65:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2293,
												"nodeType": "ExpressionStatement",
												"src": "1060:65:11"
											},
											{
												"expression": {
													"id": 2296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2294,
														"name": "adminSafe",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2229,
														"src": "1136:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2295,
														"name": "safe",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2282,
														"src": "1148:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1136:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2297,
												"nodeType": "ExpressionStatement",
												"src": "1136:16:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2299,
															"name": "safe",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2282,
															"src": "1185:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2298,
														"name": "AdminSafeChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2241,
														"src": "1168:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1168:22:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2301,
												"nodeType": "EmitStatement",
												"src": "1163:27:11"
											}
										]
									},
									"functionSelector": "cb450772",
									"id": 2303,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2285,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2284,
												"name": "onlyAdminSafe",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2265,
												"src": "1030:13:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1030:13:11"
										}
									],
									"name": "changeAdminSafe",
									"nameLocation": "993:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2282,
												"mutability": "mutable",
												"name": "safe",
												"nameLocation": "1017:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2303,
												"src": "1009:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1008:14:11"
									},
									"returnParameters": {
										"id": 2286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1049:0:11"
									},
									"scope": 2436,
									"src": "984:214:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2328,
										"nodeType": "Block",
										"src": "1295:147:11",
										"statements": [
											{
												"expression": {
													"id": 2316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2312,
															"name": "traders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2227,
															"src": "1306:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2314,
														"indexExpression": {
															"id": 2313,
															"name": "trader",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2305,
															"src": "1314:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1306:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2315,
														"name": "permitted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2307,
														"src": "1322:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1306:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2317,
												"nodeType": "ExpressionStatement",
												"src": "1306:25:11"
											},
											{
												"condition": {
													"id": 2318,
													"name": "permitted",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2307,
													"src": "1346:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"eventCall": {
														"arguments": [
															{
																"id": 2324,
																"name": "trader",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2305,
																"src": "1427:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2323,
															"name": "TraderDisauthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2237,
															"src": "1407:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
																"typeString": "function (address)"
															}
														},
														"id": 2325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1407:27:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2326,
													"nodeType": "EmitStatement",
													"src": "1402:32:11"
												},
												"id": 2327,
												"nodeType": "IfStatement",
												"src": "1342:92:11",
												"trueBody": {
													"eventCall": {
														"arguments": [
															{
																"id": 2320,
																"name": "trader",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2305,
																"src": "1379:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2319,
															"name": "TraderAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2233,
															"src": "1362:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
																"typeString": "function (address)"
															}
														},
														"id": 2321,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1362:24:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2322,
													"nodeType": "EmitStatement",
													"src": "1357:29:11"
												}
											}
										]
									},
									"functionSelector": "d14186c6",
									"id": 2329,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2310,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2309,
												"name": "onlyAdminSafe",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2265,
												"src": "1276:13:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1276:13:11"
										}
									],
									"name": "setTraderPermission",
									"nameLocation": "1215:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2305,
												"mutability": "mutable",
												"name": "trader",
												"nameLocation": "1243:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2329,
												"src": "1235:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2307,
												"mutability": "mutable",
												"name": "permitted",
												"nameLocation": "1256:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2329,
												"src": "1251:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2306,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1251:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:32:11"
									},
									"returnParameters": {
										"id": 2311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1295:0:11"
									},
									"scope": 2436,
									"src": "1206:236:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										87,
										2187
									],
									"body": {
										"id": 2368,
										"nodeType": "Block",
										"src": "1553:195:11",
										"statements": [
											{
												"assignments": [
													2340
												],
												"declarations": [
													{
														"constant": false,
														"id": 2340,
														"mutability": "mutable",
														"name": "tokenURI",
														"nameLocation": "1578:8:11",
														"nodeType": "VariableDeclaration",
														"scope": 2368,
														"src": "1564:22:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 2339,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1564:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2344,
												"initialValue": {
													"arguments": [
														{
															"id": 2342,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2331,
															"src": "1599:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2341,
														"name": "tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2142,
														"src": "1589:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 2343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1589:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1564:43:11"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2351,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2347,
																		"name": "tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2340,
																		"src": "1633:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1627:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2345,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "1627:5:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 2348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1627:15:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1627:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2350,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1652:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1627:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"id": 2364,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2331,
																"src": "1732:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2362,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1722:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_GUCollections_$2436_$",
																	"typeString": "type(contract super GUCollections)"
																}
															},
															"id": 2363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "uri",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2187,
															"src": "1722:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
																"typeString": "function (uint256) view returns (string memory)"
															}
														},
														"id": 2365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1722:18:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"id": 2366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1627:113:11",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2356,
																			"name": "baseURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2150,
																			"src": "1680:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																				"typeString": "function () view returns (string memory)"
																			}
																		},
																		"id": 2357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1680:9:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 2358,
																		"name": "tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2340,
																		"src": "1691:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"hexValue": "2f6d657461646174612e6a736f6e",
																		"id": 2359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1701:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_36729b1384b41036aa5c7ea0f008334bd05ce4ca3b51916e8ea94d31c3454c5c",
																			"typeString": "literal_string \"/metadata.json\""
																		},
																		"value": "/metadata.json"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_36729b1384b41036aa5c7ea0f008334bd05ce4ca3b51916e8ea94d31c3454c5c",
																			"typeString": "literal_string \"/metadata.json\""
																		}
																	],
																	"expression": {
																		"id": 2354,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "1663:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 2355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "1663:16:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 2360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1663:55:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1656:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 2352,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1656:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 2361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1656:63:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2338,
												"id": 2367,
												"nodeType": "Return",
												"src": "1620:120:11"
											}
										]
									},
									"functionSelector": "0e89341c",
									"id": 2369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "1459:3:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2335,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2333,
												"name": "ERC1155URIStorage",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2214,
												"src": "1501:17:11"
											},
											{
												"id": 2334,
												"name": "ERC1155",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1222,
												"src": "1520:7:11"
											}
										],
										"src": "1492:36:11"
									},
									"parameters": {
										"id": 2332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2331,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1471:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "1463:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1463:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1462:17:11"
									},
									"returnParameters": {
										"id": 2338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "1538:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2336,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1538:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1537:15:11"
									},
									"scope": 2436,
									"src": "1450:298:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2380,
										"nodeType": "Block",
										"src": "1824:39:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2377,
															"name": "baseURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2371,
															"src": "1847:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														],
														"id": 2376,
														"name": "_setBaseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2213,
														"src": "1835:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 2378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1835:20:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2379,
												"nodeType": "ExpressionStatement",
												"src": "1835:20:11"
											}
										]
									},
									"functionSelector": "55f804b3",
									"id": 2381,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2374,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2373,
												"name": "onlyAdminSafe",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2265,
												"src": "1810:13:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1810:13:11"
										}
									],
									"name": "setBaseURI",
									"nameLocation": "1765:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "baseURI",
												"nameLocation": "1792:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2381,
												"src": "1776:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2370,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1776:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1775:25:11"
									},
									"returnParameters": {
										"id": 2375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1824:0:11"
									},
									"scope": 2436,
									"src": "1756:107:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1046,
										1541
									],
									"body": {
										"id": 2401,
										"nodeType": "Block",
										"src": "2056:2:11",
										"statements": []
									},
									"id": 2402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "1882:20:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2399,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2397,
												"name": "ERC1155",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1222,
												"src": "2032:7:11"
											},
											{
												"id": 2398,
												"name": "ERC1155Supply",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1542,
												"src": "2041:13:11"
											}
										],
										"src": "2023:32:11"
									},
									"parameters": {
										"id": 2396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2383,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1911:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2402,
												"src": "1903:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2385,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1929:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2402,
												"src": "1921:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1921:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2387,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1943:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2402,
												"src": "1935:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1935:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2390,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "1964:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2402,
												"src": "1947:20:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2388,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1947:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2389,
													"nodeType": "ArrayTypeName",
													"src": "1947:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2393,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1986:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2402,
												"src": "1969:24:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2391,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1969:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2392,
													"nodeType": "ArrayTypeName",
													"src": "1969:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2395,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2008:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2402,
												"src": "1995:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2394,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1995:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1902:111:11"
									},
									"returnParameters": {
										"id": 2400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2056:0:11"
									},
									"scope": 2436,
									"src": "1873:185:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2434,
										"nodeType": "Block",
										"src": "2162:132:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2416,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2406,
																"src": "2189:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2415,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "2177:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 2417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2177:15:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2418,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2196:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2177:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2426,
												"nodeType": "IfStatement",
												"src": "2173:78:11",
												"trueBody": {
													"id": 2425,
													"nodeType": "Block",
													"src": "2208:43:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2421,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2406,
																		"src": "2231:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2422,
																		"name": "cid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2410,
																		"src": "2235:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_calldata_ptr",
																			"typeString": "string calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_string_calldata_ptr",
																			"typeString": "string calldata"
																		}
																	],
																	"id": 2420,
																	"name": "_setURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		2202,
																		555
																	],
																	"referencedDeclaration": 2202,
																	"src": "2223:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (uint256,string memory)"
																	}
																},
																"id": 2423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2223:16:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2424,
															"nodeType": "ExpressionStatement",
															"src": "2223:16:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2428,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2404,
															"src": "2267:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2429,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2406,
															"src": "2271:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2430,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2408,
															"src": "2275:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2283:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2427,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 656,
														"src": "2261:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 2432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2433,
												"nodeType": "ExpressionStatement",
												"src": "2261:25:11"
											}
										]
									},
									"functionSelector": "bb7fde71",
									"id": 2435,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2413,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2412,
												"name": "onlyTraders",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2253,
												"src": "2150:11:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2150:11:11"
										}
									],
									"name": "mint",
									"nameLocation": "2075:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2404,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2088:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2435,
												"src": "2080:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2080:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2406,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2100:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2435,
												"src": "2092:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2092:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2408,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2112:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2435,
												"src": "2104:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2410,
												"mutability": "mutable",
												"name": "cid",
												"nameLocation": "2136:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2435,
												"src": "2120:19:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2409,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2120:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:61:11"
									},
									"returnParameters": {
										"id": 2414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2162:0:11"
									},
									"scope": 2436,
									"src": "2066:228:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2437,
							"src": "323:1976:11",
							"usedErrors": []
						}
					],
					"src": "120:2179:11"
				},
				"id": 11
			}
		}
	}
}