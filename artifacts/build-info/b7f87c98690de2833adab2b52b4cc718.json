{
	"id": "b7f87c98690de2833adab2b52b4cc718",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/GU-NFT/GUCollections.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/ERC1155.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\";\r\n\r\ncontract GUCollections is ERC1155Supply{\r\n    mapping (address => bool) traders;\r\n    address public adminSafe;\r\n\r\n    event TraderApproved(address indexed tokenAddress);\r\n    event AdminSafeChanged(address indexed safeAddress);\r\n\r\n    constructor(string memory uri_, address safe) ERC1155(uri_) {\r\n        adminSafe = safe;\r\n    }\r\n    \r\n    function changeAdminSafe(address safe) public onlyAdminSafe returns (bool)\r\n    {\r\n        require(adminSafe!=safe, \"Provided address already safe address\");\r\n        adminSafe = safe;\r\n        emit AdminSafeChanged(safe);\r\n        return true;\r\n    }\r\n\r\n    //Rastko addTrader() \r\n    //Rastko removeTrader()\r\n\r\n    modifier onlyTraders {\r\n        require(traders[msg.sender], 'You are not whitelisted.');\r\n        _;\r\n    }\r\n\r\n    modifier onlyAdminSafe {\r\n        require(msg.sender==address(0), 'You are not whitelisted.');\r\n        _;\r\n    }\r\n\r\n    function mint(address to, uint256 id, uint256 amount) public onlyTraders returns (bool) {\r\n        _mint(to, id, amount, \"\");\r\n        return true;\r\n    }\r\n\r\n}"
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/ERC1155Supply.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC1155.sol\";\n\n/**\n * @dev Extension of ERC1155 that adds tracking of total supply per id.\n *\n * Useful for scenarios where Fungible and Non-fungible tokens have to be\n * clearly identified. Note: While a totalSupply of 1 might mean the\n * corresponding is an NFT, there is no guarantees that no other token with the\n * same id are not going to be minted.\n */\nabstract contract ERC1155Supply is ERC1155 {\n    mapping(uint256 => uint256) private _totalSupply;\n\n    /**\n     * @dev Total amount of tokens in with a given id.\n     */\n    function totalSupply(uint256 id) public view virtual returns (uint256) {\n        return _totalSupply[id];\n    }\n\n    /**\n     * @dev Indicates whether any token exist with a given id, or not.\n     */\n    function exists(uint256 id) public view virtual returns (bool) {\n        return ERC1155Supply.totalSupply(id) > 0;\n    }\n\n    /**\n     * @dev See {ERC1155-_beforeTokenTransfer}.\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual override {\n        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        if (from == address(0)) {\n            for (uint256 i = 0; i < ids.length; ++i) {\n                _totalSupply[ids[i]] += amounts[i];\n            }\n        }\n\n        if (to == address(0)) {\n            for (uint256 i = 0; i < ids.length; ++i) {\n                _totalSupply[ids[i]] -= amounts[i];\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./extensions/IERC1155MetadataURI.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: balance query for the zero address\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(\n        address from,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(\n        address from,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":555:15275  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1092:1154  constructor(string memory uri_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1134:1147  _setURI(uri_) */\n  tag_6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1142:1146  uri_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1134:1141  _setURI */\n  tag_7\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1134:1147  _setURI(uri_) */\n  jump\t// in\ntag_6:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1092:1154  constructor(string memory uri_) {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":555:15275  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  jump(tag_23)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7936:8022  function _setURI(string memory newuri) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8002:8015  _uri = newuri */\n  dup1\n  mload\n  tag_10\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8002:8006  _uri */\n  0x02\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8002:8015  _uri = newuri */\n  0x20\n  dup5\n  add\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7936:8022  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":555:15275  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\ntag_11:\n  dup3\n  dup1\n  sload\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_15\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_18)\ntag_15:\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_18)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_18\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\n  pop\n  tag_19\n  swap3\n  swap2\n  pop\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\ntag_21:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_19\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_21)\n    /* \"#utility.yul\":14:1101   */\ntag_3:\n    /* \"#utility.yul\":94:100   */\n  0x00\n    /* \"#utility.yul\":125:127   */\n  0x20\n    /* \"#utility.yul\":168:170   */\n  dup1\n    /* \"#utility.yul\":156:165   */\n  dup4\n    /* \"#utility.yul\":147:154   */\n  dup6\n    /* \"#utility.yul\":143:166   */\n  sub\n    /* \"#utility.yul\":139:171   */\n  slt\n    /* \"#utility.yul\":136:188   */\n  iszero\n  tag_25\n  jumpi\n    /* \"#utility.yul\":184:185   */\n  0x00\n    /* \"#utility.yul\":181:182   */\n  dup1\n    /* \"#utility.yul\":174:186   */\n  revert\n    /* \"#utility.yul\":136:188   */\ntag_25:\n    /* \"#utility.yul\":211:227   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":276:290   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":273:307   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":303:304   */\n  0x00\n    /* \"#utility.yul\":300:301   */\n  dup1\n    /* \"#utility.yul\":293:305   */\n  revert\n    /* \"#utility.yul\":273:307   */\ntag_26:\n    /* \"#utility.yul\":341:347   */\n  dup2\n    /* \"#utility.yul\":330:339   */\n  dup6\n    /* \"#utility.yul\":326:348   */\n  add\n    /* \"#utility.yul\":316:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":386:393   */\n  dup6\n    /* \"#utility.yul\":379:383   */\n  0x1f\n    /* \"#utility.yul\":375:377   */\n  dup4\n    /* \"#utility.yul\":371:384   */\n  add\n    /* \"#utility.yul\":367:394   */\n  slt\n    /* \"#utility.yul\":357:412   */\n  tag_27\n  jumpi\n    /* \"#utility.yul\":408:409   */\n  0x00\n    /* \"#utility.yul\":405:406   */\n  dup1\n    /* \"#utility.yul\":398:410   */\n  revert\n    /* \"#utility.yul\":357:412   */\ntag_27:\n    /* \"#utility.yul\":437:439   */\n  dup2\n    /* \"#utility.yul\":431:440   */\n  mload\n    /* \"#utility.yul\":459:461   */\n  dup2\n    /* \"#utility.yul\":455:457   */\n  dup2\n    /* \"#utility.yul\":452:462   */\n  gt\n    /* \"#utility.yul\":449:485   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":465:483   */\n  tag_29\n  tag_30\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":540:542   */\n  0x40\n    /* \"#utility.yul\":534:543   */\n  mload\n    /* \"#utility.yul\":508:510   */\n  0x1f\n    /* \"#utility.yul\":594:607   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":590:612   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":614:616   */\n  0x3f\n    /* \"#utility.yul\":586:617   */\n  add\n    /* \"#utility.yul\":582:622   */\n  and\n    /* \"#utility.yul\":570:623   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":638:656   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":658:680   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":635:681   */\n  or\n    /* \"#utility.yul\":632:704   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":684:702   */\n  tag_32\n  tag_30\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":724:734   */\n  dup2\n    /* \"#utility.yul\":720:722   */\n  0x40\n    /* \"#utility.yul\":713:735   */\n  mstore\n    /* \"#utility.yul\":759:761   */\n  dup3\n    /* \"#utility.yul\":751:757   */\n  dup2\n    /* \"#utility.yul\":744:762   */\n  mstore\n    /* \"#utility.yul\":799:806   */\n  dup9\n    /* \"#utility.yul\":794:796   */\n  dup7\n    /* \"#utility.yul\":789:791   */\n  dup5\n    /* \"#utility.yul\":785:787   */\n  dup8\n    /* \"#utility.yul\":781:792   */\n  add\n    /* \"#utility.yul\":777:797   */\n  add\n    /* \"#utility.yul\":774:807   */\n  gt\n    /* \"#utility.yul\":771:824   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":820:821   */\n  0x00\n    /* \"#utility.yul\":817:818   */\n  dup1\n    /* \"#utility.yul\":810:822   */\n  revert\n    /* \"#utility.yul\":771:824   */\ntag_33:\n    /* \"#utility.yul\":842:843   */\n  0x00\n    /* \"#utility.yul\":833:843   */\n  swap4\n  pop\n    /* \"#utility.yul\":852:981   */\ntag_34:\n    /* \"#utility.yul\":866:868   */\n  dup3\n    /* \"#utility.yul\":863:864   */\n  dup5\n    /* \"#utility.yul\":860:869   */\n  lt\n    /* \"#utility.yul\":852:981   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":954:964   */\n  dup5\n  dup5\n  add\n    /* \"#utility.yul\":950:969   */\n  dup7\n  add\n    /* \"#utility.yul\":944:970   */\n  mload\n    /* \"#utility.yul\":923:937   */\n  dup2\n  dup6\n  add\n    /* \"#utility.yul\":919:942   */\n  dup8\n  add\n    /* \"#utility.yul\":912:971   */\n  mstore\n    /* \"#utility.yul\":877:887   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":852:981   */\n  jump(tag_34)\ntag_36:\n    /* \"#utility.yul\":999:1001   */\n  dup3\n    /* \"#utility.yul\":996:997   */\n  dup5\n    /* \"#utility.yul\":993:1002   */\n  gt\n    /* \"#utility.yul\":990:1070   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1058:1059   */\n  0x00\n    /* \"#utility.yul\":1053:1055   */\n  dup7\n    /* \"#utility.yul\":1048:1050   */\n  dup5\n    /* \"#utility.yul\":1040:1046   */\n  dup4\n    /* \"#utility.yul\":1036:1051   */\n  add\n    /* \"#utility.yul\":1032:1056   */\n  add\n    /* \"#utility.yul\":1025:1060   */\n  mstore\n    /* \"#utility.yul\":990:1070   */\ntag_37:\n    /* \"#utility.yul\":1089:1095   */\n  swap9\n    /* \"#utility.yul\":14:1101   */\n  swap8\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1106:1486   */\ntag_13:\n    /* \"#utility.yul\":1185:1186   */\n  0x01\n    /* \"#utility.yul\":1181:1193   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1228:1240   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1249:1310   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1303:1307   */\n  0x7f\n    /* \"#utility.yul\":1295:1301   */\n  dup3\n    /* \"#utility.yul\":1291:1308   */\n  and\n    /* \"#utility.yul\":1281:1308   */\n  swap2\n  pop\n    /* \"#utility.yul\":1249:1310   */\ntag_39:\n    /* \"#utility.yul\":1356:1358   */\n  0x20\n    /* \"#utility.yul\":1348:1354   */\n  dup3\n    /* \"#utility.yul\":1345:1359   */\n  lt\n    /* \"#utility.yul\":1325:1343   */\n  dup2\n    /* \"#utility.yul\":1322:1360   */\n  eq\n    /* \"#utility.yul\":1319:1480   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1402:1412   */\n  0x4e487b71\n    /* \"#utility.yul\":1397:1400   */\n  0xe0\n    /* \"#utility.yul\":1393:1413   */\n  shl\n    /* \"#utility.yul\":1390:1391   */\n  0x00\n    /* \"#utility.yul\":1383:1414   */\n  mstore\n    /* \"#utility.yul\":1437:1441   */\n  0x22\n    /* \"#utility.yul\":1434:1435   */\n  0x04\n    /* \"#utility.yul\":1427:1442   */\n  mstore\n    /* \"#utility.yul\":1465:1469   */\n  0x24\n    /* \"#utility.yul\":1462:1463   */\n  0x00\n    /* \"#utility.yul\":1455:1470   */\n  revert\n    /* \"#utility.yul\":1319:1480   */\ntag_40:\n  pop\n    /* \"#utility.yul\":1106:1486   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1491:1618   */\ntag_30:\n    /* \"#utility.yul\":1552:1562   */\n  0x4e487b71\n    /* \"#utility.yul\":1547:1550   */\n  0xe0\n    /* \"#utility.yul\":1543:1563   */\n  shl\n    /* \"#utility.yul\":1540:1541   */\n  0x00\n    /* \"#utility.yul\":1533:1564   */\n  mstore\n    /* \"#utility.yul\":1583:1587   */\n  0x41\n    /* \"#utility.yul\":1580:1581   */\n  0x04\n    /* \"#utility.yul\":1573:1588   */\n  mstore\n    /* \"#utility.yul\":1607:1611   */\n  0x24\n    /* \"#utility.yul\":1604:1605   */\n  0x00\n    /* \"#utility.yul\":1597:1612   */\n  revert\n    /* \"#utility.yul\":1491:1618   */\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":555:15275  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":555:15275  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n        /* \"#utility.yul\":13567:13592   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":13555:13557   */\n      0x20\n        /* \"#utility.yul\":13540:13558   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":9053:9067   */\n      swap1\n      iszero\n        /* \"#utility.yul\":9046:9068   */\n      iszero\n        /* \"#utility.yul\":9028:9069   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9016:9018   */\n      0x20\n        /* \"#utility.yul\":9001:9019   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      tag_16\n        /* \"#utility.yul\":8888:9075   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1925:2028  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4045:4475  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2555:3063  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_7:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3131:3284  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_8:\n      tag_30\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_9:\n      tag_18\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3500  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3450:3454  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3500  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3491  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3500  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3510  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3584:3973  function safeTransferFrom(... */\n    tag_10:\n      tag_30\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2256:2263  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2283:2304  account != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2275:2352  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10336:10338   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2275:2352  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10318:10339   */\n      mstore\n        /* \"#utility.yul\":10375:10377   */\n      0x2b\n        /* \"#utility.yul\":10355:10373   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10348:10378   */\n      mstore\n        /* \"#utility.yul\":10414:10448   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":10394:10412   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10387:10449   */\n      mstore\n      shl(0xa8, 0x65726f2061646472657373)\n        /* \"#utility.yul\":10465:10483   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10458:10499   */\n      mstore\n        /* \"#utility.yul\":10516:10535   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2275:2352  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2369:2378  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2369:2382  _balances[id] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2369:2391  _balances[id][account] */\n      swap5\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1323:1327  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1399  interfaceId == type(IERC1155).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x6cdb3d13)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1467  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_58\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1415:1467  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      dup3\n      and\n      shl(0xe2, 0x03a24d07)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1467  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1519  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_60\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1483:1519  super.supportsInterface(interfaceId) */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1339:1519  return... */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1925:2028  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1985:1998  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2017:2021  _uri */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2010:2021  return _uri */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1925:2028  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4045:4475  function safeBatchTransferFrom(... */\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4290  from == _msgSender() */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4290  from == _msgSender() */\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4330  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_73\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4294:4330  isApprovedForAll(from, _msgSender()) */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4311:4315  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_45\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4294:4330  isApprovedForAll(from, _msgSender()) */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4249:4406  require(... */\n      tag_75\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11564:11566   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4249:4406  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11546:11567   */\n      mstore\n        /* \"#utility.yul\":11603:11605   */\n      0x32\n        /* \"#utility.yul\":11583:11601   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11576:11606   */\n      mstore\n        /* \"#utility.yul\":11642:11676   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":11622:11640   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11615:11677   */\n      mstore\n      shl(0x72, 0x1bdddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":11693:11711   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11686:11734   */\n      mstore\n        /* \"#utility.yul\":11751:11770   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4249:4406  require(... */\n      tag_55\n        /* \"#utility.yul\":11362:11776   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4249:4406  require(... */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4416:4468  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4439:4443  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4445:4447  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4449:4452  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4454:4461  amounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4463:4467  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4416:4438  _safeBatchTransferFrom */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4416:4468  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4045:4475  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2555:3063  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2706:2722  uint256[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2765:2768  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2765:2775  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2746:2754  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2746:2761  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2746:2775  accounts.length == ids.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2738:2821  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12804:12806   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2738:2821  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12786:12807   */\n      mstore\n        /* \"#utility.yul\":12843:12845   */\n      0x29\n        /* \"#utility.yul\":12823:12841   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12816:12846   */\n      mstore\n        /* \"#utility.yul\":12882:12916   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":12862:12880   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12855:12917   */\n      mstore\n      shl(0xbb, 0x040dad2e6dac2e8c6d)\n        /* \"#utility.yul\":12933:12951   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12926:12965   */\n      mstore\n        /* \"#utility.yul\":12982:13001   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2738:2821  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_55\n        /* \"#utility.yul\":12602:13007   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2738:2821  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2832:2862  uint256[] memory batchBalances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2879:2887  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2879:2894  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2865:2895  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_85\n      jumpi\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_87:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2832:2895  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2911:2920  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2906:3026  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2930:2938  accounts */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2930:2945  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2926:2927  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2926:2945  i < accounts.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2906:3026  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_89\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2985:3015  balanceOf(accounts[i], ids[i]) */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2995:3003  accounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3004:3005  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2995:3006  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_93\n      jumpi\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3008:3011  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3012:3013  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3008:3014  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_96\n      jumpi\n      tag_96\n      tag_94\n      jump\t// in\n    tag_96:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2985:2994  balanceOf */\n      tag_15\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2985:3015  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2966:2979  batchBalances */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2980:2981  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2966:2982  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_98\n      jumpi\n      tag_98\n      tag_94\n      jump\t// in\n    tag_98:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2966:3015  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2947:2950  ++i */\n      tag_99\n      dup2\n      tag_100\n      jump\t// in\n    tag_99:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2906:3026  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_88)\n    tag_89:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3043:3056  batchBalances */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2555:3063  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3131:3284  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3225:3277  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_102\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3258:3266  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3268:3276  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3225:3243  _setApprovalForAll */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3225:3277  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3131:3284  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3584:3973  function safeTransferFrom(... */\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3784:3804  from == _msgSender() */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3784:3804  from == _msgSender() */\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3784:3844  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_109\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3808:3844  isApprovedForAll(from, _msgSender()) */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3825:3829  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_45\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3808:3844  isApprovedForAll(from, _msgSender()) */\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3763:3911  require(... */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10748:10750   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3763:3911  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10730:10751   */\n      mstore\n        /* \"#utility.yul\":10787:10789   */\n      0x29\n        /* \"#utility.yul\":10767:10785   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10760:10790   */\n      mstore\n        /* \"#utility.yul\":10826:10860   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":10806:10824   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10799:10861   */\n      mstore\n      shl(0xba, 0x08185c1c1c9bdd9959)\n        /* \"#utility.yul\":10877:10895   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10870:10909   */\n      mstore\n        /* \"#utility.yul\":10926:10945   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3763:3911  require(... */\n      tag_55\n        /* \"#utility.yul\":10546:10951   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3763:3911  require(... */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3921:3966  _safeTransferFrom(from, to, id, amount, data) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3939:3943  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3945:3947  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3949:3951  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3953:3959  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3961:3965  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3921:3938  _safeTransferFrom */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3921:3966  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6068:7113  function _safeBatchTransferFrom(... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6288:6295  amounts */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6288:6302  amounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6274:6277  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6274:6284  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6274:6302  ids.length == amounts.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6266:6347  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13214:13216   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6266:6347  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13196:13217   */\n      mstore\n        /* \"#utility.yul\":13253:13255   */\n      0x28\n        /* \"#utility.yul\":13233:13251   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13226:13256   */\n      mstore\n        /* \"#utility.yul\":13292:13326   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":13272:13290   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13265:13327   */\n      mstore\n      shl(0xc3, 0x0dad2e6dac2e8c6d)\n        /* \"#utility.yul\":13343:13361   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13336:13374   */\n      mstore\n        /* \"#utility.yul\":13391:13410   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6266:6347  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_55\n        /* \"#utility.yul\":13012:13416   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6266:6347  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n    tag_119:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6365:6381  to != address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6357:6423  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_124\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6434:6450  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6547:6958  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6571:6574  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6571:6581  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6567:6568  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6567:6581  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6547:6958  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6602:6612  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6615:6618  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6619:6620  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6615:6621  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_132\n      jumpi\n      tag_132\n      tag_94\n      jump\t// in\n    tag_132:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6602:6621  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6635:6649  uint256 amount */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6652:6659  amounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6660:6661  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6652:6662  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_134\n      jumpi\n      tag_134\n      tag_94\n      jump\t// in\n    tag_134:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6677:6696  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6699:6712  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6699:6718  _balances[id][from] */\n      dup15\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6652:6662  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6740:6761  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6732:6808  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_137\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6859  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6863  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6869  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6872:6892  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6892  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6937  _balances[id][to] */\n      swap1\n      dup12\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6947  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6872:6892  fromBalance - amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6859  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6947  _balances[id][to] += amount */\n      tag_138\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6872:6892  fromBalance - amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6947  _balances[id][to] += amount */\n      tag_139\n      jump\t// in\n    tag_138:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6588:6958  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6583:6586  ++i */\n      dup1\n      tag_140\n      swap1\n      tag_100\n      jump\t// in\n    tag_140:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6547:6958  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_128)\n    tag_129:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7003:7005  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6997:7001  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6987:6995  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7007:7010  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7012:7019  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_141\n      swap3\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7031:7106  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7067:7075  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7077:7081  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7083:7085  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7090  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7092:7099  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7101:7105  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7031:7066  _doSafeBatchTransferAcceptanceCheck */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7031:7106  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6256:7113  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6068:7113  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12074:12397  function _setApprovalForAll(... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12224:12232  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12215:12232  owner != operator */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12215:12220  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12215:12232  owner != operator */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12207:12278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12394:12396   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12207:12278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12376:12397   */\n      mstore\n        /* \"#utility.yul\":12433:12435   */\n      0x29\n        /* \"#utility.yul\":12413:12431   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12406:12436   */\n      mstore\n        /* \"#utility.yul\":12472:12506   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":12452:12470   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12445:12507   */\n      mstore\n      shl(0xb9, 0x103337b91039b2b633)\n        /* \"#utility.yul\":12523:12541   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12516:12555   */\n      mstore\n        /* \"#utility.yul\":12572:12591   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12207:12278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_55\n        /* \"#utility.yul\":12192:12597   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12207:12278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12313  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12306  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12313  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12323  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12334  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12349:12390  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":9028:9069   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12349:12390  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":9001:9019   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12349:12390  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12074:12397  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4925:5722  function _safeTransferFrom(... */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5106:5122  to != address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5098:5164  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_124\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5217:5313  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_154\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5248:5252  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5254:5256  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5258:5279  _asSingletonArray(id) */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5276:5278  id */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5258:5275  _asSingletonArray */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5258:5279  _asSingletonArray(id) */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5281:5306  _asSingletonArray(amount) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5299:5305  amount */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5281:5298  _asSingletonArray */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5281:5306  _asSingletonArray(amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5217:5313  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5324:5343  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5346:5359  _balances[id] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5346:5365  _balances[id][from] */\n      dup11\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5383:5404  fromBalance >= amount */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5375:5451  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_137\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5494  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5498  _balances[id] */\n      dup6\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5504  _balances[id][from] */\n      dup12\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5507:5527  fromBalance - amount */\n      dup8\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5527  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5564  _balances[id][to] */\n      swap1\n      dup9\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5574  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5507:5527  fromBalance - amount */\n      dup7\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5494  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5574  _balances[id][to] += amount */\n      tag_160\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5507:5527  fromBalance - amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5574  _balances[id][to] += amount */\n      tag_139\n      jump\t// in\n    tag_160:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5636  TransferSingle(operator, from, to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":13777:13802   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":13833:13835   */\n      0x20\n        /* \"#utility.yul\":13818:13836   */\n      dup2\n      add\n        /* \"#utility.yul\":13811:13845   */\n      dup7\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5636  TransferSingle(operator, from, to, id, amount) */\n      dup1\n      dup10\n      and\n      swap3\n      dup11\n      dup3\n      and\n      swap3\n      swap2\n      dup7\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":13750:13768   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5636  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5647:5715  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5678:5686  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5688:5692  from */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5694:5696  to */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5698:5700  id */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5702:5708  amount */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5710:5714  data */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5647:5677  _doSafeTransferAcceptanceCheck */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5647:5715  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5088:5722  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4925:5722  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14282:15074  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_144:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14514:14527  to.isContract */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14510:15068  if (to.isContract()) {... */\n      tag_143\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14628  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14592  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14628  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      tag_170\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14593:14601  operator */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14603:14607  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14609:14612  ids */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14614:14621  amounts */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14623:14627  data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14628  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      0x04\n      add\n      tag_171\n      jump\t// in\n    tag_170:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_172\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_172:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_173\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_174\n      swap2\n      dup2\n      add\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      0x01\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14545:15058  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_176\n      jumpi\n      tag_180\n      tag_181\n      jump\t// in\n    tag_180:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_179\n      jumpi\n      pop\n      tag_182\n      tag_183\n      jump\t// in\n    tag_182:\n      dup1\n      tag_184\n      jumpi\n      pop\n      jump(tag_178)\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14934:14940  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14927:14941  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14545:15058  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_179:\n      pop\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14981:15043  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9506:9508   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14981:15043  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9488:9509   */\n      mstore\n        /* \"#utility.yul\":9545:9547   */\n      0x34\n        /* \"#utility.yul\":9525:9543   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9518:9548   */\n      mstore\n        /* \"#utility.yul\":9584:9618   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":9564:9582   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9557:9619   */\n      mstore\n      shl(0x61, 0x2932b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":9635:9653   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9628:9678   */\n      mstore\n        /* \"#utility.yul\":9695:9714   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14981:15043  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      tag_55\n        /* \"#utility.yul\":9304:9720   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14545:15058  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_176:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14707:14767  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14703:14860  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_163\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14791:14841  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_191\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15080:15273  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15199:15215  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15213:15214  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15199:15215  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15146:15162  uint256[] memory */\n      0x60\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15174:15196  uint256[] memory array */\n      0x00\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15199:15215  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15174:15215  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15236:15243  element */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15230  array */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15231:15232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15233  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_197\n      jumpi\n      tag_197\n      tag_94\n      jump\t// in\n    tag_197:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15243  array[0] = element */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15261:15266  array */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15080:15273  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13551:14276  function _doSafeTransferAcceptanceCheck(... */\n    tag_164:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13758:13771  to.isContract */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13754:14270  if (to.isContract()) {... */\n      tag_143\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13865  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13831  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13865  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      tag_201\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13832:13840  operator */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13842:13846  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13848:13850  id */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13852:13858  amount */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13860:13864  data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13865  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      0x04\n      add\n      tag_202\n      jump\t// in\n    tag_201:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_203\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_203:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_204\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_205\n      swap2\n      dup2\n      add\n      swap1\n      tag_175\n      jump\t// in\n    tag_205:\n      0x01\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13789:14260  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_206\n      jumpi\n      tag_180\n      tag_181\n      jump\t// in\n    tag_206:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13914:13969  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13910:14062  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_163\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13993:14043  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_191\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_220:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_222\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_222:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:927   */\n    tag_223:\n        /* \"#utility.yul\":246:251   */\n      0x00\n        /* \"#utility.yul\":299:302   */\n      dup3\n        /* \"#utility.yul\":292:296   */\n      0x1f\n        /* \"#utility.yul\":284:290   */\n      dup4\n        /* \"#utility.yul\":280:297   */\n      add\n        /* \"#utility.yul\":276:303   */\n      slt\n        /* \"#utility.yul\":266:321   */\n      tag_225\n      jumpi\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":314:315   */\n      dup1\n        /* \"#utility.yul\":307:319   */\n      revert\n        /* \"#utility.yul\":266:321   */\n    tag_225:\n        /* \"#utility.yul\":353:359   */\n      dup2\n        /* \"#utility.yul\":340:360   */\n      calldataload\n        /* \"#utility.yul\":379:383   */\n      0x20\n        /* \"#utility.yul\":402:445   */\n      tag_226\n        /* \"#utility.yul\":442:444   */\n      dup3\n        /* \"#utility.yul\":402:445   */\n      tag_227\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":474:476   */\n      0x40\n        /* \"#utility.yul\":468:477   */\n      mload\n        /* \"#utility.yul\":486:517   */\n      tag_228\n        /* \"#utility.yul\":514:516   */\n      dup3\n        /* \"#utility.yul\":506:512   */\n      dup3\n        /* \"#utility.yul\":486:517   */\n      tag_229\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":552:570   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":586:601   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":621:636   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":671:672   */\n      0x05\n        /* \"#utility.yul\":667:677   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":655:678   */\n      dup8\n      add\n        /* \"#utility.yul\":651:683   */\n      dup5\n      add\n        /* \"#utility.yul\":648:689   */\n      dup9\n      lt\n        /* \"#utility.yul\":645:706   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":702:703   */\n      0x00\n        /* \"#utility.yul\":699:700   */\n      dup1\n        /* \"#utility.yul\":692:704   */\n      revert\n        /* \"#utility.yul\":645:706   */\n    tag_230:\n        /* \"#utility.yul\":724:725   */\n      0x00\n        /* \"#utility.yul\":734:897   */\n    tag_231:\n        /* \"#utility.yul\":748:750   */\n      dup6\n        /* \"#utility.yul\":745:746   */\n      dup2\n        /* \"#utility.yul\":742:751   */\n      lt\n        /* \"#utility.yul\":734:897   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":805:822   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":793:823   */\n      dup5\n      mstore\n        /* \"#utility.yul\":843:855   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":875:887   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":766:767   */\n      0x01\n        /* \"#utility.yul\":759:768   */\n      add\n        /* \"#utility.yul\":734:897   */\n      jump(tag_231)\n    tag_233:\n      pop\n        /* \"#utility.yul\":915:921   */\n      swap1\n      swap8\n        /* \"#utility.yul\":192:927   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":932:1487   */\n    tag_234:\n        /* \"#utility.yul\":974:979   */\n      0x00\n        /* \"#utility.yul\":1027:1030   */\n      dup3\n        /* \"#utility.yul\":1020:1024   */\n      0x1f\n        /* \"#utility.yul\":1012:1018   */\n      dup4\n        /* \"#utility.yul\":1008:1025   */\n      add\n        /* \"#utility.yul\":1004:1031   */\n      slt\n        /* \"#utility.yul\":994:1049   */\n      tag_236\n      jumpi\n        /* \"#utility.yul\":1045:1046   */\n      0x00\n        /* \"#utility.yul\":1042:1043   */\n      dup1\n        /* \"#utility.yul\":1035:1047   */\n      revert\n        /* \"#utility.yul\":994:1049   */\n    tag_236:\n        /* \"#utility.yul\":1081:1087   */\n      dup2\n        /* \"#utility.yul\":1068:1088   */\n      calldataload\n        /* \"#utility.yul\":1107:1125   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1103:1105   */\n      dup2\n        /* \"#utility.yul\":1100:1126   */\n      gt\n        /* \"#utility.yul\":1097:1149   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":1129:1147   */\n      tag_238\n      tag_86\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":1178:1180   */\n      0x40\n        /* \"#utility.yul\":1172:1181   */\n      mload\n        /* \"#utility.yul\":1190:1257   */\n      tag_239\n        /* \"#utility.yul\":1245:1247   */\n      0x1f\n        /* \"#utility.yul\":1226:1239   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1222:1249   */\n      and\n        /* \"#utility.yul\":1251:1255   */\n      0x20\n        /* \"#utility.yul\":1218:1256   */\n      add\n        /* \"#utility.yul\":1172:1181   */\n      dup3\n        /* \"#utility.yul\":1190:1257   */\n      tag_229\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":1281:1283   */\n      dup2\n        /* \"#utility.yul\":1273:1279   */\n      dup2\n        /* \"#utility.yul\":1266:1284   */\n      mstore\n        /* \"#utility.yul\":1327:1330   */\n      dup5\n        /* \"#utility.yul\":1320:1324   */\n      0x20\n        /* \"#utility.yul\":1315:1317   */\n      dup4\n        /* \"#utility.yul\":1307:1313   */\n      dup7\n        /* \"#utility.yul\":1303:1318   */\n      add\n        /* \"#utility.yul\":1299:1325   */\n      add\n        /* \"#utility.yul\":1296:1331   */\n      gt\n        /* \"#utility.yul\":1293:1348   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":1344:1345   */\n      0x00\n        /* \"#utility.yul\":1341:1342   */\n      dup1\n        /* \"#utility.yul\":1334:1346   */\n      revert\n        /* \"#utility.yul\":1293:1348   */\n    tag_240:\n        /* \"#utility.yul\":1408:1410   */\n      dup2\n        /* \"#utility.yul\":1401:1405   */\n      0x20\n        /* \"#utility.yul\":1393:1399   */\n      dup6\n        /* \"#utility.yul\":1389:1406   */\n      add\n        /* \"#utility.yul\":1382:1386   */\n      0x20\n        /* \"#utility.yul\":1374:1380   */\n      dup4\n        /* \"#utility.yul\":1370:1387   */\n      add\n        /* \"#utility.yul\":1357:1411   */\n      calldatacopy\n        /* \"#utility.yul\":1455:1456   */\n      0x00\n        /* \"#utility.yul\":1431:1446   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":1448:1452   */\n      0x20\n        /* \"#utility.yul\":1427:1453   */\n      add\n        /* \"#utility.yul\":1420:1457   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1435:1441   */\n      swap4\n        /* \"#utility.yul\":932:1487   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1492:1752   */\n    tag_46:\n        /* \"#utility.yul\":1560:1566   */\n      0x00\n        /* \"#utility.yul\":1568:1574   */\n      dup1\n        /* \"#utility.yul\":1621:1623   */\n      0x40\n        /* \"#utility.yul\":1609:1618   */\n      dup4\n        /* \"#utility.yul\":1600:1607   */\n      dup6\n        /* \"#utility.yul\":1596:1619   */\n      sub\n        /* \"#utility.yul\":1592:1624   */\n      slt\n        /* \"#utility.yul\":1589:1641   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":1637:1638   */\n      0x00\n        /* \"#utility.yul\":1634:1635   */\n      dup1\n        /* \"#utility.yul\":1627:1639   */\n      revert\n        /* \"#utility.yul\":1589:1641   */\n    tag_242:\n        /* \"#utility.yul\":1660:1689   */\n      tag_243\n        /* \"#utility.yul\":1679:1688   */\n      dup4\n        /* \"#utility.yul\":1660:1689   */\n      tag_220\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":1650:1689   */\n      swap2\n      pop\n        /* \"#utility.yul\":1708:1746   */\n      tag_244\n        /* \"#utility.yul\":1742:1744   */\n      0x20\n        /* \"#utility.yul\":1731:1740   */\n      dup5\n        /* \"#utility.yul\":1727:1745   */\n      add\n        /* \"#utility.yul\":1708:1746   */\n      tag_220\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":1698:1746   */\n      swap1\n      pop\n        /* \"#utility.yul\":1492:1752   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1757:2700   */\n    tag_32:\n        /* \"#utility.yul\":1911:1917   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup1\n        /* \"#utility.yul\":1927:1933   */\n      0x00\n        /* \"#utility.yul\":1935:1941   */\n      dup1\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1996:1999   */\n      0xa0\n        /* \"#utility.yul\":1984:1993   */\n      dup7\n        /* \"#utility.yul\":1975:1982   */\n      dup9\n        /* \"#utility.yul\":1971:1994   */\n      sub\n        /* \"#utility.yul\":1967:2000   */\n      slt\n        /* \"#utility.yul\":1964:2017   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2010:2011   */\n      dup1\n        /* \"#utility.yul\":2003:2015   */\n      revert\n        /* \"#utility.yul\":1964:2017   */\n    tag_246:\n        /* \"#utility.yul\":2036:2065   */\n      tag_247\n        /* \"#utility.yul\":2055:2064   */\n      dup7\n        /* \"#utility.yul\":2036:2065   */\n      tag_220\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":2026:2065   */\n      swap5\n      pop\n        /* \"#utility.yul\":2084:2122   */\n      tag_248\n        /* \"#utility.yul\":2118:2120   */\n      0x20\n        /* \"#utility.yul\":2107:2116   */\n      dup8\n        /* \"#utility.yul\":2103:2121   */\n      add\n        /* \"#utility.yul\":2084:2122   */\n      tag_220\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":2074:2122   */\n      swap4\n      pop\n        /* \"#utility.yul\":2173:2175   */\n      0x40\n        /* \"#utility.yul\":2162:2171   */\n      dup7\n        /* \"#utility.yul\":2158:2176   */\n      add\n        /* \"#utility.yul\":2145:2177   */\n      calldataload\n        /* \"#utility.yul\":2196:2214   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2237:2239   */\n      dup1\n        /* \"#utility.yul\":2229:2235   */\n      dup3\n        /* \"#utility.yul\":2226:2240   */\n      gt\n        /* \"#utility.yul\":2223:2257   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":2253:2254   */\n      0x00\n        /* \"#utility.yul\":2250:2251   */\n      dup1\n        /* \"#utility.yul\":2243:2255   */\n      revert\n        /* \"#utility.yul\":2223:2257   */\n    tag_249:\n        /* \"#utility.yul\":2276:2337   */\n      tag_250\n        /* \"#utility.yul\":2329:2336   */\n      dup10\n        /* \"#utility.yul\":2320:2326   */\n      dup4\n        /* \"#utility.yul\":2309:2318   */\n      dup11\n        /* \"#utility.yul\":2305:2327   */\n      add\n        /* \"#utility.yul\":2276:2337   */\n      tag_223\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":2266:2337   */\n      swap5\n      pop\n        /* \"#utility.yul\":2390:2392   */\n      0x60\n        /* \"#utility.yul\":2379:2388   */\n      dup9\n        /* \"#utility.yul\":2375:2393   */\n      add\n        /* \"#utility.yul\":2362:2394   */\n      calldataload\n        /* \"#utility.yul\":2346:2394   */\n      swap2\n      pop\n        /* \"#utility.yul\":2419:2421   */\n      dup1\n        /* \"#utility.yul\":2409:2417   */\n      dup3\n        /* \"#utility.yul\":2406:2422   */\n      gt\n        /* \"#utility.yul\":2403:2439   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":2435:2436   */\n      0x00\n        /* \"#utility.yul\":2432:2433   */\n      dup1\n        /* \"#utility.yul\":2425:2437   */\n      revert\n        /* \"#utility.yul\":2403:2439   */\n    tag_251:\n        /* \"#utility.yul\":2458:2521   */\n      tag_252\n        /* \"#utility.yul\":2513:2520   */\n      dup10\n        /* \"#utility.yul\":2502:2510   */\n      dup4\n        /* \"#utility.yul\":2491:2500   */\n      dup11\n        /* \"#utility.yul\":2487:2511   */\n      add\n        /* \"#utility.yul\":2458:2521   */\n      tag_223\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":2448:2521   */\n      swap4\n      pop\n        /* \"#utility.yul\":2574:2577   */\n      0x80\n        /* \"#utility.yul\":2563:2572   */\n      dup9\n        /* \"#utility.yul\":2559:2578   */\n      add\n        /* \"#utility.yul\":2546:2579   */\n      calldataload\n        /* \"#utility.yul\":2530:2579   */\n      swap2\n      pop\n        /* \"#utility.yul\":2604:2606   */\n      dup1\n        /* \"#utility.yul\":2594:2602   */\n      dup3\n        /* \"#utility.yul\":2591:2607   */\n      gt\n        /* \"#utility.yul\":2588:2624   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2617:2618   */\n      dup1\n        /* \"#utility.yul\":2610:2622   */\n      revert\n        /* \"#utility.yul\":2588:2624   */\n    tag_253:\n      pop\n        /* \"#utility.yul\":2643:2694   */\n      tag_254\n        /* \"#utility.yul\":2686:2693   */\n      dup9\n        /* \"#utility.yul\":2675:2683   */\n      dup3\n        /* \"#utility.yul\":2664:2673   */\n      dup10\n        /* \"#utility.yul\":2660:2684   */\n      add\n        /* \"#utility.yul\":2643:2694   */\n      tag_234\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":2633:2694   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1757:2700   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2705:3311   */\n    tag_51:\n        /* \"#utility.yul\":2809:2815   */\n      0x00\n        /* \"#utility.yul\":2817:2823   */\n      dup1\n        /* \"#utility.yul\":2825:2831   */\n      0x00\n        /* \"#utility.yul\":2833:2839   */\n      dup1\n        /* \"#utility.yul\":2841:2847   */\n      0x00\n        /* \"#utility.yul\":2894:2897   */\n      0xa0\n        /* \"#utility.yul\":2882:2891   */\n      dup7\n        /* \"#utility.yul\":2873:2880   */\n      dup9\n        /* \"#utility.yul\":2869:2892   */\n      sub\n        /* \"#utility.yul\":2865:2898   */\n      slt\n        /* \"#utility.yul\":2862:2915   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":2911:2912   */\n      0x00\n        /* \"#utility.yul\":2908:2909   */\n      dup1\n        /* \"#utility.yul\":2901:2913   */\n      revert\n        /* \"#utility.yul\":2862:2915   */\n    tag_256:\n        /* \"#utility.yul\":2934:2963   */\n      tag_257\n        /* \"#utility.yul\":2953:2962   */\n      dup7\n        /* \"#utility.yul\":2934:2963   */\n      tag_220\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":2924:2963   */\n      swap5\n      pop\n        /* \"#utility.yul\":2982:3020   */\n      tag_258\n        /* \"#utility.yul\":3016:3018   */\n      0x20\n        /* \"#utility.yul\":3005:3014   */\n      dup8\n        /* \"#utility.yul\":3001:3019   */\n      add\n        /* \"#utility.yul\":2982:3020   */\n      tag_220\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":2972:3020   */\n      swap4\n      pop\n        /* \"#utility.yul\":3067:3069   */\n      0x40\n        /* \"#utility.yul\":3056:3065   */\n      dup7\n        /* \"#utility.yul\":3052:3070   */\n      add\n        /* \"#utility.yul\":3039:3071   */\n      calldataload\n        /* \"#utility.yul\":3029:3071   */\n      swap3\n      pop\n        /* \"#utility.yul\":3118:3120   */\n      0x60\n        /* \"#utility.yul\":3107:3116   */\n      dup7\n        /* \"#utility.yul\":3103:3121   */\n      add\n        /* \"#utility.yul\":3090:3122   */\n      calldataload\n        /* \"#utility.yul\":3080:3122   */\n      swap2\n      pop\n        /* \"#utility.yul\":3173:3176   */\n      0x80\n        /* \"#utility.yul\":3162:3171   */\n      dup7\n        /* \"#utility.yul\":3158:3177   */\n      add\n        /* \"#utility.yul\":3145:3178   */\n      calldataload\n        /* \"#utility.yul\":3201:3219   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3193:3199   */\n      dup2\n        /* \"#utility.yul\":3190:3220   */\n      gt\n        /* \"#utility.yul\":3187:3237   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":3233:3234   */\n      0x00\n        /* \"#utility.yul\":3230:3231   */\n      dup1\n        /* \"#utility.yul\":3223:3235   */\n      revert\n        /* \"#utility.yul\":3187:3237   */\n    tag_259:\n        /* \"#utility.yul\":3256:3305   */\n      tag_254\n        /* \"#utility.yul\":3297:3304   */\n      dup9\n        /* \"#utility.yul\":3288:3294   */\n      dup3\n        /* \"#utility.yul\":3277:3286   */\n      dup10\n        /* \"#utility.yul\":3273:3295   */\n      add\n        /* \"#utility.yul\":3256:3305   */\n      tag_234\n      jump\t// in\n        /* \"#utility.yul\":3316:3663   */\n    tag_42:\n        /* \"#utility.yul\":3381:3387   */\n      0x00\n        /* \"#utility.yul\":3389:3395   */\n      dup1\n        /* \"#utility.yul\":3442:3444   */\n      0x40\n        /* \"#utility.yul\":3430:3439   */\n      dup4\n        /* \"#utility.yul\":3421:3428   */\n      dup6\n        /* \"#utility.yul\":3417:3440   */\n      sub\n        /* \"#utility.yul\":3413:3445   */\n      slt\n        /* \"#utility.yul\":3410:3462   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":3458:3459   */\n      0x00\n        /* \"#utility.yul\":3455:3456   */\n      dup1\n        /* \"#utility.yul\":3448:3460   */\n      revert\n        /* \"#utility.yul\":3410:3462   */\n    tag_262:\n        /* \"#utility.yul\":3481:3510   */\n      tag_263\n        /* \"#utility.yul\":3500:3509   */\n      dup4\n        /* \"#utility.yul\":3481:3510   */\n      tag_220\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":3471:3510   */\n      swap2\n      pop\n        /* \"#utility.yul\":3560:3562   */\n      0x20\n        /* \"#utility.yul\":3549:3558   */\n      dup4\n        /* \"#utility.yul\":3545:3563   */\n      add\n        /* \"#utility.yul\":3532:3564   */\n      calldataload\n        /* \"#utility.yul\":3607:3612   */\n      dup1\n        /* \"#utility.yul\":3600:3613   */\n      iszero\n        /* \"#utility.yul\":3593:3614   */\n      iszero\n        /* \"#utility.yul\":3586:3591   */\n      dup2\n        /* \"#utility.yul\":3583:3615   */\n      eq\n        /* \"#utility.yul\":3573:3633   */\n      tag_264\n      jumpi\n        /* \"#utility.yul\":3629:3630   */\n      0x00\n        /* \"#utility.yul\":3626:3627   */\n      dup1\n        /* \"#utility.yul\":3619:3631   */\n      revert\n        /* \"#utility.yul\":3573:3633   */\n    tag_264:\n        /* \"#utility.yul\":3652:3657   */\n      dup1\n        /* \"#utility.yul\":3642:3657   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3316:3663   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3668:3922   */\n    tag_14:\n        /* \"#utility.yul\":3736:3742   */\n      0x00\n        /* \"#utility.yul\":3744:3750   */\n      dup1\n        /* \"#utility.yul\":3797:3799   */\n      0x40\n        /* \"#utility.yul\":3785:3794   */\n      dup4\n        /* \"#utility.yul\":3776:3783   */\n      dup6\n        /* \"#utility.yul\":3772:3795   */\n      sub\n        /* \"#utility.yul\":3768:3800   */\n      slt\n        /* \"#utility.yul\":3765:3817   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":3813:3814   */\n      0x00\n        /* \"#utility.yul\":3810:3811   */\n      dup1\n        /* \"#utility.yul\":3803:3815   */\n      revert\n        /* \"#utility.yul\":3765:3817   */\n    tag_266:\n        /* \"#utility.yul\":3836:3865   */\n      tag_267\n        /* \"#utility.yul\":3855:3864   */\n      dup4\n        /* \"#utility.yul\":3836:3865   */\n      tag_220\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":3826:3865   */\n      swap5\n        /* \"#utility.yul\":3912:3914   */\n      0x20\n        /* \"#utility.yul\":3897:3915   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":3884:3916   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3668:3922   */\n      jump\t// out\n        /* \"#utility.yul\":3927:5146   */\n    tag_36:\n        /* \"#utility.yul\":4045:4051   */\n      0x00\n        /* \"#utility.yul\":4053:4059   */\n      dup1\n        /* \"#utility.yul\":4106:4108   */\n      0x40\n        /* \"#utility.yul\":4094:4103   */\n      dup4\n        /* \"#utility.yul\":4085:4092   */\n      dup6\n        /* \"#utility.yul\":4081:4104   */\n      sub\n        /* \"#utility.yul\":4077:4109   */\n      slt\n        /* \"#utility.yul\":4074:4126   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":4122:4123   */\n      0x00\n        /* \"#utility.yul\":4119:4120   */\n      dup1\n        /* \"#utility.yul\":4112:4124   */\n      revert\n        /* \"#utility.yul\":4074:4126   */\n    tag_269:\n        /* \"#utility.yul\":4162:4171   */\n      dup3\n        /* \"#utility.yul\":4149:4172   */\n      calldataload\n        /* \"#utility.yul\":4191:4209   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4232:4234   */\n      dup1\n        /* \"#utility.yul\":4224:4230   */\n      dup3\n        /* \"#utility.yul\":4221:4235   */\n      gt\n        /* \"#utility.yul\":4218:4252   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":4248:4249   */\n      0x00\n        /* \"#utility.yul\":4245:4246   */\n      dup1\n        /* \"#utility.yul\":4238:4250   */\n      revert\n        /* \"#utility.yul\":4218:4252   */\n    tag_270:\n        /* \"#utility.yul\":4286:4292   */\n      dup2\n        /* \"#utility.yul\":4275:4284   */\n      dup6\n        /* \"#utility.yul\":4271:4293   */\n      add\n        /* \"#utility.yul\":4261:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4331:4338   */\n      dup6\n        /* \"#utility.yul\":4324:4328   */\n      0x1f\n        /* \"#utility.yul\":4320:4322   */\n      dup4\n        /* \"#utility.yul\":4316:4329   */\n      add\n        /* \"#utility.yul\":4312:4339   */\n      slt\n        /* \"#utility.yul\":4302:4357   */\n      tag_271\n      jumpi\n        /* \"#utility.yul\":4353:4354   */\n      0x00\n        /* \"#utility.yul\":4350:4351   */\n      dup1\n        /* \"#utility.yul\":4343:4355   */\n      revert\n        /* \"#utility.yul\":4302:4357   */\n    tag_271:\n        /* \"#utility.yul\":4389:4391   */\n      dup2\n        /* \"#utility.yul\":4376:4392   */\n      calldataload\n        /* \"#utility.yul\":4411:4415   */\n      0x20\n        /* \"#utility.yul\":4434:4477   */\n      tag_272\n        /* \"#utility.yul\":4474:4476   */\n      dup3\n        /* \"#utility.yul\":4434:4477   */\n      tag_227\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":4506:4508   */\n      0x40\n        /* \"#utility.yul\":4500:4509   */\n      mload\n        /* \"#utility.yul\":4518:4549   */\n      tag_273\n        /* \"#utility.yul\":4546:4548   */\n      dup3\n        /* \"#utility.yul\":4538:4544   */\n      dup3\n        /* \"#utility.yul\":4518:4549   */\n      tag_229\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":4584:4602   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":4618:4633   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":4653:4664   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":4695:4696   */\n      0x05\n        /* \"#utility.yul\":4691:4701   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":4683:4702   */\n      dup8\n      add\n        /* \"#utility.yul\":4679:4707   */\n      dup5\n      add\n        /* \"#utility.yul\":4676:4717   */\n      dup12\n      lt\n        /* \"#utility.yul\":4673:4734   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4727:4728   */\n      dup1\n        /* \"#utility.yul\":4720:4732   */\n      revert\n        /* \"#utility.yul\":4673:4734   */\n    tag_274:\n        /* \"#utility.yul\":4752:4753   */\n      0x00\n        /* \"#utility.yul\":4743:4753   */\n      swap7\n      pop\n        /* \"#utility.yul\":4762:4931   */\n    tag_275:\n        /* \"#utility.yul\":4776:4778   */\n      dup5\n        /* \"#utility.yul\":4773:4774   */\n      dup8\n        /* \"#utility.yul\":4770:4779   */\n      lt\n        /* \"#utility.yul\":4762:4931   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":4833:4856   */\n      tag_278\n        /* \"#utility.yul\":4852:4855   */\n      dup2\n        /* \"#utility.yul\":4833:4856   */\n      tag_220\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":4821:4857   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4794:4795   */\n      0x01\n        /* \"#utility.yul\":4787:4796   */\n      swap7\n      swap1\n      swap7\n      add\n      swap6\n        /* \"#utility.yul\":4877:4889   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":4909:4921   */\n      dup4\n      add\n        /* \"#utility.yul\":4762:4931   */\n      jump(tag_275)\n    tag_277:\n      pop\n        /* \"#utility.yul\":4950:4956   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":4994:5012   */\n      dup7\n      add\n        /* \"#utility.yul\":4981:5013   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":5025:5041   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5022:5058   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":5054:5055   */\n      0x00\n        /* \"#utility.yul\":5051:5052   */\n      dup1\n        /* \"#utility.yul\":5044:5056   */\n      revert\n        /* \"#utility.yul\":5022:5058   */\n    tag_279:\n      pop\n        /* \"#utility.yul\":5077:5140   */\n      tag_280\n        /* \"#utility.yul\":5132:5139   */\n      dup6\n        /* \"#utility.yul\":5121:5129   */\n      dup3\n        /* \"#utility.yul\":5110:5119   */\n      dup7\n        /* \"#utility.yul\":5106:5130   */\n      add\n        /* \"#utility.yul\":5077:5140   */\n      tag_223\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":5067:5140   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3927:5146   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5151:5396   */\n    tag_20:\n        /* \"#utility.yul\":5209:5215   */\n      0x00\n        /* \"#utility.yul\":5262:5264   */\n      0x20\n        /* \"#utility.yul\":5250:5259   */\n      dup3\n        /* \"#utility.yul\":5241:5248   */\n      dup5\n        /* \"#utility.yul\":5237:5260   */\n      sub\n        /* \"#utility.yul\":5233:5265   */\n      slt\n        /* \"#utility.yul\":5230:5282   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":5278:5279   */\n      0x00\n        /* \"#utility.yul\":5275:5276   */\n      dup1\n        /* \"#utility.yul\":5268:5280   */\n      revert\n        /* \"#utility.yul\":5230:5282   */\n    tag_282:\n        /* \"#utility.yul\":5317:5326   */\n      dup2\n        /* \"#utility.yul\":5304:5327   */\n      calldataload\n        /* \"#utility.yul\":5336:5366   */\n      tag_283\n        /* \"#utility.yul\":5360:5365   */\n      dup2\n        /* \"#utility.yul\":5336:5366   */\n      tag_284\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":5385:5390   */\n      swap4\n        /* \"#utility.yul\":5151:5396   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5401:5650   */\n    tag_175:\n        /* \"#utility.yul\":5470:5476   */\n      0x00\n        /* \"#utility.yul\":5523:5525   */\n      0x20\n        /* \"#utility.yul\":5511:5520   */\n      dup3\n        /* \"#utility.yul\":5502:5509   */\n      dup5\n        /* \"#utility.yul\":5498:5521   */\n      sub\n        /* \"#utility.yul\":5494:5526   */\n      slt\n        /* \"#utility.yul\":5491:5543   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":5539:5540   */\n      0x00\n        /* \"#utility.yul\":5536:5537   */\n      dup1\n        /* \"#utility.yul\":5529:5541   */\n      revert\n        /* \"#utility.yul\":5491:5543   */\n    tag_286:\n        /* \"#utility.yul\":5571:5580   */\n      dup2\n        /* \"#utility.yul\":5565:5581   */\n      mload\n        /* \"#utility.yul\":5590:5620   */\n      tag_283\n        /* \"#utility.yul\":5614:5619   */\n      dup2\n        /* \"#utility.yul\":5590:5620   */\n      tag_284\n      jump\t// in\n        /* \"#utility.yul\":5655:5835   */\n    tag_26:\n        /* \"#utility.yul\":5714:5720   */\n      0x00\n        /* \"#utility.yul\":5767:5769   */\n      0x20\n        /* \"#utility.yul\":5755:5764   */\n      dup3\n        /* \"#utility.yul\":5746:5753   */\n      dup5\n        /* \"#utility.yul\":5742:5765   */\n      sub\n        /* \"#utility.yul\":5738:5770   */\n      slt\n        /* \"#utility.yul\":5735:5787   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":5783:5784   */\n      0x00\n        /* \"#utility.yul\":5780:5781   */\n      dup1\n        /* \"#utility.yul\":5773:5785   */\n      revert\n        /* \"#utility.yul\":5735:5787   */\n    tag_289:\n      pop\n        /* \"#utility.yul\":5806:5829   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":5655:5835   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5840:6275   */\n    tag_290:\n        /* \"#utility.yul\":5893:5896   */\n      0x00\n        /* \"#utility.yul\":5931:5936   */\n      dup2\n        /* \"#utility.yul\":5925:5937   */\n      mload\n        /* \"#utility.yul\":5958:5964   */\n      dup1\n        /* \"#utility.yul\":5953:5956   */\n      dup5\n        /* \"#utility.yul\":5946:5965   */\n      mstore\n        /* \"#utility.yul\":5984:5988   */\n      0x20\n        /* \"#utility.yul\":6013:6015   */\n      dup1\n        /* \"#utility.yul\":6008:6011   */\n      dup6\n        /* \"#utility.yul\":6004:6016   */\n      add\n        /* \"#utility.yul\":5997:6016   */\n      swap5\n      pop\n        /* \"#utility.yul\":6050:6052   */\n      dup1\n        /* \"#utility.yul\":6043:6048   */\n      dup5\n        /* \"#utility.yul\":6039:6053   */\n      add\n        /* \"#utility.yul\":6071:6072   */\n      0x00\n        /* \"#utility.yul\":6081:6250   */\n    tag_292:\n        /* \"#utility.yul\":6095:6101   */\n      dup4\n        /* \"#utility.yul\":6092:6093   */\n      dup2\n        /* \"#utility.yul\":6089:6102   */\n      lt\n        /* \"#utility.yul\":6081:6250   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":6156:6169   */\n      dup2\n      mload\n        /* \"#utility.yul\":6144:6170   */\n      dup8\n      mstore\n        /* \"#utility.yul\":6190:6202   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":6225:6240   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6117:6118   */\n      0x01\n        /* \"#utility.yul\":6110:6119   */\n      add\n        /* \"#utility.yul\":6081:6250   */\n      jump(tag_292)\n    tag_294:\n      pop\n        /* \"#utility.yul\":6266:6269   */\n      swap5\n      swap6\n        /* \"#utility.yul\":5840:6275   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6280:6751   */\n    tag_295:\n        /* \"#utility.yul\":6321:6324   */\n      0x00\n        /* \"#utility.yul\":6359:6364   */\n      dup2\n        /* \"#utility.yul\":6353:6365   */\n      mload\n        /* \"#utility.yul\":6386:6392   */\n      dup1\n        /* \"#utility.yul\":6381:6384   */\n      dup5\n        /* \"#utility.yul\":6374:6393   */\n      mstore\n        /* \"#utility.yul\":6411:6412   */\n      0x00\n        /* \"#utility.yul\":6421:6583   */\n    tag_297:\n        /* \"#utility.yul\":6435:6441   */\n      dup2\n        /* \"#utility.yul\":6432:6433   */\n      dup2\n        /* \"#utility.yul\":6429:6442   */\n      lt\n        /* \"#utility.yul\":6421:6583   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":6497:6501   */\n      0x20\n        /* \"#utility.yul\":6553:6566   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":6549:6571   */\n      dup2\n      add\n        /* \"#utility.yul\":6543:6572   */\n      mload\n        /* \"#utility.yul\":6525:6536   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":6521:6541   */\n      dup3\n      add\n        /* \"#utility.yul\":6514:6573   */\n      mstore\n        /* \"#utility.yul\":6450:6462   */\n      add\n        /* \"#utility.yul\":6421:6583   */\n      jump(tag_297)\n    tag_299:\n        /* \"#utility.yul\":6601:6607   */\n      dup2\n        /* \"#utility.yul\":6598:6599   */\n      dup2\n        /* \"#utility.yul\":6595:6608   */\n      gt\n        /* \"#utility.yul\":6592:6679   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":6667:6668   */\n      0x00\n        /* \"#utility.yul\":6660:6664   */\n      0x20\n        /* \"#utility.yul\":6651:6657   */\n      dup4\n        /* \"#utility.yul\":6646:6649   */\n      dup8\n        /* \"#utility.yul\":6642:6658   */\n      add\n        /* \"#utility.yul\":6638:6665   */\n      add\n        /* \"#utility.yul\":6631:6669   */\n      mstore\n        /* \"#utility.yul\":6592:6679   */\n    tag_300:\n      pop\n        /* \"#utility.yul\":6733:6735   */\n      0x1f\n        /* \"#utility.yul\":6712:6727   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":6708:6737   */\n      and\n        /* \"#utility.yul\":6699:6738   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":6740:6744   */\n      0x20\n        /* \"#utility.yul\":6695:6745   */\n      add\n      swap3\n        /* \"#utility.yul\":6280:6751   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6756:7582   */\n    tag_171:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7153:7168   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":7135:7169   */\n      dup3\n      mstore\n        /* \"#utility.yul\":7205:7220   */\n      dup6\n      and\n        /* \"#utility.yul\":7200:7202   */\n      0x20\n        /* \"#utility.yul\":7185:7203   */\n      dup3\n      add\n        /* \"#utility.yul\":7178:7221   */\n      mstore\n        /* \"#utility.yul\":7115:7118   */\n      0xa0\n        /* \"#utility.yul\":7252:7254   */\n      0x40\n        /* \"#utility.yul\":7237:7255   */\n      dup3\n      add\n        /* \"#utility.yul\":7230:7261   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7078:7082   */\n      0x00\n      swap1\n        /* \"#utility.yul\":7284:7341   */\n      tag_302\n      swap1\n        /* \"#utility.yul\":7321:7340   */\n      dup4\n      add\n        /* \"#utility.yul\":7313:7319   */\n      dup7\n        /* \"#utility.yul\":7284:7341   */\n      tag_290\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":7389:7398   */\n      dup3\n        /* \"#utility.yul\":7381:7387   */\n      dup2\n        /* \"#utility.yul\":7377:7399   */\n      sub\n        /* \"#utility.yul\":7372:7374   */\n      0x60\n        /* \"#utility.yul\":7361:7370   */\n      dup5\n        /* \"#utility.yul\":7357:7375   */\n      add\n        /* \"#utility.yul\":7350:7400   */\n      mstore\n        /* \"#utility.yul\":7423:7467   */\n      tag_303\n        /* \"#utility.yul\":7460:7466   */\n      dup2\n        /* \"#utility.yul\":7452:7458   */\n      dup7\n        /* \"#utility.yul\":7423:7467   */\n      tag_290\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":7409:7467   */\n      swap1\n      pop\n        /* \"#utility.yul\":7516:7525   */\n      dup3\n        /* \"#utility.yul\":7508:7514   */\n      dup2\n        /* \"#utility.yul\":7504:7526   */\n      sub\n        /* \"#utility.yul\":7498:7501   */\n      0x80\n        /* \"#utility.yul\":7487:7496   */\n      dup5\n        /* \"#utility.yul\":7483:7502   */\n      add\n        /* \"#utility.yul\":7476:7527   */\n      mstore\n        /* \"#utility.yul\":7544:7576   */\n      tag_304\n        /* \"#utility.yul\":7569:7575   */\n      dup2\n        /* \"#utility.yul\":7561:7567   */\n      dup6\n        /* \"#utility.yul\":7544:7576   */\n      tag_295\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":7536:7576   */\n      swap9\n        /* \"#utility.yul\":6756:7582   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7587:8147   */\n    tag_202:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7884:7899   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":7866:7900   */\n      dup3\n      mstore\n        /* \"#utility.yul\":7936:7951   */\n      dup6\n      and\n        /* \"#utility.yul\":7931:7933   */\n      0x20\n        /* \"#utility.yul\":7916:7934   */\n      dup3\n      add\n        /* \"#utility.yul\":7909:7952   */\n      mstore\n        /* \"#utility.yul\":7983:7985   */\n      0x40\n        /* \"#utility.yul\":7968:7986   */\n      dup2\n      add\n        /* \"#utility.yul\":7961:7995   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":8026:8028   */\n      0x60\n        /* \"#utility.yul\":8011:8029   */\n      dup2\n      add\n        /* \"#utility.yul\":8004:8038   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":7846:7849   */\n      0xa0\n        /* \"#utility.yul\":8069:8072   */\n      0x80\n        /* \"#utility.yul\":8054:8073   */\n      dup3\n      add\n        /* \"#utility.yul\":8047:8079   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7809:7813   */\n      0x00\n      swap1\n        /* \"#utility.yul\":8096:8141   */\n      tag_306\n      swap1\n        /* \"#utility.yul\":8121:8140   */\n      dup4\n      add\n        /* \"#utility.yul\":8113:8119   */\n      dup5\n        /* \"#utility.yul\":8096:8141   */\n      tag_295\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":8088:8141   */\n      swap8\n        /* \"#utility.yul\":7587:8147   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8152:8413   */\n    tag_39:\n        /* \"#utility.yul\":8331:8333   */\n      0x20\n        /* \"#utility.yul\":8320:8329   */\n      dup2\n        /* \"#utility.yul\":8313:8334   */\n      mstore\n        /* \"#utility.yul\":8294:8298   */\n      0x00\n        /* \"#utility.yul\":8351:8407   */\n      tag_283\n        /* \"#utility.yul\":8403:8405   */\n      0x20\n        /* \"#utility.yul\":8392:8401   */\n      dup4\n        /* \"#utility.yul\":8388:8406   */\n      add\n        /* \"#utility.yul\":8380:8386   */\n      dup5\n        /* \"#utility.yul\":8351:8407   */\n      tag_290\n      jump\t// in\n        /* \"#utility.yul\":8418:8883   */\n    tag_142:\n        /* \"#utility.yul\":8675:8677   */\n      0x40\n        /* \"#utility.yul\":8664:8673   */\n      dup2\n        /* \"#utility.yul\":8657:8678   */\n      mstore\n        /* \"#utility.yul\":8638:8642   */\n      0x00\n        /* \"#utility.yul\":8701:8757   */\n      tag_310\n        /* \"#utility.yul\":8753:8755   */\n      0x40\n        /* \"#utility.yul\":8742:8751   */\n      dup4\n        /* \"#utility.yul\":8738:8756   */\n      add\n        /* \"#utility.yul\":8730:8736   */\n      dup6\n        /* \"#utility.yul\":8701:8757   */\n      tag_290\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":8805:8814   */\n      dup3\n        /* \"#utility.yul\":8797:8803   */\n      dup2\n        /* \"#utility.yul\":8793:8815   */\n      sub\n        /* \"#utility.yul\":8788:8790   */\n      0x20\n        /* \"#utility.yul\":8777:8786   */\n      dup5\n        /* \"#utility.yul\":8773:8791   */\n      add\n        /* \"#utility.yul\":8766:8816   */\n      mstore\n        /* \"#utility.yul\":8833:8877   */\n      tag_311\n        /* \"#utility.yul\":8870:8876   */\n      dup2\n        /* \"#utility.yul\":8862:8868   */\n      dup6\n        /* \"#utility.yul\":8833:8877   */\n      tag_290\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":8825:8877   */\n      swap6\n        /* \"#utility.yul\":8418:8883   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9080:9299   */\n    tag_29:\n        /* \"#utility.yul\":9229:9231   */\n      0x20\n        /* \"#utility.yul\":9218:9227   */\n      dup2\n        /* \"#utility.yul\":9211:9232   */\n      mstore\n        /* \"#utility.yul\":9192:9196   */\n      0x00\n        /* \"#utility.yul\":9249:9293   */\n      tag_283\n        /* \"#utility.yul\":9289:9291   */\n      0x20\n        /* \"#utility.yul\":9278:9287   */\n      dup4\n        /* \"#utility.yul\":9274:9292   */\n      add\n        /* \"#utility.yul\":9266:9272   */\n      dup5\n        /* \"#utility.yul\":9249:9293   */\n      tag_295\n      jump\t// in\n        /* \"#utility.yul\":9725:10129   */\n    tag_191:\n        /* \"#utility.yul\":9927:9929   */\n      0x20\n        /* \"#utility.yul\":9909:9930   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9966:9968   */\n      0x28\n        /* \"#utility.yul\":9946:9964   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9939:9969   */\n      mstore\n        /* \"#utility.yul\":10005:10039   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":10000:10002   */\n      0x40\n        /* \"#utility.yul\":9985:10003   */\n      dup3\n      add\n        /* \"#utility.yul\":9978:10040   */\n      mstore\n      shl(0xc0, 0x6420746f6b656e73)\n        /* \"#utility.yul\":10071:10073   */\n      0x60\n        /* \"#utility.yul\":10056:10074   */\n      dup3\n      add\n        /* \"#utility.yul\":10049:10087   */\n      mstore\n        /* \"#utility.yul\":10119:10122   */\n      0x80\n        /* \"#utility.yul\":10104:10123   */\n      add\n      swap1\n        /* \"#utility.yul\":9725:10129   */\n      jump\t// out\n        /* \"#utility.yul\":10956:11357   */\n    tag_124:\n        /* \"#utility.yul\":11158:11160   */\n      0x20\n        /* \"#utility.yul\":11140:11161   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11197:11199   */\n      0x25\n        /* \"#utility.yul\":11177:11195   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11170:11200   */\n      mstore\n        /* \"#utility.yul\":11236:11270   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":11231:11233   */\n      0x40\n        /* \"#utility.yul\":11216:11234   */\n      dup3\n      add\n        /* \"#utility.yul\":11209:11271   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":11302:11304   */\n      0x60\n        /* \"#utility.yul\":11287:11305   */\n      dup3\n      add\n        /* \"#utility.yul\":11280:11315   */\n      mstore\n        /* \"#utility.yul\":11347:11350   */\n      0x80\n        /* \"#utility.yul\":11332:11351   */\n      add\n      swap1\n        /* \"#utility.yul\":10956:11357   */\n      jump\t// out\n        /* \"#utility.yul\":11781:12187   */\n    tag_137:\n        /* \"#utility.yul\":11983:11985   */\n      0x20\n        /* \"#utility.yul\":11965:11986   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12022:12024   */\n      0x2a\n        /* \"#utility.yul\":12002:12020   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11995:12025   */\n      mstore\n        /* \"#utility.yul\":12061:12095   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":12056:12058   */\n      0x40\n        /* \"#utility.yul\":12041:12059   */\n      dup3\n      add\n        /* \"#utility.yul\":12034:12096   */\n      mstore\n      shl(0xb1, 0x39103a3930b739b332b9)\n        /* \"#utility.yul\":12127:12129   */\n      0x60\n        /* \"#utility.yul\":12112:12130   */\n      dup3\n      add\n        /* \"#utility.yul\":12105:12145   */\n      mstore\n        /* \"#utility.yul\":12177:12180   */\n      0x80\n        /* \"#utility.yul\":12162:12181   */\n      add\n      swap1\n        /* \"#utility.yul\":11781:12187   */\n      jump\t// out\n        /* \"#utility.yul\":13856:14039   */\n    tag_227:\n        /* \"#utility.yul\":13916:13920   */\n      0x00\n        /* \"#utility.yul\":13949:13967   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13941:13947   */\n      dup3\n        /* \"#utility.yul\":13938:13968   */\n      gt\n        /* \"#utility.yul\":13935:13991   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":13971:13989   */\n      tag_329\n      tag_86\n      jump\t// in\n    tag_329:\n      pop\n        /* \"#utility.yul\":14016:14017   */\n      0x05\n        /* \"#utility.yul\":14012:14026   */\n      shl\n        /* \"#utility.yul\":14028:14032   */\n      0x20\n        /* \"#utility.yul\":14008:14033   */\n      add\n      swap1\n        /* \"#utility.yul\":13856:14039   */\n      jump\t// out\n        /* \"#utility.yul\":14044:14172   */\n    tag_139:\n        /* \"#utility.yul\":14084:14087   */\n      0x00\n        /* \"#utility.yul\":14115:14116   */\n      dup3\n        /* \"#utility.yul\":14111:14117   */\n      not\n        /* \"#utility.yul\":14108:14109   */\n      dup3\n        /* \"#utility.yul\":14105:14118   */\n      gt\n        /* \"#utility.yul\":14102:14141   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":14121:14139   */\n      tag_332\n      tag_333\n      jump\t// in\n    tag_332:\n      pop\n        /* \"#utility.yul\":14157:14166   */\n      add\n      swap1\n        /* \"#utility.yul\":14044:14172   */\n      jump\t// out\n        /* \"#utility.yul\":14177:14557   */\n    tag_64:\n        /* \"#utility.yul\":14256:14257   */\n      0x01\n        /* \"#utility.yul\":14252:14264   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":14299:14311   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":14320:14381   */\n      tag_335\n      jumpi\n        /* \"#utility.yul\":14374:14378   */\n      0x7f\n        /* \"#utility.yul\":14366:14372   */\n      dup3\n        /* \"#utility.yul\":14362:14379   */\n      and\n        /* \"#utility.yul\":14352:14379   */\n      swap2\n      pop\n        /* \"#utility.yul\":14320:14381   */\n    tag_335:\n        /* \"#utility.yul\":14427:14429   */\n      0x20\n        /* \"#utility.yul\":14419:14425   */\n      dup3\n        /* \"#utility.yul\":14416:14430   */\n      lt\n        /* \"#utility.yul\":14396:14414   */\n      dup2\n        /* \"#utility.yul\":14393:14431   */\n      eq\n        /* \"#utility.yul\":14390:14551   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":14473:14483   */\n      0x4e487b71\n        /* \"#utility.yul\":14468:14471   */\n      0xe0\n        /* \"#utility.yul\":14464:14484   */\n      shl\n        /* \"#utility.yul\":14461:14462   */\n      0x00\n        /* \"#utility.yul\":14454:14485   */\n      mstore\n        /* \"#utility.yul\":14508:14512   */\n      0x22\n        /* \"#utility.yul\":14505:14506   */\n      0x04\n        /* \"#utility.yul\":14498:14513   */\n      mstore\n        /* \"#utility.yul\":14536:14540   */\n      0x24\n        /* \"#utility.yul\":14533:14534   */\n      0x00\n        /* \"#utility.yul\":14526:14541   */\n      revert\n        /* \"#utility.yul\":14390:14551   */\n    tag_336:\n      pop\n        /* \"#utility.yul\":14177:14557   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14562:14811   */\n    tag_229:\n        /* \"#utility.yul\":14672:14674   */\n      0x1f\n        /* \"#utility.yul\":14653:14666   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":14649:14676   */\n      and\n        /* \"#utility.yul\":14637:14677   */\n      dup2\n      add\n        /* \"#utility.yul\":14707:14725   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14692:14726   */\n      dup2\n      gt\n        /* \"#utility.yul\":14728:14750   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":14689:14751   */\n      or\n        /* \"#utility.yul\":14686:14774   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":14754:14772   */\n      tag_339\n      tag_86\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":14790:14792   */\n      0x40\n        /* \"#utility.yul\":14783:14805   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":14562:14811   */\n      jump\t// out\n        /* \"#utility.yul\":14816:14951   */\n    tag_100:\n        /* \"#utility.yul\":14855:14858   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":14876:14893   */\n      dup3\n      eq\n        /* \"#utility.yul\":14873:14916   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":14896:14914   */\n      tag_342\n      tag_333\n      jump\t// in\n    tag_342:\n      pop\n        /* \"#utility.yul\":14943:14944   */\n      0x01\n        /* \"#utility.yul\":14932:14945   */\n      add\n      swap1\n        /* \"#utility.yul\":14816:14951   */\n      jump\t// out\n        /* \"#utility.yul\":14956:15083   */\n    tag_333:\n        /* \"#utility.yul\":15017:15027   */\n      0x4e487b71\n        /* \"#utility.yul\":15012:15015   */\n      0xe0\n        /* \"#utility.yul\":15008:15028   */\n      shl\n        /* \"#utility.yul\":15005:15006   */\n      0x00\n        /* \"#utility.yul\":14998:15029   */\n      mstore\n        /* \"#utility.yul\":15048:15052   */\n      0x11\n        /* \"#utility.yul\":15045:15046   */\n      0x04\n        /* \"#utility.yul\":15038:15053   */\n      mstore\n        /* \"#utility.yul\":15072:15076   */\n      0x24\n        /* \"#utility.yul\":15069:15070   */\n      0x00\n        /* \"#utility.yul\":15062:15077   */\n      revert\n        /* \"#utility.yul\":15088:15215   */\n    tag_94:\n        /* \"#utility.yul\":15149:15159   */\n      0x4e487b71\n        /* \"#utility.yul\":15144:15147   */\n      0xe0\n        /* \"#utility.yul\":15140:15160   */\n      shl\n        /* \"#utility.yul\":15137:15138   */\n      0x00\n        /* \"#utility.yul\":15130:15161   */\n      mstore\n        /* \"#utility.yul\":15180:15184   */\n      0x32\n        /* \"#utility.yul\":15177:15178   */\n      0x04\n        /* \"#utility.yul\":15170:15185   */\n      mstore\n        /* \"#utility.yul\":15204:15208   */\n      0x24\n        /* \"#utility.yul\":15201:15202   */\n      0x00\n        /* \"#utility.yul\":15194:15209   */\n      revert\n        /* \"#utility.yul\":15220:15347   */\n    tag_86:\n        /* \"#utility.yul\":15281:15291   */\n      0x4e487b71\n        /* \"#utility.yul\":15276:15279   */\n      0xe0\n        /* \"#utility.yul\":15272:15292   */\n      shl\n        /* \"#utility.yul\":15269:15270   */\n      0x00\n        /* \"#utility.yul\":15262:15293   */\n      mstore\n        /* \"#utility.yul\":15312:15316   */\n      0x41\n        /* \"#utility.yul\":15309:15310   */\n      0x04\n        /* \"#utility.yul\":15302:15317   */\n      mstore\n        /* \"#utility.yul\":15336:15340   */\n      0x24\n        /* \"#utility.yul\":15333:15334   */\n      0x00\n        /* \"#utility.yul\":15326:15341   */\n      revert\n        /* \"#utility.yul\":15352:15531   */\n    tag_181:\n        /* \"#utility.yul\":15387:15390   */\n      0x00\n        /* \"#utility.yul\":15429:15430   */\n      0x03\n        /* \"#utility.yul\":15411:15427   */\n      returndatasize\n        /* \"#utility.yul\":15408:15431   */\n      gt\n        /* \"#utility.yul\":15405:15525   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":15475:15476   */\n      0x04\n        /* \"#utility.yul\":15472:15473   */\n      0x00\n        /* \"#utility.yul\":15469:15470   */\n      dup1\n        /* \"#utility.yul\":15454:15477   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":15512:15513   */\n      0x00\n        /* \"#utility.yul\":15506:15514   */\n      mload\n        /* \"#utility.yul\":15501:15504   */\n      0xe0\n        /* \"#utility.yul\":15497:15515   */\n      shr\n        /* \"#utility.yul\":15405:15525   */\n    tag_347:\n        /* \"#utility.yul\":15352:15531   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15536:16207   */\n    tag_183:\n        /* \"#utility.yul\":15575:15578   */\n      0x00\n        /* \"#utility.yul\":15617:15621   */\n      0x44\n        /* \"#utility.yul\":15599:15615   */\n      returndatasize\n        /* \"#utility.yul\":15596:15622   */\n      lt\n        /* \"#utility.yul\":15593:15632   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":15536:16207   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15593:15632   */\n    tag_349:\n        /* \"#utility.yul\":15659:15661   */\n      0x40\n        /* \"#utility.yul\":15653:15662   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":15724:15740   */\n      returndatasize\n        /* \"#utility.yul\":15720:15745   */\n      dup2\n      add\n        /* \"#utility.yul\":15717:15718   */\n      0x04\n        /* \"#utility.yul\":15653:15662   */\n      dup4\n        /* \"#utility.yul\":15696:15746   */\n      returndatacopy\n        /* \"#utility.yul\":15775:15779   */\n      dup2\n        /* \"#utility.yul\":15769:15780   */\n      mload\n        /* \"#utility.yul\":15799:15815   */\n      returndatasize\n        /* \"#utility.yul\":15834:15852   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15905:15907   */\n      dup2\n        /* \"#utility.yul\":15898:15902   */\n      0x24\n        /* \"#utility.yul\":15890:15896   */\n      dup5\n        /* \"#utility.yul\":15886:15903   */\n      add\n        /* \"#utility.yul\":15883:15908   */\n      gt\n        /* \"#utility.yul\":15878:15880   */\n      dup2\n        /* \"#utility.yul\":15870:15876   */\n      dup5\n        /* \"#utility.yul\":15867:15881   */\n      gt\n        /* \"#utility.yul\":15864:15909   */\n      or\n        /* \"#utility.yul\":15861:15919   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":15912:15917   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15536:16207   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15861:15919   */\n    tag_350:\n        /* \"#utility.yul\":15949:15955   */\n      dup3\n        /* \"#utility.yul\":15943:15947   */\n      dup6\n        /* \"#utility.yul\":15939:15956   */\n      add\n        /* \"#utility.yul\":15928:15956   */\n      swap2\n      pop\n        /* \"#utility.yul\":15985:15988   */\n      dup2\n        /* \"#utility.yul\":15979:15989   */\n      mload\n        /* \"#utility.yul\":16012:16014   */\n      dup2\n        /* \"#utility.yul\":16004:16010   */\n      dup2\n        /* \"#utility.yul\":16001:16015   */\n      gt\n        /* \"#utility.yul\":15998:16025   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":16018:16023   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15536:16207   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15998:16025   */\n    tag_351:\n        /* \"#utility.yul\":16102:16104   */\n      dup5\n        /* \"#utility.yul\":16083:16099   */\n      returndatasize\n        /* \"#utility.yul\":16077:16081   */\n      dup8\n        /* \"#utility.yul\":16073:16100   */\n      add\n        /* \"#utility.yul\":16069:16105   */\n      add\n        /* \"#utility.yul\":16062:16066   */\n      0x20\n        /* \"#utility.yul\":16053:16059   */\n      dup3\n        /* \"#utility.yul\":16048:16051   */\n      dup6\n        /* \"#utility.yul\":16044:16060   */\n      add\n        /* \"#utility.yul\":16040:16067   */\n      add\n        /* \"#utility.yul\":16037:16106   */\n      gt\n        /* \"#utility.yul\":16034:16116   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":16109:16114   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15536:16207   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16034:16116   */\n    tag_352:\n        /* \"#utility.yul\":16125:16182   */\n      tag_353\n        /* \"#utility.yul\":16176:16180   */\n      0x20\n        /* \"#utility.yul\":16167:16173   */\n      dup3\n        /* \"#utility.yul\":16159:16165   */\n      dup7\n        /* \"#utility.yul\":16155:16174   */\n      add\n        /* \"#utility.yul\":16151:16181   */\n      add\n        /* \"#utility.yul\":16145:16149   */\n      dup8\n        /* \"#utility.yul\":16125:16182   */\n      tag_229\n      jump\t// in\n    tag_353:\n      pop\n        /* \"#utility.yul\":16198:16201   */\n      swap1\n      swap6\n        /* \"#utility.yul\":15536:16207   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16212:16343   */\n    tag_284:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":16286:16318   */\n      dup2\n      and\n        /* \"#utility.yul\":16276:16319   */\n      dup2\n      eq\n        /* \"#utility.yul\":16266:16337   */\n      tag_355\n      jumpi\n        /* \"#utility.yul\":16333:16334   */\n      0x00\n        /* \"#utility.yul\":16330:16331   */\n      dup1\n        /* \"#utility.yul\":16323:16335   */\n      revert\n        /* \"#utility.yul\":16266:16337   */\n    tag_355:\n        /* \"#utility.yul\":16212:16343   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202b2d8129f9e39573d57c17a1d8c8f47c1f6012efc6576c07d963335385c68d1f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_523": {
									"entryPoint": 70,
									"id": 523,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 261,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 542,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1620:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "105:996:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "115:12:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "125:2:10",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "119:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "172:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "184:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "174:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "174:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "174:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "147:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "156:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "143:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "143:23:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "168:2:10"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "139:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "139:32:10"
															},
															"nodeType": "YulIf",
															"src": "136:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "197:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "217:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "211:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "211:16:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "201:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "236:28:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "254:2:10",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "258:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:10:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:18:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "240:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "300:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "303:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "293:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "279:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "287:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "276:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:14:10"
															},
															"nodeType": "YulIf",
															"src": "273:34:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "330:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "341:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:22:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "320:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "396:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "405:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "408:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "398:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "398:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "398:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "375:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "379:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "371:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "371:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "386:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "367:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "367:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "360:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:35:10"
															},
															"nodeType": "YulIf",
															"src": "357:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "421:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "437:2:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "431:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "431:9:10"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "425:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "463:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "465:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "465:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "465:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "455:2:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "459:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "452:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "452:10:10"
															},
															"nodeType": "YulIf",
															"src": "449:36:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "494:17:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "504:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "504:7:10"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "498:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "520:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "540:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "534:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "524:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "552:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "574:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_4",
																										"nodeType": "YulIdentifier",
																										"src": "598:2:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "602:4:10",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "594:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "594:13:10"
																							},
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "609:2:10"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "590:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "590:22:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "614:2:10",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "586:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "586:31:10"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "619:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "582:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "582:40:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:53:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "556:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "682:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "684:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "684:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "684:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "641:10:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "653:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "638:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "638:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "661:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "673:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "658:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "658:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "635:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:46:10"
															},
															"nodeType": "YulIf",
															"src": "632:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "720:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "724:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "713:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "713:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "713:22:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "751:6:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "759:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "744:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "744:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "744:18:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "808:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "817:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "820:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "810:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "810:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "810:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "785:2:10"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "789:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "781:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "781:11:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "794:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "777:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "777:20:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "799:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "774:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "774:33:10"
															},
															"nodeType": "YulIf",
															"src": "771:53:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "833:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "842:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "837:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "898:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "927:6:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "935:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "923:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "923:14:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "939:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "919:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "919:23:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "958:2:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "962:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "954:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "954:10:10"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "966:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "950:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "950:19:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "944:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "944:26:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "912:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "912:59:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "912:59:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "863:1:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "866:2:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "860:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "860:9:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "870:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "872:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "881:1:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "884:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "877:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "877:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "872:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "856:3:10",
																"statements": []
															},
															"src": "852:129:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1011:59:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1040:6:10"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "1048:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1036:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1036:15:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1053:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1032:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1032:24:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1058:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1025:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1025:35:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1025:35:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "996:1:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "999:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "993:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "993:9:10"
															},
															"nodeType": "YulIf",
															"src": "990:80:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1079:16:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1089:6:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1079:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "71:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "82:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "94:6:10",
														"type": ""
													}
												],
												"src": "14:1087:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1161:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1171:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1185:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1188:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1181:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1181:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1171:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1202:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1232:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1238:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1228:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1228:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1206:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1279:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1281:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1295:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1303:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1291:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1291:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1281:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1259:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1252:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1252:26:10"
															},
															"nodeType": "YulIf",
															"src": "1249:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1369:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1390:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1397:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1402:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1393:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1393:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1383:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1383:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1383:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1434:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1437:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1427:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1427:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1427:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1462:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1465:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1455:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1455:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1455:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1325:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1348:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1356:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1345:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1345:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1322:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1322:38:10"
															},
															"nodeType": "YulIf",
															"src": "1319:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1141:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1150:6:10",
														"type": ""
													}
												],
												"src": "1106:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1523:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1540:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1552:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1543:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1543:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1533:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1533:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1533:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1580:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1583:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1573:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1573:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1573:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1604:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1607:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1597:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1597:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1597:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1491:127:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        if gt(i, _4)\n        {\n            mstore(add(add(memPtr, _4), _1), 0)\n        }\n        value0 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200162e3803806200162e833981016040819052620000349162000105565b6200003f8162000046565b5062000234565b80516200005b9060029060208401906200005f565b5050565b8280546200006d90620001e1565b90600052602060002090601f016020900481019282620000915760008555620000dc565b82601f10620000ac57805160ff1916838001178555620000dc565b82800160010185558215620000dc579182015b82811115620000dc578251825591602001919060010190620000bf565b50620000ea929150620000ee565b5090565b5b80821115620000ea5760008155600101620000ef565b600060208083850312156200011957600080fd5b82516001600160401b03808211156200013157600080fd5b818501915085601f8301126200014657600080fd5b8151818111156200015b576200015b6200021e565b604051601f8201601f19908116603f011681019083821181831017156200018657620001866200021e565b8160405282815288868487010111156200019f57600080fd5b600093505b82841015620001c35784840186015181850187015292850192620001a4565b82841115620001d55760008684830101525b98975050505050505050565b600181811c90821680620001f657607f821691505b602082108114156200021857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6113ea80620002446000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610e49565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610f44565b610223565b60405190151581526020016100a9565b6100e86100e3366004610f85565b610275565b6040516100a9919061110a565b610108610103366004610cfe565b610309565b005b61011d610118366004610e73565b6103a0565b6040516100a991906110c9565b610108610138366004610e0d565b6104ca565b6100c561014b366004610ccb565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610108610187366004610da8565b6104d9565b60006001600160a01b0383166101fd5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061025457506001600160e01b031982166303a24d0760e21b145b8061026f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606002805461028490611230565b80601f01602080910402602001604051908101604052809291908181526020018280546102b090611230565b80156102fd5780601f106102d2576101008083540402835291602001916102fd565b820191906000526020600020905b8154815290600101906020018083116102e057829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103255750610325853361014b565b61038c5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016101f4565b6103998585858585610560565b5050505050565b606081518351146104055760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f4565b6000835167ffffffffffffffff811115610421576104216112df565b60405190808252806020026020018201604052801561044a578160200160208202803683370190505b50905060005b84518110156104c25761049585828151811061046e5761046e6112c9565b6020026020010151858381518110610488576104886112c9565b602002602001015161018c565b8282815181106104a7576104a76112c9565b60209081029190910101526104bb81611298565b9050610450565b509392505050565b6104d533838361073d565b5050565b6001600160a01b0385163314806104f557506104f5853361014b565b6105535760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016101f4565b610399858585858561081e565b81518351146105c25760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f4565b6001600160a01b0384166105e85760405162461bcd60e51b81526004016101f490611165565b3360005b84518110156106cf576000858281518110610609576106096112c9565b602002602001015190506000858381518110610627576106276112c9565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156106775760405162461bcd60e51b81526004016101f4906111aa565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906106b4908490611218565b92505081905550505050806106c890611298565b90506105ec565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161071f9291906110dc565b60405180910390a4610735818787878787610944565b505050505050565b816001600160a01b0316836001600160a01b031614156107b15760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f4565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166108445760405162461bcd60e51b81526004016101f490611165565b3361085d81878761085488610aaf565b61039988610aaf565b6000848152602081815260408083206001600160a01b038a1684529091529020548381101561089e5760405162461bcd60e51b81526004016101f4906111aa565b6000858152602081815260408083206001600160a01b038b81168552925280832087850390559088168252812080548692906108db908490611218565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461093b828888888888610afa565b50505050505050565b6001600160a01b0384163b156107355760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906109889089908990889088908890600401611026565b602060405180830381600087803b1580156109a257600080fd5b505af19250505080156109d2575060408051601f3d908101601f191682019092526109cf91810190610f68565b60015b610a7f576109de6112f5565b806308c379a01415610a1857506109f3611311565b806109fe5750610a1a565b8060405162461bcd60e51b81526004016101f4919061110a565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101f4565b6001600160e01b0319811663bc197c8160e01b1461093b5760405162461bcd60e51b81526004016101f49061111d565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610ae957610ae96112c9565b602090810291909101015292915050565b6001600160a01b0384163b156107355760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610b3e9089908990889088908890600401611084565b602060405180830381600087803b158015610b5857600080fd5b505af1925050508015610b88575060408051601f3d908101601f19168201909252610b8591810190610f68565b60015b610b94576109de6112f5565b6001600160e01b0319811663f23a6e6160e01b1461093b5760405162461bcd60e51b81526004016101f49061111d565b80356001600160a01b0381168114610bdb57600080fd5b919050565b600082601f830112610bf157600080fd5b81356020610bfe826111f4565b604051610c0b828261126b565b8381528281019150858301600585901b87018401881015610c2b57600080fd5b60005b85811015610c4a57813584529284019290840190600101610c2e565b5090979650505050505050565b600082601f830112610c6857600080fd5b813567ffffffffffffffff811115610c8257610c826112df565b604051610c99601f8301601f19166020018261126b565b818152846020838601011115610cae57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215610cde57600080fd5b610ce783610bc4565b9150610cf560208401610bc4565b90509250929050565b600080600080600060a08688031215610d1657600080fd5b610d1f86610bc4565b9450610d2d60208701610bc4565b9350604086013567ffffffffffffffff80821115610d4a57600080fd5b610d5689838a01610be0565b94506060880135915080821115610d6c57600080fd5b610d7889838a01610be0565b93506080880135915080821115610d8e57600080fd5b50610d9b88828901610c57565b9150509295509295909350565b600080600080600060a08688031215610dc057600080fd5b610dc986610bc4565b9450610dd760208701610bc4565b93506040860135925060608601359150608086013567ffffffffffffffff811115610e0157600080fd5b610d9b88828901610c57565b60008060408385031215610e2057600080fd5b610e2983610bc4565b915060208301358015158114610e3e57600080fd5b809150509250929050565b60008060408385031215610e5c57600080fd5b610e6583610bc4565b946020939093013593505050565b60008060408385031215610e8657600080fd5b823567ffffffffffffffff80821115610e9e57600080fd5b818501915085601f830112610eb257600080fd5b81356020610ebf826111f4565b604051610ecc828261126b565b8381528281019150858301600585901b870184018b1015610eec57600080fd5b600096505b84871015610f1657610f0281610bc4565b835260019690960195918301918301610ef1565b5096505086013592505080821115610f2d57600080fd5b50610f3a85828601610be0565b9150509250929050565b600060208284031215610f5657600080fd5b8135610f618161139b565b9392505050565b600060208284031215610f7a57600080fd5b8151610f618161139b565b600060208284031215610f9757600080fd5b5035919050565b600081518084526020808501945080840160005b83811015610fce57815187529582019590820190600101610fb2565b509495945050505050565b6000815180845260005b81811015610fff57602081850181015186830182015201610fe3565b81811115611011576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a06040820181905260009061105290830186610f9e565b82810360608401526110648186610f9e565b905082810360808401526110788185610fd9565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906110be90830184610fd9565b979650505050505050565b602081526000610f616020830184610f9e565b6040815260006110ef6040830185610f9e565b82810360208401526111018185610f9e565b95945050505050565b602081526000610f616020830184610fd9565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600067ffffffffffffffff82111561120e5761120e6112df565b5060051b60200190565b6000821982111561122b5761122b6112b3565b500190565b600181811c9082168061124457607f821691505b6020821081141561126557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff81118282101715611291576112916112df565b6040525050565b60006000198214156112ac576112ac6112b3565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d111561130e5760046000803e5060005160e01c5b90565b600060443d101561131f5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561134f57505050505090565b82850191508151818111156113675750505050505090565b843d87010160208285010111156113815750505050505090565b6113906020828601018761126b565b509095945050505050565b6001600160e01b0319811681146113b157600080fd5b5056fea26469706673582212202b2d8129f9e39573d57c17a1d8c8f47c1f6012efc6576c07d963335385c68d1f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x162E CODESIZE SUB DUP1 PUSH3 0x162E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x105 JUMP JUMPDEST PUSH3 0x3F DUP2 PUSH3 0x46 JUMP JUMPDEST POP PUSH3 0x234 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x5B SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x5F JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x6D SWAP1 PUSH3 0x1E1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x91 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xDC JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xAC JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xDC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xDC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xDC JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xBF JUMP JUMPDEST POP PUSH3 0xEA SWAP3 SWAP2 POP PUSH3 0xEE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xEA JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xEF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x15B JUMPI PUSH3 0x15B PUSH3 0x21E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x186 JUMPI PUSH3 0x186 PUSH3 0x21E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x1C3 JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x1A4 JUMP JUMPDEST DUP3 DUP5 GT ISZERO PUSH3 0x1D5 JUMPI PUSH1 0x0 DUP7 DUP5 DUP4 ADD ADD MSTORE JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1F6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x218 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x13EA DUP1 PUSH3 0x244 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xE49 JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xF44 JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xF85 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xE73 JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x10C9 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xE0D JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xDA8 JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x254 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x26F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x284 SWAP1 PUSH2 0x1230 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B0 SWAP1 PUSH2 0x1230 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x325 JUMPI POP PUSH2 0x325 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x38C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x560 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x421 JUMPI PUSH2 0x421 PUSH2 0x12DF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x44A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4C2 JUMPI PUSH2 0x495 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x46E JUMPI PUSH2 0x46E PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x488 JUMPI PUSH2 0x488 PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4A7 JUMPI PUSH2 0x4A7 PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x4BB DUP2 PUSH2 0x1298 JUMP JUMPDEST SWAP1 POP PUSH2 0x450 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4D5 CALLER DUP4 DUP4 PUSH2 0x73D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4F5 JUMPI POP PUSH2 0x4F5 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x553 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x81E JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1165 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6CF JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x609 JUMPI PUSH2 0x609 PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x627 JUMPI PUSH2 0x627 PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x677 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x11AA JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B4 SWAP1 DUP5 SWAP1 PUSH2 0x1218 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x6C8 SWAP1 PUSH2 0x1298 JUMP JUMPDEST SWAP1 POP PUSH2 0x5EC JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x71F SWAP3 SWAP2 SWAP1 PUSH2 0x10DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x735 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x944 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x844 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1165 JUMP JUMPDEST CALLER PUSH2 0x85D DUP2 DUP8 DUP8 PUSH2 0x854 DUP9 PUSH2 0xAAF JUMP JUMPDEST PUSH2 0x399 DUP9 PUSH2 0xAAF JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x89E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x11AA JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x8DB SWAP1 DUP5 SWAP1 PUSH2 0x1218 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x93B DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xAFA JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x988 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1026 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9D2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9CF SWAP2 DUP2 ADD SWAP1 PUSH2 0xF68 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA7F JUMPI PUSH2 0x9DE PUSH2 0x12F5 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xA18 JUMPI POP PUSH2 0x9F3 PUSH2 0x1311 JUMP JUMPDEST DUP1 PUSH2 0x9FE JUMPI POP PUSH2 0xA1A JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x93B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x111D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAE9 JUMPI PUSH2 0xAE9 PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xB3E SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB88 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB85 SWAP2 DUP2 ADD SWAP1 PUSH2 0xF68 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB94 JUMPI PUSH2 0x9DE PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x93B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x111D JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xBFE DUP3 PUSH2 0x11F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0B DUP3 DUP3 PUSH2 0x126B JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0xC2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xC4A JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xC2E JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC82 JUMPI PUSH2 0xC82 PUSH2 0x12DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC99 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x126B JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xCAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCE7 DUP4 PUSH2 0xBC4 JUMP JUMPDEST SWAP2 POP PUSH2 0xCF5 PUSH1 0x20 DUP5 ADD PUSH2 0xBC4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD1F DUP7 PUSH2 0xBC4 JUMP JUMPDEST SWAP5 POP PUSH2 0xD2D PUSH1 0x20 DUP8 ADD PUSH2 0xBC4 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xD4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD56 DUP10 DUP4 DUP11 ADD PUSH2 0xBE0 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xD6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD78 DUP10 DUP4 DUP11 ADD PUSH2 0xBE0 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xD8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD9B DUP9 DUP3 DUP10 ADD PUSH2 0xC57 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xDC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC9 DUP7 PUSH2 0xBC4 JUMP JUMPDEST SWAP5 POP PUSH2 0xDD7 PUSH1 0x20 DUP8 ADD PUSH2 0xBC4 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD9B DUP9 DUP3 DUP10 ADD PUSH2 0xC57 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE29 DUP4 PUSH2 0xBC4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE65 DUP4 PUSH2 0xBC4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xEBF DUP3 PUSH2 0x11F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xECC DUP3 DUP3 PUSH2 0x126B JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0xEEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0xF16 JUMPI PUSH2 0xF02 DUP2 PUSH2 0xBC4 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xEF1 JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xF2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF3A DUP6 DUP3 DUP7 ADD PUSH2 0xBE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF61 DUP2 PUSH2 0x139B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF61 DUP2 PUSH2 0x139B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFCE JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xFB2 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFFF JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xFE3 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1011 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1052 SWAP1 DUP4 ADD DUP7 PUSH2 0xF9E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1064 DUP2 DUP7 PUSH2 0xF9E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1078 DUP2 DUP6 PUSH2 0xFD9 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x10BE SWAP1 DUP4 ADD DUP5 PUSH2 0xFD9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xF61 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF9E JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x10EF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xF9E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1101 DUP2 DUP6 PUSH2 0xF9E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xF61 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFD9 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x120E JUMPI PUSH2 0x120E PUSH2 0x12DF JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x122B JUMPI PUSH2 0x122B PUSH2 0x12B3 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1244 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1265 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1291 JUMPI PUSH2 0x1291 PUSH2 0x12DF JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x12AC JUMPI PUSH2 0x12AC PUSH2 0x12B3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x130E JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x131F JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x134F JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1367 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1381 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1390 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x126B JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x13B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B 0x2D DUP2 0x29 0xF9 0xE3 SWAP6 PUSH20 0xD57C17A1D8C8F47C1F6012EFC6576C07D9633353 DUP6 0xC6 DUP14 0x1F PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "555:14720:0:-:0;;;1092:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1134:13;1142:4;1134:7;:13::i;:::-;1092:62;555:14720;;7936:86;8002:13;;;;:4;;:13;;;;;:::i;:::-;;7936:86;:::o;555:14720::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;555:14720:0;;;-1:-1:-1;555:14720:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:1087:10;94:6;125:2;168;156:9;147:7;143:23;139:32;136:52;;;184:1;181;174:12;136:52;211:16;;-1:-1:-1;;;;;276:14:10;;;273:34;;;303:1;300;293:12;273:34;341:6;330:9;326:22;316:32;;386:7;379:4;375:2;371:13;367:27;357:55;;408:1;405;398:12;357:55;437:2;431:9;459:2;455;452:10;449:36;;;465:18;;:::i;:::-;540:2;534:9;508:2;594:13;;-1:-1:-1;;590:22:10;;;614:2;586:31;582:40;570:53;;;638:18;;;658:22;;;635:46;632:72;;;684:18;;:::i;:::-;724:10;720:2;713:22;759:2;751:6;744:18;799:7;794:2;789;785;781:11;777:20;774:33;771:53;;;820:1;817;810:12;771:53;842:1;833:10;;852:129;866:2;863:1;860:9;852:129;;;954:10;;;950:19;;944:26;923:14;;;919:23;;912:59;877:10;;;;852:129;;;999:2;996:1;993:9;990:80;;;1058:1;1053:2;1048;1040:6;1036:15;1032:24;1025:35;990:80;1089:6;14:1087;-1:-1:-1;;;;;;;;14:1087:10:o;1106:380::-;1185:1;1181:12;;;;1228;;;1249:61;;1303:4;1295:6;1291:17;1281:27;;1249:61;1356:2;1348:6;1345:14;1325:18;1322:38;1319:161;;;1402:10;1397:3;1393:20;1390:1;1383:31;1437:4;1434:1;1427:15;1465:4;1462:1;1455:15;1319:161;;1106:380;;;:::o;1491:127::-;1552:10;1547:3;1543:20;1540:1;1533:31;1583:4;1580:1;1573:15;1607:4;1604:1;1597:15;1491:127;555:14720:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArray_1094": {
									"entryPoint": 2735,
									"id": 1094,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_938": {
									"entryPoint": null,
									"id": 938,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1066": {
									"entryPoint": 2372,
									"id": 1066,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1001": {
									"entryPoint": 2810,
									"id": 1001,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_1713": {
									"entryPoint": null,
									"id": 1713,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_512": {
									"entryPoint": 1376,
									"id": 512,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_386": {
									"entryPoint": 2078,
									"id": 386,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_919": {
									"entryPoint": 1853,
									"id": 919,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOfBatch_179": {
									"entryPoint": 928,
									"id": 179,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_115": {
									"entryPoint": 396,
									"id": 115,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_214": {
									"entryPoint": null,
									"id": 214,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1424": {
									"entryPoint": null,
									"id": 1424,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_292": {
									"entryPoint": 777,
									"id": 292,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_252": {
									"entryPoint": 1241,
									"id": 252,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_196": {
									"entryPoint": 1226,
									"id": 196,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1746": {
									"entryPoint": null,
									"id": 1746,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_75": {
									"entryPoint": 547,
									"id": 75,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_87": {
									"entryPoint": 629,
									"id": 87,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 3012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 3040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 3159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 3326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 3496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 3944,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3973,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 3998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes": {
									"entryPoint": 4057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4134,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4228,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4316,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4453,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_allocation_size_array_address_dyn": {
									"entryPoint": 4596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4656,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 4715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 4760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4787,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4809,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4831,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 4853,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 4881,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_bytes4": {
									"entryPoint": 5019,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16345:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:10"
															},
															"nodeType": "YulIf",
															"src": "111:70:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:10",
														"type": ""
													}
												],
												"src": "14:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "256:671:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "305:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "314:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "307:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "307:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "307:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "284:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "292:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "280:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "280:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "299:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "276:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "276:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "269:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "269:35:10"
															},
															"nodeType": "YulIf",
															"src": "266:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "330:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "353:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "340:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "340:20:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "334:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "369:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "379:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "373:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "392:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "442:2:10"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "402:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "402:43:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "396:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "454:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "474:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "468:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "468:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "458:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "506:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "514:2:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "486:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "486:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "486:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "526:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "537:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "530:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "559:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "567:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "552:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "552:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "552:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "579:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "590:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "598:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "586:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "586:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "579:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "610:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "625:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "633:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "621:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "621:15:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "614:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "690:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "699:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "702:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "692:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "692:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "692:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "659:6:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "671:1:10",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "674:2:10"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "667:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "667:10:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "655:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "655:23:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "680:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "651:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "651:32:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "685:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "648:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:41:10"
															},
															"nodeType": "YulIf",
															"src": "645:61:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "715:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "724:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "719:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "779:118:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "800:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "818:3:10"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "805:12:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "805:17:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "793:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "793:30:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "793:30:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "836:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "847:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "852:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "843:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "843:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "836:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "868:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "879:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "884:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "875:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "875:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "868:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "745:1:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "748:2:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "742:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "742:9:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "752:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "754:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "763:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "766:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "759:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "759:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "754:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "738:3:10",
																"statements": []
															},
															"src": "734:163:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "906:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "915:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "906:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "230:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "238:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "246:5:10",
														"type": ""
													}
												],
												"src": "192:735:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "984:503:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1033:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1042:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1045:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1035:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1035:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1035:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1012:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1020:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1008:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1008:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1027:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1004:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1004:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "997:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:35:10"
															},
															"nodeType": "YulIf",
															"src": "994:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1058:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1081:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1068:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1068:20:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1062:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1127:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1129:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1129:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1129:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1103:2:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1100:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:26:10"
															},
															"nodeType": "YulIf",
															"src": "1097:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1158:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1178:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1172:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1162:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1210:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1230:2:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1234:4:10",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1226:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1226:13:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1245:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1241:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1241:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1222:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1222:27:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1251:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1218:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1218:38:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1190:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1190:67:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1190:67:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1273:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1281:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1266:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1266:18:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1332:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1341:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1344:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1334:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1334:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1334:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1307:6:10"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1315:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:15:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1320:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1299:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1299:26:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1327:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1296:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:35:10"
															},
															"nodeType": "YulIf",
															"src": "1293:55:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1374:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1382:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1370:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1370:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1393:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1401:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1389:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1389:17:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1408:2:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1357:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1357:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1357:54:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1435:6:10"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1443:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1431:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1431:15:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1448:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1427:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1427:26:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1455:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1420:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1420:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1420:37:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1466:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1475:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1466:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "958:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "966:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "974:5:10",
														"type": ""
													}
												],
												"src": "932:555:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1579:173:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1625:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1634:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1637:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1627:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1627:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1627:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1600:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1609:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1596:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1596:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1621:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1592:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1592:32:10"
															},
															"nodeType": "YulIf",
															"src": "1589:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1679:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1660:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1698:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1731:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1742:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1727:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1727:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1708:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1708:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1698:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1537:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1548:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1560:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1568:6:10",
														"type": ""
													}
												],
												"src": "1492:260:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1954:746:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2001:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2010:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2013:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2003:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2003:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2003:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1975:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1984:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1971:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1971:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1996:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1967:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1967:33:10"
															},
															"nodeType": "YulIf",
															"src": "1964:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2026:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2055:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2036:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2036:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2026:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2074:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2107:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2118:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2103:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2103:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2084:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2084:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2074:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2131:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2162:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2173:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2158:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2158:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2145:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2145:32:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2135:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2186:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2196:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2190:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2241:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2250:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2253:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2243:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2243:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2243:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2229:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2237:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2226:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2226:14:10"
															},
															"nodeType": "YulIf",
															"src": "2223:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2266:71:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2309:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2320:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2305:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2305:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2329:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2276:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2276:61:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2266:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2346:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2379:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2390:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2375:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2375:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2362:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2362:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "2350:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2423:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2432:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2435:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2425:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2425:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2425:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "2409:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2419:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2406:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2406:16:10"
															},
															"nodeType": "YulIf",
															"src": "2403:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2448:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2491:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "2502:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2487:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2487:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2513:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2458:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2458:63:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2448:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:49:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2563:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2574:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2559:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2559:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2546:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2546:33:10"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "2534:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2608:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2617:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2620:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2610:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2610:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2610:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "2594:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2604:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2591:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2591:16:10"
															},
															"nodeType": "YulIf",
															"src": "2588:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2633:61:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2664:9:10"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "2675:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2660:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2660:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2686:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2643:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2643:51:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "2633:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1888:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1899:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1911:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1919:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1927:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1935:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1943:6:10",
														"type": ""
													}
												],
												"src": "1757:943:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2852:459:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2899:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2908:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2911:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2901:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2901:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2901:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2873:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2882:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2869:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2869:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2894:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2865:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:33:10"
															},
															"nodeType": "YulIf",
															"src": "2862:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2924:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2953:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2934:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2934:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2924:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2972:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3005:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3016:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3001:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3001:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2982:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2982:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2972:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3029:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3056:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3067:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3052:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3052:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3039:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3039:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3029:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3080:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3107:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3118:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3103:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3103:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3090:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3090:32:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3080:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3131:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3162:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3173:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3158:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3158:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3145:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3145:33:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3135:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3221:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3230:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3233:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3223:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3223:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3223:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3193:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3201:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3190:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3190:30:10"
															},
															"nodeType": "YulIf",
															"src": "3187:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3246:59:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3277:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3288:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3273:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3273:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3297:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "3256:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3256:49:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3246:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2786:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2797:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2809:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2817:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2825:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2833:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2841:6:10",
														"type": ""
													}
												],
												"src": "2705:606:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3400:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3446:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3455:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3458:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3448:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3448:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3448:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3421:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3430:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3417:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3417:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3442:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3413:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3413:32:10"
															},
															"nodeType": "YulIf",
															"src": "3410:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3471:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3500:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3481:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3481:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3471:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3519:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3549:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3560:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3545:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3545:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3532:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3532:32:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3523:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3617:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3626:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3629:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3619:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3619:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3619:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3586:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3607:5:10"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3600:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3600:13:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3593:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3593:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3583:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3583:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3576:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3576:40:10"
															},
															"nodeType": "YulIf",
															"src": "3573:60:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3642:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3652:5:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3642:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3358:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3369:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3381:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3389:6:10",
														"type": ""
													}
												],
												"src": "3316:347:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3755:167:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3801:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3810:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3813:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3803:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3803:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3803:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3776:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3785:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3772:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3772:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3797:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3768:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3768:32:10"
															},
															"nodeType": "YulIf",
															"src": "3765:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3826:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3855:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3836:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3836:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3826:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3874:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3901:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3912:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3897:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3897:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3884:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3884:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3874:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3713:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3724:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3736:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3744:6:10",
														"type": ""
													}
												],
												"src": "3668:254:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4064:1082:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4110:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4119:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4122:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4112:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4112:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4112:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4085:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4094:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4081:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4081:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4106:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4077:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4077:32:10"
															},
															"nodeType": "YulIf",
															"src": "4074:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4135:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4162:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4149:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4149:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4139:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4181:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4191:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4185:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4236:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4245:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4248:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4238:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4238:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4238:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4224:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4232:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4221:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4221:14:10"
															},
															"nodeType": "YulIf",
															"src": "4218:34:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4261:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4275:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4286:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4271:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4271:22:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4265:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4341:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4350:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4353:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4343:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4343:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4343:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4320:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4324:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4316:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4316:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4331:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4312:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4312:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4305:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4305:35:10"
															},
															"nodeType": "YulIf",
															"src": "4302:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4366:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4389:2:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4376:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4376:16:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "4370:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4401:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4411:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4405:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4424:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4474:2:10"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4434:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4434:43:10"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "4428:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4486:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4506:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4500:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4500:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4490:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4538:6:10"
																	},
																	{
																		"name": "_5",
																		"nodeType": "YulIdentifier",
																		"src": "4546:2:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "4518:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4518:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4518:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4558:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4569:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4562:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4591:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4599:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4584:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4584:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4584:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4611:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4622:6:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "4630:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4618:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4618:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "4611:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4642:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4657:2:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "4661:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4653:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4653:11:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "4646:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4718:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4727:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4730:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4720:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4720:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4720:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4687:2:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4695:1:10",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "4698:2:10"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4691:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4691:10:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4683:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4683:19:10"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "4704:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4679:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4679:28:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4709:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4676:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4676:41:10"
															},
															"nodeType": "YulIf",
															"src": "4673:61:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4743:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4752:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4747:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4807:124:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4828:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "4852:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "4833:18:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4833:23:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4821:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4821:36:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4821:36:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4870:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4881:3:10"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "4886:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4877:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4877:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4870:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4902:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "4913:3:10"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "4918:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4909:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4909:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4902:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4773:1:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4776:2:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4770:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4770:9:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4780:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4782:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4791:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4794:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4787:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4787:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4782:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4766:3:10",
																"statements": []
															},
															"src": "4762:169:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4940:16:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4950:6:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4940:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4965:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4998:9:10"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "5009:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4994:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4994:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4981:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4981:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4969:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5042:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5051:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5054:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5044:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5044:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5044:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5028:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5038:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5025:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5025:16:10"
															},
															"nodeType": "YulIf",
															"src": "5022:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5067:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5110:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "5121:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5106:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5106:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5132:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5077:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5077:63:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5067:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4022:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4033:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4045:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4053:6:10",
														"type": ""
													}
												],
												"src": "3927:1219:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5220:176:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5266:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5275:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5278:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5268:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5268:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5268:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5241:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5250:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5237:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5237:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5262:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5233:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5233:32:10"
															},
															"nodeType": "YulIf",
															"src": "5230:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5291:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5317:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5304:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5304:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5295:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5360:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "5336:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5336:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5336:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5375:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5385:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5375:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5186:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5197:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5209:6:10",
														"type": ""
													}
												],
												"src": "5151:245:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5481:169:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5527:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5536:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5539:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5529:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5529:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5529:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5502:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5511:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5498:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5498:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5523:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5494:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5494:32:10"
															},
															"nodeType": "YulIf",
															"src": "5491:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5552:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5571:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5565:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5565:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5556:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5614:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "5590:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5590:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5590:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5629:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5639:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5629:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5447:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5458:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5470:6:10",
														"type": ""
													}
												],
												"src": "5401:249:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5725:110:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5771:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5780:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5783:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5773:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5773:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5773:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5746:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5755:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5742:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5742:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5767:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5738:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5738:32:10"
															},
															"nodeType": "YulIf",
															"src": "5735:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5796:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5819:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5806:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5806:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5796:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5691:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5702:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5714:6:10",
														"type": ""
													}
												],
												"src": "5655:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5901:374:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5911:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5931:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5925:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5925:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5915:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5953:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5958:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5946:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5946:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5946:19:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5974:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5984:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5978:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5997:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6008:3:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6013:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6004:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6004:12:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5997:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6025:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6043:5:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6050:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6039:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6039:14:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6029:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6062:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6071:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6066:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6130:120:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6151:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "6162:6:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6156:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6156:13:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6144:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6144:26:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6144:26:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6183:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6194:3:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6199:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6190:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6190:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6183:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6215:25:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6229:6:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6237:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6225:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6225:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6215:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6092:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6095:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6089:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6089:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6103:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6105:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6114:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6117:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6110:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6110:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6105:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6085:3:10",
																"statements": []
															},
															"src": "6081:169:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6259:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6266:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6259:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5878:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5885:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5893:3:10",
														"type": ""
													}
												],
												"src": "5840:435:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6329:422:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6339:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6359:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6353:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6353:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6343:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6381:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6386:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6374:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6374:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6374:19:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6402:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6411:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6406:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6473:110:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6487:14:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6497:4:10",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "6491:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "6529:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6534:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6525:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6525:11:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "6538:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6521:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6521:20:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "6557:5:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "6564:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "6553:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "6553:13:10"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "6568:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6549:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6549:22:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6543:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6543:29:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6514:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6514:59:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6514:59:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6432:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6435:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6429:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6429:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6443:21:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6445:17:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6454:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6457:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6450:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6450:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6445:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6425:3:10",
																"statements": []
															},
															"src": "6421:162:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6617:62:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "6646:3:10"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "6651:6:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6642:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6642:16:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6660:4:10",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6638:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6638:27:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6667:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6631:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6631:38:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6631:38:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6598:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6601:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6595:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6595:13:10"
															},
															"nodeType": "YulIf",
															"src": "6592:87:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6688:57:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6703:3:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "6716:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6724:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "6712:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6712:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6733:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "6729:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6729:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "6708:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6708:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6699:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6699:39:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6740:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6695:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6695:50:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6688:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6306:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6313:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6321:3:10",
														"type": ""
													}
												],
												"src": "6280:471:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7087:495:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7097:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7115:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7120:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7111:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7111:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7124:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7107:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7107:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7101:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7142:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7157:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7165:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7153:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7135:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7135:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7135:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7189:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7200:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7185:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7185:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7209:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7217:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7205:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7205:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7178:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7178:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7178:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7241:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7252:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7237:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7237:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7257:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7230:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7230:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7230:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7270:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7313:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7325:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7336:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7321:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7321:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7284:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7284:57:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "7274:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7361:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7372:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7357:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7357:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "7381:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7389:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7377:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7377:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7350:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7350:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7350:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7409:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7452:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "7460:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7423:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7423:44:10"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "7413:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7487:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7498:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7483:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7483:19:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "7508:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7516:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7504:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7504:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7476:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7476:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7476:51:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7536:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "7561:6:10"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "7569:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "7544:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7544:32:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7536:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7024:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7035:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7043:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7051:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7059:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7067:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7078:4:10",
														"type": ""
													}
												],
												"src": "6756:826:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7818:329:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7828:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7846:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7851:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7842:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7842:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7855:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7838:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7838:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7832:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7873:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7888:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7896:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7884:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7884:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7866:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7866:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7866:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7920:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7931:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7916:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7916:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7940:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7948:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7936:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7936:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7909:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7909:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7909:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7972:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7983:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7968:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7968:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7988:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7961:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7961:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7961:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8015:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8026:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8011:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8011:18:10"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8031:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8004:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8004:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8004:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8058:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8069:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8054:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8054:19:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8075:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8047:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8047:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8047:32:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8088:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "8113:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8125:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8136:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8121:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8121:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "8096:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8096:45:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8088:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7755:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7766:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7774:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7782:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7790:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7798:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7809:4:10",
														"type": ""
													}
												],
												"src": "7587:560:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8303:110:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8320:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8331:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8313:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8313:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8313:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8343:64:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8380:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8392:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8403:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8388:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8388:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "8351:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8351:56:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8343:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8272:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8283:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8294:4:10",
														"type": ""
													}
												],
												"src": "8152:261:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8647:236:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8664:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8675:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8657:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8657:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8657:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8687:70:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8730:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8742:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8753:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8738:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8738:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "8701:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8701:56:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "8691:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8777:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8788:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8773:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8773:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "8797:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8805:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8793:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8793:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8766:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8766:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8766:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8825:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8862:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "8870:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "8833:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8833:44:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8825:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8608:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8619:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8627:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8638:4:10",
														"type": ""
													}
												],
												"src": "8418:465:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8983:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8993:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9005:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9016:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9001:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9001:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8993:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9035:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "9060:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9053:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9053:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9046:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9046:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9028:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9028:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9028:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8952:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8963:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8974:4:10",
														"type": ""
													}
												],
												"src": "8888:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9201:98:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9218:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9229:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9211:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9211:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9211:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9241:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9266:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9278:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9289:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9274:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9274:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "9249:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9249:44:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9241:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9170:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9181:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9192:4:10",
														"type": ""
													}
												],
												"src": "9080:219:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9478:242:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9495:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9506:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9488:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9488:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9488:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9529:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9540:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9525:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9525:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9545:2:10",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9518:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9518:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9518:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9568:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9579:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9564:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9564:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9584:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9557:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9557:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9557:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9639:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9650:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9635:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9635:18:10"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9655:22:10",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9628:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9628:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9628:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9687:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9699:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9710:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9695:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9695:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9687:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9455:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9469:4:10",
														"type": ""
													}
												],
												"src": "9304:416:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9899:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9916:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9927:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9909:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9909:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9909:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9950:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9961:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9946:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9946:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9966:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9939:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9939:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9939:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9989:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10000:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9985:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9985:18:10"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10005:34:10",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9978:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9978:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9978:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10060:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10071:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10056:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10056:18:10"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10076:10:10",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10049:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10049:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10049:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10096:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10108:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10119:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10104:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10104:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10096:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9876:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9890:4:10",
														"type": ""
													}
												],
												"src": "9725:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10308:233:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10325:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10336:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10318:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10318:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10318:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10359:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10370:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10355:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10355:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10375:2:10",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10348:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10348:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10348:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10398:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10409:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10394:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10394:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10414:34:10",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10387:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10387:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10387:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10469:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10480:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10465:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10465:18:10"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10485:13:10",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10458:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10458:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10458:41:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10508:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10520:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10531:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10516:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10516:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10508:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10285:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10299:4:10",
														"type": ""
													}
												],
												"src": "10134:407:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10720:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10737:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10748:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10730:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10730:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10730:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10771:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10782:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10767:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10767:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10787:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10760:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10760:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10760:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10810:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10821:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10806:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10806:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10826:34:10",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10799:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10799:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10799:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10881:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10892:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10877:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10877:18:10"
																	},
																	{
																		"hexValue": "20617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10897:11:10",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10870:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10870:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10870:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10918:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10930:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10941:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10926:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10926:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10918:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10697:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10711:4:10",
														"type": ""
													}
												],
												"src": "10546:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11130:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11147:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11158:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11140:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11140:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11140:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11181:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11192:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11177:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11177:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11197:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11170:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11170:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11170:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11220:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11231:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11216:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11216:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11236:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11209:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11209:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11209:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11291:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11302:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11287:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11287:18:10"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11307:7:10",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11280:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11280:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11280:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11324:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11336:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11347:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11332:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11332:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11324:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11107:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11121:4:10",
														"type": ""
													}
												],
												"src": "10956:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11536:240:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11553:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11564:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11546:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11546:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11546:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11587:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11598:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11583:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11583:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11603:2:10",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11576:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11576:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11576:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11626:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11637:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11622:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11622:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11642:34:10",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11615:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11615:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11615:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11697:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11708:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11693:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11693:18:10"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11713:20:10",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11686:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11686:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11686:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11743:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11755:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11766:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11751:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11751:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11743:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11513:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11527:4:10",
														"type": ""
													}
												],
												"src": "11362:414:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11955:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11972:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11983:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11965:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11965:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11965:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12006:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12017:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12002:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12002:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12022:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11995:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11995:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11995:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12045:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12056:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12041:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12041:18:10"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12061:34:10",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12034:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12034:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12034:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12116:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12127:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12112:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12112:18:10"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12132:12:10",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12105:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12105:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12105:40:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12154:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12166:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12177:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12162:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12162:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12154:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11932:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11946:4:10",
														"type": ""
													}
												],
												"src": "11781:406:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12366:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12383:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12394:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12376:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12376:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12376:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12417:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12428:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12413:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12413:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12433:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12406:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12406:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12406:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12456:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12467:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12452:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12452:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12472:34:10",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12445:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12445:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12445:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12527:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12538:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12523:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12523:18:10"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12543:11:10",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12516:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12516:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12516:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12564:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12576:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12587:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12572:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12572:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12564:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12343:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12357:4:10",
														"type": ""
													}
												],
												"src": "12192:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12776:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12793:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12804:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12786:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12786:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12786:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12827:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12838:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12823:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12823:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12843:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12816:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12816:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12816:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12866:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12877:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12862:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12862:18:10"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12882:34:10",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12855:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12855:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12855:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12937:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12948:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12933:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12933:18:10"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12953:11:10",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12926:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12926:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12926:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12974:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12986:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12997:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12982:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12982:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12974:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12753:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12767:4:10",
														"type": ""
													}
												],
												"src": "12602:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13186:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13203:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13214:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13196:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13196:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13196:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13237:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13248:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13233:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13233:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13253:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13226:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13226:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13226:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13276:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13287:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13272:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13272:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13292:34:10",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13265:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13265:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13265:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13347:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13358:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13343:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13343:18:10"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13363:10:10",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13336:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13336:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13336:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13383:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13395:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13406:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13391:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13391:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13383:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13163:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13177:4:10",
														"type": ""
													}
												],
												"src": "13012:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13522:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13532:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13544:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13555:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13540:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13540:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13532:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13574:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13585:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13567:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13567:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13567:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13491:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13502:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13513:4:10",
														"type": ""
													}
												],
												"src": "13421:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13732:119:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13742:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13754:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13765:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13750:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13750:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13742:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13784:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13795:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13777:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13777:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13777:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13822:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13833:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13818:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13818:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13838:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13811:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13811:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13811:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13693:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13704:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13712:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13723:4:10",
														"type": ""
													}
												],
												"src": "13603:248:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13925:114:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13969:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "13971:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13971:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13971:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13941:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13949:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13938:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13938:30:10"
															},
															"nodeType": "YulIf",
															"src": "13935:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14000:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14016:1:10",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14019:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14012:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14012:14:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14028:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14008:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14008:25:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "14000:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13905:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "13916:4:10",
														"type": ""
													}
												],
												"src": "13856:183:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14092:80:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14119:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14121:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14121:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14121:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14108:1:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "14115:1:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "14111:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14111:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14105:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14105:13:10"
															},
															"nodeType": "YulIf",
															"src": "14102:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14150:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14161:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14164:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14157:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14157:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "14150:3:10"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14075:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14078:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "14084:3:10",
														"type": ""
													}
												],
												"src": "14044:128:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14232:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14242:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14256:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14259:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "14252:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14252:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "14242:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14273:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14303:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14309:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14299:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14299:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "14277:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14350:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14352:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "14366:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14374:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "14362:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14362:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14352:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "14330:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14323:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14323:26:10"
															},
															"nodeType": "YulIf",
															"src": "14320:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14440:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14461:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14468:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14473:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "14464:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14464:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14454:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14454:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14454:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14505:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14508:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14498:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14498:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14498:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14533:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14536:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14526:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14526:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14526:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "14396:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14419:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14427:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "14416:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14416:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "14393:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14393:38:10"
															},
															"nodeType": "YulIf",
															"src": "14390:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "14212:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14221:6:10",
														"type": ""
													}
												],
												"src": "14177:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14609:202:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14619:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "14641:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "14657:4:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14663:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14653:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14653:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14672:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "14668:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14668:7:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14649:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14649:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14637:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14637:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "14623:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14752:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "14754:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14754:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14754:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "14695:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14707:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14692:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14692:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "14731:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14743:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "14728:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14728:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "14689:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14689:62:10"
															},
															"nodeType": "YulIf",
															"src": "14686:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14790:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "14794:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14783:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14783:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14783:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14591:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "14599:4:10",
														"type": ""
													}
												],
												"src": "14562:249:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14863:88:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14894:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14896:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14896:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14896:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14879:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14890:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "14886:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14886:6:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "14876:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14876:17:10"
															},
															"nodeType": "YulIf",
															"src": "14873:43:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14925:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14936:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14943:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14932:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14932:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "14925:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14845:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "14855:3:10",
														"type": ""
													}
												],
												"src": "14816:135:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14988:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15005:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15012:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15017:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15008:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15008:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14998:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14998:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14998:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15045:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15048:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15038:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15038:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15038:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15069:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15072:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15062:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15062:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15062:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "14956:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15120:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15137:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15144:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15149:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15140:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15140:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15130:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15130:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15130:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15177:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15180:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15170:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15170:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15170:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15201:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15204:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15194:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15194:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15194:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "15088:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15252:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15269:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15276:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15281:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15272:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15272:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15262:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15262:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15262:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15309:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15312:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15302:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15302:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15302:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15333:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15336:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15326:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15326:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15326:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "15220:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15395:136:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15440:85:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15469:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15472:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15475:1:10",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "15454:14:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15454:23:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15454:23:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "15490:25:10",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15501:3:10",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "15512:1:10",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "15506:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15506:8:10"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "15497:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15497:18:10"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "15490:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "15411:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15411:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15429:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15408:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15408:23:10"
															},
															"nodeType": "YulIf",
															"src": "15405:120:10"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "15387:3:10",
														"type": ""
													}
												],
												"src": "15352:179:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15583:624:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15623:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "15625:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "15599:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15599:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15617:4:10",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15596:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15596:26:10"
															},
															"nodeType": "YulIf",
															"src": "15593:39:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15641:21:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15659:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15653:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15653:9:10"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "15645:4:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15671:16:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15685:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "15681:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15681:6:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "15675:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15711:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15717:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "15724:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15724:16:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15742:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15720:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15720:25:10"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "15696:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15696:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15696:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15755:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15775:4:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15769:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15769:11:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "15759:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15789:26:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "15799:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15799:16:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "15793:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15824:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15834:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "15828:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15910:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "15912:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "15870:6:10"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "15878:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "15867:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15867:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15890:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15898:4:10",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15886:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15886:17:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "15905:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "15883:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15883:25:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "15864:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15864:45:10"
															},
															"nodeType": "YulIf",
															"src": "15861:58:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15928:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15943:4:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "15949:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15939:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15939:17:10"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "15932:3:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15965:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "15985:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15979:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15979:10:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15969:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16016:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "16018:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16004:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "16012:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16001:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16001:14:10"
															},
															"nodeType": "YulIf",
															"src": "15998:27:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16107:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "16109:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "16048:3:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "16053:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16044:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16044:16:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16062:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16040:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16040:27:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "16077:4:10"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "16083:14:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16083:16:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16073:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16073:27:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16102:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16069:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16069:36:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16037:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16037:69:10"
															},
															"nodeType": "YulIf",
															"src": "16034:82:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "16145:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16159:6:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "16167:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16155:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16155:19:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16176:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16151:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16151:30:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "16125:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16125:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16125:57:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16191:10:10",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "16198:3:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "16191:3:10"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15575:3:10",
														"type": ""
													}
												],
												"src": "15536:671:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16256:87:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16321:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16330:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16333:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16323:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16323:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16323:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16279:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16290:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16301:3:10",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16306:10:10",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "16297:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16297:20:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "16286:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16286:32:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16276:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16276:43:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16269:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16269:51:10"
															},
															"nodeType": "YulIf",
															"src": "16266:71:10"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16245:5:10",
														"type": ""
													}
												],
												"src": "16212:131:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_address_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, shl(5, _1)), _2), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_address_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let src := add(_2, _4)\n        if gt(add(add(_2, shl(5, _3)), _4), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _3) { i := add(i, 1) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n            src := add(src, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_bytes(value4, tail_2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_bytes(value4, add(headStart, 160))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1155: balance query for the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: caller is not owner nor\")\n        mstore(add(headStart, 96), \" approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1155: transfer caller is not \")\n        mstore(add(headStart, 96), \"owner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xE49 JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xF44 JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xF85 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xE73 JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x10C9 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xE0D JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xDA8 JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x254 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x26F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x284 SWAP1 PUSH2 0x1230 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B0 SWAP1 PUSH2 0x1230 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x325 JUMPI POP PUSH2 0x325 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x38C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x560 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x421 JUMPI PUSH2 0x421 PUSH2 0x12DF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x44A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4C2 JUMPI PUSH2 0x495 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x46E JUMPI PUSH2 0x46E PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x488 JUMPI PUSH2 0x488 PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4A7 JUMPI PUSH2 0x4A7 PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x4BB DUP2 PUSH2 0x1298 JUMP JUMPDEST SWAP1 POP PUSH2 0x450 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4D5 CALLER DUP4 DUP4 PUSH2 0x73D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4F5 JUMPI POP PUSH2 0x4F5 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x553 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x81E JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1165 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6CF JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x609 JUMPI PUSH2 0x609 PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x627 JUMPI PUSH2 0x627 PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x677 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x11AA JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B4 SWAP1 DUP5 SWAP1 PUSH2 0x1218 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x6C8 SWAP1 PUSH2 0x1298 JUMP JUMPDEST SWAP1 POP PUSH2 0x5EC JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x71F SWAP3 SWAP2 SWAP1 PUSH2 0x10DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x735 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x944 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x844 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1165 JUMP JUMPDEST CALLER PUSH2 0x85D DUP2 DUP8 DUP8 PUSH2 0x854 DUP9 PUSH2 0xAAF JUMP JUMPDEST PUSH2 0x399 DUP9 PUSH2 0xAAF JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x89E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x11AA JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x8DB SWAP1 DUP5 SWAP1 PUSH2 0x1218 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x93B DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xAFA JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x988 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1026 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9D2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9CF SWAP2 DUP2 ADD SWAP1 PUSH2 0xF68 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA7F JUMPI PUSH2 0x9DE PUSH2 0x12F5 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xA18 JUMPI POP PUSH2 0x9F3 PUSH2 0x1311 JUMP JUMPDEST DUP1 PUSH2 0x9FE JUMPI POP PUSH2 0xA1A JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x93B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x111D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAE9 JUMPI PUSH2 0xAE9 PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xB3E SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB88 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB85 SWAP2 DUP2 ADD SWAP1 PUSH2 0xF68 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB94 JUMPI PUSH2 0x9DE PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x93B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x111D JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xBFE DUP3 PUSH2 0x11F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0B DUP3 DUP3 PUSH2 0x126B JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0xC2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xC4A JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xC2E JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC82 JUMPI PUSH2 0xC82 PUSH2 0x12DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC99 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x126B JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xCAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCE7 DUP4 PUSH2 0xBC4 JUMP JUMPDEST SWAP2 POP PUSH2 0xCF5 PUSH1 0x20 DUP5 ADD PUSH2 0xBC4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD1F DUP7 PUSH2 0xBC4 JUMP JUMPDEST SWAP5 POP PUSH2 0xD2D PUSH1 0x20 DUP8 ADD PUSH2 0xBC4 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xD4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD56 DUP10 DUP4 DUP11 ADD PUSH2 0xBE0 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xD6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD78 DUP10 DUP4 DUP11 ADD PUSH2 0xBE0 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xD8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD9B DUP9 DUP3 DUP10 ADD PUSH2 0xC57 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xDC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC9 DUP7 PUSH2 0xBC4 JUMP JUMPDEST SWAP5 POP PUSH2 0xDD7 PUSH1 0x20 DUP8 ADD PUSH2 0xBC4 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD9B DUP9 DUP3 DUP10 ADD PUSH2 0xC57 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE29 DUP4 PUSH2 0xBC4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE65 DUP4 PUSH2 0xBC4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xEBF DUP3 PUSH2 0x11F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xECC DUP3 DUP3 PUSH2 0x126B JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0xEEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0xF16 JUMPI PUSH2 0xF02 DUP2 PUSH2 0xBC4 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xEF1 JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xF2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF3A DUP6 DUP3 DUP7 ADD PUSH2 0xBE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF61 DUP2 PUSH2 0x139B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF61 DUP2 PUSH2 0x139B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFCE JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xFB2 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFFF JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xFE3 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1011 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1052 SWAP1 DUP4 ADD DUP7 PUSH2 0xF9E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1064 DUP2 DUP7 PUSH2 0xF9E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1078 DUP2 DUP6 PUSH2 0xFD9 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x10BE SWAP1 DUP4 ADD DUP5 PUSH2 0xFD9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xF61 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF9E JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x10EF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xF9E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1101 DUP2 DUP6 PUSH2 0xF9E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xF61 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFD9 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x120E JUMPI PUSH2 0x120E PUSH2 0x12DF JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x122B JUMPI PUSH2 0x122B PUSH2 0x12B3 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1244 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1265 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1291 JUMPI PUSH2 0x1291 PUSH2 0x12DF JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x12AC JUMPI PUSH2 0x12AC PUSH2 0x12B3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x130E JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x131F JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x134F JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1367 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1381 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1390 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x126B JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x13B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B 0x2D DUP2 0x29 0xF9 0xE3 SWAP6 PUSH20 0xD57C17A1D8C8F47C1F6012EFC6576C07D9633353 DUP6 0xC6 DUP14 0x1F PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "555:14720:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2170:228;;;;;;:::i;:::-;;:::i;:::-;;;13567:25:10;;;13555:2;13540:18;2170:228:0;;;;;;;;1221:305;;;;;;:::i;:::-;;:::i;:::-;;;9053:14:10;;9046:22;9028:41;;9016:2;9001:18;1221:305:0;8888:187:10;1925:103:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4045:430::-;;;;;;:::i;:::-;;:::i;:::-;;2555:508;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3131:153::-;;;;;;:::i;:::-;;:::i;3351:166::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3473:27:0;;;3450:4;3473:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3351:166;3584:389;;;;;;:::i;:::-;;:::i;2170:228::-;2256:7;-1:-1:-1;;;;;2283:21:0;;2275:77;;;;-1:-1:-1;;;2275:77:0;;10336:2:10;2275:77:0;;;10318:21:10;10375:2;10355:18;;;10348:30;10414:34;10394:18;;;10387:62;-1:-1:-1;;;10465:18:10;;;10458:41;10516:19;;2275:77:0;;;;;;;;;-1:-1:-1;2369:9:0;:13;;;;;;;;;;;-1:-1:-1;;;;;2369:22:0;;;;;;;;;;;;2170:228::o;1221:305::-;1323:4;-1:-1:-1;;;;;;1358:41:0;;-1:-1:-1;;;1358:41:0;;:109;;-1:-1:-1;;;;;;;1415:52:0;;-1:-1:-1;;;1415:52:0;1358:109;:161;;;-1:-1:-1;;;;;;;;;;937:40:7;;;1483:36:0;1339:180;1221:305;-1:-1:-1;;1221:305:0:o;1925:103::-;1985:13;2017:4;2010:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1925:103;;;:::o;4045:430::-;-1:-1:-1;;;;;4270:20:0;;719:10:6;4270:20:0;;:60;;-1:-1:-1;4294:36:0;4311:4;719:10:6;3351:166:0;:::i;4294:36::-;4249:157;;;;-1:-1:-1;;;4249:157:0;;11564:2:10;4249:157:0;;;11546:21:10;11603:2;11583:18;;;11576:30;11642:34;11622:18;;;11615:62;-1:-1:-1;;;11693:18:10;;;11686:48;11751:19;;4249:157:0;11362:414:10;4249:157:0;4416:52;4439:4;4445:2;4449:3;4454:7;4463:4;4416:22;:52::i;:::-;4045:430;;;;;:::o;2555:508::-;2706:16;2765:3;:10;2746:8;:15;:29;2738:83;;;;-1:-1:-1;;;2738:83:0;;12804:2:10;2738:83:0;;;12786:21:10;12843:2;12823:18;;;12816:30;12882:34;12862:18;;;12855:62;-1:-1:-1;;;12933:18:10;;;12926:39;12982:19;;2738:83:0;12602:405:10;2738:83:0;2832:30;2879:8;:15;2865:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2865:30:0;;2832:63;;2911:9;2906:120;2930:8;:15;2926:1;:19;2906:120;;;2985:30;2995:8;3004:1;2995:11;;;;;;;;:::i;:::-;;;;;;;3008:3;3012:1;3008:6;;;;;;;;:::i;:::-;;;;;;;2985:9;:30::i;:::-;2966:13;2980:1;2966:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2947:3;;;:::i;:::-;;;2906:120;;;-1:-1:-1;3043:13:0;2555:508;-1:-1:-1;;;2555:508:0:o;3131:153::-;3225:52;719:10:6;3258:8:0;3268;3225:18;:52::i;:::-;3131:153;;:::o;3584:389::-;-1:-1:-1;;;;;3784:20:0;;719:10:6;3784:20:0;;:60;;-1:-1:-1;3808:36:0;3825:4;719:10:6;3351:166:0;:::i;3808:36::-;3763:148;;;;-1:-1:-1;;;3763:148:0;;10748:2:10;3763:148:0;;;10730:21:10;10787:2;10767:18;;;10760:30;10826:34;10806:18;;;10799:62;-1:-1:-1;;;10877:18:10;;;10870:39;10926:19;;3763:148:0;10546:405:10;3763:148:0;3921:45;3939:4;3945:2;3949;3953:6;3961:4;3921:17;:45::i;6068:1045::-;6288:7;:14;6274:3;:10;:28;6266:81;;;;-1:-1:-1;;;6266:81:0;;13214:2:10;6266:81:0;;;13196:21:10;13253:2;13233:18;;;13226:30;13292:34;13272:18;;;13265:62;-1:-1:-1;;;13343:18:10;;;13336:38;13391:19;;6266:81:0;13012:404:10;6266:81:0;-1:-1:-1;;;;;6365:16:0;;6357:66;;;;-1:-1:-1;;;6357:66:0;;;;;;;:::i;:::-;719:10:6;6434:16:0;6547:411;6571:3;:10;6567:1;:14;6547:411;;;6602:10;6615:3;6619:1;6615:6;;;;;;;;:::i;:::-;;;;;;;6602:19;;6635:14;6652:7;6660:1;6652:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6677:19;6699:13;;;;;;;;;;-1:-1:-1;;;;;6699:19:0;;;;;;;;;;;;6652:10;;-1:-1:-1;6740:21:0;;;;6732:76;;;;-1:-1:-1;;;6732:76:0;;;;;;;:::i;:::-;6850:9;:13;;;;;;;;;;;-1:-1:-1;;;;;6850:19:0;;;;;;;;;;6872:20;;;6850:42;;6920:17;;;;;;;:27;;6872:20;;6850:9;6920:27;;6872:20;;6920:27;:::i;:::-;;;;;;;;6588:370;;;6583:3;;;;:::i;:::-;;;6547:411;;;;7003:2;-1:-1:-1;;;;;6973:47:0;6997:4;-1:-1:-1;;;;;6973:47:0;6987:8;-1:-1:-1;;;;;6973:47:0;;7007:3;7012:7;6973:47;;;;;;;:::i;:::-;;;;;;;;7031:75;7067:8;7077:4;7083:2;7087:3;7092:7;7101:4;7031:35;:75::i;:::-;6256:857;6068:1045;;;;;:::o;12074:323::-;12224:8;-1:-1:-1;;;;;12215:17:0;:5;-1:-1:-1;;;;;12215:17:0;;;12207:71;;;;-1:-1:-1;;;12207:71:0;;12394:2:10;12207:71:0;;;12376:21:10;12433:2;12413:18;;;12406:30;12472:34;12452:18;;;12445:62;-1:-1:-1;;;12523:18:10;;;12516:39;12572:19;;12207:71:0;12192:405:10;12207:71:0;-1:-1:-1;;;;;12288:25:0;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12288:46:0;;;;;;;;;;12349:41;;9028::10;;;12349::0;;9001:18:10;12349:41:0;;;;;;;12074:323;;;:::o;4925:797::-;-1:-1:-1;;;;;5106:16:0;;5098:66;;;;-1:-1:-1;;;5098:66:0;;;;;;;:::i;:::-;719:10:6;5217:96:0;719:10:6;5248:4:0;5254:2;5258:21;5276:2;5258:17;:21::i;:::-;5281:25;5299:6;5281:17;:25::i;5217:96::-;5324:19;5346:13;;;;;;;;;;;-1:-1:-1;;;;;5346:19:0;;;;;;;;;;5383:21;;;;5375:76;;;;-1:-1:-1;;;5375:76:0;;;;;;;:::i;:::-;5485:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5485:19:0;;;;;;;;;;5507:20;;;5485:42;;5547:17;;;;;;;:27;;5507:20;;5485:9;5547:27;;5507:20;;5547:27;:::i;:::-;;;;-1:-1:-1;;5590:46:0;;;13777:25:10;;;13833:2;13818:18;;13811:34;;;-1:-1:-1;;;;;5590:46:0;;;;;;;;;;;;;;13750:18:10;5590:46:0;;;;;;;5647:68;5678:8;5688:4;5694:2;5698;5702:6;5710:4;5647:30;:68::i;:::-;5088:634;;4925:797;;;;;:::o;14282:792::-;-1:-1:-1;;;;;14514:13:0;;1465:19:5;:23;14510:558:0;;14549:79;;-1:-1:-1;;;14549:79:0;;-1:-1:-1;;;;;14549:43:0;;;;;:79;;14593:8;;14603:4;;14609:3;;14614:7;;14623:4;;14549:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14549:79:0;;;;;;;;-1:-1:-1;;14549:79:0;;;;;;;;;;;;:::i;:::-;;;14545:513;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;14934:6;14927:14;;-1:-1:-1;;;14927:14:0;;;;;;;;:::i;14545:513::-;;;14981:62;;-1:-1:-1;;;14981:62:0;;9506:2:10;14981:62:0;;;9488:21:10;9545:2;9525:18;;;9518:30;9584:34;9564:18;;;9557:62;-1:-1:-1;;;9635:18:10;;;9628:50;9695:19;;14981:62:0;9304:416:10;14545:513:0;-1:-1:-1;;;;;;14707:60:0;;-1:-1:-1;;;14707:60:0;14703:157;;14791:50;;-1:-1:-1;;;14791:50:0;;;;;;;:::i;15080:193::-;15199:16;;;15213:1;15199:16;;;;;;;;;15146;;15174:22;;15199:16;;;;;;;;;;;;-1:-1:-1;15199:16:0;15174:41;;15236:7;15225:5;15231:1;15225:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;15261:5;15080:193;-1:-1:-1;;15080:193:0:o;13551:725::-;-1:-1:-1;;;;;13758:13:0;;1465:19:5;:23;13754:516:0;;13793:72;;-1:-1:-1;;;13793:72:0;;-1:-1:-1;;;;;13793:38:0;;;;;:72;;13832:8;;13842:4;;13848:2;;13852:6;;13860:4;;13793:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13793:72:0;;;;;;;;-1:-1:-1;;13793:72:0;;;;;;;;;;;;:::i;:::-;;;13789:471;;;;:::i;:::-;-1:-1:-1;;;;;;13914:55:0;;-1:-1:-1;;;13914:55:0;13910:152;;13993:50;;-1:-1:-1;;;13993:50:0;;;;;;;:::i;14:173:10:-;82:20;;-1:-1:-1;;;;;131:31:10;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:735::-;246:5;299:3;292:4;284:6;280:17;276:27;266:55;;317:1;314;307:12;266:55;353:6;340:20;379:4;402:43;442:2;402:43;:::i;:::-;474:2;468:9;486:31;514:2;506:6;486:31;:::i;:::-;552:18;;;586:15;;;;-1:-1:-1;621:15:10;;;671:1;667:10;;;655:23;;651:32;;648:41;-1:-1:-1;645:61:10;;;702:1;699;692:12;645:61;724:1;734:163;748:2;745:1;742:9;734:163;;;805:17;;793:30;;843:12;;;;875;;;;766:1;759:9;734:163;;;-1:-1:-1;915:6:10;;192:735;-1:-1:-1;;;;;;;192:735:10:o;932:555::-;974:5;1027:3;1020:4;1012:6;1008:17;1004:27;994:55;;1045:1;1042;1035:12;994:55;1081:6;1068:20;1107:18;1103:2;1100:26;1097:52;;;1129:18;;:::i;:::-;1178:2;1172:9;1190:67;1245:2;1226:13;;-1:-1:-1;;1222:27:10;1251:4;1218:38;1172:9;1190:67;:::i;:::-;1281:2;1273:6;1266:18;1327:3;1320:4;1315:2;1307:6;1303:15;1299:26;1296:35;1293:55;;;1344:1;1341;1334:12;1293:55;1408:2;1401:4;1393:6;1389:17;1382:4;1374:6;1370:17;1357:54;1455:1;1431:15;;;1448:4;1427:26;1420:37;;;;1435:6;932:555;-1:-1:-1;;;932:555:10:o;1492:260::-;1560:6;1568;1621:2;1609:9;1600:7;1596:23;1592:32;1589:52;;;1637:1;1634;1627:12;1589:52;1660:29;1679:9;1660:29;:::i;:::-;1650:39;;1708:38;1742:2;1731:9;1727:18;1708:38;:::i;:::-;1698:48;;1492:260;;;;;:::o;1757:943::-;1911:6;1919;1927;1935;1943;1996:3;1984:9;1975:7;1971:23;1967:33;1964:53;;;2013:1;2010;2003:12;1964:53;2036:29;2055:9;2036:29;:::i;:::-;2026:39;;2084:38;2118:2;2107:9;2103:18;2084:38;:::i;:::-;2074:48;;2173:2;2162:9;2158:18;2145:32;2196:18;2237:2;2229:6;2226:14;2223:34;;;2253:1;2250;2243:12;2223:34;2276:61;2329:7;2320:6;2309:9;2305:22;2276:61;:::i;:::-;2266:71;;2390:2;2379:9;2375:18;2362:32;2346:48;;2419:2;2409:8;2406:16;2403:36;;;2435:1;2432;2425:12;2403:36;2458:63;2513:7;2502:8;2491:9;2487:24;2458:63;:::i;:::-;2448:73;;2574:3;2563:9;2559:19;2546:33;2530:49;;2604:2;2594:8;2591:16;2588:36;;;2620:1;2617;2610:12;2588:36;;2643:51;2686:7;2675:8;2664:9;2660:24;2643:51;:::i;:::-;2633:61;;;1757:943;;;;;;;;:::o;2705:606::-;2809:6;2817;2825;2833;2841;2894:3;2882:9;2873:7;2869:23;2865:33;2862:53;;;2911:1;2908;2901:12;2862:53;2934:29;2953:9;2934:29;:::i;:::-;2924:39;;2982:38;3016:2;3005:9;3001:18;2982:38;:::i;:::-;2972:48;;3067:2;3056:9;3052:18;3039:32;3029:42;;3118:2;3107:9;3103:18;3090:32;3080:42;;3173:3;3162:9;3158:19;3145:33;3201:18;3193:6;3190:30;3187:50;;;3233:1;3230;3223:12;3187:50;3256:49;3297:7;3288:6;3277:9;3273:22;3256:49;:::i;3316:347::-;3381:6;3389;3442:2;3430:9;3421:7;3417:23;3413:32;3410:52;;;3458:1;3455;3448:12;3410:52;3481:29;3500:9;3481:29;:::i;:::-;3471:39;;3560:2;3549:9;3545:18;3532:32;3607:5;3600:13;3593:21;3586:5;3583:32;3573:60;;3629:1;3626;3619:12;3573:60;3652:5;3642:15;;;3316:347;;;;;:::o;3668:254::-;3736:6;3744;3797:2;3785:9;3776:7;3772:23;3768:32;3765:52;;;3813:1;3810;3803:12;3765:52;3836:29;3855:9;3836:29;:::i;:::-;3826:39;3912:2;3897:18;;;;3884:32;;-1:-1:-1;;;3668:254:10:o;3927:1219::-;4045:6;4053;4106:2;4094:9;4085:7;4081:23;4077:32;4074:52;;;4122:1;4119;4112:12;4074:52;4162:9;4149:23;4191:18;4232:2;4224:6;4221:14;4218:34;;;4248:1;4245;4238:12;4218:34;4286:6;4275:9;4271:22;4261:32;;4331:7;4324:4;4320:2;4316:13;4312:27;4302:55;;4353:1;4350;4343:12;4302:55;4389:2;4376:16;4411:4;4434:43;4474:2;4434:43;:::i;:::-;4506:2;4500:9;4518:31;4546:2;4538:6;4518:31;:::i;:::-;4584:18;;;4618:15;;;;-1:-1:-1;4653:11:10;;;4695:1;4691:10;;;4683:19;;4679:28;;4676:41;-1:-1:-1;4673:61:10;;;4730:1;4727;4720:12;4673:61;4752:1;4743:10;;4762:169;4776:2;4773:1;4770:9;4762:169;;;4833:23;4852:3;4833:23;:::i;:::-;4821:36;;4794:1;4787:9;;;;;4877:12;;;;4909;;4762:169;;;-1:-1:-1;4950:6:10;-1:-1:-1;;4994:18:10;;4981:32;;-1:-1:-1;;5025:16:10;;;5022:36;;;5054:1;5051;5044:12;5022:36;;5077:63;5132:7;5121:8;5110:9;5106:24;5077:63;:::i;:::-;5067:73;;;3927:1219;;;;;:::o;5151:245::-;5209:6;5262:2;5250:9;5241:7;5237:23;5233:32;5230:52;;;5278:1;5275;5268:12;5230:52;5317:9;5304:23;5336:30;5360:5;5336:30;:::i;:::-;5385:5;5151:245;-1:-1:-1;;;5151:245:10:o;5401:249::-;5470:6;5523:2;5511:9;5502:7;5498:23;5494:32;5491:52;;;5539:1;5536;5529:12;5491:52;5571:9;5565:16;5590:30;5614:5;5590:30;:::i;5655:180::-;5714:6;5767:2;5755:9;5746:7;5742:23;5738:32;5735:52;;;5783:1;5780;5773:12;5735:52;-1:-1:-1;5806:23:10;;5655:180;-1:-1:-1;5655:180:10:o;5840:435::-;5893:3;5931:5;5925:12;5958:6;5953:3;5946:19;5984:4;6013:2;6008:3;6004:12;5997:19;;6050:2;6043:5;6039:14;6071:1;6081:169;6095:6;6092:1;6089:13;6081:169;;;6156:13;;6144:26;;6190:12;;;;6225:15;;;;6117:1;6110:9;6081:169;;;-1:-1:-1;6266:3:10;;5840:435;-1:-1:-1;;;;;5840:435:10:o;6280:471::-;6321:3;6359:5;6353:12;6386:6;6381:3;6374:19;6411:1;6421:162;6435:6;6432:1;6429:13;6421:162;;;6497:4;6553:13;;;6549:22;;6543:29;6525:11;;;6521:20;;6514:59;6450:12;6421:162;;;6601:6;6598:1;6595:13;6592:87;;;6667:1;6660:4;6651:6;6646:3;6642:16;6638:27;6631:38;6592:87;-1:-1:-1;6733:2:10;6712:15;-1:-1:-1;;6708:29:10;6699:39;;;;6740:4;6695:50;;6280:471;-1:-1:-1;;6280:471:10:o;6756:826::-;-1:-1:-1;;;;;7153:15:10;;;7135:34;;7205:15;;7200:2;7185:18;;7178:43;7115:3;7252:2;7237:18;;7230:31;;;7078:4;;7284:57;;7321:19;;7313:6;7284:57;:::i;:::-;7389:9;7381:6;7377:22;7372:2;7361:9;7357:18;7350:50;7423:44;7460:6;7452;7423:44;:::i;:::-;7409:58;;7516:9;7508:6;7504:22;7498:3;7487:9;7483:19;7476:51;7544:32;7569:6;7561;7544:32;:::i;:::-;7536:40;6756:826;-1:-1:-1;;;;;;;;6756:826:10:o;7587:560::-;-1:-1:-1;;;;;7884:15:10;;;7866:34;;7936:15;;7931:2;7916:18;;7909:43;7983:2;7968:18;;7961:34;;;8026:2;8011:18;;8004:34;;;7846:3;8069;8054:19;;8047:32;;;7809:4;;8096:45;;8121:19;;8113:6;8096:45;:::i;:::-;8088:53;7587:560;-1:-1:-1;;;;;;;7587:560:10:o;8152:261::-;8331:2;8320:9;8313:21;8294:4;8351:56;8403:2;8392:9;8388:18;8380:6;8351:56;:::i;8418:465::-;8675:2;8664:9;8657:21;8638:4;8701:56;8753:2;8742:9;8738:18;8730:6;8701:56;:::i;:::-;8805:9;8797:6;8793:22;8788:2;8777:9;8773:18;8766:50;8833:44;8870:6;8862;8833:44;:::i;:::-;8825:52;8418:465;-1:-1:-1;;;;;8418:465:10:o;9080:219::-;9229:2;9218:9;9211:21;9192:4;9249:44;9289:2;9278:9;9274:18;9266:6;9249:44;:::i;9725:404::-;9927:2;9909:21;;;9966:2;9946:18;;;9939:30;10005:34;10000:2;9985:18;;9978:62;-1:-1:-1;;;10071:2:10;10056:18;;10049:38;10119:3;10104:19;;9725:404::o;10956:401::-;11158:2;11140:21;;;11197:2;11177:18;;;11170:30;11236:34;11231:2;11216:18;;11209:62;-1:-1:-1;;;11302:2:10;11287:18;;11280:35;11347:3;11332:19;;10956:401::o;11781:406::-;11983:2;11965:21;;;12022:2;12002:18;;;11995:30;12061:34;12056:2;12041:18;;12034:62;-1:-1:-1;;;12127:2:10;12112:18;;12105:40;12177:3;12162:19;;11781:406::o;13856:183::-;13916:4;13949:18;13941:6;13938:30;13935:56;;;13971:18;;:::i;:::-;-1:-1:-1;14016:1:10;14012:14;14028:4;14008:25;;13856:183::o;14044:128::-;14084:3;14115:1;14111:6;14108:1;14105:13;14102:39;;;14121:18;;:::i;:::-;-1:-1:-1;14157:9:10;;14044:128::o;14177:380::-;14256:1;14252:12;;;;14299;;;14320:61;;14374:4;14366:6;14362:17;14352:27;;14320:61;14427:2;14419:6;14416:14;14396:18;14393:38;14390:161;;;14473:10;14468:3;14464:20;14461:1;14454:31;14508:4;14505:1;14498:15;14536:4;14533:1;14526:15;14390:161;;14177:380;;;:::o;14562:249::-;14672:2;14653:13;;-1:-1:-1;;14649:27:10;14637:40;;14707:18;14692:34;;14728:22;;;14689:62;14686:88;;;14754:18;;:::i;:::-;14790:2;14783:22;-1:-1:-1;;14562:249:10:o;14816:135::-;14855:3;-1:-1:-1;;14876:17:10;;14873:43;;;14896:18;;:::i;:::-;-1:-1:-1;14943:1:10;14932:13;;14816:135::o;14956:127::-;15017:10;15012:3;15008:20;15005:1;14998:31;15048:4;15045:1;15038:15;15072:4;15069:1;15062:15;15088:127;15149:10;15144:3;15140:20;15137:1;15130:31;15180:4;15177:1;15170:15;15204:4;15201:1;15194:15;15220:127;15281:10;15276:3;15272:20;15269:1;15262:31;15312:4;15309:1;15302:15;15336:4;15333:1;15326:15;15352:179;15387:3;15429:1;15411:16;15408:23;15405:120;;;15475:1;15472;15469;15454:23;-1:-1:-1;15512:1:10;15506:8;15501:3;15497:18;15405:120;15352:179;:::o;15536:671::-;15575:3;15617:4;15599:16;15596:26;15593:39;;;15536:671;:::o;15593:39::-;15659:2;15653:9;-1:-1:-1;;15724:16:10;15720:25;;15717:1;15653:9;15696:50;15775:4;15769:11;15799:16;15834:18;15905:2;15898:4;15890:6;15886:17;15883:25;15878:2;15870:6;15867:14;15864:45;15861:58;;;15912:5;;;;;15536:671;:::o;15861:58::-;15949:6;15943:4;15939:17;15928:28;;15985:3;15979:10;16012:2;16004:6;16001:14;15998:27;;;16018:5;;;;;;15536:671;:::o;15998:27::-;16102:2;16083:16;16077:4;16073:27;16069:36;16062:4;16053:6;16048:3;16044:16;16040:27;16037:69;16034:82;;;16109:5;;;;;;15536:671;:::o;16034:82::-;16125:57;16176:4;16167:6;16159;16155:19;16151:30;16145:4;16125:57;:::i;:::-;-1:-1:-1;16198:3:10;;15536:671;-1:-1:-1;;;;;15536:671:10:o;16212:131::-;-1:-1:-1;;;;;;16286:32:10;;16276:43;;16266:71;;16333:1;16330;16323:12;16266:71;16212:131;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1019600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "2672",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26708",
								"supportsInterface(bytes4)": "544",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeTransferFrom(address,address,uint256,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1142,
									"end": 1146,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1134,
									"end": 1141,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8002,
									"end": 8006,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 8002,
									"end": 8006,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 1101,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 1101,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 94,
									"end": 100,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 127,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 168,
									"end": 170,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 156,
									"end": 165,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 147,
									"end": 154,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 143,
									"end": 166,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 139,
									"end": 171,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 136,
									"end": 188,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 136,
									"end": 188,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 136,
									"end": 188,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 184,
									"end": 185,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 182,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 174,
									"end": 186,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 136,
									"end": 188,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 136,
									"end": 188,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 211,
									"end": 227,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 211,
									"end": 227,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 276,
									"end": 290,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 276,
									"end": 290,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 276,
									"end": 290,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 273,
									"end": 307,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 273,
									"end": 307,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 273,
									"end": 307,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 303,
									"end": 304,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 300,
									"end": 301,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 293,
									"end": 305,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 273,
									"end": 307,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 273,
									"end": 307,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 341,
									"end": 347,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 330,
									"end": 339,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 326,
									"end": 348,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 316,
									"end": 348,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 316,
									"end": 348,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 386,
									"end": 393,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 379,
									"end": 383,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 375,
									"end": 377,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 371,
									"end": 384,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 367,
									"end": 394,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 357,
									"end": 412,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 357,
									"end": 412,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 408,
									"end": 409,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 405,
									"end": 406,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 398,
									"end": 410,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 357,
									"end": 412,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 357,
									"end": 412,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 437,
									"end": 439,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 431,
									"end": 440,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 459,
									"end": 461,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 455,
									"end": 457,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 452,
									"end": 462,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 449,
									"end": 485,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 449,
									"end": 485,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 449,
									"end": 485,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 465,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 465,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 465,
									"end": 483,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 465,
									"end": 483,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 465,
									"end": 483,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 540,
									"end": 542,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 534,
									"end": 543,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 508,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 594,
									"end": 607,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 594,
									"end": 607,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 590,
									"end": 612,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 590,
									"end": 612,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 590,
									"end": 612,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 614,
									"end": 616,
									"name": "PUSH",
									"source": 10,
									"value": "3F"
								},
								{
									"begin": 586,
									"end": 617,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 582,
									"end": 622,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 570,
									"end": 623,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 570,
									"end": 623,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 570,
									"end": 623,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 638,
									"end": 656,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 638,
									"end": 656,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 638,
									"end": 656,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 658,
									"end": 680,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 658,
									"end": 680,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 658,
									"end": 680,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 635,
									"end": 681,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 632,
									"end": 704,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 632,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 632,
									"end": 704,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 684,
									"end": 702,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 684,
									"end": 702,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 684,
									"end": 702,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 684,
									"end": 702,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 684,
									"end": 702,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 724,
									"end": 734,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 720,
									"end": 722,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 713,
									"end": 735,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 759,
									"end": 761,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 751,
									"end": 757,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 744,
									"end": 762,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 799,
									"end": 806,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 794,
									"end": 796,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 789,
									"end": 791,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 785,
									"end": 787,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 781,
									"end": 792,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 777,
									"end": 797,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 774,
									"end": 807,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 771,
									"end": 824,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 771,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 771,
									"end": 824,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 820,
									"end": 821,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 818,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 810,
									"end": 822,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 771,
									"end": 824,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 771,
									"end": 824,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 842,
									"end": 843,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 833,
									"end": 843,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 833,
									"end": 843,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 852,
									"end": 981,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 852,
									"end": 981,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 866,
									"end": 868,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 863,
									"end": 864,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 860,
									"end": 869,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 852,
									"end": 981,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 852,
									"end": 981,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 852,
									"end": 981,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 954,
									"end": 964,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 954,
									"end": 964,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 954,
									"end": 964,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 950,
									"end": 969,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 950,
									"end": 969,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 944,
									"end": 970,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 923,
									"end": 937,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 923,
									"end": 937,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 923,
									"end": 937,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 919,
									"end": 942,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 919,
									"end": 942,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 912,
									"end": 971,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 877,
									"end": 887,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 877,
									"end": 887,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 877,
									"end": 887,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 877,
									"end": 887,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 852,
									"end": 981,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 852,
									"end": 981,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 852,
									"end": 981,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 852,
									"end": 981,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 999,
									"end": 1001,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 996,
									"end": 997,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 993,
									"end": 1002,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1058,
									"end": 1059,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1053,
									"end": 1055,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1048,
									"end": 1050,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1040,
									"end": 1046,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1036,
									"end": 1051,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1032,
									"end": 1056,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1025,
									"end": 1060,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1089,
									"end": 1095,
									"name": "SWAP9",
									"source": 10
								},
								{
									"begin": 14,
									"end": 1101,
									"name": "SWAP8",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 1101,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1185,
									"end": 1186,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1181,
									"end": 1193,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1181,
									"end": 1193,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1181,
									"end": 1193,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1181,
									"end": 1193,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1228,
									"end": 1240,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1228,
									"end": 1240,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1228,
									"end": 1240,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1249,
									"end": 1310,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 1249,
									"end": 1310,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1303,
									"end": 1307,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 1295,
									"end": 1301,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1291,
									"end": 1308,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1281,
									"end": 1308,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1281,
									"end": 1308,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1249,
									"end": 1310,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 1249,
									"end": 1310,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1356,
									"end": 1358,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1348,
									"end": 1354,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1345,
									"end": 1359,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1325,
									"end": 1343,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1322,
									"end": 1360,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1402,
									"end": 1412,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 1397,
									"end": 1400,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 1393,
									"end": 1413,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1390,
									"end": 1391,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1383,
									"end": 1414,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1437,
									"end": 1441,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1434,
									"end": 1435,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1427,
									"end": 1442,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1465,
									"end": 1469,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1462,
									"end": 1463,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1455,
									"end": 1470,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 1491,
									"end": 1618,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1491,
									"end": 1618,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1552,
									"end": 1562,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 1547,
									"end": 1550,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 1543,
									"end": 1563,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1540,
									"end": 1541,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1533,
									"end": 1564,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1583,
									"end": 1587,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1580,
									"end": 1581,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1573,
									"end": 1588,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1607,
									"end": 1611,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1604,
									"end": 1605,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1597,
									"end": 1612,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1491,
									"end": 1618,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 1491,
									"end": 1618,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202b2d8129f9e39573d57c17a1d8c8f47c1f6012efc6576c07d963335385c68d1f64736f6c63430008070033",
									".code": [
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13567,
											"end": 13592,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13567,
											"end": 13592,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13567,
											"end": 13592,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13555,
											"end": 13557,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13540,
											"end": 13558,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9053,
											"end": 9067,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9053,
											"end": 9067,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9046,
											"end": 9068,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9028,
											"end": 9069,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9028,
											"end": 9069,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9016,
											"end": 9018,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9001,
											"end": 9019,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8888,
											"end": 9075,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3450,
											"end": 3454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3491,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2256,
											"end": 2263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2283,
											"end": 2304,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2304,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10336,
											"end": 10338,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10318,
											"end": 10339,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10375,
											"end": 10377,
											"name": "PUSH",
											"source": 10,
											"value": "2B"
										},
										{
											"begin": 10355,
											"end": 10373,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10355,
											"end": 10373,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10355,
											"end": 10373,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10348,
											"end": 10378,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10414,
											"end": 10448,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 10394,
											"end": 10412,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10394,
											"end": 10412,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10394,
											"end": 10412,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10387,
											"end": 10449,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10465,
											"end": 10483,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10465,
											"end": 10483,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10465,
											"end": 10483,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10458,
											"end": 10499,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10516,
											"end": 10535,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10516,
											"end": 10535,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2369,
											"end": 2378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1415,
											"end": 1467,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1415,
											"end": 1467,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A24D07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1415,
											"end": 1467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1358,
											"end": 1519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1483,
											"end": 1519,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1483,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1519,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 1998,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2017,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4294,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4311,
											"end": 4315,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4294,
											"end": 4330,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4294,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11564,
											"end": 11566,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11546,
											"end": 11567,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11603,
											"end": 11605,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 11583,
											"end": 11601,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11583,
											"end": 11601,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11583,
											"end": 11601,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11576,
											"end": 11606,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11642,
											"end": 11676,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11615,
											"end": 11677,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDDDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11693,
											"end": 11711,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 11693,
											"end": 11711,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11693,
											"end": 11711,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11686,
											"end": 11734,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11751,
											"end": 11770,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 11751,
											"end": 11770,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 11362,
											"end": 11776,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4439,
											"end": 4443,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4445,
											"end": 4447,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4449,
											"end": 4452,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4454,
											"end": 4461,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4463,
											"end": 4467,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4416,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2706,
											"end": 2722,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2765,
											"end": 2768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2775,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2746,
											"end": 2754,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2746,
											"end": 2761,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12804,
											"end": 12806,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12807,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12843,
											"end": 12845,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 12823,
											"end": 12841,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12823,
											"end": 12841,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12823,
											"end": 12841,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12816,
											"end": 12846,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12882,
											"end": 12916,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 12862,
											"end": 12880,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 12862,
											"end": 12880,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12862,
											"end": 12880,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12855,
											"end": 12917,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12933,
											"end": 12951,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12933,
											"end": 12951,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12933,
											"end": 12951,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12926,
											"end": 12965,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12982,
											"end": 13001,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 12982,
											"end": 13001,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 12602,
											"end": 13007,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2862,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2879,
											"end": 2887,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2894,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2926,
											"end": 2927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2926,
											"end": 2945,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2995,
											"end": 3003,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3005,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3011,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3012,
											"end": 3013,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2979,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2981,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 3015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3043,
											"end": 3056,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3258,
											"end": 3266,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3276,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3784,
											"end": 3844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3808,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3825,
											"end": 3829,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3808,
											"end": 3844,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3808,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10748,
											"end": 10750,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10730,
											"end": 10751,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10787,
											"end": 10789,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 10767,
											"end": 10785,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10767,
											"end": 10785,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10767,
											"end": 10785,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10760,
											"end": 10790,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10826,
											"end": 10860,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10799,
											"end": 10861,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10877,
											"end": 10895,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10877,
											"end": 10895,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10877,
											"end": 10895,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10870,
											"end": 10909,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10926,
											"end": 10945,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10926,
											"end": 10945,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 10546,
											"end": 10951,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3939,
											"end": 3943,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3945,
											"end": 3947,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3949,
											"end": 3951,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3959,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 3965,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 3921,
											"end": 3966,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6288,
											"end": 6295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6288,
											"end": 6302,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6277,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6284,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6302,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13214,
											"end": 13216,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13196,
											"end": 13217,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13253,
											"end": 13255,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 13233,
											"end": 13251,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13233,
											"end": 13251,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13233,
											"end": 13251,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13226,
											"end": 13256,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13292,
											"end": 13326,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 13272,
											"end": 13290,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13272,
											"end": 13290,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13272,
											"end": 13290,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13265,
											"end": 13327,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13343,
											"end": 13361,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 13343,
											"end": 13361,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13343,
											"end": 13361,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13336,
											"end": 13374,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13391,
											"end": 13410,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 13391,
											"end": 13410,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 13012,
											"end": 13416,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6365,
											"end": 6381,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6365,
											"end": 6381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6434,
											"end": 6450,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6571,
											"end": 6574,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6571,
											"end": 6581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6581,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6602,
											"end": 6612,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6615,
											"end": 6618,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6619,
											"end": 6620,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6602,
											"end": 6621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6602,
											"end": 6621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6635,
											"end": 6649,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6659,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6660,
											"end": 6661,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6677,
											"end": 6696,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6892,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6588,
											"end": 6958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6588,
											"end": 6958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6588,
											"end": 6958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7003,
											"end": 7005,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6997,
											"end": 7001,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 6995,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7007,
											"end": 7010,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7012,
											"end": 7019,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 7067,
											"end": 7075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7081,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 7085,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7090,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7092,
											"end": 7099,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7105,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7031,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 7113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12224,
											"end": 12232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12215,
											"end": 12220,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12394,
											"end": 12396,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12397,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12433,
											"end": 12435,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 12413,
											"end": 12431,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12413,
											"end": 12431,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12413,
											"end": 12431,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12406,
											"end": 12436,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12472,
											"end": 12506,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 12452,
											"end": 12470,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 12452,
											"end": 12470,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12452,
											"end": 12470,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12445,
											"end": 12507,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12523,
											"end": 12541,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12523,
											"end": 12541,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12523,
											"end": 12541,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12516,
											"end": 12555,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12572,
											"end": 12591,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 12572,
											"end": 12591,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 12192,
											"end": 12597,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12306,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9069,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9028,
											"end": 9069,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9028,
											"end": 9069,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9001,
											"end": 9019,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5106,
											"end": 5122,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5122,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5217,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5248,
											"end": 5252,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5256,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 5276,
											"end": 5278,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5258,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5281,
											"end": 5306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5299,
											"end": 5305,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5281,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5281,
											"end": 5306,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5217,
											"end": 5313,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5217,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5324,
											"end": 5343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5527,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13802,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13777,
											"end": 13802,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13777,
											"end": 13802,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13833,
											"end": 13835,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13818,
											"end": 13836,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13818,
											"end": 13836,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13811,
											"end": 13845,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13811,
											"end": 13845,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13811,
											"end": 13845,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13750,
											"end": 13768,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 5678,
											"end": 5686,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5688,
											"end": 5692,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5694,
											"end": 5696,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5698,
											"end": 5700,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5702,
											"end": 5708,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5710,
											"end": 5714,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5647,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14282,
											"end": 15074,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 14282,
											"end": 15074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14514,
											"end": 14527,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14514,
											"end": 14527,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14510,
											"end": 15068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 14510,
											"end": 15068,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14593,
											"end": 14601,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 14593,
											"end": 14601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14607,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14612,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14614,
											"end": 14621,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 14614,
											"end": 14621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14623,
											"end": 14627,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 14623,
											"end": 14627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A0"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14934,
											"end": 14940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9506,
											"end": 9508,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9488,
											"end": 9509,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9545,
											"end": 9547,
											"name": "PUSH",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9518,
											"end": 9548,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9618,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 9564,
											"end": 9582,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9564,
											"end": 9582,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9564,
											"end": 9582,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9557,
											"end": 9619,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9635,
											"end": 9653,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9635,
											"end": 9653,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9635,
											"end": 9653,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9628,
											"end": 9678,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9695,
											"end": 9714,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 9695,
											"end": 9714,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 9304,
											"end": 9720,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14707,
											"end": 14767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14767,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14707,
											"end": 14767,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14703,
											"end": 14860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 14703,
											"end": 14860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15213,
											"end": 15214,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15146,
											"end": 15162,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15146,
											"end": 15162,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15174,
											"end": 15196,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15174,
											"end": 15196,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15174,
											"end": 15215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15174,
											"end": 15215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15236,
											"end": 15243,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15243,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15266,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13551,
											"end": 14276,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 13551,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13758,
											"end": 13771,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13758,
											"end": 13771,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13754,
											"end": 14270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 13754,
											"end": 14270,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13832,
											"end": 13840,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 13832,
											"end": 13840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13842,
											"end": 13846,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 13842,
											"end": 13846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13848,
											"end": 13850,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 13848,
											"end": 13850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13852,
											"end": 13858,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 13852,
											"end": 13858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13860,
											"end": 13864,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 13860,
											"end": 13864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13910,
											"end": 14062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 13910,
											"end": 14062,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 927,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 192,
											"end": 927,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 246,
											"end": 251,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 299,
											"end": 302,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 292,
											"end": 296,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 280,
											"end": 297,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 276,
											"end": 303,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 266,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 266,
											"end": 321,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 315,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 307,
											"end": 319,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 266,
											"end": 321,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 266,
											"end": 321,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 353,
											"end": 359,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 340,
											"end": 360,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 379,
											"end": 383,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 402,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 442,
											"end": 444,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 402,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 402,
											"end": 445,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 402,
											"end": 445,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 402,
											"end": 445,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 474,
											"end": 476,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 468,
											"end": 477,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 486,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 514,
											"end": 516,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 506,
											"end": 512,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 486,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 486,
											"end": 517,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 486,
											"end": 517,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 486,
											"end": 517,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 552,
											"end": 570,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 552,
											"end": 570,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 552,
											"end": 570,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 586,
											"end": 601,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 586,
											"end": 601,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 586,
											"end": 601,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 586,
											"end": 601,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 621,
											"end": 636,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 621,
											"end": 636,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 621,
											"end": 636,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 671,
											"end": 672,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 667,
											"end": 677,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 667,
											"end": 677,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 667,
											"end": 677,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 655,
											"end": 678,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 655,
											"end": 678,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 651,
											"end": 683,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 651,
											"end": 683,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 648,
											"end": 689,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 645,
											"end": 706,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 645,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 645,
											"end": 706,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 702,
											"end": 703,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 700,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 692,
											"end": 704,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 645,
											"end": 706,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 645,
											"end": 706,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 724,
											"end": 725,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 897,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 734,
											"end": 897,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 748,
											"end": 750,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 745,
											"end": 746,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 742,
											"end": 751,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 734,
											"end": 897,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 734,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 734,
											"end": 897,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 805,
											"end": 822,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 805,
											"end": 822,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 793,
											"end": 823,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 793,
											"end": 823,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 843,
											"end": 855,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 843,
											"end": 855,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 843,
											"end": 855,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 843,
											"end": 855,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 875,
											"end": 887,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 875,
											"end": 887,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 875,
											"end": 887,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 875,
											"end": 887,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 766,
											"end": 767,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 768,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 734,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 734,
											"end": 897,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 734,
											"end": 897,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 734,
											"end": 897,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 915,
											"end": 921,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 915,
											"end": 921,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 192,
											"end": 927,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 927,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 932,
											"end": 1487,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 932,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 974,
											"end": 979,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1027,
											"end": 1030,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1020,
											"end": 1024,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1008,
											"end": 1025,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 994,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 994,
											"end": 1049,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1045,
											"end": 1046,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1043,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1047,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 994,
											"end": 1049,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 994,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1081,
											"end": 1087,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1068,
											"end": 1088,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1103,
											"end": 1105,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1100,
											"end": 1126,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1097,
											"end": 1149,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1097,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 1097,
											"end": 1149,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1178,
											"end": 1180,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1181,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1190,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 1245,
											"end": 1247,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1226,
											"end": 1239,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1226,
											"end": 1239,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1222,
											"end": 1249,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1251,
											"end": 1255,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1256,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1172,
											"end": 1181,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1190,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 1190,
											"end": 1257,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1190,
											"end": 1257,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 1190,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1281,
											"end": 1283,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1266,
											"end": 1284,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1327,
											"end": 1330,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1320,
											"end": 1324,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1317,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1307,
											"end": 1313,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1318,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1348,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 1293,
											"end": 1348,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1345,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1342,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1346,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1348,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 1293,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1408,
											"end": 1410,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1401,
											"end": 1405,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1389,
											"end": 1406,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1382,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1370,
											"end": 1387,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1357,
											"end": 1411,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 1455,
											"end": 1456,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1448,
											"end": 1452,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1427,
											"end": 1453,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1420,
											"end": 1457,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1420,
											"end": 1457,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1420,
											"end": 1457,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1420,
											"end": 1457,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1435,
											"end": 1441,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1487,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 932,
											"end": 1487,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1492,
											"end": 1752,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 1492,
											"end": 1752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1560,
											"end": 1566,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1568,
											"end": 1574,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1621,
											"end": 1623,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1609,
											"end": 1618,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1600,
											"end": 1607,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1596,
											"end": 1619,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1624,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1641,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 1589,
											"end": 1641,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1637,
											"end": 1638,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1634,
											"end": 1635,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1627,
											"end": 1639,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1641,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 1589,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 1679,
											"end": 1688,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1708,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 1742,
											"end": 1744,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1731,
											"end": 1740,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1745,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1708,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 1708,
											"end": 1746,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1708,
											"end": 1746,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 1708,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1698,
											"end": 1746,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1698,
											"end": 1746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1752,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1752,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1752,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1752,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1911,
											"end": 1917,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1935,
											"end": 1941,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1996,
											"end": 1999,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 1984,
											"end": 1993,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1982,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 1971,
											"end": 1994,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1967,
											"end": 2000,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2011,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2003,
											"end": 2015,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2036,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 2055,
											"end": 2064,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2036,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 2036,
											"end": 2065,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2036,
											"end": 2065,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 2036,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2065,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2065,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2084,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 2118,
											"end": 2120,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2107,
											"end": 2116,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2103,
											"end": 2121,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2084,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 2084,
											"end": 2122,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2084,
											"end": 2122,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 2084,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2122,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2122,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2173,
											"end": 2175,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2171,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2158,
											"end": 2176,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2145,
											"end": 2177,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2196,
											"end": 2214,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2237,
											"end": 2239,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2229,
											"end": 2235,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2240,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2257,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 2223,
											"end": 2257,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2253,
											"end": 2254,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2250,
											"end": 2251,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2243,
											"end": 2255,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2257,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 2223,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2276,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 2329,
											"end": 2336,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2309,
											"end": 2318,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2327,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2276,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 2276,
											"end": 2337,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2276,
											"end": 2337,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 2276,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2337,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2379,
											"end": 2388,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2419,
											"end": 2421,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2417,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2406,
											"end": 2422,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2432,
											"end": 2433,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2425,
											"end": 2437,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2458,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 2513,
											"end": 2520,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 2502,
											"end": 2510,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2491,
											"end": 2500,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 2487,
											"end": 2511,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2458,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 2458,
											"end": 2521,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2458,
											"end": 2521,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 2458,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2521,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2521,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2574,
											"end": 2577,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2563,
											"end": 2572,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2546,
											"end": 2579,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2579,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2604,
											"end": 2606,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2591,
											"end": 2607,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2624,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 2588,
											"end": 2624,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2618,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2610,
											"end": 2622,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2624,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 2588,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2624,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2643,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 2686,
											"end": 2693,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2675,
											"end": 2683,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2664,
											"end": 2673,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 2660,
											"end": 2684,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2643,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 2643,
											"end": 2694,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2643,
											"end": 2694,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 2643,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2633,
											"end": 2694,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2633,
											"end": 2694,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2633,
											"end": 2694,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2705,
											"end": 3311,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 2705,
											"end": 3311,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2809,
											"end": 2815,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2823,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2825,
											"end": 2831,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2841,
											"end": 2847,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2897,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 2882,
											"end": 2891,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2873,
											"end": 2880,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2869,
											"end": 2892,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2865,
											"end": 2898,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2862,
											"end": 2915,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2862,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 2862,
											"end": 2915,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2911,
											"end": 2912,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2909,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2901,
											"end": 2913,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2862,
											"end": 2915,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 2862,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 2953,
											"end": 2962,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2924,
											"end": 2963,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2924,
											"end": 2963,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 3016,
											"end": 3018,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3005,
											"end": 3014,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3001,
											"end": 3019,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 2982,
											"end": 3020,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2982,
											"end": 3020,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 2982,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2972,
											"end": 3020,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2972,
											"end": 3020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3067,
											"end": 3069,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3056,
											"end": 3065,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3052,
											"end": 3070,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3039,
											"end": 3071,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3029,
											"end": 3071,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3029,
											"end": 3071,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3118,
											"end": 3120,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3107,
											"end": 3116,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3103,
											"end": 3121,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3122,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3080,
											"end": 3122,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3080,
											"end": 3122,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3173,
											"end": 3176,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3162,
											"end": 3171,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3158,
											"end": 3177,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3145,
											"end": 3178,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3201,
											"end": 3219,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3193,
											"end": 3199,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3190,
											"end": 3220,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3187,
											"end": 3237,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3187,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 3187,
											"end": 3237,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3233,
											"end": 3234,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3230,
											"end": 3231,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3235,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3187,
											"end": 3237,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 3187,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3256,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 3297,
											"end": 3304,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3294,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3277,
											"end": 3286,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3295,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3256,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 3256,
											"end": 3305,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3316,
											"end": 3663,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 3316,
											"end": 3663,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3387,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3389,
											"end": 3395,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3442,
											"end": 3444,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3430,
											"end": 3439,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3428,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3417,
											"end": 3440,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3413,
											"end": 3445,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3410,
											"end": 3462,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3410,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 3410,
											"end": 3462,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3458,
											"end": 3459,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3455,
											"end": 3456,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3448,
											"end": 3460,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3410,
											"end": 3462,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 3410,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 3481,
											"end": 3510,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3481,
											"end": 3510,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 3481,
											"end": 3510,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3471,
											"end": 3510,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3471,
											"end": 3510,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3560,
											"end": 3562,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3549,
											"end": 3558,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3545,
											"end": 3563,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3532,
											"end": 3564,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3612,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3600,
											"end": 3613,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3593,
											"end": 3614,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3586,
											"end": 3591,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3583,
											"end": 3615,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3573,
											"end": 3633,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 3573,
											"end": 3633,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3629,
											"end": 3630,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3626,
											"end": 3627,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3619,
											"end": 3631,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3573,
											"end": 3633,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 3573,
											"end": 3633,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3652,
											"end": 3657,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3642,
											"end": 3657,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3642,
											"end": 3657,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3642,
											"end": 3657,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3663,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3663,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3663,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3663,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3663,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3663,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3668,
											"end": 3922,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 3668,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3736,
											"end": 3742,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3744,
											"end": 3750,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3797,
											"end": 3799,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3785,
											"end": 3794,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3776,
											"end": 3783,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3795,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3768,
											"end": 3800,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3813,
											"end": 3814,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3810,
											"end": 3811,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3803,
											"end": 3815,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 3855,
											"end": 3864,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 3836,
											"end": 3865,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3836,
											"end": 3865,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 3836,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3826,
											"end": 3865,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 3914,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3897,
											"end": 3915,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3897,
											"end": 3915,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3897,
											"end": 3915,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3897,
											"end": 3915,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3884,
											"end": 3916,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3884,
											"end": 3916,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3668,
											"end": 3922,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3927,
											"end": 5146,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 3927,
											"end": 5146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4045,
											"end": 4051,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4053,
											"end": 4059,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4106,
											"end": 4108,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4094,
											"end": 4103,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4085,
											"end": 4092,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4081,
											"end": 4104,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4077,
											"end": 4109,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4126,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 4074,
											"end": 4126,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4122,
											"end": 4123,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4119,
											"end": 4120,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4124,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4126,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 4074,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4162,
											"end": 4171,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4149,
											"end": 4172,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4191,
											"end": 4209,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4232,
											"end": 4234,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4224,
											"end": 4230,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4221,
											"end": 4235,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4252,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 4218,
											"end": 4252,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4248,
											"end": 4249,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4245,
											"end": 4246,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4238,
											"end": 4250,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4252,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 4218,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4286,
											"end": 4292,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4275,
											"end": 4284,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4271,
											"end": 4293,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4261,
											"end": 4293,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4261,
											"end": 4293,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4331,
											"end": 4338,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4324,
											"end": 4328,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4320,
											"end": 4322,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4329,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4312,
											"end": 4339,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4302,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 4302,
											"end": 4357,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4353,
											"end": 4354,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4350,
											"end": 4351,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4343,
											"end": 4355,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4302,
											"end": 4357,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 4302,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4391,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4376,
											"end": 4392,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4411,
											"end": 4415,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4434,
											"end": 4477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 4474,
											"end": 4476,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 4477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 4434,
											"end": 4477,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4434,
											"end": 4477,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 4434,
											"end": 4477,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4506,
											"end": 4508,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4500,
											"end": 4509,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4518,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 4546,
											"end": 4548,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4544,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4518,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 4518,
											"end": 4549,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4518,
											"end": 4549,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 4518,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4602,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4602,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4602,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4618,
											"end": 4633,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4618,
											"end": 4633,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4618,
											"end": 4633,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4618,
											"end": 4633,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4653,
											"end": 4664,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4664,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4664,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4695,
											"end": 4696,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 4691,
											"end": 4701,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4691,
											"end": 4701,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4691,
											"end": 4701,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4683,
											"end": 4702,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4683,
											"end": 4702,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4679,
											"end": 4707,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4679,
											"end": 4707,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4676,
											"end": 4717,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4673,
											"end": 4734,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4673,
											"end": 4734,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 4673,
											"end": 4734,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4727,
											"end": 4728,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4720,
											"end": 4732,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4673,
											"end": 4734,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 4673,
											"end": 4734,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4752,
											"end": 4753,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4743,
											"end": 4753,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 4743,
											"end": 4753,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4776,
											"end": 4778,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4773,
											"end": 4774,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4770,
											"end": 4779,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4833,
											"end": 4856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 4852,
											"end": 4855,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4833,
											"end": 4856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 4833,
											"end": 4856,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4833,
											"end": 4856,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 4833,
											"end": 4856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4821,
											"end": 4857,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4821,
											"end": 4857,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4794,
											"end": 4795,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4787,
											"end": 4796,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 4787,
											"end": 4796,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4787,
											"end": 4796,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 4787,
											"end": 4796,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4787,
											"end": 4796,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 4889,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 4889,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 4889,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 4889,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 4921,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 4921,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4950,
											"end": 4956,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4994,
											"end": 5012,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4994,
											"end": 5012,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4981,
											"end": 5013,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4981,
											"end": 5013,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5025,
											"end": 5041,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5025,
											"end": 5041,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5025,
											"end": 5041,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5058,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 5022,
											"end": 5058,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5054,
											"end": 5055,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5044,
											"end": 5056,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5058,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 5022,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5058,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5077,
											"end": 5140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 5132,
											"end": 5139,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5121,
											"end": 5129,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5110,
											"end": 5119,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5106,
											"end": 5130,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5077,
											"end": 5140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 5077,
											"end": 5140,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5077,
											"end": 5140,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 5077,
											"end": 5140,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5067,
											"end": 5140,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5067,
											"end": 5140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5067,
											"end": 5140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3927,
											"end": 5146,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3927,
											"end": 5146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3927,
											"end": 5146,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3927,
											"end": 5146,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3927,
											"end": 5146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3927,
											"end": 5146,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5151,
											"end": 5396,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5151,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5209,
											"end": 5215,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5262,
											"end": 5264,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5250,
											"end": 5259,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5248,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5237,
											"end": 5260,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5233,
											"end": 5265,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5230,
											"end": 5282,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5230,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 5230,
											"end": 5282,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5278,
											"end": 5279,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5275,
											"end": 5276,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5280,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5230,
											"end": 5282,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 5230,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5317,
											"end": 5326,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5304,
											"end": 5327,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5336,
											"end": 5366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5336,
											"end": 5366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 5336,
											"end": 5366,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5336,
											"end": 5366,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 5336,
											"end": 5366,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5385,
											"end": 5390,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5151,
											"end": 5396,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5151,
											"end": 5396,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5401,
											"end": 5650,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 5401,
											"end": 5650,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5470,
											"end": 5476,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5523,
											"end": 5525,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5511,
											"end": 5520,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5502,
											"end": 5509,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5498,
											"end": 5521,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5494,
											"end": 5526,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5491,
											"end": 5543,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5491,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 5491,
											"end": 5543,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5539,
											"end": 5540,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5536,
											"end": 5537,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5529,
											"end": 5541,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5491,
											"end": 5543,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 5491,
											"end": 5543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5571,
											"end": 5580,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5565,
											"end": 5581,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5590,
											"end": 5620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 5614,
											"end": 5619,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5590,
											"end": 5620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 5590,
											"end": 5620,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5655,
											"end": 5835,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 5655,
											"end": 5835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5720,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5767,
											"end": 5769,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5755,
											"end": 5764,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5753,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5742,
											"end": 5765,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5738,
											"end": 5770,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5735,
											"end": 5787,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5735,
											"end": 5787,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 5735,
											"end": 5787,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5783,
											"end": 5784,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5781,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5773,
											"end": 5785,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5735,
											"end": 5787,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 5735,
											"end": 5787,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5806,
											"end": 5829,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5806,
											"end": 5829,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5655,
											"end": 5835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5655,
											"end": 5835,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5840,
											"end": 6275,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 5840,
											"end": 6275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5893,
											"end": 5896,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5931,
											"end": 5936,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5937,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5958,
											"end": 5964,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5953,
											"end": 5956,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5946,
											"end": 5965,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5984,
											"end": 5988,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6013,
											"end": 6015,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6008,
											"end": 6011,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6004,
											"end": 6016,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5997,
											"end": 6016,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5997,
											"end": 6016,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6050,
											"end": 6052,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6043,
											"end": 6048,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6053,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6071,
											"end": 6072,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6095,
											"end": 6101,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6092,
											"end": 6093,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6089,
											"end": 6102,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6156,
											"end": 6169,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6156,
											"end": 6169,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6144,
											"end": 6170,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6144,
											"end": 6170,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6190,
											"end": 6202,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6190,
											"end": 6202,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6190,
											"end": 6202,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6190,
											"end": 6202,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6240,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6240,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6240,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6240,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6117,
											"end": 6118,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6110,
											"end": 6119,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6266,
											"end": 6269,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6266,
											"end": 6269,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 5840,
											"end": 6275,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5840,
											"end": 6275,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6280,
											"end": 6751,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 6280,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6321,
											"end": 6324,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6359,
											"end": 6364,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6353,
											"end": 6365,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6386,
											"end": 6392,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6381,
											"end": 6384,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6374,
											"end": 6393,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6411,
											"end": 6412,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6421,
											"end": 6583,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 6421,
											"end": 6583,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6435,
											"end": 6441,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6433,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6429,
											"end": 6442,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6421,
											"end": 6583,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6421,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 6421,
											"end": 6583,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6497,
											"end": 6501,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6553,
											"end": 6566,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6553,
											"end": 6566,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6553,
											"end": 6566,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6571,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6571,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6543,
											"end": 6572,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6525,
											"end": 6536,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6525,
											"end": 6536,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6525,
											"end": 6536,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6521,
											"end": 6541,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6521,
											"end": 6541,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6514,
											"end": 6573,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6450,
											"end": 6462,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6421,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 6421,
											"end": 6583,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6421,
											"end": 6583,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 6421,
											"end": 6583,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6601,
											"end": 6607,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6598,
											"end": 6599,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6595,
											"end": 6608,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6592,
											"end": 6679,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6592,
											"end": 6679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 6592,
											"end": 6679,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6667,
											"end": 6668,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6660,
											"end": 6664,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6651,
											"end": 6657,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6646,
											"end": 6649,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6642,
											"end": 6658,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6638,
											"end": 6665,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6631,
											"end": 6669,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6592,
											"end": 6679,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 6592,
											"end": 6679,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6733,
											"end": 6735,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6712,
											"end": 6727,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6708,
											"end": 6737,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6699,
											"end": 6738,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6699,
											"end": 6738,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6699,
											"end": 6738,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6699,
											"end": 6738,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6740,
											"end": 6744,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6695,
											"end": 6745,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6695,
											"end": 6745,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6280,
											"end": 6751,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6280,
											"end": 6751,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6756,
											"end": 7582,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 6756,
											"end": 7582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7153,
											"end": 7168,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7153,
											"end": 7168,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7153,
											"end": 7168,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7135,
											"end": 7169,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7135,
											"end": 7169,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7205,
											"end": 7220,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7205,
											"end": 7220,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7200,
											"end": 7202,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7185,
											"end": 7203,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7185,
											"end": 7203,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7178,
											"end": 7221,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7115,
											"end": 7118,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 7252,
											"end": 7254,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7237,
											"end": 7255,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7237,
											"end": 7255,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7230,
											"end": 7261,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7230,
											"end": 7261,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7230,
											"end": 7261,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7078,
											"end": 7082,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7078,
											"end": 7082,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7284,
											"end": 7341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 7284,
											"end": 7341,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7321,
											"end": 7340,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7321,
											"end": 7340,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7313,
											"end": 7319,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7284,
											"end": 7341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 7284,
											"end": 7341,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7284,
											"end": 7341,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 7284,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7389,
											"end": 7398,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7381,
											"end": 7387,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7399,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7372,
											"end": 7374,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7361,
											"end": 7370,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7357,
											"end": 7375,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7350,
											"end": 7400,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7423,
											"end": 7467,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 7460,
											"end": 7466,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7452,
											"end": 7458,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7423,
											"end": 7467,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 7423,
											"end": 7467,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7423,
											"end": 7467,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 7423,
											"end": 7467,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7409,
											"end": 7467,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7409,
											"end": 7467,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7516,
											"end": 7525,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7514,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7504,
											"end": 7526,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7498,
											"end": 7501,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 7487,
											"end": 7496,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7483,
											"end": 7502,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7476,
											"end": 7527,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7544,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 7569,
											"end": 7575,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7561,
											"end": 7567,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7544,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 7544,
											"end": 7576,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7544,
											"end": 7576,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 7544,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7536,
											"end": 7576,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 6756,
											"end": 7582,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6756,
											"end": 7582,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7587,
											"end": 8147,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 7587,
											"end": 8147,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7884,
											"end": 7899,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7884,
											"end": 7899,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7884,
											"end": 7899,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7866,
											"end": 7900,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7866,
											"end": 7900,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7936,
											"end": 7951,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7936,
											"end": 7951,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7931,
											"end": 7933,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7909,
											"end": 7952,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7983,
											"end": 7985,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7961,
											"end": 7995,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7961,
											"end": 7995,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7961,
											"end": 7995,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8026,
											"end": 8028,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 8011,
											"end": 8029,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8011,
											"end": 8029,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8004,
											"end": 8038,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8004,
											"end": 8038,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8004,
											"end": 8038,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7846,
											"end": 7849,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 8069,
											"end": 8072,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 8054,
											"end": 8073,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8054,
											"end": 8073,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8047,
											"end": 8079,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8047,
											"end": 8079,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8047,
											"end": 8079,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7809,
											"end": 7813,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7809,
											"end": 7813,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8096,
											"end": 8141,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 8096,
											"end": 8141,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8121,
											"end": 8140,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8121,
											"end": 8140,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8113,
											"end": 8119,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8096,
											"end": 8141,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 8096,
											"end": 8141,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8096,
											"end": 8141,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 8096,
											"end": 8141,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8088,
											"end": 8141,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 7587,
											"end": 8147,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7587,
											"end": 8147,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 8152,
											"end": 8413,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 8152,
											"end": 8413,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8331,
											"end": 8333,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8320,
											"end": 8329,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8313,
											"end": 8334,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8294,
											"end": 8298,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8351,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 8403,
											"end": 8405,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8392,
											"end": 8401,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8388,
											"end": 8406,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8380,
											"end": 8386,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8351,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 8351,
											"end": 8407,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8418,
											"end": 8883,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 8418,
											"end": 8883,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8675,
											"end": 8677,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8664,
											"end": 8673,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8657,
											"end": 8678,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8638,
											"end": 8642,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8701,
											"end": 8757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 8753,
											"end": 8755,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8742,
											"end": 8751,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8738,
											"end": 8756,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8730,
											"end": 8736,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8701,
											"end": 8757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 8701,
											"end": 8757,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8701,
											"end": 8757,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 8701,
											"end": 8757,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8805,
											"end": 8814,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8797,
											"end": 8803,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8793,
											"end": 8815,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8788,
											"end": 8790,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8777,
											"end": 8786,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8773,
											"end": 8791,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8766,
											"end": 8816,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8833,
											"end": 8877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 8870,
											"end": 8876,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8862,
											"end": 8868,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8833,
											"end": 8877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 8833,
											"end": 8877,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8833,
											"end": 8877,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 8833,
											"end": 8877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8825,
											"end": 8877,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8418,
											"end": 8883,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8418,
											"end": 8883,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 9080,
											"end": 9299,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 9080,
											"end": 9299,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9229,
											"end": 9231,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9218,
											"end": 9227,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9211,
											"end": 9232,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9192,
											"end": 9196,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9249,
											"end": 9293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 9289,
											"end": 9291,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9278,
											"end": 9287,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9274,
											"end": 9292,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9266,
											"end": 9272,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9249,
											"end": 9293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 9249,
											"end": 9293,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9725,
											"end": 10129,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 9725,
											"end": 10129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9927,
											"end": 9929,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9909,
											"end": 9930,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9909,
											"end": 9930,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9909,
											"end": 9930,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9966,
											"end": 9968,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 9946,
											"end": 9964,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9946,
											"end": 9964,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9946,
											"end": 9964,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9939,
											"end": 9969,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10005,
											"end": 10039,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 10000,
											"end": 10002,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9985,
											"end": 10003,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9985,
											"end": 10003,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9978,
											"end": 10040,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10071,
											"end": 10073,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10056,
											"end": 10074,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10056,
											"end": 10074,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10049,
											"end": 10087,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10119,
											"end": 10122,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 10104,
											"end": 10123,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10123,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9725,
											"end": 10129,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 10956,
											"end": 11357,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 10956,
											"end": 11357,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11158,
											"end": 11160,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11140,
											"end": 11161,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11140,
											"end": 11161,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11140,
											"end": 11161,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11197,
											"end": 11199,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 11177,
											"end": 11195,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11177,
											"end": 11195,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11177,
											"end": 11195,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11170,
											"end": 11200,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11236,
											"end": 11270,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 11231,
											"end": 11233,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11216,
											"end": 11234,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11216,
											"end": 11234,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11209,
											"end": 11271,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11302,
											"end": 11304,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11287,
											"end": 11305,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11287,
											"end": 11305,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11280,
											"end": 11315,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11347,
											"end": 11350,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 11332,
											"end": 11351,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11332,
											"end": 11351,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10956,
											"end": 11357,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 11781,
											"end": 12187,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 11781,
											"end": 12187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11983,
											"end": 11985,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11965,
											"end": 11986,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11965,
											"end": 11986,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11965,
											"end": 11986,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12022,
											"end": 12024,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 12002,
											"end": 12020,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12002,
											"end": 12020,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12002,
											"end": 12020,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11995,
											"end": 12025,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12061,
											"end": 12095,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 12056,
											"end": 12058,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12041,
											"end": 12059,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12041,
											"end": 12059,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12034,
											"end": 12096,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39103A3930B739B332B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12127,
											"end": 12129,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 12112,
											"end": 12130,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12112,
											"end": 12130,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12105,
											"end": 12145,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12177,
											"end": 12180,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 12162,
											"end": 12181,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12162,
											"end": 12181,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11781,
											"end": 12187,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 13856,
											"end": 14039,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 13856,
											"end": 14039,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13916,
											"end": 13920,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13949,
											"end": 13967,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13941,
											"end": 13947,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13938,
											"end": 13968,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 13935,
											"end": 13991,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13935,
											"end": 13991,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 13935,
											"end": 13991,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13971,
											"end": 13989,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 13971,
											"end": 13989,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 13971,
											"end": 13989,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 13971,
											"end": 13989,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 13971,
											"end": 13989,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14016,
											"end": 14017,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 14012,
											"end": 14026,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 14028,
											"end": 14032,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14008,
											"end": 14033,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14008,
											"end": 14033,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13856,
											"end": 14039,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14044,
											"end": 14172,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 14044,
											"end": 14172,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14084,
											"end": 14087,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14115,
											"end": 14116,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14111,
											"end": 14117,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 14108,
											"end": 14109,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14105,
											"end": 14118,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14102,
											"end": 14141,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14102,
											"end": 14141,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 14102,
											"end": 14141,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14121,
											"end": 14139,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 14121,
											"end": 14139,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 14121,
											"end": 14139,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 14121,
											"end": 14139,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 14121,
											"end": 14139,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14157,
											"end": 14166,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14157,
											"end": 14166,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14044,
											"end": 14172,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14177,
											"end": 14557,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 14177,
											"end": 14557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14256,
											"end": 14257,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 14252,
											"end": 14264,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14252,
											"end": 14264,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14252,
											"end": 14264,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 14252,
											"end": 14264,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14320,
											"end": 14381,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 14320,
											"end": 14381,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14374,
											"end": 14378,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 14366,
											"end": 14372,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14362,
											"end": 14379,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14352,
											"end": 14379,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14352,
											"end": 14379,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14320,
											"end": 14381,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 14320,
											"end": 14381,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14427,
											"end": 14429,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14419,
											"end": 14425,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14416,
											"end": 14430,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 14396,
											"end": 14414,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14393,
											"end": 14431,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 14390,
											"end": 14551,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14390,
											"end": 14551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 14390,
											"end": 14551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14473,
											"end": 14483,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 14468,
											"end": 14471,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 14464,
											"end": 14484,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 14461,
											"end": 14462,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14454,
											"end": 14485,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14508,
											"end": 14512,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 14505,
											"end": 14506,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14498,
											"end": 14513,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14536,
											"end": 14540,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14533,
											"end": 14534,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14526,
											"end": 14541,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 14390,
											"end": 14551,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 14390,
											"end": 14551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14390,
											"end": 14551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14177,
											"end": 14557,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14177,
											"end": 14557,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14177,
											"end": 14557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14177,
											"end": 14557,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14562,
											"end": 14811,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 14562,
											"end": 14811,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14672,
											"end": 14674,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 14653,
											"end": 14666,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14653,
											"end": 14666,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14649,
											"end": 14676,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14637,
											"end": 14677,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14637,
											"end": 14677,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14707,
											"end": 14725,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14692,
											"end": 14726,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14692,
											"end": 14726,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14728,
											"end": 14750,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14728,
											"end": 14750,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14728,
											"end": 14750,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 14689,
											"end": 14751,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 14686,
											"end": 14774,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14686,
											"end": 14774,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 14686,
											"end": 14774,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14754,
											"end": 14772,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 14754,
											"end": 14772,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 14754,
											"end": 14772,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 14754,
											"end": 14772,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 14754,
											"end": 14772,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14790,
											"end": 14792,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14783,
											"end": 14805,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14562,
											"end": 14811,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14816,
											"end": 14951,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 14816,
											"end": 14951,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14855,
											"end": 14858,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14876,
											"end": 14893,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14876,
											"end": 14893,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 14873,
											"end": 14916,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14873,
											"end": 14916,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 14873,
											"end": 14916,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14896,
											"end": 14914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 14896,
											"end": 14914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 14896,
											"end": 14914,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 14896,
											"end": 14914,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 14896,
											"end": 14914,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14943,
											"end": 14944,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 14932,
											"end": 14945,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14932,
											"end": 14945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14816,
											"end": 14951,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14956,
											"end": 15083,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 14956,
											"end": 15083,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15017,
											"end": 15027,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 15012,
											"end": 15015,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 15008,
											"end": 15028,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 15005,
											"end": 15006,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14998,
											"end": 15029,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15048,
											"end": 15052,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 15045,
											"end": 15046,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15038,
											"end": 15053,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15072,
											"end": 15076,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15069,
											"end": 15070,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15062,
											"end": 15077,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 15088,
											"end": 15215,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 15088,
											"end": 15215,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15149,
											"end": 15159,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 15144,
											"end": 15147,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 15140,
											"end": 15160,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 15137,
											"end": 15138,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15130,
											"end": 15161,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15180,
											"end": 15184,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 15177,
											"end": 15178,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15170,
											"end": 15185,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15204,
											"end": 15208,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15201,
											"end": 15202,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15194,
											"end": 15209,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 15220,
											"end": 15347,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 15220,
											"end": 15347,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15281,
											"end": 15291,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 15276,
											"end": 15279,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 15272,
											"end": 15292,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 15269,
											"end": 15270,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15262,
											"end": 15293,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15312,
											"end": 15316,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 15309,
											"end": 15310,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15302,
											"end": 15317,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15336,
											"end": 15340,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15333,
											"end": 15334,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15326,
											"end": 15341,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 15352,
											"end": 15531,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 15352,
											"end": 15531,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15387,
											"end": 15390,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15429,
											"end": 15430,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 15411,
											"end": 15427,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 15408,
											"end": 15431,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15405,
											"end": 15525,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15405,
											"end": 15525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 15405,
											"end": 15525,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15475,
											"end": 15476,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15472,
											"end": 15473,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15469,
											"end": 15470,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15454,
											"end": 15477,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15512,
											"end": 15513,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15506,
											"end": 15514,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15501,
											"end": 15504,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 15497,
											"end": 15515,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 15405,
											"end": 15525,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 15405,
											"end": 15525,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15352,
											"end": 15531,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15352,
											"end": 15531,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15575,
											"end": 15578,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15617,
											"end": 15621,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 15599,
											"end": 15615,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 15596,
											"end": 15622,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 15593,
											"end": 15632,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15593,
											"end": 15632,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 15593,
											"end": 15632,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15593,
											"end": 15632,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 15593,
											"end": 15632,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15659,
											"end": 15661,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15653,
											"end": 15662,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15724,
											"end": 15740,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 15720,
											"end": 15745,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15720,
											"end": 15745,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15717,
											"end": 15718,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15653,
											"end": 15662,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15696,
											"end": 15746,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 15775,
											"end": 15779,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15769,
											"end": 15780,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15799,
											"end": 15815,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 15834,
											"end": 15852,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15905,
											"end": 15907,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15898,
											"end": 15902,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15890,
											"end": 15896,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15886,
											"end": 15903,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15883,
											"end": 15908,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15878,
											"end": 15880,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15870,
											"end": 15876,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15867,
											"end": 15881,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15864,
											"end": 15909,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 15861,
											"end": 15919,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15861,
											"end": 15919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 15861,
											"end": 15919,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15912,
											"end": 15917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15912,
											"end": 15917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15912,
											"end": 15917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15912,
											"end": 15917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15912,
											"end": 15917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15861,
											"end": 15919,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 15861,
											"end": 15919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15949,
											"end": 15955,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15943,
											"end": 15947,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15939,
											"end": 15956,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15928,
											"end": 15956,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15928,
											"end": 15956,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15985,
											"end": 15988,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15979,
											"end": 15989,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 16012,
											"end": 16014,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16004,
											"end": 16010,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16001,
											"end": 16015,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15998,
											"end": 16025,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15998,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 15998,
											"end": 16025,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16018,
											"end": 16023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16018,
											"end": 16023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16018,
											"end": 16023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16018,
											"end": 16023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16018,
											"end": 16023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16018,
											"end": 16023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15998,
											"end": 16025,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 15998,
											"end": 16025,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16102,
											"end": 16104,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16083,
											"end": 16099,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 16077,
											"end": 16081,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 16073,
											"end": 16100,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16069,
											"end": 16105,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16062,
											"end": 16066,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16053,
											"end": 16059,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16048,
											"end": 16051,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16044,
											"end": 16060,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16040,
											"end": 16067,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16037,
											"end": 16106,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 16034,
											"end": 16116,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16034,
											"end": 16116,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 16034,
											"end": 16116,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16109,
											"end": 16114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16109,
											"end": 16114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16109,
											"end": 16114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16109,
											"end": 16114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16109,
											"end": 16114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16109,
											"end": 16114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 16034,
											"end": 16116,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 16034,
											"end": 16116,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16125,
											"end": 16182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 16176,
											"end": 16180,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16167,
											"end": 16173,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16159,
											"end": 16165,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 16155,
											"end": 16174,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16151,
											"end": 16181,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16145,
											"end": 16149,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 16125,
											"end": 16182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 16125,
											"end": 16182,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 16125,
											"end": 16182,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 16125,
											"end": 16182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16198,
											"end": 16201,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16198,
											"end": 16201,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 16212,
											"end": 16343,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 16212,
											"end": 16343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16286,
											"end": 16318,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16286,
											"end": 16318,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16276,
											"end": 16319,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16276,
											"end": 16319,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 16266,
											"end": 16337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 16266,
											"end": 16337,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16333,
											"end": 16334,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16330,
											"end": 16331,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16323,
											"end": 16335,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 16266,
											"end": 16337,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 16266,
											"end": 16337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16212,
											"end": 16343,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16212,
											"end": 16343,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x04d6d1342ece664085921a4fabc928a7bcf1cf2873fa81780f61a54dc2b9b66e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6d2b052effa2e9a7479b0fea53b46f4cbbd91947848ef632aadad20ae2e9275\",\"dweb:/ipfs/QmcZp7f5cooGZrhHE8RC1yQR53RFZt19d5fyVqNfbHmPgY\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 25,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 31,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 33,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol": {
				"ERC1155Supply": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "exists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of ERC1155 that adds tracking of total supply per id. Useful for scenarios where Fungible and Non-fungible tokens have to be clearly identified. Note: While a totalSupply of 1 might mean the corresponding is an NFT, there is no guarantees that no other token with the same id are not going to be minted.",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"exists(uint256)": {
								"details": "Indicates whether any token exist with a given id, or not."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"totalSupply(uint256)": {
								"details": "Total amount of tokens in with a given id."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"exists(uint256)": "4f558e79",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply(uint256)": "bd85b039",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC1155 that adds tracking of total supply per id. Useful for scenarios where Fungible and Non-fungible tokens have to be clearly identified. Note: While a totalSupply of 1 might mean the corresponding is an NFT, there is no guarantees that no other token with the same id are not going to be minted.\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"exists(uint256)\":{\"details\":\"Indicates whether any token exist with a given id, or not.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"totalSupply(uint256)\":{\"details\":\"Total amount of tokens in with a given id.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":\"ERC1155Supply\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x04d6d1342ece664085921a4fabc928a7bcf1cf2873fa81780f61a54dc2b9b66e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6d2b052effa2e9a7479b0fea53b46f4cbbd91947848ef632aadad20ae2e9275\",\"dweb:/ipfs/QmcZp7f5cooGZrhHE8RC1yQR53RFZt19d5fyVqNfbHmPgY\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":{\"keccak256\":\"0xe243a49f159c97fdd011edb7a8ed1b48175f0fa6b8592bb6dcccac7e22d8c37b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9fcf3c76e66e7cbd95bc1d47eb41c2764670deea0e129a0bc8ed893f5ee20628\",\"dweb:/ipfs/QmUVYsGME7ikBfN638shb36WHbqecVAzxVMqSHT1eE5Qdk\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 25,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 31,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 33,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 1268,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203a7a94cc23a4a11dc63306218f061cc43ef4b659696daad48b230124a74884a064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203a7a94cc23a4a11dc63306218f061cc43ef4b659696daad48b230124a74884a064736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE PUSH27 0x94CC23A4A11DC63306218F061CC43EF4B659696DAAD48B230124A7 BASEFEE DUP5 LOG0 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "194:8061:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8061:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203a7a94cc23a4a11dc63306218f061cc43ef4b659696daad48b230124a74884a064736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE PUSH27 0x94CC23A4A11DC63306218F061CC43EF4B659696DAAD48B230124A7 BASEFEE DUP5 LOG0 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "194:8061:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203a7a94cc23a4a11dc63306218f061cc43ef4b659696daad48b230124a74884a064736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/GU-NFT/GUCollections.sol": {
				"GUCollections": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "safe",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "safeAddress",
									"type": "address"
								}
							],
							"name": "AdminSafeChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								}
							],
							"name": "TraderApproved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "adminSafe",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "safe",
									"type": "address"
								}
							],
							"name": "changeAdminSafe",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "exists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"exists(uint256)": {
								"details": "Indicates whether any token exist with a given id, or not."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"totalSupply(uint256)": {
								"details": "Total amount of tokens in with a given id."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/GU-NFT/GUCollections.sol\":204:1260  contract GUCollections is ERC1155Supply{\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/GU-NFT/GUCollections.sol\":440:535  constructor(string memory uri_, address safe) ERC1155(uri_) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/GU-NFT/GUCollections.sol\":494:498  uri_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1134:1147  _setURI(uri_) */\n  tag_7\n    /* \"contracts/GU-NFT/GUCollections.sol\":494:498  uri_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1134:1141  _setURI */\n  tag_8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1134:1147  _setURI(uri_) */\n  jump\t// in\ntag_7:\n  pop\n    /* \"contracts/GU-NFT/GUCollections.sol\":511:520  adminSafe */\n  0x05\n    /* \"contracts/GU-NFT/GUCollections.sol\":511:527  adminSafe = safe */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/GU-NFT/GUCollections.sol\":204:1260  contract GUCollections is ERC1155Supply{\r... */\n  jump(tag_25)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7936:8022  function _setURI(string memory newuri) internal virtual {... */\ntag_8:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8002:8015  _uri = newuri */\n  dup1\n  mload\n  tag_12\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8002:8006  _uri */\n  0x02\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8002:8015  _uri = newuri */\n  0x20\n  dup5\n  add\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7936:8022  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/GU-NFT/GUCollections.sol\":204:1260  contract GUCollections is ERC1155Supply{\r... */\ntag_13:\n  dup3\n  dup1\n  sload\n  tag_14\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_17\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_20)\ntag_17:\n  dup3\n  0x1f\n  lt\n  tag_18\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_20)\ntag_18:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_20\n  jumpi\n  swap2\n  dup3\n  add\ntag_19:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_20\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_19)\ntag_20:\n  pop\n  tag_21\n  swap3\n  swap2\n  pop\n  tag_22\n  jump\t// in\ntag_21:\n  pop\n  swap1\n  jump\t// out\ntag_22:\ntag_23:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_21\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_23)\n    /* \"#utility.yul\":14:191   */\ntag_26:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_28\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_28:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:1370   */\ntag_3:\n    /* \"#utility.yul\":285:291   */\n  0x00\n    /* \"#utility.yul\":293:299   */\n  dup1\n    /* \"#utility.yul\":346:348   */\n  0x40\n    /* \"#utility.yul\":334:343   */\n  dup4\n    /* \"#utility.yul\":325:332   */\n  dup6\n    /* \"#utility.yul\":321:344   */\n  sub\n    /* \"#utility.yul\":317:349   */\n  slt\n    /* \"#utility.yul\":314:366   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":362:363   */\n  0x00\n    /* \"#utility.yul\":359:360   */\n  dup1\n    /* \"#utility.yul\":352:364   */\n  revert\n    /* \"#utility.yul\":314:366   */\ntag_30:\n    /* \"#utility.yul\":389:405   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":454:468   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":451:485   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":481:482   */\n  0x00\n    /* \"#utility.yul\":478:479   */\n  dup1\n    /* \"#utility.yul\":471:483   */\n  revert\n    /* \"#utility.yul\":451:485   */\ntag_31:\n    /* \"#utility.yul\":519:525   */\n  dup2\n    /* \"#utility.yul\":508:517   */\n  dup6\n    /* \"#utility.yul\":504:526   */\n  add\n    /* \"#utility.yul\":494:526   */\n  swap2\n  pop\n    /* \"#utility.yul\":564:571   */\n  dup6\n    /* \"#utility.yul\":557:561   */\n  0x1f\n    /* \"#utility.yul\":553:555   */\n  dup4\n    /* \"#utility.yul\":549:562   */\n  add\n    /* \"#utility.yul\":545:572   */\n  slt\n    /* \"#utility.yul\":535:590   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":586:587   */\n  0x00\n    /* \"#utility.yul\":583:584   */\n  dup1\n    /* \"#utility.yul\":576:588   */\n  revert\n    /* \"#utility.yul\":535:590   */\ntag_32:\n    /* \"#utility.yul\":615:617   */\n  dup2\n    /* \"#utility.yul\":609:618   */\n  mload\n    /* \"#utility.yul\":637:639   */\n  dup2\n    /* \"#utility.yul\":633:635   */\n  dup2\n    /* \"#utility.yul\":630:640   */\n  gt\n    /* \"#utility.yul\":627:663   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":643:661   */\n  tag_34\n  tag_35\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":718:720   */\n  0x40\n    /* \"#utility.yul\":712:721   */\n  mload\n    /* \"#utility.yul\":686:688   */\n  0x1f\n    /* \"#utility.yul\":772:785   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":768:790   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":792:794   */\n  0x3f\n    /* \"#utility.yul\":764:795   */\n  add\n    /* \"#utility.yul\":760:800   */\n  and\n    /* \"#utility.yul\":748:801   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":816:834   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":836:858   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":813:859   */\n  or\n    /* \"#utility.yul\":810:882   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":862:880   */\n  tag_37\n  tag_35\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":902:912   */\n  dup2\n    /* \"#utility.yul\":898:900   */\n  0x40\n    /* \"#utility.yul\":891:913   */\n  mstore\n    /* \"#utility.yul\":937:939   */\n  dup3\n    /* \"#utility.yul\":929:935   */\n  dup2\n    /* \"#utility.yul\":922:940   */\n  mstore\n    /* \"#utility.yul\":959:963   */\n  0x20\n    /* \"#utility.yul\":949:963   */\n  swap4\n  pop\n    /* \"#utility.yul\":1000:1007   */\n  dup9\n    /* \"#utility.yul\":995:997   */\n  dup5\n    /* \"#utility.yul\":990:992   */\n  dup5\n    /* \"#utility.yul\":986:988   */\n  dup8\n    /* \"#utility.yul\":982:993   */\n  add\n    /* \"#utility.yul\":978:998   */\n  add\n    /* \"#utility.yul\":975:1008   */\n  gt\n    /* \"#utility.yul\":972:1025   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1021:1022   */\n  0x00\n    /* \"#utility.yul\":1018:1019   */\n  dup1\n    /* \"#utility.yul\":1011:1023   */\n  revert\n    /* \"#utility.yul\":972:1025   */\ntag_38:\n    /* \"#utility.yul\":1043:1044   */\n  0x00\n    /* \"#utility.yul\":1034:1044   */\n  swap2\n  pop\n    /* \"#utility.yul\":1053:1182   */\ntag_39:\n    /* \"#utility.yul\":1067:1069   */\n  dup3\n    /* \"#utility.yul\":1064:1065   */\n  dup3\n    /* \"#utility.yul\":1061:1070   */\n  lt\n    /* \"#utility.yul\":1053:1182   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1155:1165   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":1151:1170   */\n  dup5\n  add\n    /* \"#utility.yul\":1145:1171   */\n  mload\n    /* \"#utility.yul\":1124:1138   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":1120:1143   */\n  dup6\n  add\n    /* \"#utility.yul\":1113:1172   */\n  mstore\n    /* \"#utility.yul\":1078:1088   */\n  swap1\n  dup4\n  add\n  swap1\n    /* \"#utility.yul\":1053:1182   */\n  jump(tag_39)\ntag_41:\n    /* \"#utility.yul\":1200:1202   */\n  dup3\n    /* \"#utility.yul\":1197:1198   */\n  dup3\n    /* \"#utility.yul\":1194:1203   */\n  gt\n    /* \"#utility.yul\":1191:1271   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1259:1260   */\n  0x00\n    /* \"#utility.yul\":1254:1256   */\n  dup5\n    /* \"#utility.yul\":1249:1251   */\n  dup5\n    /* \"#utility.yul\":1241:1247   */\n  dup4\n    /* \"#utility.yul\":1237:1252   */\n  add\n    /* \"#utility.yul\":1233:1257   */\n  add\n    /* \"#utility.yul\":1226:1261   */\n  mstore\n    /* \"#utility.yul\":1191:1271   */\ntag_42:\n    /* \"#utility.yul\":1290:1296   */\n  swap6\n  pop\n    /* \"#utility.yul\":1315:1364   */\n  tag_43\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1345:1363   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":1315:1364   */\n  tag_26\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1305:1364   */\n  swap3\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":196:1370   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1375:1755   */\ntag_15:\n    /* \"#utility.yul\":1454:1455   */\n  0x01\n    /* \"#utility.yul\":1450:1462   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1497:1509   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1518:1579   */\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1572:1576   */\n  0x7f\n    /* \"#utility.yul\":1564:1570   */\n  dup3\n    /* \"#utility.yul\":1560:1577   */\n  and\n    /* \"#utility.yul\":1550:1577   */\n  swap2\n  pop\n    /* \"#utility.yul\":1518:1579   */\ntag_45:\n    /* \"#utility.yul\":1625:1627   */\n  0x20\n    /* \"#utility.yul\":1617:1623   */\n  dup3\n    /* \"#utility.yul\":1614:1628   */\n  lt\n    /* \"#utility.yul\":1594:1612   */\n  dup2\n    /* \"#utility.yul\":1591:1629   */\n  eq\n    /* \"#utility.yul\":1588:1749   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":1671:1681   */\n  0x4e487b71\n    /* \"#utility.yul\":1666:1669   */\n  0xe0\n    /* \"#utility.yul\":1662:1682   */\n  shl\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1683   */\n  mstore\n    /* \"#utility.yul\":1706:1710   */\n  0x22\n    /* \"#utility.yul\":1703:1704   */\n  0x04\n    /* \"#utility.yul\":1696:1711   */\n  mstore\n    /* \"#utility.yul\":1734:1738   */\n  0x24\n    /* \"#utility.yul\":1731:1732   */\n  0x00\n    /* \"#utility.yul\":1724:1739   */\n  revert\n    /* \"#utility.yul\":1588:1749   */\ntag_46:\n  pop\n    /* \"#utility.yul\":1375:1755   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1760:1887   */\ntag_35:\n    /* \"#utility.yul\":1821:1831   */\n  0x4e487b71\n    /* \"#utility.yul\":1816:1819   */\n  0xe0\n    /* \"#utility.yul\":1812:1832   */\n  shl\n    /* \"#utility.yul\":1809:1810   */\n  0x00\n    /* \"#utility.yul\":1802:1833   */\n  mstore\n    /* \"#utility.yul\":1852:1856   */\n  0x41\n    /* \"#utility.yul\":1849:1850   */\n  0x04\n    /* \"#utility.yul\":1842:1857   */\n  mstore\n    /* \"#utility.yul\":1876:1880   */\n  0x24\n    /* \"#utility.yul\":1873:1874   */\n  0x00\n    /* \"#utility.yul\":1866:1881   */\n  revert\n    /* \"#utility.yul\":1760:1887   */\ntag_25:\n    /* \"contracts/GU-NFT/GUCollections.sol\":204:1260  contract GUCollections is ERC1155Supply{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/GU-NFT/GUCollections.sol\":204:1260  contract GUCollections is ERC1155Supply{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xbd85b039\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xbd85b039\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xcb450772\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x4e1273f4\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4f558e79\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x156e29f6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4b8c9c2d\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":15454:15479   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":15442:15444   */\n      0x20\n        /* \"#utility.yul\":15427:15445   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":9779:9793   */\n      swap1\n      iszero\n        /* \"#utility.yul\":9772:9794   */\n      iszero\n        /* \"#utility.yul\":9754:9795   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9742:9744   */\n      0x20\n        /* \"#utility.yul\":9727:9745   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      tag_22\n        /* \"#utility.yul\":9614:9801   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1925:2028  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n        /* \"contracts/GU-NFT/GUCollections.sol\":1101:1255  function mint(address to, uint256 id, uint256 amount) public onlyTraders returns (bool) {\r... */\n    tag_6:\n      tag_24\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4045:4475  function safeBatchTransferFrom(... */\n    tag_7:\n      tag_41\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"contracts/GU-NFT/GUCollections.sol\":290:314  address public adminSafe */\n    tag_8:\n      sload(0x05)\n      tag_45\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_45:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7438:7470   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":7420:7471   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7408:7410   */\n      0x20\n        /* \"#utility.yul\":7393:7411   */\n      add\n        /* \"contracts/GU-NFT/GUCollections.sol\":290:314  address public adminSafe */\n      tag_22\n        /* \"#utility.yul\":7274:7477   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2555:3063  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_9:\n      tag_49\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":886:1006  function exists(uint256 id) public view virtual returns (bool) {... */\n    tag_10:\n      tag_24\n      tag_56\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":943:947  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":770:786  _totalSupply[id] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":770:782  _totalSupply */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":770:786  _totalSupply[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      iszero\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":886:1006  function exists(uint256 id) public view virtual returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3131:3284  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_11:\n      tag_41\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":682:793  function totalSupply(uint256 id) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_18\n      tag_64\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":744:751  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":770:786  _totalSupply[id] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":770:782  _totalSupply */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":770:786  _totalSupply[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":682:793  function totalSupply(uint256 id) public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/GU-NFT/GUCollections.sol\":547:798  function changeAdminSafe(address safe) public onlyAdminSafe returns (bool)\r... */\n    tag_13:\n      tag_24\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_14:\n      tag_24\n      tag_73\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_73:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3500  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3450:3454  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3500  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3491  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3500  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3510  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3584:3973  function safeTransferFrom(... */\n    tag_15:\n      tag_41\n      tag_78\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2256:2263  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2283:2304  account != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2275:2352  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_82\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11062:11064   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2275:2352  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11044:11065   */\n      mstore\n        /* \"#utility.yul\":11101:11103   */\n      0x2b\n        /* \"#utility.yul\":11081:11099   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11074:11104   */\n      mstore\n        /* \"#utility.yul\":11140:11174   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":11120:11138   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11113:11175   */\n      mstore\n      shl(0xa8, 0x65726f2061646472657373)\n        /* \"#utility.yul\":11191:11209   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11184:11225   */\n      mstore\n        /* \"#utility.yul\":11242:11261   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2275:2352  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_82:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2369:2378  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2369:2382  _balances[id] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2369:2391  _balances[id][account] */\n      swap5\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1323:1327  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1399  interfaceId == type(IERC1155).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x6cdb3d13)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1467  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_86\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1415:1467  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      dup3\n      and\n      shl(0xe2, 0x03a24d07)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1467  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1519  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_88\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1483:1519  super.supportsInterface(interfaceId) */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1339:1519  return... */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1925:2028  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1985:1998  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2017:2021  _uri */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2010:2021  return _uri */\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_92\n      jump\t// in\n    tag_93:\n      dup1\n      iszero\n      tag_94\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_95\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_94)\n    tag_95:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_96:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_96\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_94:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1925:2028  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/GU-NFT/GUCollections.sol\":1101:1255  function mint(address to, uint256 id, uint256 amount) public onlyTraders returns (bool) {\r... */\n    tag_39:\n        /* \"contracts/GU-NFT/GUCollections.sol\":912:922  msg.sender */\n      caller\n        /* \"contracts/GU-NFT/GUCollections.sol\":1183:1187  bool */\n      0x00\n        /* \"contracts/GU-NFT/GUCollections.sol\":904:923  traders[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/GU-NFT/GUCollections.sol\":904:911  traders */\n      0x04\n        /* \"contracts/GU-NFT/GUCollections.sol\":904:923  traders[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/GU-NFT/GUCollections.sol\":896:952  require(traders[msg.sender], 'You are not whitelisted.') */\n      tag_98\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13120:13122   */\n      0x20\n        /* \"contracts/GU-NFT/GUCollections.sol\":896:952  require(traders[msg.sender], 'You are not whitelisted.') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13102:13123   */\n      mstore\n        /* \"#utility.yul\":13159:13161   */\n      0x18\n        /* \"#utility.yul\":13139:13157   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13132:13162   */\n      mstore\n      shl(0x41, 0x2cb7ba9030b932903737ba103bb434ba32b634b9ba32b217)\n        /* \"#utility.yul\":13178:13196   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13171:13225   */\n      mstore\n        /* \"#utility.yul\":13242:13260   */\n      0x64\n      add\n        /* \"contracts/GU-NFT/GUCollections.sol\":896:952  require(traders[msg.sender], 'You are not whitelisted.') */\n      tag_83\n        /* \"#utility.yul\":12918:13266   */\n      jump\n        /* \"contracts/GU-NFT/GUCollections.sol\":896:952  require(traders[msg.sender], 'You are not whitelisted.') */\n    tag_98:\n        /* \"contracts/GU-NFT/GUCollections.sol\":1200:1225  _mint(to, id, amount, \"\") */\n      tag_102\n        /* \"contracts/GU-NFT/GUCollections.sol\":1206:1208  to */\n      dup5\n        /* \"contracts/GU-NFT/GUCollections.sol\":1210:1212  id */\n      dup5\n        /* \"contracts/GU-NFT/GUCollections.sol\":1214:1220  amount */\n      dup5\n        /* \"contracts/GU-NFT/GUCollections.sol\":1200:1225  _mint(to, id, amount, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/GU-NFT/GUCollections.sol\":1200:1205  _mint */\n      tag_103\n        /* \"contracts/GU-NFT/GUCollections.sol\":1200:1225  _mint(to, id, amount, \"\") */\n      jump\t// in\n    tag_102:\n      pop\n        /* \"contracts/GU-NFT/GUCollections.sol\":1243:1247  true */\n      0x01\n        /* \"contracts/GU-NFT/GUCollections.sol\":1101:1255  function mint(address to, uint256 id, uint256 amount) public onlyTraders returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4045:4475  function safeBatchTransferFrom(... */\n    tag_44:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4290  from == _msgSender() */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4290  from == _msgSender() */\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4330  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_108\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4294:4330  isApprovedForAll(from, _msgSender()) */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4311:4315  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_73\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4294:4330  isApprovedForAll(from, _msgSender()) */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4249:4406  require(... */\n      tag_110\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12290:12292   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4249:4406  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12272:12293   */\n      mstore\n        /* \"#utility.yul\":12329:12331   */\n      0x32\n        /* \"#utility.yul\":12309:12327   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12302:12332   */\n      mstore\n        /* \"#utility.yul\":12368:12402   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":12348:12366   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12341:12403   */\n      mstore\n      shl(0x72, 0x1bdddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":12419:12437   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12412:12460   */\n      mstore\n        /* \"#utility.yul\":12477:12496   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4249:4406  require(... */\n      tag_83\n        /* \"#utility.yul\":12088:12502   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4249:4406  require(... */\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4416:4468  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4439:4443  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4445:4447  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4449:4452  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4454:4461  amounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4463:4467  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4416:4438  _safeBatchTransferFrom */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4416:4468  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4045:4475  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2555:3063  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2706:2722  uint256[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2765:2768  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2765:2775  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2746:2754  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2746:2761  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2746:2775  accounts.length == ids.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2738:2821  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13883:13885   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2738:2821  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13865:13886   */\n      mstore\n        /* \"#utility.yul\":13922:13924   */\n      0x29\n        /* \"#utility.yul\":13902:13920   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13895:13925   */\n      mstore\n        /* \"#utility.yul\":13961:13995   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":13941:13959   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13934:13996   */\n      mstore\n      shl(0xbb, 0x040dad2e6dac2e8c6d)\n        /* \"#utility.yul\":14012:14030   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14005:14044   */\n      mstore\n        /* \"#utility.yul\":14061:14080   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2738:2821  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_83\n        /* \"#utility.yul\":13681:14086   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2738:2821  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2832:2862  uint256[] memory batchBalances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2879:2887  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2879:2894  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2865:2895  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_120\n      jumpi\n      tag_120\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_122\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_122:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2832:2895  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2911:2920  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2906:3026  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2930:2938  accounts */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2930:2945  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2926:2927  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2926:2945  i < accounts.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2906:3026  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_124\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2985:3015  balanceOf(accounts[i], ids[i]) */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2995:3003  accounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3004:3005  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2995:3006  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_128\n      jumpi\n      tag_128\n      tag_129\n      jump\t// in\n    tag_128:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3008:3011  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3012:3013  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3008:3014  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_131\n      jumpi\n      tag_131\n      tag_129\n      jump\t// in\n    tag_131:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2985:2994  balanceOf */\n      tag_21\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2985:3015  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2966:2979  batchBalances */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2980:2981  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2966:2982  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_133\n      jumpi\n      tag_133\n      tag_129\n      jump\t// in\n    tag_133:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2966:3015  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2947:2950  ++i */\n      tag_134\n      dup2\n      tag_135\n      jump\t// in\n    tag_134:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2906:3026  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_123)\n    tag_124:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3043:3056  batchBalances */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2555:3063  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3131:3284  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3225:3277  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_139\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3258:3266  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3268:3276  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3225:3243  _setApprovalForAll */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3225:3277  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3131:3284  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GU-NFT/GUCollections.sol\":547:798  function changeAdminSafe(address safe) public onlyAdminSafe returns (bool)\r... */\n    tag_70:\n        /* \"contracts/GU-NFT/GUCollections.sol\":616:620  bool */\n      0x00\n        /* \"contracts/GU-NFT/GUCollections.sol\":1022:1032  msg.sender */\n      caller\n        /* \"contracts/GU-NFT/GUCollections.sol\":1022:1044  msg.sender==address(0) */\n      iszero\n        /* \"contracts/GU-NFT/GUCollections.sol\":1014:1073  require(msg.sender==address(0), 'You are not whitelisted.') */\n      tag_144\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13120:13122   */\n      0x20\n        /* \"contracts/GU-NFT/GUCollections.sol\":1014:1073  require(msg.sender==address(0), 'You are not whitelisted.') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13102:13123   */\n      mstore\n        /* \"#utility.yul\":13159:13161   */\n      0x18\n        /* \"#utility.yul\":13139:13157   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13132:13162   */\n      mstore\n      shl(0x41, 0x2cb7ba9030b932903737ba103bb434ba32b634b9ba32b217)\n        /* \"#utility.yul\":13178:13196   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13171:13225   */\n      mstore\n        /* \"#utility.yul\":13242:13260   */\n      0x64\n      add\n        /* \"contracts/GU-NFT/GUCollections.sol\":1014:1073  require(msg.sender==address(0), 'You are not whitelisted.') */\n      tag_83\n        /* \"#utility.yul\":12918:13266   */\n      jump\n        /* \"contracts/GU-NFT/GUCollections.sol\":1014:1073  require(msg.sender==address(0), 'You are not whitelisted.') */\n    tag_144:\n        /* \"contracts/GU-NFT/GUCollections.sol\":646:655  adminSafe */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GU-NFT/GUCollections.sol\":646:661  adminSafe!=safe */\n      dup4\n      dup2\n      and\n        /* \"contracts/GU-NFT/GUCollections.sol\":646:655  adminSafe */\n      swap2\n      and\n        /* \"contracts/GU-NFT/GUCollections.sol\":646:661  adminSafe!=safe */\n      eq\n      iszero\n        /* \"contracts/GU-NFT/GUCollections.sol\":638:703  require(adminSafe!=safe, \"Provided address already safe address\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15104:15106   */\n      0x20\n        /* \"contracts/GU-NFT/GUCollections.sol\":638:703  require(adminSafe!=safe, \"Provided address already safe address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15086:15107   */\n      mstore\n        /* \"#utility.yul\":15143:15145   */\n      0x25\n        /* \"#utility.yul\":15123:15141   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15116:15146   */\n      mstore\n        /* \"#utility.yul\":15182:15216   */\n      0x50726f7669646564206164647265737320616c72656164792073616665206164\n        /* \"#utility.yul\":15162:15180   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15155:15217   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":15233:15251   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15226:15261   */\n      mstore\n        /* \"#utility.yul\":15278:15297   */\n      0x84\n      add\n        /* \"contracts/GU-NFT/GUCollections.sol\":638:703  require(adminSafe!=safe, \"Provided address already safe address\") */\n      tag_83\n        /* \"#utility.yul\":14902:15303   */\n      jump\n        /* \"contracts/GU-NFT/GUCollections.sol\":638:703  require(adminSafe!=safe, \"Provided address already safe address\") */\n    tag_147:\n        /* \"contracts/GU-NFT/GUCollections.sol\":714:723  adminSafe */\n      0x05\n        /* \"contracts/GU-NFT/GUCollections.sol\":714:730  adminSafe = safe */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/GU-NFT/GUCollections.sol\":746:768  AdminSafeChanged(safe) */\n      mload(0x40)\n      0xd4c1af98b758421a8d47b0bc04ecfa30233d5506955e8cde282417aa0d31d3b6\n      swap1\n      0x00\n      swap1\n      log2\n      pop\n        /* \"contracts/GU-NFT/GUCollections.sol\":786:790  true */\n      0x01\n        /* \"contracts/GU-NFT/GUCollections.sol\":1084:1085  _ */\n    tag_146:\n        /* \"contracts/GU-NFT/GUCollections.sol\":547:798  function changeAdminSafe(address safe) public onlyAdminSafe returns (bool)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3584:3973  function safeTransferFrom(... */\n    tag_80:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3784:3804  from == _msgSender() */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3784:3804  from == _msgSender() */\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3784:3844  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_154\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3808:3844  isApprovedForAll(from, _msgSender()) */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3825:3829  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_73\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3808:3844  isApprovedForAll(from, _msgSender()) */\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3763:3911  require(... */\n      tag_156\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11474:11476   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3763:3911  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11456:11477   */\n      mstore\n        /* \"#utility.yul\":11513:11515   */\n      0x29\n        /* \"#utility.yul\":11493:11511   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11486:11516   */\n      mstore\n        /* \"#utility.yul\":11552:11586   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":11532:11550   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11525:11587   */\n      mstore\n      shl(0xba, 0x08185c1c1c9bdd9959)\n        /* \"#utility.yul\":11603:11621   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11596:11635   */\n      mstore\n        /* \"#utility.yul\":11652:11671   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3763:3911  require(... */\n      tag_83\n        /* \"#utility.yul\":11272:11677   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3763:3911  require(... */\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3921:3966  _safeTransferFrom(from, to, id, amount, data) */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3939:3943  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3945:3947  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3949:3951  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3953:3959  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3961:3965  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3921:3938  _safeTransferFrom */\n      tag_160\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3921:3966  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8395:8948  function _mint(... */\n    tag_103:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8542:8558  to != address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8534:8596  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14702:14704   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8534:8596  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14684:14705   */\n      mstore\n        /* \"#utility.yul\":14741:14743   */\n      0x21\n        /* \"#utility.yul\":14721:14739   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14714:14744   */\n      mstore\n        /* \"#utility.yul\":14780:14814   */\n      0x455243313135353a206d696e7420746f20746865207a65726f20616464726573\n        /* \"#utility.yul\":14760:14778   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14753:14815   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":14831:14849   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14824:14855   */\n      mstore\n        /* \"#utility.yul\":14872:14891   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8534:8596  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_83\n        /* \"#utility.yul\":14500:14897   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8534:8596  require(to != address(0), \"ERC1155: mint to the zero address\") */\n    tag_163:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8649:8751  _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_167\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8607:8623  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8692:8694  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8696:8717  _asSingletonArray(id) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8714:8716  id */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8696:8713  _asSingletonArray */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8696:8717  _asSingletonArray(id) */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8719:8744  _asSingletonArray(amount) */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8737:8743  amount */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8719:8736  _asSingletonArray */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8719:8744  _asSingletonArray(amount) */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8746:8750  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8649:8669  _beforeTokenTransfer */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8649:8751  _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8762:8771  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8762:8775  _balances[id] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8762:8779  _balances[id][to] */\n      dup10\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8762:8789  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8783:8789  amount */\n      dup6\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8762:8771  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8762:8789  _balances[id][to] += amount */\n      tag_172\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8783:8789  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8762:8789  _balances[id][to] += amount */\n      tag_173\n      jump\t// in\n    tag_172:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8804:8856  TransferSingle(operator, address(0), to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":15664:15689   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":15720:15722   */\n      0x20\n        /* \"#utility.yul\":15705:15723   */\n      dup2\n      add\n        /* \"#utility.yul\":15698:15732   */\n      dup6\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8804:8856  TransferSingle(operator, address(0), to, id, amount) */\n      dup1\n      dup9\n      and\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8837:8838  0 */\n      0x00\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8804:8856  TransferSingle(operator, address(0), to, id, amount) */\n      swap2\n      dup6\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":15637:15655   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8804:8856  TransferSingle(operator, address(0), to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8867:8941  _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data) */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8898:8906  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8920:8922  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8924:8926  id */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8928:8934  amount */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8936:8940  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8867:8897  _doSafeTransferAcceptanceCheck */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8867:8941  _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6068:7113  function _safeBatchTransferFrom(... */\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6288:6295  amounts */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6288:6302  amounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6274:6277  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6274:6284  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6274:6302  ids.length == amounts.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6266:6347  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14293:14295   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6266:6347  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14275:14296   */\n      mstore\n        /* \"#utility.yul\":14332:14334   */\n      0x28\n        /* \"#utility.yul\":14312:14330   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14305:14335   */\n      mstore\n        /* \"#utility.yul\":14371:14405   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":14351:14369   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14344:14406   */\n      mstore\n      shl(0xc3, 0x0dad2e6dac2e8c6d)\n        /* \"#utility.yul\":14422:14440   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14415:14453   */\n      mstore\n        /* \"#utility.yul\":14470:14489   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6266:6347  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_83\n        /* \"#utility.yul\":14091:14495   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6266:6347  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n    tag_180:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6365:6381  to != address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6357:6423  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap1\n      tag_185\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6476:6536  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_187\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6507:6511  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6513:6515  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6517:6520  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6522:6529  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6531:6535  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6476:6496  _beforeTokenTransfer */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6476:6536  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6552:6561  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6547:6958  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6571:6574  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6571:6581  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6567:6568  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6567:6581  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6547:6958  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_189\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6602:6612  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6615:6618  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6619:6620  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6615:6621  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_192\n      jumpi\n      tag_192\n      tag_129\n      jump\t// in\n    tag_192:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6602:6621  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6635:6649  uint256 amount */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6652:6659  amounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6660:6661  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6652:6662  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_194\n      jumpi\n      tag_194\n      tag_129\n      jump\t// in\n    tag_194:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6677:6696  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6699:6712  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6699:6718  _balances[id][from] */\n      dup15\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6652:6662  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6740:6761  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6732:6808  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap1\n      tag_197\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6859  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6863  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6869  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6872:6892  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6892  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6937  _balances[id][to] */\n      swap1\n      dup12\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6947  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6872:6892  fromBalance - amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6859  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6947  _balances[id][to] += amount */\n      tag_198\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6872:6892  fromBalance - amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6947  _balances[id][to] += amount */\n      tag_173\n      jump\t// in\n    tag_198:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6588:6958  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6583:6586  ++i */\n      dup1\n      tag_199\n      swap1\n      tag_135\n      jump\t// in\n    tag_199:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6547:6958  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_188)\n    tag_189:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7003:7005  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6997:7001  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6987:6995  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7007:7010  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7012:7019  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_200\n      swap3\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7031:7106  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_202\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7067:7075  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7077:7081  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7083:7085  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7090  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7092:7099  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7101:7105  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7031:7066  _doSafeBatchTransferAcceptanceCheck */\n      tag_203\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7031:7106  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6256:7113  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6068:7113  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12074:12397  function _setApprovalForAll(... */\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12224:12232  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12215:12232  owner != operator */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12215:12220  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12215:12232  owner != operator */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12207:12278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_205\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13473:13475   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12207:12278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13455:13476   */\n      mstore\n        /* \"#utility.yul\":13512:13514   */\n      0x29\n        /* \"#utility.yul\":13492:13510   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13485:13515   */\n      mstore\n        /* \"#utility.yul\":13551:13585   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":13531:13549   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13524:13586   */\n      mstore\n      shl(0xb9, 0x103337b91039b2b633)\n        /* \"#utility.yul\":13602:13620   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13595:13634   */\n      mstore\n        /* \"#utility.yul\":13651:13670   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12207:12278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_83\n        /* \"#utility.yul\":13271:13676   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12207:12278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n    tag_205:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12313  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12306  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12313  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12323  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12334  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12349:12390  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":9754:9795   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12349:12390  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":9727:9745   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12349:12390  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12074:12397  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4925:5722  function _safeTransferFrom(... */\n    tag_160:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5106:5122  to != address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5098:5164  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap1\n      tag_185\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5217:5313  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_213\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5248:5252  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5254:5256  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5258:5279  _asSingletonArray(id) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5276:5278  id */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5258:5275  _asSingletonArray */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5258:5279  _asSingletonArray(id) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5217:5313  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5324:5343  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5346:5359  _balances[id] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5346:5365  _balances[id][from] */\n      dup11\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5383:5404  fromBalance >= amount */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5375:5451  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap1\n      tag_197\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5494  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5498  _balances[id] */\n      dup6\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5504  _balances[id][from] */\n      dup12\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5507:5527  fromBalance - amount */\n      dup8\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5527  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5564  _balances[id][to] */\n      swap1\n      dup9\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5574  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5507:5527  fromBalance - amount */\n      dup7\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5494  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5574  _balances[id][to] += amount */\n      tag_218\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5507:5527  fromBalance - amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5574  _balances[id][to] += amount */\n      tag_173\n      jump\t// in\n    tag_218:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5636  TransferSingle(operator, from, to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":15664:15689   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":15720:15722   */\n      0x20\n        /* \"#utility.yul\":15705:15723   */\n      dup2\n      add\n        /* \"#utility.yul\":15698:15732   */\n      dup7\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5636  TransferSingle(operator, from, to, id, amount) */\n      dup1\n      dup10\n      and\n      swap3\n      dup11\n      dup3\n      and\n      swap3\n      swap2\n      dup7\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":15637:15655   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5636  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5647:5715  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_220\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5678:5686  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5688:5692  from */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5694:5696  to */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5698:5700  id */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5702:5708  amount */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5710:5714  data */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5647:5677  _doSafeTransferAcceptanceCheck */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5647:5715  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5088:5722  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4925:5722  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15080:15273  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15199:15215  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15213:15214  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15199:15215  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15146:15162  uint256[] memory */\n      0x60\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15174:15196  uint256[] memory array */\n      0x00\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15199:15215  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15174:15215  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15236:15243  element */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15230  array */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15231:15232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15233  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_226\n      jumpi\n      tag_226\n      tag_129\n      jump\t// in\n    tag_226:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15243  array[0] = element */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15261:15266  array */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15080:15273  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1076:1710  function _beforeTokenTransfer(... */\n    tag_171:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1388:1406  from == address(0) */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1384:1540  if (from == address(0)) {... */\n      tag_230\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1427:1436  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1422:1530  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1446:1449  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1446:1456  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1442:1443  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1442:1456  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1422:1530  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_232\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1505:1512  amounts */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1513:1514  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1505:1515  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_235\n      jumpi\n      tag_235\n      tag_129\n      jump\t// in\n    tag_235:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1481:1493  _totalSupply */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1481:1501  _totalSupply[ids[i]] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1494:1497  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1498:1499  i */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1494:1500  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_237\n      jumpi\n      tag_237\n      tag_129\n      jump\t// in\n    tag_237:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1481:1501  _totalSupply[ids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1481:1515  _totalSupply[ids[i]] += amounts[i] */\n      dup3\n      dup3\n      sload\n      tag_238\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_238:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1458:1461  ++i */\n      tag_239\n      swap1\n      pop\n      dup2\n      tag_135\n      jump\t// in\n    tag_239:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1422:1530  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_231)\n    tag_232:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1384:1540  if (from == address(0)) {... */\n    tag_230:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1554:1570  to == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1550:1704  if (to == address(0)) {... */\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1591:1600  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1586:1694  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1610:1613  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1610:1620  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1606:1607  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1606:1620  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1586:1694  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1669:1676  amounts */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1677:1678  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1669:1679  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_245\n      jumpi\n      tag_245\n      tag_129\n      jump\t// in\n    tag_245:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1645:1657  _totalSupply */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1645:1665  _totalSupply[ids[i]] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1658:1661  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1662:1663  i */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1658:1664  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_247\n      jumpi\n      tag_247\n      tag_129\n      jump\t// in\n    tag_247:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1645:1665  _totalSupply[ids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1645:1679  _totalSupply[ids[i]] -= amounts[i] */\n      dup3\n      dup3\n      sload\n      tag_248\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1622:1625  ++i */\n      tag_250\n      swap1\n      pop\n      dup2\n      tag_135\n      jump\t// in\n    tag_250:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1586:1694  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_241)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13551:14276  function _doSafeTransferAcceptanceCheck(... */\n    tag_177:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13758:13771  to.isContract */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13754:14270  if (to.isContract()) {... */\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13865  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13831  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13865  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      tag_255\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13832:13840  operator */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13842:13846  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13848:13850  id */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13852:13858  amount */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13860:13864  data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13865  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      0x04\n      add\n      tag_256\n      jump\t// in\n    tag_255:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_257\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_257:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_258\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_259\n      swap2\n      dup2\n      add\n      swap1\n      tag_260\n      jump\t// in\n    tag_259:\n      0x01\n    tag_258:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13789:14260  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_261\n      jumpi\n      tag_265\n      tag_266\n      jump\t// in\n    tag_265:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_264\n      jumpi\n      pop\n      tag_267\n      tag_268\n      jump\t// in\n    tag_267:\n      dup1\n      tag_269\n      jumpi\n      pop\n      jump(tag_263)\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14136:14142  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14129:14143  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13789:14260  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_264:\n      pop\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14183:14245  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10232:10234   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14183:14245  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10214:10235   */\n      mstore\n        /* \"#utility.yul\":10271:10273   */\n      0x34\n        /* \"#utility.yul\":10251:10269   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10244:10274   */\n      mstore\n        /* \"#utility.yul\":10310:10344   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":10290:10308   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10283:10345   */\n      mstore\n      shl(0x61, 0x2932b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":10361:10379   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10354:10404   */\n      mstore\n        /* \"#utility.yul\":10421:10440   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14183:14245  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      tag_83\n        /* \"#utility.yul\":10030:10446   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13789:14260  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_261:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13914:13969  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13910:14062  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13993:14043  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap1\n      tag_276\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14282:15074  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_203:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14514:14527  to.isContract */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14510:15068  if (to.isContract()) {... */\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14628  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14592  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14628  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      tag_280\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14593:14601  operator */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14603:14607  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14609:14612  ids */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14614:14621  amounts */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14623:14627  data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14628  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      0x04\n      add\n      tag_281\n      jump\t// in\n    tag_280:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_282\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_282:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_283\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_284\n      swap2\n      dup2\n      add\n      swap1\n      tag_260\n      jump\t// in\n    tag_284:\n      0x01\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14545:15058  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_285\n      jumpi\n      tag_265\n      tag_266\n      jump\t// in\n    tag_285:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14707:14767  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14703:14860  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14791:14841  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap1\n      tag_276\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_300:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_146\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":192:927   */\n    tag_303:\n        /* \"#utility.yul\":246:251   */\n      0x00\n        /* \"#utility.yul\":299:302   */\n      dup3\n        /* \"#utility.yul\":292:296   */\n      0x1f\n        /* \"#utility.yul\":284:290   */\n      dup4\n        /* \"#utility.yul\":280:297   */\n      add\n        /* \"#utility.yul\":276:303   */\n      slt\n        /* \"#utility.yul\":266:321   */\n      tag_305\n      jumpi\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":314:315   */\n      dup1\n        /* \"#utility.yul\":307:319   */\n      revert\n        /* \"#utility.yul\":266:321   */\n    tag_305:\n        /* \"#utility.yul\":353:359   */\n      dup2\n        /* \"#utility.yul\":340:360   */\n      calldataload\n        /* \"#utility.yul\":379:383   */\n      0x20\n        /* \"#utility.yul\":402:445   */\n      tag_306\n        /* \"#utility.yul\":442:444   */\n      dup3\n        /* \"#utility.yul\":402:445   */\n      tag_307\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":474:476   */\n      0x40\n        /* \"#utility.yul\":468:477   */\n      mload\n        /* \"#utility.yul\":486:517   */\n      tag_308\n        /* \"#utility.yul\":514:516   */\n      dup3\n        /* \"#utility.yul\":506:512   */\n      dup3\n        /* \"#utility.yul\":486:517   */\n      tag_309\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":552:570   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":586:601   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":621:636   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":671:672   */\n      0x05\n        /* \"#utility.yul\":667:677   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":655:678   */\n      dup8\n      add\n        /* \"#utility.yul\":651:683   */\n      dup5\n      add\n        /* \"#utility.yul\":648:689   */\n      dup9\n      lt\n        /* \"#utility.yul\":645:706   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":702:703   */\n      0x00\n        /* \"#utility.yul\":699:700   */\n      dup1\n        /* \"#utility.yul\":692:704   */\n      revert\n        /* \"#utility.yul\":645:706   */\n    tag_310:\n        /* \"#utility.yul\":724:725   */\n      0x00\n        /* \"#utility.yul\":734:897   */\n    tag_311:\n        /* \"#utility.yul\":748:750   */\n      dup6\n        /* \"#utility.yul\":745:746   */\n      dup2\n        /* \"#utility.yul\":742:751   */\n      lt\n        /* \"#utility.yul\":734:897   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":805:822   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":793:823   */\n      dup5\n      mstore\n        /* \"#utility.yul\":843:855   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":875:887   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":766:767   */\n      0x01\n        /* \"#utility.yul\":759:768   */\n      add\n        /* \"#utility.yul\":734:897   */\n      jump(tag_311)\n    tag_313:\n      pop\n        /* \"#utility.yul\":915:921   */\n      swap1\n      swap8\n        /* \"#utility.yul\":192:927   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":932:1487   */\n    tag_314:\n        /* \"#utility.yul\":974:979   */\n      0x00\n        /* \"#utility.yul\":1027:1030   */\n      dup3\n        /* \"#utility.yul\":1020:1024   */\n      0x1f\n        /* \"#utility.yul\":1012:1018   */\n      dup4\n        /* \"#utility.yul\":1008:1025   */\n      add\n        /* \"#utility.yul\":1004:1031   */\n      slt\n        /* \"#utility.yul\":994:1049   */\n      tag_316\n      jumpi\n        /* \"#utility.yul\":1045:1046   */\n      0x00\n        /* \"#utility.yul\":1042:1043   */\n      dup1\n        /* \"#utility.yul\":1035:1047   */\n      revert\n        /* \"#utility.yul\":994:1049   */\n    tag_316:\n        /* \"#utility.yul\":1081:1087   */\n      dup2\n        /* \"#utility.yul\":1068:1088   */\n      calldataload\n        /* \"#utility.yul\":1107:1125   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1103:1105   */\n      dup2\n        /* \"#utility.yul\":1100:1126   */\n      gt\n        /* \"#utility.yul\":1097:1149   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":1129:1147   */\n      tag_318\n      tag_121\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":1178:1180   */\n      0x40\n        /* \"#utility.yul\":1172:1181   */\n      mload\n        /* \"#utility.yul\":1190:1257   */\n      tag_319\n        /* \"#utility.yul\":1245:1247   */\n      0x1f\n        /* \"#utility.yul\":1226:1239   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1222:1249   */\n      and\n        /* \"#utility.yul\":1251:1255   */\n      0x20\n        /* \"#utility.yul\":1218:1256   */\n      add\n        /* \"#utility.yul\":1172:1181   */\n      dup3\n        /* \"#utility.yul\":1190:1257   */\n      tag_309\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":1281:1283   */\n      dup2\n        /* \"#utility.yul\":1273:1279   */\n      dup2\n        /* \"#utility.yul\":1266:1284   */\n      mstore\n        /* \"#utility.yul\":1327:1330   */\n      dup5\n        /* \"#utility.yul\":1320:1324   */\n      0x20\n        /* \"#utility.yul\":1315:1317   */\n      dup4\n        /* \"#utility.yul\":1307:1313   */\n      dup7\n        /* \"#utility.yul\":1303:1318   */\n      add\n        /* \"#utility.yul\":1299:1325   */\n      add\n        /* \"#utility.yul\":1296:1331   */\n      gt\n        /* \"#utility.yul\":1293:1348   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":1344:1345   */\n      0x00\n        /* \"#utility.yul\":1341:1342   */\n      dup1\n        /* \"#utility.yul\":1334:1346   */\n      revert\n        /* \"#utility.yul\":1293:1348   */\n    tag_320:\n        /* \"#utility.yul\":1408:1410   */\n      dup2\n        /* \"#utility.yul\":1401:1405   */\n      0x20\n        /* \"#utility.yul\":1393:1399   */\n      dup6\n        /* \"#utility.yul\":1389:1406   */\n      add\n        /* \"#utility.yul\":1382:1386   */\n      0x20\n        /* \"#utility.yul\":1374:1380   */\n      dup4\n        /* \"#utility.yul\":1370:1387   */\n      add\n        /* \"#utility.yul\":1357:1411   */\n      calldatacopy\n        /* \"#utility.yul\":1455:1456   */\n      0x00\n        /* \"#utility.yul\":1431:1446   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":1448:1452   */\n      0x20\n        /* \"#utility.yul\":1427:1453   */\n      add\n        /* \"#utility.yul\":1420:1457   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1435:1441   */\n      swap4\n        /* \"#utility.yul\":932:1487   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1492:1678   */\n    tag_69:\n        /* \"#utility.yul\":1551:1557   */\n      0x00\n        /* \"#utility.yul\":1604:1606   */\n      0x20\n        /* \"#utility.yul\":1592:1601   */\n      dup3\n        /* \"#utility.yul\":1583:1590   */\n      dup5\n        /* \"#utility.yul\":1579:1602   */\n      sub\n        /* \"#utility.yul\":1575:1607   */\n      slt\n        /* \"#utility.yul\":1572:1624   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":1620:1621   */\n      0x00\n        /* \"#utility.yul\":1617:1618   */\n      dup1\n        /* \"#utility.yul\":1610:1622   */\n      revert\n        /* \"#utility.yul\":1572:1624   */\n    tag_322:\n        /* \"#utility.yul\":1643:1672   */\n      tag_323\n        /* \"#utility.yul\":1662:1671   */\n      dup3\n        /* \"#utility.yul\":1643:1672   */\n      tag_300\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":1633:1672   */\n      swap4\n        /* \"#utility.yul\":1492:1678   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1683:1943   */\n    tag_74:\n        /* \"#utility.yul\":1751:1757   */\n      0x00\n        /* \"#utility.yul\":1759:1765   */\n      dup1\n        /* \"#utility.yul\":1812:1814   */\n      0x40\n        /* \"#utility.yul\":1800:1809   */\n      dup4\n        /* \"#utility.yul\":1791:1798   */\n      dup6\n        /* \"#utility.yul\":1787:1810   */\n      sub\n        /* \"#utility.yul\":1783:1815   */\n      slt\n        /* \"#utility.yul\":1780:1832   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":1828:1829   */\n      0x00\n        /* \"#utility.yul\":1825:1826   */\n      dup1\n        /* \"#utility.yul\":1818:1830   */\n      revert\n        /* \"#utility.yul\":1780:1832   */\n    tag_325:\n        /* \"#utility.yul\":1851:1880   */\n      tag_326\n        /* \"#utility.yul\":1870:1879   */\n      dup4\n        /* \"#utility.yul\":1851:1880   */\n      tag_300\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":1841:1880   */\n      swap2\n      pop\n        /* \"#utility.yul\":1899:1937   */\n      tag_327\n        /* \"#utility.yul\":1933:1935   */\n      0x20\n        /* \"#utility.yul\":1922:1931   */\n      dup5\n        /* \"#utility.yul\":1918:1936   */\n      add\n        /* \"#utility.yul\":1899:1937   */\n      tag_300\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":1889:1937   */\n      swap1\n      pop\n        /* \"#utility.yul\":1683:1943   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1948:2891   */\n    tag_43:\n        /* \"#utility.yul\":2102:2108   */\n      0x00\n        /* \"#utility.yul\":2110:2116   */\n      dup1\n        /* \"#utility.yul\":2118:2124   */\n      0x00\n        /* \"#utility.yul\":2126:2132   */\n      dup1\n        /* \"#utility.yul\":2134:2140   */\n      0x00\n        /* \"#utility.yul\":2187:2190   */\n      0xa0\n        /* \"#utility.yul\":2175:2184   */\n      dup7\n        /* \"#utility.yul\":2166:2173   */\n      dup9\n        /* \"#utility.yul\":2162:2185   */\n      sub\n        /* \"#utility.yul\":2158:2191   */\n      slt\n        /* \"#utility.yul\":2155:2208   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":2204:2205   */\n      0x00\n        /* \"#utility.yul\":2201:2202   */\n      dup1\n        /* \"#utility.yul\":2194:2206   */\n      revert\n        /* \"#utility.yul\":2155:2208   */\n    tag_329:\n        /* \"#utility.yul\":2227:2256   */\n      tag_330\n        /* \"#utility.yul\":2246:2255   */\n      dup7\n        /* \"#utility.yul\":2227:2256   */\n      tag_300\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":2217:2256   */\n      swap5\n      pop\n        /* \"#utility.yul\":2275:2313   */\n      tag_331\n        /* \"#utility.yul\":2309:2311   */\n      0x20\n        /* \"#utility.yul\":2298:2307   */\n      dup8\n        /* \"#utility.yul\":2294:2312   */\n      add\n        /* \"#utility.yul\":2275:2313   */\n      tag_300\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":2265:2313   */\n      swap4\n      pop\n        /* \"#utility.yul\":2364:2366   */\n      0x40\n        /* \"#utility.yul\":2353:2362   */\n      dup7\n        /* \"#utility.yul\":2349:2367   */\n      add\n        /* \"#utility.yul\":2336:2368   */\n      calldataload\n        /* \"#utility.yul\":2387:2405   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2428:2430   */\n      dup1\n        /* \"#utility.yul\":2420:2426   */\n      dup3\n        /* \"#utility.yul\":2417:2431   */\n      gt\n        /* \"#utility.yul\":2414:2448   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":2444:2445   */\n      0x00\n        /* \"#utility.yul\":2441:2442   */\n      dup1\n        /* \"#utility.yul\":2434:2446   */\n      revert\n        /* \"#utility.yul\":2414:2448   */\n    tag_332:\n        /* \"#utility.yul\":2467:2528   */\n      tag_333\n        /* \"#utility.yul\":2520:2527   */\n      dup10\n        /* \"#utility.yul\":2511:2517   */\n      dup4\n        /* \"#utility.yul\":2500:2509   */\n      dup11\n        /* \"#utility.yul\":2496:2518   */\n      add\n        /* \"#utility.yul\":2467:2528   */\n      tag_303\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":2457:2528   */\n      swap5\n      pop\n        /* \"#utility.yul\":2581:2583   */\n      0x60\n        /* \"#utility.yul\":2570:2579   */\n      dup9\n        /* \"#utility.yul\":2566:2584   */\n      add\n        /* \"#utility.yul\":2553:2585   */\n      calldataload\n        /* \"#utility.yul\":2537:2585   */\n      swap2\n      pop\n        /* \"#utility.yul\":2610:2612   */\n      dup1\n        /* \"#utility.yul\":2600:2608   */\n      dup3\n        /* \"#utility.yul\":2597:2613   */\n      gt\n        /* \"#utility.yul\":2594:2630   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":2626:2627   */\n      0x00\n        /* \"#utility.yul\":2623:2624   */\n      dup1\n        /* \"#utility.yul\":2616:2628   */\n      revert\n        /* \"#utility.yul\":2594:2630   */\n    tag_334:\n        /* \"#utility.yul\":2649:2712   */\n      tag_335\n        /* \"#utility.yul\":2704:2711   */\n      dup10\n        /* \"#utility.yul\":2693:2701   */\n      dup4\n        /* \"#utility.yul\":2682:2691   */\n      dup11\n        /* \"#utility.yul\":2678:2702   */\n      add\n        /* \"#utility.yul\":2649:2712   */\n      tag_303\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":2639:2712   */\n      swap4\n      pop\n        /* \"#utility.yul\":2765:2768   */\n      0x80\n        /* \"#utility.yul\":2754:2763   */\n      dup9\n        /* \"#utility.yul\":2750:2769   */\n      add\n        /* \"#utility.yul\":2737:2770   */\n      calldataload\n        /* \"#utility.yul\":2721:2770   */\n      swap2\n      pop\n        /* \"#utility.yul\":2795:2797   */\n      dup1\n        /* \"#utility.yul\":2785:2793   */\n      dup3\n        /* \"#utility.yul\":2782:2798   */\n      gt\n        /* \"#utility.yul\":2779:2815   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":2811:2812   */\n      0x00\n        /* \"#utility.yul\":2808:2809   */\n      dup1\n        /* \"#utility.yul\":2801:2813   */\n      revert\n        /* \"#utility.yul\":2779:2815   */\n    tag_336:\n      pop\n        /* \"#utility.yul\":2834:2885   */\n      tag_337\n        /* \"#utility.yul\":2877:2884   */\n      dup9\n        /* \"#utility.yul\":2866:2874   */\n      dup3\n        /* \"#utility.yul\":2855:2864   */\n      dup10\n        /* \"#utility.yul\":2851:2875   */\n      add\n        /* \"#utility.yul\":2834:2885   */\n      tag_314\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":2824:2885   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1948:2891   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2896:3502   */\n    tag_79:\n        /* \"#utility.yul\":3000:3006   */\n      0x00\n        /* \"#utility.yul\":3008:3014   */\n      dup1\n        /* \"#utility.yul\":3016:3022   */\n      0x00\n        /* \"#utility.yul\":3024:3030   */\n      dup1\n        /* \"#utility.yul\":3032:3038   */\n      0x00\n        /* \"#utility.yul\":3085:3088   */\n      0xa0\n        /* \"#utility.yul\":3073:3082   */\n      dup7\n        /* \"#utility.yul\":3064:3071   */\n      dup9\n        /* \"#utility.yul\":3060:3083   */\n      sub\n        /* \"#utility.yul\":3056:3089   */\n      slt\n        /* \"#utility.yul\":3053:3106   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":3102:3103   */\n      0x00\n        /* \"#utility.yul\":3099:3100   */\n      dup1\n        /* \"#utility.yul\":3092:3104   */\n      revert\n        /* \"#utility.yul\":3053:3106   */\n    tag_339:\n        /* \"#utility.yul\":3125:3154   */\n      tag_340\n        /* \"#utility.yul\":3144:3153   */\n      dup7\n        /* \"#utility.yul\":3125:3154   */\n      tag_300\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":3115:3154   */\n      swap5\n      pop\n        /* \"#utility.yul\":3173:3211   */\n      tag_341\n        /* \"#utility.yul\":3207:3209   */\n      0x20\n        /* \"#utility.yul\":3196:3205   */\n      dup8\n        /* \"#utility.yul\":3192:3210   */\n      add\n        /* \"#utility.yul\":3173:3211   */\n      tag_300\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":3163:3211   */\n      swap4\n      pop\n        /* \"#utility.yul\":3258:3260   */\n      0x40\n        /* \"#utility.yul\":3247:3256   */\n      dup7\n        /* \"#utility.yul\":3243:3261   */\n      add\n        /* \"#utility.yul\":3230:3262   */\n      calldataload\n        /* \"#utility.yul\":3220:3262   */\n      swap3\n      pop\n        /* \"#utility.yul\":3309:3311   */\n      0x60\n        /* \"#utility.yul\":3298:3307   */\n      dup7\n        /* \"#utility.yul\":3294:3312   */\n      add\n        /* \"#utility.yul\":3281:3313   */\n      calldataload\n        /* \"#utility.yul\":3271:3313   */\n      swap2\n      pop\n        /* \"#utility.yul\":3364:3367   */\n      0x80\n        /* \"#utility.yul\":3353:3362   */\n      dup7\n        /* \"#utility.yul\":3349:3368   */\n      add\n        /* \"#utility.yul\":3336:3369   */\n      calldataload\n        /* \"#utility.yul\":3392:3410   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3384:3390   */\n      dup2\n        /* \"#utility.yul\":3381:3411   */\n      gt\n        /* \"#utility.yul\":3378:3428   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":3424:3425   */\n      0x00\n        /* \"#utility.yul\":3421:3422   */\n      dup1\n        /* \"#utility.yul\":3414:3426   */\n      revert\n        /* \"#utility.yul\":3378:3428   */\n    tag_342:\n        /* \"#utility.yul\":3447:3496   */\n      tag_337\n        /* \"#utility.yul\":3488:3495   */\n      dup9\n        /* \"#utility.yul\":3479:3485   */\n      dup3\n        /* \"#utility.yul\":3468:3477   */\n      dup10\n        /* \"#utility.yul\":3464:3486   */\n      add\n        /* \"#utility.yul\":3447:3496   */\n      tag_314\n      jump\t// in\n        /* \"#utility.yul\":3507:3854   */\n    tag_61:\n        /* \"#utility.yul\":3572:3578   */\n      0x00\n        /* \"#utility.yul\":3580:3586   */\n      dup1\n        /* \"#utility.yul\":3633:3635   */\n      0x40\n        /* \"#utility.yul\":3621:3630   */\n      dup4\n        /* \"#utility.yul\":3612:3619   */\n      dup6\n        /* \"#utility.yul\":3608:3631   */\n      sub\n        /* \"#utility.yul\":3604:3636   */\n      slt\n        /* \"#utility.yul\":3601:3653   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":3649:3650   */\n      0x00\n        /* \"#utility.yul\":3646:3647   */\n      dup1\n        /* \"#utility.yul\":3639:3651   */\n      revert\n        /* \"#utility.yul\":3601:3653   */\n    tag_345:\n        /* \"#utility.yul\":3672:3701   */\n      tag_346\n        /* \"#utility.yul\":3691:3700   */\n      dup4\n        /* \"#utility.yul\":3672:3701   */\n      tag_300\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":3662:3701   */\n      swap2\n      pop\n        /* \"#utility.yul\":3751:3753   */\n      0x20\n        /* \"#utility.yul\":3740:3749   */\n      dup4\n        /* \"#utility.yul\":3736:3754   */\n      add\n        /* \"#utility.yul\":3723:3755   */\n      calldataload\n        /* \"#utility.yul\":3798:3803   */\n      dup1\n        /* \"#utility.yul\":3791:3804   */\n      iszero\n        /* \"#utility.yul\":3784:3805   */\n      iszero\n        /* \"#utility.yul\":3777:3782   */\n      dup2\n        /* \"#utility.yul\":3774:3806   */\n      eq\n        /* \"#utility.yul\":3764:3824   */\n      tag_347\n      jumpi\n        /* \"#utility.yul\":3820:3821   */\n      0x00\n        /* \"#utility.yul\":3817:3818   */\n      dup1\n        /* \"#utility.yul\":3810:3822   */\n      revert\n        /* \"#utility.yul\":3764:3824   */\n    tag_347:\n        /* \"#utility.yul\":3843:3848   */\n      dup1\n        /* \"#utility.yul\":3833:3848   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3507:3854   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3859:4113   */\n    tag_20:\n        /* \"#utility.yul\":3927:3933   */\n      0x00\n        /* \"#utility.yul\":3935:3941   */\n      dup1\n        /* \"#utility.yul\":3988:3990   */\n      0x40\n        /* \"#utility.yul\":3976:3985   */\n      dup4\n        /* \"#utility.yul\":3967:3974   */\n      dup6\n        /* \"#utility.yul\":3963:3986   */\n      sub\n        /* \"#utility.yul\":3959:3991   */\n      slt\n        /* \"#utility.yul\":3956:4008   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":4004:4005   */\n      0x00\n        /* \"#utility.yul\":4001:4002   */\n      dup1\n        /* \"#utility.yul\":3994:4006   */\n      revert\n        /* \"#utility.yul\":3956:4008   */\n    tag_349:\n        /* \"#utility.yul\":4027:4056   */\n      tag_350\n        /* \"#utility.yul\":4046:4055   */\n      dup4\n        /* \"#utility.yul\":4027:4056   */\n      tag_300\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":4017:4056   */\n      swap5\n        /* \"#utility.yul\":4103:4105   */\n      0x20\n        /* \"#utility.yul\":4088:4106   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":4075:4107   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3859:4113   */\n      jump\t// out\n        /* \"#utility.yul\":4118:4440   */\n    tag_38:\n        /* \"#utility.yul\":4195:4201   */\n      0x00\n        /* \"#utility.yul\":4203:4209   */\n      dup1\n        /* \"#utility.yul\":4211:4217   */\n      0x00\n        /* \"#utility.yul\":4264:4266   */\n      0x60\n        /* \"#utility.yul\":4252:4261   */\n      dup5\n        /* \"#utility.yul\":4243:4250   */\n      dup7\n        /* \"#utility.yul\":4239:4262   */\n      sub\n        /* \"#utility.yul\":4235:4267   */\n      slt\n        /* \"#utility.yul\":4232:4284   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":4280:4281   */\n      0x00\n        /* \"#utility.yul\":4277:4278   */\n      dup1\n        /* \"#utility.yul\":4270:4282   */\n      revert\n        /* \"#utility.yul\":4232:4284   */\n    tag_352:\n        /* \"#utility.yul\":4303:4332   */\n      tag_353\n        /* \"#utility.yul\":4322:4331   */\n      dup5\n        /* \"#utility.yul\":4303:4332   */\n      tag_300\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":4293:4332   */\n      swap6\n        /* \"#utility.yul\":4379:4381   */\n      0x20\n        /* \"#utility.yul\":4364:4382   */\n      dup6\n      add\n        /* \"#utility.yul\":4351:4383   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":4430:4432   */\n      0x40\n        /* \"#utility.yul\":4415:4433   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":4402:4434   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":4118:4440   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4445:5664   */\n    tag_51:\n        /* \"#utility.yul\":4563:4569   */\n      0x00\n        /* \"#utility.yul\":4571:4577   */\n      dup1\n        /* \"#utility.yul\":4624:4626   */\n      0x40\n        /* \"#utility.yul\":4612:4621   */\n      dup4\n        /* \"#utility.yul\":4603:4610   */\n      dup6\n        /* \"#utility.yul\":4599:4622   */\n      sub\n        /* \"#utility.yul\":4595:4627   */\n      slt\n        /* \"#utility.yul\":4592:4644   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":4640:4641   */\n      0x00\n        /* \"#utility.yul\":4637:4638   */\n      dup1\n        /* \"#utility.yul\":4630:4642   */\n      revert\n        /* \"#utility.yul\":4592:4644   */\n    tag_355:\n        /* \"#utility.yul\":4680:4689   */\n      dup3\n        /* \"#utility.yul\":4667:4690   */\n      calldataload\n        /* \"#utility.yul\":4709:4727   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4750:4752   */\n      dup1\n        /* \"#utility.yul\":4742:4748   */\n      dup3\n        /* \"#utility.yul\":4739:4753   */\n      gt\n        /* \"#utility.yul\":4736:4770   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":4766:4767   */\n      0x00\n        /* \"#utility.yul\":4763:4764   */\n      dup1\n        /* \"#utility.yul\":4756:4768   */\n      revert\n        /* \"#utility.yul\":4736:4770   */\n    tag_356:\n        /* \"#utility.yul\":4804:4810   */\n      dup2\n        /* \"#utility.yul\":4793:4802   */\n      dup6\n        /* \"#utility.yul\":4789:4811   */\n      add\n        /* \"#utility.yul\":4779:4811   */\n      swap2\n      pop\n        /* \"#utility.yul\":4849:4856   */\n      dup6\n        /* \"#utility.yul\":4842:4846   */\n      0x1f\n        /* \"#utility.yul\":4838:4840   */\n      dup4\n        /* \"#utility.yul\":4834:4847   */\n      add\n        /* \"#utility.yul\":4830:4857   */\n      slt\n        /* \"#utility.yul\":4820:4875   */\n      tag_357\n      jumpi\n        /* \"#utility.yul\":4871:4872   */\n      0x00\n        /* \"#utility.yul\":4868:4869   */\n      dup1\n        /* \"#utility.yul\":4861:4873   */\n      revert\n        /* \"#utility.yul\":4820:4875   */\n    tag_357:\n        /* \"#utility.yul\":4907:4909   */\n      dup2\n        /* \"#utility.yul\":4894:4910   */\n      calldataload\n        /* \"#utility.yul\":4929:4933   */\n      0x20\n        /* \"#utility.yul\":4952:4995   */\n      tag_358\n        /* \"#utility.yul\":4992:4994   */\n      dup3\n        /* \"#utility.yul\":4952:4995   */\n      tag_307\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":5024:5026   */\n      0x40\n        /* \"#utility.yul\":5018:5027   */\n      mload\n        /* \"#utility.yul\":5036:5067   */\n      tag_359\n        /* \"#utility.yul\":5064:5066   */\n      dup3\n        /* \"#utility.yul\":5056:5062   */\n      dup3\n        /* \"#utility.yul\":5036:5067   */\n      tag_309\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":5102:5120   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":5136:5151   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":5171:5182   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":5213:5214   */\n      0x05\n        /* \"#utility.yul\":5209:5219   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":5201:5220   */\n      dup8\n      add\n        /* \"#utility.yul\":5197:5225   */\n      dup5\n      add\n        /* \"#utility.yul\":5194:5235   */\n      dup12\n      lt\n        /* \"#utility.yul\":5191:5252   */\n      iszero\n      tag_360\n      jumpi\n        /* \"#utility.yul\":5248:5249   */\n      0x00\n        /* \"#utility.yul\":5245:5246   */\n      dup1\n        /* \"#utility.yul\":5238:5250   */\n      revert\n        /* \"#utility.yul\":5191:5252   */\n    tag_360:\n        /* \"#utility.yul\":5270:5271   */\n      0x00\n        /* \"#utility.yul\":5261:5271   */\n      swap7\n      pop\n        /* \"#utility.yul\":5280:5449   */\n    tag_361:\n        /* \"#utility.yul\":5294:5296   */\n      dup5\n        /* \"#utility.yul\":5291:5292   */\n      dup8\n        /* \"#utility.yul\":5288:5297   */\n      lt\n        /* \"#utility.yul\":5280:5449   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":5351:5374   */\n      tag_364\n        /* \"#utility.yul\":5370:5373   */\n      dup2\n        /* \"#utility.yul\":5351:5374   */\n      tag_300\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":5339:5375   */\n      dup4\n      mstore\n        /* \"#utility.yul\":5312:5313   */\n      0x01\n        /* \"#utility.yul\":5305:5314   */\n      swap7\n      swap1\n      swap7\n      add\n      swap6\n        /* \"#utility.yul\":5395:5407   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":5427:5439   */\n      dup4\n      add\n        /* \"#utility.yul\":5280:5449   */\n      jump(tag_361)\n    tag_363:\n      pop\n        /* \"#utility.yul\":5468:5474   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":5512:5530   */\n      dup7\n      add\n        /* \"#utility.yul\":5499:5531   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":5543:5559   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5540:5576   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":5572:5573   */\n      0x00\n        /* \"#utility.yul\":5569:5570   */\n      dup1\n        /* \"#utility.yul\":5562:5574   */\n      revert\n        /* \"#utility.yul\":5540:5576   */\n    tag_365:\n      pop\n        /* \"#utility.yul\":5595:5658   */\n      tag_366\n        /* \"#utility.yul\":5650:5657   */\n      dup6\n        /* \"#utility.yul\":5639:5647   */\n      dup3\n        /* \"#utility.yul\":5628:5637   */\n      dup7\n        /* \"#utility.yul\":5624:5648   */\n      add\n        /* \"#utility.yul\":5595:5658   */\n      tag_303\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":5585:5658   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4445:5664   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5669:5914   */\n    tag_26:\n        /* \"#utility.yul\":5727:5733   */\n      0x00\n        /* \"#utility.yul\":5780:5782   */\n      0x20\n        /* \"#utility.yul\":5768:5777   */\n      dup3\n        /* \"#utility.yul\":5759:5766   */\n      dup5\n        /* \"#utility.yul\":5755:5778   */\n      sub\n        /* \"#utility.yul\":5751:5783   */\n      slt\n        /* \"#utility.yul\":5748:5800   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":5796:5797   */\n      0x00\n        /* \"#utility.yul\":5793:5794   */\n      dup1\n        /* \"#utility.yul\":5786:5798   */\n      revert\n        /* \"#utility.yul\":5748:5800   */\n    tag_368:\n        /* \"#utility.yul\":5835:5844   */\n      dup2\n        /* \"#utility.yul\":5822:5845   */\n      calldataload\n        /* \"#utility.yul\":5854:5884   */\n      tag_323\n        /* \"#utility.yul\":5878:5883   */\n      dup2\n        /* \"#utility.yul\":5854:5884   */\n      tag_370\n      jump\t// in\n        /* \"#utility.yul\":5919:6168   */\n    tag_260:\n        /* \"#utility.yul\":5988:5994   */\n      0x00\n        /* \"#utility.yul\":6041:6043   */\n      0x20\n        /* \"#utility.yul\":6029:6038   */\n      dup3\n        /* \"#utility.yul\":6020:6027   */\n      dup5\n        /* \"#utility.yul\":6016:6039   */\n      sub\n        /* \"#utility.yul\":6012:6044   */\n      slt\n        /* \"#utility.yul\":6009:6061   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":6057:6058   */\n      0x00\n        /* \"#utility.yul\":6054:6055   */\n      dup1\n        /* \"#utility.yul\":6047:6059   */\n      revert\n        /* \"#utility.yul\":6009:6061   */\n    tag_372:\n        /* \"#utility.yul\":6089:6098   */\n      dup2\n        /* \"#utility.yul\":6083:6099   */\n      mload\n        /* \"#utility.yul\":6108:6138   */\n      tag_323\n        /* \"#utility.yul\":6132:6137   */\n      dup2\n        /* \"#utility.yul\":6108:6138   */\n      tag_370\n      jump\t// in\n        /* \"#utility.yul\":6173:6353   */\n    tag_32:\n        /* \"#utility.yul\":6232:6238   */\n      0x00\n        /* \"#utility.yul\":6285:6287   */\n      0x20\n        /* \"#utility.yul\":6273:6282   */\n      dup3\n        /* \"#utility.yul\":6264:6271   */\n      dup5\n        /* \"#utility.yul\":6260:6283   */\n      sub\n        /* \"#utility.yul\":6256:6288   */\n      slt\n        /* \"#utility.yul\":6253:6305   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":6301:6302   */\n      0x00\n        /* \"#utility.yul\":6298:6299   */\n      dup1\n        /* \"#utility.yul\":6291:6303   */\n      revert\n        /* \"#utility.yul\":6253:6305   */\n    tag_375:\n      pop\n        /* \"#utility.yul\":6324:6347   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":6173:6353   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6358:6793   */\n    tag_376:\n        /* \"#utility.yul\":6411:6414   */\n      0x00\n        /* \"#utility.yul\":6449:6454   */\n      dup2\n        /* \"#utility.yul\":6443:6455   */\n      mload\n        /* \"#utility.yul\":6476:6482   */\n      dup1\n        /* \"#utility.yul\":6471:6474   */\n      dup5\n        /* \"#utility.yul\":6464:6483   */\n      mstore\n        /* \"#utility.yul\":6502:6506   */\n      0x20\n        /* \"#utility.yul\":6531:6533   */\n      dup1\n        /* \"#utility.yul\":6526:6529   */\n      dup6\n        /* \"#utility.yul\":6522:6534   */\n      add\n        /* \"#utility.yul\":6515:6534   */\n      swap5\n      pop\n        /* \"#utility.yul\":6568:6570   */\n      dup1\n        /* \"#utility.yul\":6561:6566   */\n      dup5\n        /* \"#utility.yul\":6557:6571   */\n      add\n        /* \"#utility.yul\":6589:6590   */\n      0x00\n        /* \"#utility.yul\":6599:6768   */\n    tag_378:\n        /* \"#utility.yul\":6613:6619   */\n      dup4\n        /* \"#utility.yul\":6610:6611   */\n      dup2\n        /* \"#utility.yul\":6607:6620   */\n      lt\n        /* \"#utility.yul\":6599:6768   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":6674:6687   */\n      dup2\n      mload\n        /* \"#utility.yul\":6662:6688   */\n      dup8\n      mstore\n        /* \"#utility.yul\":6708:6720   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":6743:6758   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6635:6636   */\n      0x01\n        /* \"#utility.yul\":6628:6637   */\n      add\n        /* \"#utility.yul\":6599:6768   */\n      jump(tag_378)\n    tag_380:\n      pop\n        /* \"#utility.yul\":6784:6787   */\n      swap5\n      swap6\n        /* \"#utility.yul\":6358:6793   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6798:7269   */\n    tag_381:\n        /* \"#utility.yul\":6839:6842   */\n      0x00\n        /* \"#utility.yul\":6877:6882   */\n      dup2\n        /* \"#utility.yul\":6871:6883   */\n      mload\n        /* \"#utility.yul\":6904:6910   */\n      dup1\n        /* \"#utility.yul\":6899:6902   */\n      dup5\n        /* \"#utility.yul\":6892:6911   */\n      mstore\n        /* \"#utility.yul\":6929:6930   */\n      0x00\n        /* \"#utility.yul\":6939:7101   */\n    tag_383:\n        /* \"#utility.yul\":6953:6959   */\n      dup2\n        /* \"#utility.yul\":6950:6951   */\n      dup2\n        /* \"#utility.yul\":6947:6960   */\n      lt\n        /* \"#utility.yul\":6939:7101   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":7015:7019   */\n      0x20\n        /* \"#utility.yul\":7071:7084   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":7067:7089   */\n      dup2\n      add\n        /* \"#utility.yul\":7061:7090   */\n      mload\n        /* \"#utility.yul\":7043:7054   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":7039:7059   */\n      dup3\n      add\n        /* \"#utility.yul\":7032:7091   */\n      mstore\n        /* \"#utility.yul\":6968:6980   */\n      add\n        /* \"#utility.yul\":6939:7101   */\n      jump(tag_383)\n    tag_385:\n        /* \"#utility.yul\":7119:7125   */\n      dup2\n        /* \"#utility.yul\":7116:7117   */\n      dup2\n        /* \"#utility.yul\":7113:7126   */\n      gt\n        /* \"#utility.yul\":7110:7197   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":7185:7186   */\n      0x00\n        /* \"#utility.yul\":7178:7182   */\n      0x20\n        /* \"#utility.yul\":7169:7175   */\n      dup4\n        /* \"#utility.yul\":7164:7167   */\n      dup8\n        /* \"#utility.yul\":7160:7176   */\n      add\n        /* \"#utility.yul\":7156:7183   */\n      add\n        /* \"#utility.yul\":7149:7187   */\n      mstore\n        /* \"#utility.yul\":7110:7197   */\n    tag_386:\n      pop\n        /* \"#utility.yul\":7251:7253   */\n      0x1f\n        /* \"#utility.yul\":7230:7245   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":7226:7255   */\n      and\n        /* \"#utility.yul\":7217:7256   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":7258:7262   */\n      0x20\n        /* \"#utility.yul\":7213:7263   */\n      add\n      swap3\n        /* \"#utility.yul\":6798:7269   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7482:8308   */\n    tag_281:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7879:7894   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":7861:7895   */\n      dup3\n      mstore\n        /* \"#utility.yul\":7931:7946   */\n      dup6\n      and\n        /* \"#utility.yul\":7926:7928   */\n      0x20\n        /* \"#utility.yul\":7911:7929   */\n      dup3\n      add\n        /* \"#utility.yul\":7904:7947   */\n      mstore\n        /* \"#utility.yul\":7841:7844   */\n      0xa0\n        /* \"#utility.yul\":7978:7980   */\n      0x40\n        /* \"#utility.yul\":7963:7981   */\n      dup3\n      add\n        /* \"#utility.yul\":7956:7987   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7804:7808   */\n      0x00\n      swap1\n        /* \"#utility.yul\":8010:8067   */\n      tag_389\n      swap1\n        /* \"#utility.yul\":8047:8066   */\n      dup4\n      add\n        /* \"#utility.yul\":8039:8045   */\n      dup7\n        /* \"#utility.yul\":8010:8067   */\n      tag_376\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":8115:8124   */\n      dup3\n        /* \"#utility.yul\":8107:8113   */\n      dup2\n        /* \"#utility.yul\":8103:8125   */\n      sub\n        /* \"#utility.yul\":8098:8100   */\n      0x60\n        /* \"#utility.yul\":8087:8096   */\n      dup5\n        /* \"#utility.yul\":8083:8101   */\n      add\n        /* \"#utility.yul\":8076:8126   */\n      mstore\n        /* \"#utility.yul\":8149:8193   */\n      tag_390\n        /* \"#utility.yul\":8186:8192   */\n      dup2\n        /* \"#utility.yul\":8178:8184   */\n      dup7\n        /* \"#utility.yul\":8149:8193   */\n      tag_376\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":8135:8193   */\n      swap1\n      pop\n        /* \"#utility.yul\":8242:8251   */\n      dup3\n        /* \"#utility.yul\":8234:8240   */\n      dup2\n        /* \"#utility.yul\":8230:8252   */\n      sub\n        /* \"#utility.yul\":8224:8227   */\n      0x80\n        /* \"#utility.yul\":8213:8222   */\n      dup5\n        /* \"#utility.yul\":8209:8228   */\n      add\n        /* \"#utility.yul\":8202:8253   */\n      mstore\n        /* \"#utility.yul\":8270:8302   */\n      tag_391\n        /* \"#utility.yul\":8295:8301   */\n      dup2\n        /* \"#utility.yul\":8287:8293   */\n      dup6\n        /* \"#utility.yul\":8270:8302   */\n      tag_381\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":8262:8302   */\n      swap9\n        /* \"#utility.yul\":7482:8308   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8313:8873   */\n    tag_256:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8610:8625   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":8592:8626   */\n      dup3\n      mstore\n        /* \"#utility.yul\":8662:8677   */\n      dup6\n      and\n        /* \"#utility.yul\":8657:8659   */\n      0x20\n        /* \"#utility.yul\":8642:8660   */\n      dup3\n      add\n        /* \"#utility.yul\":8635:8678   */\n      mstore\n        /* \"#utility.yul\":8709:8711   */\n      0x40\n        /* \"#utility.yul\":8694:8712   */\n      dup2\n      add\n        /* \"#utility.yul\":8687:8721   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":8752:8754   */\n      0x60\n        /* \"#utility.yul\":8737:8755   */\n      dup2\n      add\n        /* \"#utility.yul\":8730:8764   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":8572:8575   */\n      0xa0\n        /* \"#utility.yul\":8795:8798   */\n      0x80\n        /* \"#utility.yul\":8780:8799   */\n      dup3\n      add\n        /* \"#utility.yul\":8773:8805   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":8535:8539   */\n      0x00\n      swap1\n        /* \"#utility.yul\":8822:8867   */\n      tag_393\n      swap1\n        /* \"#utility.yul\":8847:8866   */\n      dup4\n      add\n        /* \"#utility.yul\":8839:8845   */\n      dup5\n        /* \"#utility.yul\":8822:8867   */\n      tag_381\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":8814:8867   */\n      swap8\n        /* \"#utility.yul\":8313:8873   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8878:9139   */\n    tag_54:\n        /* \"#utility.yul\":9057:9059   */\n      0x20\n        /* \"#utility.yul\":9046:9055   */\n      dup2\n        /* \"#utility.yul\":9039:9060   */\n      mstore\n        /* \"#utility.yul\":9020:9024   */\n      0x00\n        /* \"#utility.yul\":9077:9133   */\n      tag_323\n        /* \"#utility.yul\":9129:9131   */\n      0x20\n        /* \"#utility.yul\":9118:9127   */\n      dup4\n        /* \"#utility.yul\":9114:9132   */\n      add\n        /* \"#utility.yul\":9106:9112   */\n      dup5\n        /* \"#utility.yul\":9077:9133   */\n      tag_376\n      jump\t// in\n        /* \"#utility.yul\":9144:9609   */\n    tag_201:\n        /* \"#utility.yul\":9401:9403   */\n      0x40\n        /* \"#utility.yul\":9390:9399   */\n      dup2\n        /* \"#utility.yul\":9383:9404   */\n      mstore\n        /* \"#utility.yul\":9364:9368   */\n      0x00\n        /* \"#utility.yul\":9427:9483   */\n      tag_397\n        /* \"#utility.yul\":9479:9481   */\n      0x40\n        /* \"#utility.yul\":9468:9477   */\n      dup4\n        /* \"#utility.yul\":9464:9482   */\n      add\n        /* \"#utility.yul\":9456:9462   */\n      dup6\n        /* \"#utility.yul\":9427:9483   */\n      tag_376\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":9531:9540   */\n      dup3\n        /* \"#utility.yul\":9523:9529   */\n      dup2\n        /* \"#utility.yul\":9519:9541   */\n      sub\n        /* \"#utility.yul\":9514:9516   */\n      0x20\n        /* \"#utility.yul\":9503:9512   */\n      dup5\n        /* \"#utility.yul\":9499:9517   */\n      add\n        /* \"#utility.yul\":9492:9542   */\n      mstore\n        /* \"#utility.yul\":9559:9603   */\n      tag_398\n        /* \"#utility.yul\":9596:9602   */\n      dup2\n        /* \"#utility.yul\":9588:9594   */\n      dup6\n        /* \"#utility.yul\":9559:9603   */\n      tag_376\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":9551:9603   */\n      swap6\n        /* \"#utility.yul\":9144:9609   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9806:10025   */\n    tag_35:\n        /* \"#utility.yul\":9955:9957   */\n      0x20\n        /* \"#utility.yul\":9944:9953   */\n      dup2\n        /* \"#utility.yul\":9937:9958   */\n      mstore\n        /* \"#utility.yul\":9918:9922   */\n      0x00\n        /* \"#utility.yul\":9975:10019   */\n      tag_323\n        /* \"#utility.yul\":10015:10017   */\n      0x20\n        /* \"#utility.yul\":10004:10013   */\n      dup4\n        /* \"#utility.yul\":10000:10018   */\n      add\n        /* \"#utility.yul\":9992:9998   */\n      dup5\n        /* \"#utility.yul\":9975:10019   */\n      tag_381\n      jump\t// in\n        /* \"#utility.yul\":10451:10855   */\n    tag_276:\n        /* \"#utility.yul\":10653:10655   */\n      0x20\n        /* \"#utility.yul\":10635:10656   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10692:10694   */\n      0x28\n        /* \"#utility.yul\":10672:10690   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10665:10695   */\n      mstore\n        /* \"#utility.yul\":10731:10765   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":10726:10728   */\n      0x40\n        /* \"#utility.yul\":10711:10729   */\n      dup3\n      add\n        /* \"#utility.yul\":10704:10766   */\n      mstore\n      shl(0xc0, 0x6420746f6b656e73)\n        /* \"#utility.yul\":10797:10799   */\n      0x60\n        /* \"#utility.yul\":10782:10800   */\n      dup3\n      add\n        /* \"#utility.yul\":10775:10813   */\n      mstore\n        /* \"#utility.yul\":10845:10848   */\n      0x80\n        /* \"#utility.yul\":10830:10849   */\n      add\n      swap1\n        /* \"#utility.yul\":10451:10855   */\n      jump\t// out\n        /* \"#utility.yul\":11682:12083   */\n    tag_185:\n        /* \"#utility.yul\":11884:11886   */\n      0x20\n        /* \"#utility.yul\":11866:11887   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11923:11925   */\n      0x25\n        /* \"#utility.yul\":11903:11921   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11896:11926   */\n      mstore\n        /* \"#utility.yul\":11962:11996   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":11957:11959   */\n      0x40\n        /* \"#utility.yul\":11942:11960   */\n      dup3\n      add\n        /* \"#utility.yul\":11935:11997   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":12028:12030   */\n      0x60\n        /* \"#utility.yul\":12013:12031   */\n      dup3\n      add\n        /* \"#utility.yul\":12006:12041   */\n      mstore\n        /* \"#utility.yul\":12073:12076   */\n      0x80\n        /* \"#utility.yul\":12058:12077   */\n      add\n      swap1\n        /* \"#utility.yul\":11682:12083   */\n      jump\t// out\n        /* \"#utility.yul\":12507:12913   */\n    tag_197:\n        /* \"#utility.yul\":12709:12711   */\n      0x20\n        /* \"#utility.yul\":12691:12712   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12748:12750   */\n      0x2a\n        /* \"#utility.yul\":12728:12746   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12721:12751   */\n      mstore\n        /* \"#utility.yul\":12787:12821   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":12782:12784   */\n      0x40\n        /* \"#utility.yul\":12767:12785   */\n      dup3\n      add\n        /* \"#utility.yul\":12760:12822   */\n      mstore\n      shl(0xb1, 0x39103a3930b739b332b9)\n        /* \"#utility.yul\":12853:12855   */\n      0x60\n        /* \"#utility.yul\":12838:12856   */\n      dup3\n      add\n        /* \"#utility.yul\":12831:12871   */\n      mstore\n        /* \"#utility.yul\":12903:12906   */\n      0x80\n        /* \"#utility.yul\":12888:12907   */\n      add\n      swap1\n        /* \"#utility.yul\":12507:12913   */\n      jump\t// out\n        /* \"#utility.yul\":15743:15926   */\n    tag_307:\n        /* \"#utility.yul\":15803:15807   */\n      0x00\n        /* \"#utility.yul\":15836:15854   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15828:15834   */\n      dup3\n        /* \"#utility.yul\":15825:15855   */\n      gt\n        /* \"#utility.yul\":15822:15878   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":15858:15876   */\n      tag_419\n      tag_121\n      jump\t// in\n    tag_419:\n      pop\n        /* \"#utility.yul\":15903:15904   */\n      0x05\n        /* \"#utility.yul\":15899:15913   */\n      shl\n        /* \"#utility.yul\":15915:15919   */\n      0x20\n        /* \"#utility.yul\":15895:15920   */\n      add\n      swap1\n        /* \"#utility.yul\":15743:15926   */\n      jump\t// out\n        /* \"#utility.yul\":15931:16059   */\n    tag_173:\n        /* \"#utility.yul\":15971:15974   */\n      0x00\n        /* \"#utility.yul\":16002:16003   */\n      dup3\n        /* \"#utility.yul\":15998:16004   */\n      not\n        /* \"#utility.yul\":15995:15996   */\n      dup3\n        /* \"#utility.yul\":15992:16005   */\n      gt\n        /* \"#utility.yul\":15989:16028   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":16008:16026   */\n      tag_422\n      tag_423\n      jump\t// in\n    tag_422:\n      pop\n        /* \"#utility.yul\":16044:16053   */\n      add\n      swap1\n        /* \"#utility.yul\":15931:16059   */\n      jump\t// out\n        /* \"#utility.yul\":16064:16189   */\n    tag_249:\n        /* \"#utility.yul\":16104:16108   */\n      0x00\n        /* \"#utility.yul\":16132:16133   */\n      dup3\n        /* \"#utility.yul\":16129:16130   */\n      dup3\n        /* \"#utility.yul\":16126:16134   */\n      lt\n        /* \"#utility.yul\":16123:16157   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":16137:16155   */\n      tag_426\n      tag_423\n      jump\t// in\n    tag_426:\n      pop\n        /* \"#utility.yul\":16174:16183   */\n      sub\n      swap1\n        /* \"#utility.yul\":16064:16189   */\n      jump\t// out\n        /* \"#utility.yul\":16194:16574   */\n    tag_92:\n        /* \"#utility.yul\":16273:16274   */\n      0x01\n        /* \"#utility.yul\":16269:16281   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":16316:16328   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":16337:16398   */\n      tag_428\n      jumpi\n        /* \"#utility.yul\":16391:16395   */\n      0x7f\n        /* \"#utility.yul\":16383:16389   */\n      dup3\n        /* \"#utility.yul\":16379:16396   */\n      and\n        /* \"#utility.yul\":16369:16396   */\n      swap2\n      pop\n        /* \"#utility.yul\":16337:16398   */\n    tag_428:\n        /* \"#utility.yul\":16444:16446   */\n      0x20\n        /* \"#utility.yul\":16436:16442   */\n      dup3\n        /* \"#utility.yul\":16433:16447   */\n      lt\n        /* \"#utility.yul\":16413:16431   */\n      dup2\n        /* \"#utility.yul\":16410:16448   */\n      eq\n        /* \"#utility.yul\":16407:16568   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":16490:16500   */\n      0x4e487b71\n        /* \"#utility.yul\":16485:16488   */\n      0xe0\n        /* \"#utility.yul\":16481:16501   */\n      shl\n        /* \"#utility.yul\":16478:16479   */\n      0x00\n        /* \"#utility.yul\":16471:16502   */\n      mstore\n        /* \"#utility.yul\":16525:16529   */\n      0x22\n        /* \"#utility.yul\":16522:16523   */\n      0x04\n        /* \"#utility.yul\":16515:16530   */\n      mstore\n        /* \"#utility.yul\":16553:16557   */\n      0x24\n        /* \"#utility.yul\":16550:16551   */\n      0x00\n        /* \"#utility.yul\":16543:16558   */\n      revert\n        /* \"#utility.yul\":16407:16568   */\n    tag_429:\n      pop\n        /* \"#utility.yul\":16194:16574   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16579:16828   */\n    tag_309:\n        /* \"#utility.yul\":16689:16691   */\n      0x1f\n        /* \"#utility.yul\":16670:16683   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":16666:16693   */\n      and\n        /* \"#utility.yul\":16654:16694   */\n      dup2\n      add\n        /* \"#utility.yul\":16724:16742   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16709:16743   */\n      dup2\n      gt\n        /* \"#utility.yul\":16745:16767   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":16706:16768   */\n      or\n        /* \"#utility.yul\":16703:16791   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":16771:16789   */\n      tag_432\n      tag_121\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":16807:16809   */\n      0x40\n        /* \"#utility.yul\":16800:16822   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":16579:16828   */\n      jump\t// out\n        /* \"#utility.yul\":16833:16968   */\n    tag_135:\n        /* \"#utility.yul\":16872:16875   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":16893:16910   */\n      dup3\n      eq\n        /* \"#utility.yul\":16890:16933   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":16913:16931   */\n      tag_435\n      tag_423\n      jump\t// in\n    tag_435:\n      pop\n        /* \"#utility.yul\":16960:16961   */\n      0x01\n        /* \"#utility.yul\":16949:16962   */\n      add\n      swap1\n        /* \"#utility.yul\":16833:16968   */\n      jump\t// out\n        /* \"#utility.yul\":16973:17100   */\n    tag_423:\n        /* \"#utility.yul\":17034:17044   */\n      0x4e487b71\n        /* \"#utility.yul\":17029:17032   */\n      0xe0\n        /* \"#utility.yul\":17025:17045   */\n      shl\n        /* \"#utility.yul\":17022:17023   */\n      0x00\n        /* \"#utility.yul\":17015:17046   */\n      mstore\n        /* \"#utility.yul\":17065:17069   */\n      0x11\n        /* \"#utility.yul\":17062:17063   */\n      0x04\n        /* \"#utility.yul\":17055:17070   */\n      mstore\n        /* \"#utility.yul\":17089:17093   */\n      0x24\n        /* \"#utility.yul\":17086:17087   */\n      0x00\n        /* \"#utility.yul\":17079:17094   */\n      revert\n        /* \"#utility.yul\":17105:17232   */\n    tag_129:\n        /* \"#utility.yul\":17166:17176   */\n      0x4e487b71\n        /* \"#utility.yul\":17161:17164   */\n      0xe0\n        /* \"#utility.yul\":17157:17177   */\n      shl\n        /* \"#utility.yul\":17154:17155   */\n      0x00\n        /* \"#utility.yul\":17147:17178   */\n      mstore\n        /* \"#utility.yul\":17197:17201   */\n      0x32\n        /* \"#utility.yul\":17194:17195   */\n      0x04\n        /* \"#utility.yul\":17187:17202   */\n      mstore\n        /* \"#utility.yul\":17221:17225   */\n      0x24\n        /* \"#utility.yul\":17218:17219   */\n      0x00\n        /* \"#utility.yul\":17211:17226   */\n      revert\n        /* \"#utility.yul\":17237:17364   */\n    tag_121:\n        /* \"#utility.yul\":17298:17308   */\n      0x4e487b71\n        /* \"#utility.yul\":17293:17296   */\n      0xe0\n        /* \"#utility.yul\":17289:17309   */\n      shl\n        /* \"#utility.yul\":17286:17287   */\n      0x00\n        /* \"#utility.yul\":17279:17310   */\n      mstore\n        /* \"#utility.yul\":17329:17333   */\n      0x41\n        /* \"#utility.yul\":17326:17327   */\n      0x04\n        /* \"#utility.yul\":17319:17334   */\n      mstore\n        /* \"#utility.yul\":17353:17357   */\n      0x24\n        /* \"#utility.yul\":17350:17351   */\n      0x00\n        /* \"#utility.yul\":17343:17358   */\n      revert\n        /* \"#utility.yul\":17369:17548   */\n    tag_266:\n        /* \"#utility.yul\":17404:17407   */\n      0x00\n        /* \"#utility.yul\":17446:17447   */\n      0x03\n        /* \"#utility.yul\":17428:17444   */\n      returndatasize\n        /* \"#utility.yul\":17425:17448   */\n      gt\n        /* \"#utility.yul\":17422:17542   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":17492:17493   */\n      0x04\n        /* \"#utility.yul\":17489:17490   */\n      0x00\n        /* \"#utility.yul\":17486:17487   */\n      dup1\n        /* \"#utility.yul\":17471:17494   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":17529:17530   */\n      0x00\n        /* \"#utility.yul\":17523:17531   */\n      mload\n        /* \"#utility.yul\":17518:17521   */\n      0xe0\n        /* \"#utility.yul\":17514:17532   */\n      shr\n        /* \"#utility.yul\":17422:17542   */\n    tag_440:\n        /* \"#utility.yul\":17369:17548   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":17553:18224   */\n    tag_268:\n        /* \"#utility.yul\":17592:17595   */\n      0x00\n        /* \"#utility.yul\":17634:17638   */\n      0x44\n        /* \"#utility.yul\":17616:17632   */\n      returndatasize\n        /* \"#utility.yul\":17613:17639   */\n      lt\n        /* \"#utility.yul\":17610:17649   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":17553:18224   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":17610:17649   */\n    tag_442:\n        /* \"#utility.yul\":17676:17678   */\n      0x40\n        /* \"#utility.yul\":17670:17679   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":17741:17757   */\n      returndatasize\n        /* \"#utility.yul\":17737:17762   */\n      dup2\n      add\n        /* \"#utility.yul\":17734:17735   */\n      0x04\n        /* \"#utility.yul\":17670:17679   */\n      dup4\n        /* \"#utility.yul\":17713:17763   */\n      returndatacopy\n        /* \"#utility.yul\":17792:17796   */\n      dup2\n        /* \"#utility.yul\":17786:17797   */\n      mload\n        /* \"#utility.yul\":17816:17832   */\n      returndatasize\n        /* \"#utility.yul\":17851:17869   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17922:17924   */\n      dup2\n        /* \"#utility.yul\":17915:17919   */\n      0x24\n        /* \"#utility.yul\":17907:17913   */\n      dup5\n        /* \"#utility.yul\":17903:17920   */\n      add\n        /* \"#utility.yul\":17900:17925   */\n      gt\n        /* \"#utility.yul\":17895:17897   */\n      dup2\n        /* \"#utility.yul\":17887:17893   */\n      dup5\n        /* \"#utility.yul\":17884:17898   */\n      gt\n        /* \"#utility.yul\":17881:17926   */\n      or\n        /* \"#utility.yul\":17878:17936   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":17929:17934   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":17553:18224   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":17878:17936   */\n    tag_443:\n        /* \"#utility.yul\":17966:17972   */\n      dup3\n        /* \"#utility.yul\":17960:17964   */\n      dup6\n        /* \"#utility.yul\":17956:17973   */\n      add\n        /* \"#utility.yul\":17945:17973   */\n      swap2\n      pop\n        /* \"#utility.yul\":18002:18005   */\n      dup2\n        /* \"#utility.yul\":17996:18006   */\n      mload\n        /* \"#utility.yul\":18029:18031   */\n      dup2\n        /* \"#utility.yul\":18021:18027   */\n      dup2\n        /* \"#utility.yul\":18018:18032   */\n      gt\n        /* \"#utility.yul\":18015:18042   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":18035:18040   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":17553:18224   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":18015:18042   */\n    tag_444:\n        /* \"#utility.yul\":18119:18121   */\n      dup5\n        /* \"#utility.yul\":18100:18116   */\n      returndatasize\n        /* \"#utility.yul\":18094:18098   */\n      dup8\n        /* \"#utility.yul\":18090:18117   */\n      add\n        /* \"#utility.yul\":18086:18122   */\n      add\n        /* \"#utility.yul\":18079:18083   */\n      0x20\n        /* \"#utility.yul\":18070:18076   */\n      dup3\n        /* \"#utility.yul\":18065:18068   */\n      dup6\n        /* \"#utility.yul\":18061:18077   */\n      add\n        /* \"#utility.yul\":18057:18084   */\n      add\n        /* \"#utility.yul\":18054:18123   */\n      gt\n        /* \"#utility.yul\":18051:18133   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":18126:18131   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":17553:18224   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":18051:18133   */\n    tag_445:\n        /* \"#utility.yul\":18142:18199   */\n      tag_446\n        /* \"#utility.yul\":18193:18197   */\n      0x20\n        /* \"#utility.yul\":18184:18190   */\n      dup3\n        /* \"#utility.yul\":18176:18182   */\n      dup7\n        /* \"#utility.yul\":18172:18191   */\n      add\n        /* \"#utility.yul\":18168:18198   */\n      add\n        /* \"#utility.yul\":18162:18166   */\n      dup8\n        /* \"#utility.yul\":18142:18199   */\n      tag_309\n      jump\t// in\n    tag_446:\n      pop\n        /* \"#utility.yul\":18215:18218   */\n      swap1\n      swap6\n        /* \"#utility.yul\":17553:18224   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18229:18360   */\n    tag_370:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":18303:18335   */\n      dup2\n      and\n        /* \"#utility.yul\":18293:18336   */\n      dup2\n      eq\n        /* \"#utility.yul\":18283:18354   */\n      tag_448\n      jumpi\n        /* \"#utility.yul\":18350:18351   */\n      0x00\n        /* \"#utility.yul\":18347:18348   */\n      dup1\n        /* \"#utility.yul\":18340:18352   */\n      revert\n        /* \"#utility.yul\":18283:18354   */\n    tag_448:\n        /* \"#utility.yul\":18229:18360   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e940295d673465ee7f2c5d98a7ccd0169a1c65fcf35a17777ba830b07f62971f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1793": {
									"entryPoint": null,
									"id": 1793,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_523": {
									"entryPoint": 104,
									"id": 523,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_address_fromMemory": {
									"entryPoint": 324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 626,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1889:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:10"
															},
															"nodeType": "YulIf",
															"src": "115:70:10"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:10",
														"type": ""
													}
												],
												"src": "14:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "304:1066:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "350:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "359:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "362:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "352:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "352:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "352:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "325:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "334:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "321:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "321:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "346:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "317:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "317:32:10"
															},
															"nodeType": "YulIf",
															"src": "314:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "375:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "395:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "389:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "389:16:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "379:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "414:28:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "432:2:10",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "436:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "428:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "428:10:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "424:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "424:18:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "418:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "469:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "478:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "481:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "471:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "471:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "471:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "457:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "465:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "454:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "454:14:10"
															},
															"nodeType": "YulIf",
															"src": "451:34:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "494:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "508:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "519:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "504:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "504:22:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "498:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "574:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "583:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "586:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "576:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "576:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "576:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "553:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "557:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "549:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "549:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "564:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "545:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "545:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "538:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "538:35:10"
															},
															"nodeType": "YulIf",
															"src": "535:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "599:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "615:2:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "609:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "609:9:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "603:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "641:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "643:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "643:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "643:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "633:2:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "637:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "630:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "630:10:10"
															},
															"nodeType": "YulIf",
															"src": "627:36:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "672:17:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "686:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "682:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "682:7:10"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "676:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "698:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "718:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "712:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "712:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "702:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "730:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "752:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "776:2:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "780:4:10",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "772:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "772:13:10"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "787:2:10"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "768:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "768:22:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "792:2:10",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "764:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "764:31:10"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "797:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "760:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "760:40:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "748:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "748:53:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "734:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "860:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "862:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "862:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "862:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "819:10:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "831:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "816:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "816:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "839:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "851:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "836:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "836:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "813:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "813:46:10"
															},
															"nodeType": "YulIf",
															"src": "810:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "898:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "902:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "891:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "891:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "891:22:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "929:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "937:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "922:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "922:18:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "949:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "959:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "953:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1009:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1018:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1021:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1011:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1011:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1011:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "986:2:10"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "990:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "982:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "982:11:10"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "995:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "978:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "978:20:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1000:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "975:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "975:33:10"
															},
															"nodeType": "YulIf",
															"src": "972:53:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1034:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1043:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1038:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1099:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1128:6:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1136:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1124:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1124:14:10"
																						},
																						{
																							"name": "_5",
																							"nodeType": "YulIdentifier",
																							"src": "1140:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1120:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1120:23:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_2",
																											"nodeType": "YulIdentifier",
																											"src": "1159:2:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1163:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1155:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1155:10:10"
																								},
																								{
																									"name": "_5",
																									"nodeType": "YulIdentifier",
																									"src": "1167:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1151:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1151:19:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1145:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1145:26:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1113:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1113:59:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1113:59:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1064:1:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1067:2:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1061:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1061:9:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1071:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1073:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1082:1:10"
																				},
																				{
																					"name": "_5",
																					"nodeType": "YulIdentifier",
																					"src": "1085:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1078:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1078:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1073:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1057:3:10",
																"statements": []
															},
															"src": "1053:129:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1212:59:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1241:6:10"
																								},
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "1249:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1237:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1237:15:10"
																						},
																						{
																							"name": "_5",
																							"nodeType": "YulIdentifier",
																							"src": "1254:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1233:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1233:24:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1259:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1226:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1226:35:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1226:35:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1197:1:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1200:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1194:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:9:10"
															},
															"nodeType": "YulIf",
															"src": "1191:80:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1280:16:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1290:6:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1280:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1305:59:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1349:9:10"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "1360:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1345:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1345:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1315:29:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:49:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1305:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "262:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "273:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "285:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "293:6:10",
														"type": ""
													}
												],
												"src": "196:1174:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1430:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1440:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1457:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1450:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1450:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1440:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1471:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1501:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1507:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1497:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1497:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1475:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1548:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1550:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1564:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1572:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1560:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1560:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1550:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1528:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1521:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1521:26:10"
															},
															"nodeType": "YulIf",
															"src": "1518:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1638:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1659:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1666:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1671:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1662:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1662:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1652:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1652:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1652:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1703:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1706:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1696:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1696:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1696:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1731:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1734:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1724:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1724:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1724:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1594:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1617:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1625:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1614:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1614:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1591:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1591:38:10"
															},
															"nodeType": "YulIf",
															"src": "1588:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1410:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1419:6:10",
														"type": ""
													}
												],
												"src": "1375:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1792:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1809:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1816:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1821:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1812:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1812:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1802:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1802:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1802:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1849:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1852:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1842:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1842:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1842:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1873:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1876:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1866:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1866:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1866:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1760:127:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        let _5 := 0x20\n        if gt(add(add(_2, _3), _5), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _3) { i := add(i, _5) }\n        {\n            mstore(add(add(memPtr, i), _5), mload(add(add(_2, i), _5)))\n        }\n        if gt(i, _3)\n        {\n            mstore(add(add(memPtr, _3), _5), 0)\n        }\n        value0 := memPtr\n        value1 := abi_decode_address_fromMemory(add(headStart, _5))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1B63 CODESIZE SUB DUP1 PUSH3 0x1B63 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x144 JUMP JUMPDEST DUP2 PUSH3 0x40 DUP2 PUSH3 0x68 JUMP JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP PUSH3 0x288 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x7D SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x81 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x8F SWAP1 PUSH3 0x235 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xB3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xFE JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xCE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xFE JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xFE JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xFE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xE1 JUMP JUMPDEST POP PUSH3 0x10C SWAP3 SWAP2 POP PUSH3 0x110 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x10C JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x111 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x19A JUMPI PUSH3 0x19A PUSH3 0x272 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x1C5 JUMPI PUSH3 0x1C5 PUSH3 0x272 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE PUSH1 0x20 SWAP4 POP DUP9 DUP5 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP3 DUP3 LT ISZERO PUSH3 0x206 JUMPI DUP5 DUP3 ADD DUP5 ADD MLOAD DUP2 DUP4 ADD DUP6 ADD MSTORE SWAP1 DUP4 ADD SWAP1 PUSH3 0x1E7 JUMP JUMPDEST DUP3 DUP3 GT ISZERO PUSH3 0x218 JUMPI PUSH1 0x0 DUP5 DUP5 DUP4 ADD ADD MSTORE JUMPDEST SWAP6 POP PUSH3 0x22A SWAP2 POP POP DUP6 DUP3 ADD PUSH3 0x127 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x24A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x26C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x18CB DUP1 PUSH3 0x298 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xBD85B039 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0xCB450772 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x4F558E79 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x156E29F6 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x4B8C9C2D EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE6 PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0x12E7 JUMP JUMPDEST PUSH2 0x266 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x107 CALLDATASIZE PUSH1 0x4 PUSH2 0x1415 JUMP JUMPDEST PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF0 JUMP JUMPDEST PUSH2 0x12F PUSH2 0x12A CALLDATASIZE PUSH1 0x4 PUSH2 0x144F JUMP JUMPDEST PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x15D4 JUMP JUMPDEST PUSH2 0x10C PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x1311 JUMP JUMPDEST PUSH2 0x3E3 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x119C JUMP JUMPDEST PUSH2 0x462 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x177 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF0 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0x1344 JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x1593 JUMP JUMPDEST PUSH2 0x10C PUSH2 0x1BD CALLDATASIZE PUSH1 0x4 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0x12AB JUMP JUMPDEST PUSH2 0x623 JUMP JUMPDEST PUSH2 0xE6 PUSH2 0x1F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x10C PUSH2 0x212 CALLDATASIZE PUSH1 0x4 PUSH2 0x1147 JUMP JUMPDEST PUSH2 0x632 JUMP JUMPDEST PUSH2 0x10C PUSH2 0x225 CALLDATASIZE PUSH1 0x4 PUSH2 0x1169 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x261 CALLDATASIZE PUSH1 0x4 PUSH2 0x1246 JUMP JUMPDEST PUSH2 0x739 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x32E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x349 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x35E SWAP1 PUSH2 0x1711 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x38A SWAP1 PUSH2 0x1711 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3AC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3BA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x43D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x2CB7BA9030B932903737BA103BB434BA32B634B9BA32B217 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2CE JUMP JUMPDEST PUSH2 0x458 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7C0 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x47E JUMPI POP PUSH2 0x47E DUP6 CALLER PUSH2 0x225 JUMP JUMPDEST PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2CE JUMP JUMPDEST PUSH2 0x4F2 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x8D0 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x55E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x57A JUMPI PUSH2 0x57A PUSH2 0x17C0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5A3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x61B JUMPI PUSH2 0x5EE DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5C7 JUMPI PUSH2 0x5C7 PUSH2 0x17AA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5E1 JUMPI PUSH2 0x5E1 PUSH2 0x17AA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x266 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x600 JUMPI PUSH2 0x600 PUSH2 0x17AA JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x614 DUP2 PUSH2 0x1779 JUMP JUMPDEST SWAP1 POP PUSH2 0x5A9 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x62E CALLER DUP4 DUP4 PUSH2 0xABB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER ISZERO PUSH2 0x67D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x2CB7BA9030B932903737BA103BB434BA32B634B9BA32B217 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x6E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F7669646564206164647265737320616C72656164792073616665206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xD4C1AF98B758421A8D47B0BC04ECFA30233D5506955E8CDE282417AA0D31D3B6 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x755 JUMPI POP PUSH2 0x755 DUP6 CALLER PUSH2 0x225 JUMP JUMPDEST PUSH2 0x7B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2CE JUMP JUMPDEST PUSH2 0x4F2 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xB9C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x820 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2CE JUMP JUMPDEST CALLER PUSH2 0x840 DUP2 PUSH1 0x0 DUP8 PUSH2 0x831 DUP9 PUSH2 0xCB9 JUMP JUMPDEST PUSH2 0x83A DUP9 PUSH2 0xCB9 JUMP JUMPDEST DUP8 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x870 SWAP1 DUP5 SWAP1 PUSH2 0x16E2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP6 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x4F2 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0xE10 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x932 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x958 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CE SWAP1 PUSH2 0x162F JUMP JUMPDEST CALLER PUSH2 0x967 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xA4D JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x987 JUMPI PUSH2 0x987 PUSH2 0x17AA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x9A5 JUMPI PUSH2 0x9A5 PUSH2 0x17AA JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x9F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CE SWAP1 PUSH2 0x1674 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xA32 SWAP1 DUP5 SWAP1 PUSH2 0x16E2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xA46 SWAP1 PUSH2 0x1779 JUMP JUMPDEST SWAP1 POP PUSH2 0x96A JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA9D SWAP3 SWAP2 SWAP1 PUSH2 0x15A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xAB3 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xF7B JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xB2F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xBC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CE SWAP1 PUSH2 0x162F JUMP JUMPDEST CALLER PUSH2 0xBD2 DUP2 DUP8 DUP8 PUSH2 0x831 DUP9 PUSH2 0xCB9 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0xC13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CE SWAP1 PUSH2 0x1674 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0xC50 SWAP1 DUP5 SWAP1 PUSH2 0x16E2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xCB0 DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xE10 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xCF3 JUMPI PUSH2 0xCF3 PUSH2 0x17AA JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xD8B JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xD89 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xD30 JUMPI PUSH2 0xD30 PUSH2 0x17AA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xD4E JUMPI PUSH2 0xD4E PUSH2 0x17AA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD73 SWAP2 SWAP1 PUSH2 0x16E2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xD82 SWAP1 POP DUP2 PUSH2 0x1779 JUMP JUMPDEST SWAP1 POP PUSH2 0xD15 JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xAB3 JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xCB0 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xDB7 JUMPI PUSH2 0xDB7 PUSH2 0x17AA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xDD5 JUMPI PUSH2 0xDD5 PUSH2 0x17AA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDFA SWAP2 SWAP1 PUSH2 0x16FA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xE09 SWAP1 POP DUP2 PUSH2 0x1779 JUMP JUMPDEST SWAP1 POP PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xAB3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xE54 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x154E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xE9E JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xE9B SWAP2 DUP2 ADD SWAP1 PUSH2 0x1432 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xF4B JUMPI PUSH2 0xEAA PUSH2 0x17D6 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xEE4 JUMPI POP PUSH2 0xEBF PUSH2 0x17F2 JUMP JUMPDEST DUP1 PUSH2 0xECA JUMPI POP PUSH2 0xEE6 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x15D4 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xCB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CE SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xAB3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xFBF SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x14F0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1009 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1006 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1432 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1015 JUMPI PUSH2 0xEAA PUSH2 0x17D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xCB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CE SWAP1 PUSH2 0x15E7 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x734 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x106D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x107A DUP3 PUSH2 0x16BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1087 DUP3 DUP3 PUSH2 0x174C JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x10A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x10C6 JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x10AA JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x10E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10FE JUMPI PUSH2 0x10FE PUSH2 0x17C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1115 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x174C JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x112A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1162 DUP3 PUSH2 0x1045 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x117C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1185 DUP4 PUSH2 0x1045 JUMP JUMPDEST SWAP2 POP PUSH2 0x1193 PUSH1 0x20 DUP5 ADD PUSH2 0x1045 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x11B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11BD DUP7 PUSH2 0x1045 JUMP JUMPDEST SWAP5 POP PUSH2 0x11CB PUSH1 0x20 DUP8 ADD PUSH2 0x1045 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x11E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F4 DUP10 DUP4 DUP11 ADD PUSH2 0x105C JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x120A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1216 DUP10 DUP4 DUP11 ADD PUSH2 0x105C JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x122C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1239 DUP9 DUP3 DUP10 ADD PUSH2 0x10D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x125E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1267 DUP7 PUSH2 0x1045 JUMP JUMPDEST SWAP5 POP PUSH2 0x1275 PUSH1 0x20 DUP8 ADD PUSH2 0x1045 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x129F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1239 DUP9 DUP3 DUP10 ADD PUSH2 0x10D3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12C7 DUP4 PUSH2 0x1045 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x12DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1303 DUP4 PUSH2 0x1045 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x132F DUP5 PUSH2 0x1045 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x136F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1383 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1390 DUP3 PUSH2 0x16BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139D DUP3 DUP3 PUSH2 0x174C JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0x13BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x13E7 JUMPI PUSH2 0x13D3 DUP2 PUSH2 0x1045 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x13C2 JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x13FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x140B DUP6 DUP3 DUP7 ADD PUSH2 0x105C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1427 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1162 DUP2 PUSH2 0x187C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1162 DUP2 PUSH2 0x187C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1498 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x147C JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x14C9 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x14AD JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x14DB JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x151C SWAP1 DUP4 ADD DUP7 PUSH2 0x1468 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x152E DUP2 DUP7 PUSH2 0x1468 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1542 DUP2 DUP6 PUSH2 0x14A3 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1588 SWAP1 DUP4 ADD DUP5 PUSH2 0x14A3 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1162 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1468 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x15B9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1468 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x15CB DUP2 DUP6 PUSH2 0x1468 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1162 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14A3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x16D8 JUMPI PUSH2 0x16D8 PUSH2 0x17C0 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x16F5 JUMPI PUSH2 0x16F5 PUSH2 0x1794 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x170C JUMPI PUSH2 0x170C PUSH2 0x1794 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1725 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1746 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1772 JUMPI PUSH2 0x1772 PUSH2 0x17C0 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x178D JUMPI PUSH2 0x178D PUSH2 0x1794 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x17EF JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1800 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1830 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1848 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1862 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1871 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x174C JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1892 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 BLOCKHASH 0x29 0x5D PUSH8 0x3465EE7F2C5D98A7 0xCC 0xD0 AND SWAP11 SHR PUSH6 0xFCF35A17777B 0xA8 ADDRESS 0xB0 PUSH32 0x62971F64736F6C63430008070033000000000000000000000000000000000000 ",
							"sourceMap": "204:1056:9:-:0;;;440:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;494:4;1134:13:0;494:4:9;1134:7:0;:13::i;:::-;-1:-1:-1;511:9:9::1;:16:::0;;-1:-1:-1;;;;;;511:16:9::1;-1:-1:-1::0;;;;;511:16:9;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;204:1056:9;;7936:86:0;8002:13;;;;:4;;:13;;;;;:::i;:::-;;7936:86;:::o;204:1056:9:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;204:1056:9;;;-1:-1:-1;204:1056:9;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:10;93:13;;-1:-1:-1;;;;;135:31:10;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:1174::-;285:6;293;346:2;334:9;325:7;321:23;317:32;314:52;;;362:1;359;352:12;314:52;389:16;;-1:-1:-1;;;;;454:14:10;;;451:34;;;481:1;478;471:12;451:34;519:6;508:9;504:22;494:32;;564:7;557:4;553:2;549:13;545:27;535:55;;586:1;583;576:12;535:55;615:2;609:9;637:2;633;630:10;627:36;;;643:18;;:::i;:::-;718:2;712:9;686:2;772:13;;-1:-1:-1;;768:22:10;;;792:2;764:31;760:40;748:53;;;816:18;;;836:22;;;813:46;810:72;;;862:18;;:::i;:::-;902:10;898:2;891:22;937:2;929:6;922:18;959:4;949:14;;1000:7;995:2;990;986;982:11;978:20;975:33;972:53;;;1021:1;1018;1011:12;972:53;1043:1;1034:10;;1053:129;1067:2;1064:1;1061:9;1053:129;;;1155:10;;;1151:19;;1145:26;1124:14;;;1120:23;;1113:59;1078:10;;;;1053:129;;;1200:2;1197:1;1194:9;1191:80;;;1259:1;1254:2;1249;1241:6;1237:15;1233:24;1226:35;1191:80;1290:6;-1:-1:-1;1315:49:10;;-1:-1:-1;;1345:18:10;;;1315:49;:::i;:::-;1305:59;;;;196:1174;;;;;:::o;1375:380::-;1454:1;1450:12;;;;1497;;;1518:61;;1572:4;1564:6;1560:17;1550:27;;1518:61;1625:2;1617:6;1614:14;1594:18;1591:38;1588:161;;;1671:10;1666:3;1662:20;1659:1;1652:31;1706:4;1703:1;1696:15;1734:4;1731:1;1724:15;1588:161;;1375:380;;;:::o;1760:127::-;1821:10;1816:3;1812:20;1809:1;1802:31;1852:4;1849:1;1842:15;1876:4;1873:1;1866:15;1760:127;204:1056:9;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArray_1094": {
									"entryPoint": 3257,
									"id": 1094,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1390": {
									"entryPoint": 3332,
									"id": 1390,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_938": {
									"entryPoint": null,
									"id": 938,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1066": {
									"entryPoint": 3963,
									"id": 1066,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1001": {
									"entryPoint": 3600,
									"id": 1001,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mint_598": {
									"entryPoint": 1984,
									"id": 598,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_1713": {
									"entryPoint": null,
									"id": 1713,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_512": {
									"entryPoint": 2256,
									"id": 512,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_386": {
									"entryPoint": 2972,
									"id": 386,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_919": {
									"entryPoint": 2747,
									"id": 919,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@adminSafe_1770": {
									"entryPoint": null,
									"id": 1770,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@balanceOfBatch_179": {
									"entryPoint": 1273,
									"id": 179,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_115": {
									"entryPoint": 614,
									"id": 115,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@changeAdminSafe_1820": {
									"entryPoint": 1586,
									"id": 1820,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@exists_1297": {
									"entryPoint": null,
									"id": 1297,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_214": {
									"entryPoint": null,
									"id": 214,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1424": {
									"entryPoint": null,
									"id": 1424,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_1870": {
									"entryPoint": 995,
									"id": 1870,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_292": {
									"entryPoint": 1122,
									"id": 292,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_252": {
									"entryPoint": 1849,
									"id": 252,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_196": {
									"entryPoint": 1571,
									"id": 196,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1746": {
									"entryPoint": null,
									"id": 1746,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_75": {
									"entryPoint": 765,
									"id": 75,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_1281": {
									"entryPoint": null,
									"id": 1281,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_87": {
									"entryPoint": 847,
									"id": 87,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 4165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 4188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 4307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 4508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 4678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 4881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 5170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 5224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes": {
									"entryPoint": 5283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5360,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5454,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5542,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bfcf428da2a377287b5d352c63b3be9ac4e5d20c502a185ebf9b34d347503e1a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fa3d7547ebdbd3d83688f57f208c1ceb8b68fc0b773db8e47be5f62dfed50852__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_allocation_size_array_address_dyn": {
									"entryPoint": 5822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5882,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 6009,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6036,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6058,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6080,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 6102,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 6130,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_bytes4": {
									"entryPoint": 6268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:18362:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:10"
															},
															"nodeType": "YulIf",
															"src": "111:70:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:10",
														"type": ""
													}
												],
												"src": "14:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "256:671:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "305:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "314:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "307:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "307:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "307:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "284:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "292:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "280:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "280:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "299:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "276:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "276:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "269:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "269:35:10"
															},
															"nodeType": "YulIf",
															"src": "266:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "330:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "353:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "340:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "340:20:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "334:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "369:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "379:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "373:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "392:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "442:2:10"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "402:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "402:43:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "396:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "454:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "474:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "468:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "468:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "458:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "506:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "514:2:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "486:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "486:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "486:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "526:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "537:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "530:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "559:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "567:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "552:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "552:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "552:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "579:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "590:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "598:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "586:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "586:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "579:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "610:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "625:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "633:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "621:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "621:15:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "614:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "690:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "699:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "702:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "692:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "692:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "692:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "659:6:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "671:1:10",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "674:2:10"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "667:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "667:10:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "655:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "655:23:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "680:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "651:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "651:32:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "685:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "648:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:41:10"
															},
															"nodeType": "YulIf",
															"src": "645:61:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "715:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "724:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "719:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "779:118:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "800:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "818:3:10"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "805:12:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "805:17:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "793:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "793:30:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "793:30:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "836:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "847:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "852:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "843:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "843:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "836:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "868:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "879:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "884:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "875:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "875:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "868:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "745:1:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "748:2:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "742:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "742:9:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "752:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "754:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "763:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "766:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "759:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "759:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "754:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "738:3:10",
																"statements": []
															},
															"src": "734:163:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "906:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "915:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "906:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "230:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "238:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "246:5:10",
														"type": ""
													}
												],
												"src": "192:735:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "984:503:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1033:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1042:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1045:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1035:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1035:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1035:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1012:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1020:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1008:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1008:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1027:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1004:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1004:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "997:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:35:10"
															},
															"nodeType": "YulIf",
															"src": "994:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1058:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1081:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1068:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1068:20:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1062:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1127:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1129:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1129:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1129:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1103:2:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1100:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:26:10"
															},
															"nodeType": "YulIf",
															"src": "1097:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1158:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1178:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1172:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1162:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1210:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1230:2:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1234:4:10",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1226:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1226:13:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1245:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1241:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1241:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1222:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1222:27:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1251:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1218:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1218:38:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1190:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1190:67:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1190:67:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1273:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1281:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1266:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1266:18:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1332:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1341:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1344:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1334:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1334:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1334:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1307:6:10"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1315:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:15:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1320:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1299:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1299:26:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1327:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1296:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:35:10"
															},
															"nodeType": "YulIf",
															"src": "1293:55:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1374:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1382:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1370:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1370:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1393:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1401:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1389:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1389:17:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1408:2:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1357:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1357:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1357:54:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1435:6:10"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1443:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1431:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1431:15:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1448:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1427:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1427:26:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1455:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1420:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1420:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1420:37:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1466:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1475:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1466:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "958:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "966:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "974:5:10",
														"type": ""
													}
												],
												"src": "932:555:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1562:116:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1608:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1617:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1620:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1610:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1610:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1610:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1583:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1592:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1579:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1579:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1604:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1575:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1575:32:10"
															},
															"nodeType": "YulIf",
															"src": "1572:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1633:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1662:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1643:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1643:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1633:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1528:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1539:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1551:6:10",
														"type": ""
													}
												],
												"src": "1492:186:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1770:173:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1816:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1825:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1828:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1818:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1818:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1818:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1791:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1800:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1787:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1787:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1812:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1783:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1783:32:10"
															},
															"nodeType": "YulIf",
															"src": "1780:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1841:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1870:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1851:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1851:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1841:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1889:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1922:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1933:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1918:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1918:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1899:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1899:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1889:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1728:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1739:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1751:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1759:6:10",
														"type": ""
													}
												],
												"src": "1683:260:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2145:746:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2192:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2201:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2204:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2194:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2194:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2194:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2166:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2175:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2162:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2162:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2187:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2158:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2158:33:10"
															},
															"nodeType": "YulIf",
															"src": "2155:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2217:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2246:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2227:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2227:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2217:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2265:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2298:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2309:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2294:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2294:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2275:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2275:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2265:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2322:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2353:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2364:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2349:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2349:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2336:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2336:32:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2326:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2377:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2387:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2381:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2432:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2441:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2444:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2434:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2434:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2434:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2420:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2428:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2417:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2417:14:10"
															},
															"nodeType": "YulIf",
															"src": "2414:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2457:71:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2500:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2511:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2496:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2496:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2520:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2467:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2467:61:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2457:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2537:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2570:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2581:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2566:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2566:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2553:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2553:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "2541:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2614:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2623:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2626:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2616:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2616:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2616:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "2600:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2610:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2597:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2597:16:10"
															},
															"nodeType": "YulIf",
															"src": "2594:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2639:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2682:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "2693:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2678:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2678:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2704:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2649:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2649:63:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2639:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2721:49:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2754:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2765:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2750:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2750:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2737:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2737:33:10"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "2725:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2799:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2808:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2811:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2801:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2801:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2801:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "2785:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2795:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2782:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2782:16:10"
															},
															"nodeType": "YulIf",
															"src": "2779:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2824:61:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2855:9:10"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "2866:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2851:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2851:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2877:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2834:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2834:51:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "2824:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2079:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2090:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2102:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2110:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2118:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2126:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2134:6:10",
														"type": ""
													}
												],
												"src": "1948:943:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3043:459:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3090:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3099:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3102:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3092:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3092:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3092:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3064:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3073:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3060:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3060:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3085:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3056:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3056:33:10"
															},
															"nodeType": "YulIf",
															"src": "3053:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3115:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3144:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3125:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3125:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3115:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3163:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3196:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3207:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3192:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3192:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3173:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3173:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3163:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3220:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3247:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3258:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3243:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3243:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3230:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3230:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3220:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3271:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3298:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3309:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3294:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3294:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3281:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3281:32:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3271:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3322:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3353:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3364:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3349:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3349:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3336:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3336:33:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3326:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3412:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3421:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3424:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3414:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3414:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3414:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3384:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3392:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3381:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3381:30:10"
															},
															"nodeType": "YulIf",
															"src": "3378:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3437:59:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3468:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3479:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3464:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3464:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3488:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "3447:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3447:49:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3437:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2977:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2988:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3000:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3008:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3016:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3024:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3032:6:10",
														"type": ""
													}
												],
												"src": "2896:606:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3591:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3637:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3646:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3649:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3639:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3639:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3639:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3612:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3621:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3608:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3608:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3633:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3604:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3604:32:10"
															},
															"nodeType": "YulIf",
															"src": "3601:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3662:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3691:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3672:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3672:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3662:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3710:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3740:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3751:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3736:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3736:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3723:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3723:32:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3714:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3808:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3817:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3820:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3810:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3810:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3810:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3777:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3798:5:10"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3791:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3791:13:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3784:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3784:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3774:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3774:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3767:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3767:40:10"
															},
															"nodeType": "YulIf",
															"src": "3764:60:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3833:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3843:5:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3833:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3549:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3560:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3572:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3580:6:10",
														"type": ""
													}
												],
												"src": "3507:347:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3946:167:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3992:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4001:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4004:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3994:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3994:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3994:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3967:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3976:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3963:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3963:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3988:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3959:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3959:32:10"
															},
															"nodeType": "YulIf",
															"src": "3956:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4017:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4046:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4027:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4027:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4017:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4065:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4092:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4103:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4088:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4088:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4075:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4075:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4065:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3904:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3915:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3927:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3935:6:10",
														"type": ""
													}
												],
												"src": "3859:254:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4222:218:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4268:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4277:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4280:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4270:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4270:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4270:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4243:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4252:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4239:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4239:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4264:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4235:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4235:32:10"
															},
															"nodeType": "YulIf",
															"src": "4232:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4293:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4322:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4303:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4303:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4293:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4341:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4368:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4379:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4364:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4364:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4351:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4351:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4341:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4392:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4419:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4430:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4415:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4415:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4402:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4402:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4392:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4172:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4183:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4195:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4203:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4211:6:10",
														"type": ""
													}
												],
												"src": "4118:322:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4582:1082:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4628:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4637:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4640:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4630:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4630:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4630:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4603:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4612:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4599:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4599:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4624:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4595:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4595:32:10"
															},
															"nodeType": "YulIf",
															"src": "4592:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4653:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4680:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4667:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4667:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4657:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4699:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4709:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4703:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4754:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4763:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4766:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4756:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4756:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4756:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4742:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4750:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4739:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4739:14:10"
															},
															"nodeType": "YulIf",
															"src": "4736:34:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4779:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4793:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4804:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4789:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4789:22:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4783:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4859:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4868:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4871:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4861:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4861:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4861:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4838:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4842:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4834:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4834:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4849:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4830:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4830:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4823:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4823:35:10"
															},
															"nodeType": "YulIf",
															"src": "4820:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4884:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4907:2:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4894:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4894:16:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "4888:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4919:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4929:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4923:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4942:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4992:2:10"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4952:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4952:43:10"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "4946:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5004:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5024:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5018:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5018:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "5008:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5056:6:10"
																	},
																	{
																		"name": "_5",
																		"nodeType": "YulIdentifier",
																		"src": "5064:2:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5036:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5036:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5036:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5076:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5087:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "5080:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5109:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5117:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5102:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5102:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5102:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5129:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5140:6:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5148:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5136:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5136:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "5129:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5160:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5175:2:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5179:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5171:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5171:11:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "5164:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5236:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5245:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5248:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5238:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5238:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5238:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "5205:2:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5213:1:10",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "5216:2:10"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5209:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5209:10:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5201:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5201:19:10"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "5222:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5197:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5197:28:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5227:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5194:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5194:41:10"
															},
															"nodeType": "YulIf",
															"src": "5191:61:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5261:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5270:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "5265:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5325:124:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5346:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "5370:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "5351:18:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5351:23:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5339:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5339:36:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5339:36:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5388:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5399:3:10"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5404:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5395:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5395:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5388:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5420:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "5431:3:10"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5436:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5427:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5427:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5420:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5291:1:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5294:2:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5288:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5288:9:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5298:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5300:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5309:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5312:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5305:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5305:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5300:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5284:3:10",
																"statements": []
															},
															"src": "5280:169:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5458:16:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5468:6:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5458:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5483:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5516:9:10"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "5527:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5512:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5512:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5499:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5499:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5487:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5560:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5569:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5572:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5562:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5562:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5562:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5546:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5556:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5543:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5543:16:10"
															},
															"nodeType": "YulIf",
															"src": "5540:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5585:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5628:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "5639:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5624:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5624:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5650:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5595:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5595:63:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5585:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4540:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4551:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4563:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4571:6:10",
														"type": ""
													}
												],
												"src": "4445:1219:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5738:176:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5784:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5793:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5796:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5786:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5786:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5786:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5759:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5768:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5755:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5755:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5780:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5751:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5751:32:10"
															},
															"nodeType": "YulIf",
															"src": "5748:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5809:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5835:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5822:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5822:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5813:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5878:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "5854:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5854:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5854:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5893:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5903:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5893:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5704:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5715:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5727:6:10",
														"type": ""
													}
												],
												"src": "5669:245:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5999:169:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6045:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6054:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6057:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6047:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6047:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6047:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6020:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6029:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6016:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6016:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6041:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6012:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6012:32:10"
															},
															"nodeType": "YulIf",
															"src": "6009:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6070:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6089:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6083:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6083:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6074:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6132:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "6108:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6108:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6108:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6147:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6157:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6147:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5965:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5976:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5988:6:10",
														"type": ""
													}
												],
												"src": "5919:249:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6243:110:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6289:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6298:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6301:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6291:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6291:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6291:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6264:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6273:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6260:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6260:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6285:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6256:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6256:32:10"
															},
															"nodeType": "YulIf",
															"src": "6253:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6314:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6337:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6324:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6324:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6314:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6209:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6220:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6232:6:10",
														"type": ""
													}
												],
												"src": "6173:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6419:374:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6429:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6449:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6443:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6443:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6433:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6471:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6476:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6464:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6464:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6464:19:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6492:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6502:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6496:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6515:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6526:3:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6531:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6522:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6522:12:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6515:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6543:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6561:5:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6568:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6557:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6557:14:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6547:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6580:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6589:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6584:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6648:120:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6669:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "6680:6:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6674:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6674:13:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6662:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6662:26:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6662:26:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6701:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6712:3:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6717:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6708:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6708:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6701:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6733:25:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6747:6:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6755:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6743:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6743:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6733:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6610:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6613:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6607:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6607:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6621:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6623:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6632:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6635:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6628:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6628:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6623:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6603:3:10",
																"statements": []
															},
															"src": "6599:169:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6777:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6784:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6777:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6396:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6403:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6411:3:10",
														"type": ""
													}
												],
												"src": "6358:435:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6847:422:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6857:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6877:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6871:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6871:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6861:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6899:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6904:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6892:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6892:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6892:19:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6920:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6929:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6924:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6991:110:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7005:14:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7015:4:10",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "7009:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "7047:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7052:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7043:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7043:11:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "7056:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7039:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7039:20:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "7075:5:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "7082:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "7071:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "7071:13:10"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "7086:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7067:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7067:22:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7061:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7061:29:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7032:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7032:59:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7032:59:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6950:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6953:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6947:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6947:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6961:21:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6963:17:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6972:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6975:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6968:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6968:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6963:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6943:3:10",
																"statements": []
															},
															"src": "6939:162:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7135:62:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "7164:3:10"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "7169:6:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7160:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7160:16:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7178:4:10",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7156:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7156:27:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7185:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7149:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7149:38:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7149:38:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7116:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7119:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7113:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7113:13:10"
															},
															"nodeType": "YulIf",
															"src": "7110:87:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7206:57:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7221:3:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "7234:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7242:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "7230:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7230:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7251:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "7247:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7247:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "7226:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7226:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7217:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7217:39:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7258:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7213:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7213:50:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7206:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6824:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6831:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6839:3:10",
														"type": ""
													}
												],
												"src": "6798:471:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7375:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7385:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7397:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7408:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7393:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7393:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7385:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7427:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7442:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7458:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7463:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7454:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7454:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7467:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7450:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7450:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7438:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7438:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7420:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7420:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7420:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7344:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7355:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7366:4:10",
														"type": ""
													}
												],
												"src": "7274:203:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7813:495:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7823:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7841:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7846:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7837:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7837:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7850:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7833:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7833:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7827:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7868:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7883:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7891:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7879:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7879:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7861:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7861:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7861:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7915:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7926:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7911:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7911:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7935:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7943:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7931:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7931:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7904:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7904:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7904:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7967:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7978:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7963:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7963:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7983:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7956:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7956:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7956:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7996:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8039:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8051:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8062:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8047:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8047:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "8010:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8010:57:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "8000:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8087:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8098:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8083:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8083:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "8107:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8115:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8103:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8103:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8076:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8076:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8076:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8135:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8178:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "8186:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "8149:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8149:44:10"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "8139:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8213:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8224:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8209:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8209:19:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "8234:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8242:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8230:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8230:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8202:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8202:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8202:51:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8262:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "8287:6:10"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "8295:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "8270:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8270:32:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8262:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7750:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7761:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7769:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7777:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7785:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7793:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7804:4:10",
														"type": ""
													}
												],
												"src": "7482:826:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8544:329:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8554:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8572:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8577:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8568:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8568:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8581:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8564:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8564:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8558:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8599:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8614:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8622:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8610:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8610:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8592:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8592:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8592:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8646:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8657:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8642:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8642:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8666:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8674:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8662:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8662:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8635:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8635:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8635:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8698:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8709:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8694:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8694:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8714:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8687:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8687:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8687:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8741:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8752:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8737:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8737:18:10"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8757:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8730:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8730:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8730:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8784:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8795:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8780:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8780:19:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8801:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8773:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8773:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8773:32:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8814:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "8839:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8851:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8862:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8847:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8847:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "8822:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8822:45:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8814:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8481:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8492:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8500:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8508:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8516:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8524:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8535:4:10",
														"type": ""
													}
												],
												"src": "8313:560:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9029:110:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9046:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9057:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9039:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9039:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9039:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9069:64:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9106:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9118:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9129:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9114:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9114:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "9077:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9077:56:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9069:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8998:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9009:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9020:4:10",
														"type": ""
													}
												],
												"src": "8878:261:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9373:236:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9390:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9401:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9383:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9383:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9383:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9413:70:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9456:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9468:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9479:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9464:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9464:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "9427:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9427:56:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "9417:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9503:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9514:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9499:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9499:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "9523:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9531:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9519:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9519:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9492:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9492:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9492:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9551:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9588:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "9596:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "9559:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9559:44:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9551:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9334:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9345:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9353:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9364:4:10",
														"type": ""
													}
												],
												"src": "9144:465:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9709:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9719:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9731:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9742:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9727:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9727:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9719:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9761:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "9786:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9779:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9779:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9772:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9772:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9754:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9754:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9754:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9678:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9689:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9700:4:10",
														"type": ""
													}
												],
												"src": "9614:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9927:98:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9944:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9955:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9937:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9937:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9937:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9967:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9992:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10004:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10015:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10000:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10000:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "9975:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9975:44:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9967:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9896:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9907:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9918:4:10",
														"type": ""
													}
												],
												"src": "9806:219:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10204:242:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10221:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10232:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10214:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10214:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10214:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10255:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10266:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10251:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10251:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10271:2:10",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10244:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10244:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10244:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10294:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10305:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10290:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10290:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10310:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10283:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10283:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10283:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10365:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10376:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10361:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10361:18:10"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10381:22:10",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10354:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10354:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10354:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10413:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10425:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10436:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10421:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10421:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10413:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10181:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10195:4:10",
														"type": ""
													}
												],
												"src": "10030:416:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10625:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10642:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10653:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10635:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10635:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10635:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10676:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10687:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10672:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10672:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10692:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10665:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10665:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10665:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10715:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10726:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10711:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10711:18:10"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10731:34:10",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10704:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10704:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10704:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10786:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10797:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10782:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10782:18:10"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10802:10:10",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10775:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10775:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10775:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10822:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10834:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10845:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10830:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10830:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10822:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10602:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10616:4:10",
														"type": ""
													}
												],
												"src": "10451:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11034:233:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11051:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11062:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11044:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11044:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11044:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11085:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11096:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11081:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11081:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11101:2:10",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11074:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11074:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11074:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11124:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11135:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11120:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11120:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11140:34:10",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11113:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11113:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11113:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11195:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11206:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11191:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11191:18:10"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11211:13:10",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11184:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11184:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11184:41:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11234:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11246:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11257:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11242:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11242:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11234:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11011:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11025:4:10",
														"type": ""
													}
												],
												"src": "10860:407:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11446:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11463:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11474:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11456:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11456:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11456:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11497:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11508:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11493:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11493:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11513:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11486:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11486:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11486:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11536:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11547:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11532:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11532:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11552:34:10",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11525:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11525:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11525:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11607:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11618:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11603:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11603:18:10"
																	},
																	{
																		"hexValue": "20617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11623:11:10",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11596:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11596:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11596:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11644:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11656:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11667:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11652:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11652:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11644:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11423:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11437:4:10",
														"type": ""
													}
												],
												"src": "11272:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11856:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11873:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11884:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11866:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11866:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11866:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11907:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11918:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11903:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11903:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11923:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11896:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11896:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11896:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11946:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11957:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11942:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11942:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11962:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11935:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11935:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11935:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12017:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12028:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12013:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12013:18:10"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12033:7:10",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12006:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12006:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12006:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12050:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12062:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12073:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12058:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12058:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12050:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11833:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11847:4:10",
														"type": ""
													}
												],
												"src": "11682:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12262:240:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12279:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12290:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12272:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12272:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12272:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12313:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12324:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12309:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12309:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12329:2:10",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12302:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12302:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12302:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12352:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12363:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12348:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12348:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12368:34:10",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12341:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12341:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12341:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12423:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12434:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12419:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12419:18:10"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12439:20:10",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12412:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12412:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12412:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12469:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12481:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12492:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12477:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12477:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12469:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12239:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12253:4:10",
														"type": ""
													}
												],
												"src": "12088:414:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12681:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12698:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12709:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12691:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12691:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12691:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12732:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12743:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12728:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12728:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12748:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12721:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12721:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12721:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12771:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12782:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12767:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12767:18:10"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12787:34:10",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12760:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12760:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12760:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12842:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12853:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12838:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12838:18:10"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12858:12:10",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12831:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12831:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12831:40:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12880:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12892:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12903:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12888:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12888:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12880:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12658:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12672:4:10",
														"type": ""
													}
												],
												"src": "12507:406:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13092:174:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13109:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13120:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13102:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13102:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13102:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13143:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13154:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13139:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13139:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13159:2:10",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13132:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13132:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13132:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13182:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13193:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13178:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13178:18:10"
																	},
																	{
																		"hexValue": "596f7520617265206e6f742077686974656c69737465642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13198:26:10",
																		"type": "",
																		"value": "You are not whitelisted."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13171:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13171:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13171:54:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13234:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13246:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13257:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13242:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13242:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13234:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bfcf428da2a377287b5d352c63b3be9ac4e5d20c502a185ebf9b34d347503e1a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13069:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13083:4:10",
														"type": ""
													}
												],
												"src": "12918:348:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13445:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13462:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13473:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13455:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13455:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13455:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13496:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13507:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13492:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13492:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13512:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13485:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13485:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13485:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13535:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13546:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13531:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13531:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13551:34:10",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13524:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13524:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13524:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13606:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13617:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13602:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13602:18:10"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13622:11:10",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13595:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13595:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13595:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13643:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13655:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13666:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13651:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13651:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13643:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13422:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13436:4:10",
														"type": ""
													}
												],
												"src": "13271:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13855:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13872:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13883:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13865:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13865:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13865:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13906:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13917:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13902:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13902:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13922:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13895:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13895:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13895:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13945:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13956:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13941:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13941:18:10"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13961:34:10",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13934:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13934:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13934:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14016:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14027:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14012:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14012:18:10"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14032:11:10",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14005:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14005:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14005:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14053:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14065:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14076:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14061:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14061:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14053:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13832:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13846:4:10",
														"type": ""
													}
												],
												"src": "13681:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14265:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14282:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14293:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14275:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14275:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14275:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14316:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14327:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14312:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14312:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14332:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14305:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14305:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14305:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14355:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14366:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14351:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14351:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14371:34:10",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14344:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14344:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14344:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14426:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14437:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14422:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14422:18:10"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14442:10:10",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14415:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14415:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14415:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14462:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14474:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14485:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14470:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14470:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14462:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14242:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14256:4:10",
														"type": ""
													}
												],
												"src": "14091:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14674:223:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14691:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14702:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14684:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14684:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14684:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14725:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14736:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14721:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14721:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14741:2:10",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14714:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14714:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14714:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14764:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14775:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14760:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14760:18:10"
																	},
																	{
																		"hexValue": "455243313135353a206d696e7420746f20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14780:34:10",
																		"type": "",
																		"value": "ERC1155: mint to the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14753:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14753:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14753:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14835:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14846:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14831:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14831:18:10"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14851:3:10",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14824:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14824:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14824:31:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14864:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14876:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14887:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14872:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14872:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14864:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14651:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14665:4:10",
														"type": ""
													}
												],
												"src": "14500:397:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15076:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15093:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15104:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15086:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15086:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15086:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15127:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15138:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15123:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15123:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15143:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15116:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15116:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15116:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15166:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15177:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15162:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15162:18:10"
																	},
																	{
																		"hexValue": "50726f7669646564206164647265737320616c72656164792073616665206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15182:34:10",
																		"type": "",
																		"value": "Provided address already safe ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15155:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15155:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15155:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15237:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15248:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15233:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15233:18:10"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15253:7:10",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15226:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15226:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15226:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15270:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15282:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15293:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15278:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15278:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15270:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fa3d7547ebdbd3d83688f57f208c1ceb8b68fc0b773db8e47be5f62dfed50852__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15053:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15067:4:10",
														"type": ""
													}
												],
												"src": "14902:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15409:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15419:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15431:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15442:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15427:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15427:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15419:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15461:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15472:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15454:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15454:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15454:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15378:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15389:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15400:4:10",
														"type": ""
													}
												],
												"src": "15308:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15619:119:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15629:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15641:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15652:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15637:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15637:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15629:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15671:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15682:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15664:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15664:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15664:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15709:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15720:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15705:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15705:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15725:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15698:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15698:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15698:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15580:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15591:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15599:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15610:4:10",
														"type": ""
													}
												],
												"src": "15490:248:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15812:114:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15856:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "15858:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15858:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15858:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15828:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15836:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15825:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15825:30:10"
															},
															"nodeType": "YulIf",
															"src": "15822:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15887:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15903:1:10",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "15906:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15899:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15899:14:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15915:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15895:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15895:25:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "15887:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15792:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "15803:4:10",
														"type": ""
													}
												],
												"src": "15743:183:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15979:80:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16006:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16008:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16008:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16008:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15995:1:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "16002:1:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "15998:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15998:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15992:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15992:13:10"
															},
															"nodeType": "YulIf",
															"src": "15989:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16037:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16048:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16051:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16044:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16044:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "16037:3:10"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15962:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15965:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "15971:3:10",
														"type": ""
													}
												],
												"src": "15931:128:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16113:76:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16135:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16137:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16137:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16137:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16129:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16132:1:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "16126:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16126:8:10"
															},
															"nodeType": "YulIf",
															"src": "16123:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16166:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16178:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16181:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "16174:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16174:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "16166:4:10"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16095:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16098:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "16104:4:10",
														"type": ""
													}
												],
												"src": "16064:125:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16249:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16259:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16273:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "16276:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "16269:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16269:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "16259:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16290:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "16320:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16326:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "16316:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16316:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "16294:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16367:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "16369:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "16383:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16391:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "16379:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16379:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "16369:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "16347:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16340:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16340:26:10"
															},
															"nodeType": "YulIf",
															"src": "16337:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16457:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16478:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "16485:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "16490:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "16481:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16481:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "16471:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16471:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16471:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16522:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16525:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "16515:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16515:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16515:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16550:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16553:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16543:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16543:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16543:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "16413:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "16436:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16444:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "16433:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16433:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "16410:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16410:38:10"
															},
															"nodeType": "YulIf",
															"src": "16407:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "16229:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16238:6:10",
														"type": ""
													}
												],
												"src": "16194:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16626:202:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16636:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "16658:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "16674:4:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16680:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16670:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16670:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16689:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "16685:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16685:7:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16666:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16666:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16654:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16654:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "16640:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16769:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "16771:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16771:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16771:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "16712:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16724:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16709:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16709:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "16748:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16760:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "16745:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16745:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "16706:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16706:62:10"
															},
															"nodeType": "YulIf",
															"src": "16703:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16807:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "16811:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16800:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16800:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16800:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16608:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "16616:4:10",
														"type": ""
													}
												],
												"src": "16579:249:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16880:88:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16911:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16913:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16913:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16913:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16896:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16907:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "16903:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16903:6:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "16893:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16893:17:10"
															},
															"nodeType": "YulIf",
															"src": "16890:43:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16942:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16953:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16960:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16949:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16949:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "16942:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16862:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "16872:3:10",
														"type": ""
													}
												],
												"src": "16833:135:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17005:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17022:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17029:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17034:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "17025:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17025:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17015:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17015:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17015:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17062:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17065:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17055:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17055:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17055:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17086:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17089:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17079:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17079:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17079:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "16973:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17137:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17154:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17161:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17166:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "17157:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17157:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17147:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17147:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17147:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17194:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17197:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17187:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17187:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17218:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17221:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17211:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17211:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17211:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "17105:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17269:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17286:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17293:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17298:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "17289:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17289:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17279:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17279:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17279:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17326:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17329:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17319:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17319:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17319:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17350:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17353:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17343:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17343:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17343:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "17237:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17412:136:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17457:85:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17486:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17489:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17492:1:10",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "17471:14:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17471:23:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17471:23:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "17507:25:10",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17518:3:10",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "17529:1:10",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "17523:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17523:8:10"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "17514:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17514:18:10"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "17507:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "17428:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17428:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17446:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17425:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17425:23:10"
															},
															"nodeType": "YulIf",
															"src": "17422:120:10"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "17404:3:10",
														"type": ""
													}
												],
												"src": "17369:179:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17600:624:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17640:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "17642:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "17616:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17616:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17634:4:10",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "17613:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17613:26:10"
															},
															"nodeType": "YulIf",
															"src": "17610:39:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17658:21:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17676:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17670:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17670:9:10"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "17662:4:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17688:16:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17702:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "17698:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17698:6:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "17692:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "17728:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17734:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "17741:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17741:16:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "17759:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17737:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17737:25:10"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "17713:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17713:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17713:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17772:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "17792:4:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17786:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17786:11:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "17776:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17806:26:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "17816:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17816:16:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "17810:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17841:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "17851:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "17845:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17927:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "17929:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "17887:6:10"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "17895:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "17884:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17884:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17907:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17915:4:10",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17903:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17903:17:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "17922:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "17900:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17900:25:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "17881:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17881:45:10"
															},
															"nodeType": "YulIf",
															"src": "17878:58:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17945:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "17960:4:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "17966:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17956:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17956:17:10"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "17949:3:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17982:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "18002:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17996:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17996:10:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "17986:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18033:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "18035:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18021:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "18029:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18018:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18018:14:10"
															},
															"nodeType": "YulIf",
															"src": "18015:27:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18124:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "18126:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "18065:3:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "18070:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18061:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18061:16:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18079:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18057:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18057:27:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "18094:4:10"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "18100:14:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18100:16:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18090:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18090:27:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "18119:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18086:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18086:36:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18054:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18054:69:10"
															},
															"nodeType": "YulIf",
															"src": "18051:82:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "18162:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "18176:6:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "18184:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18172:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18172:19:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18193:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18168:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18168:30:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "18142:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18142:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18142:57:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18208:10:10",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "18215:3:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "18208:3:10"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "17592:3:10",
														"type": ""
													}
												],
												"src": "17553:671:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18273:87:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18338:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18347:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18350:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18340:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18340:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18340:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18296:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18307:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "18318:3:10",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "18323:10:10",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "18314:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18314:20:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "18303:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18303:32:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18293:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18293:43:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18286:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18286:51:10"
															},
															"nodeType": "YulIf",
															"src": "18283:71:10"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18262:5:10",
														"type": ""
													}
												],
												"src": "18229:131:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_address_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, shl(5, _1)), _2), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_address_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let src := add(_2, _4)\n        if gt(add(add(_2, shl(5, _3)), _4), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _3) { i := add(i, 1) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n            src := add(src, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_bytes(value4, tail_2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_bytes(value4, add(headStart, 160))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1155: balance query for the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: caller is not owner nor\")\n        mstore(add(headStart, 96), \" approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1155: transfer caller is not \")\n        mstore(add(headStart, 96), \"owner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_bfcf428da2a377287b5d352c63b3be9ac4e5d20c502a185ebf9b34d347503e1a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"You are not whitelisted.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC1155: mint to the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fa3d7547ebdbd3d83688f57f208c1ceb8b68fc0b773db8e47be5f62dfed50852__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Provided address already safe ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ce5760003560e01c80634e1273f41161008c578063bd85b03911610066578063bd85b039146101e4578063cb45077214610204578063e985e9c514610217578063f242432a1461025357600080fd5b80634e1273f41461018f5780634f558e79146101af578063a22cb465146101d157600080fd5b8062fdd58e146100d357806301ffc9a7146100f95780630e89341c1461011c578063156e29f61461013c5780632eb2c2d61461014f5780634b8c9c2d14610164575b600080fd5b6100e66100e13660046112e7565b610266565b6040519081526020015b60405180910390f35b61010c610107366004611415565b6102fd565b60405190151581526020016100f0565b61012f61012a36600461144f565b61034f565b6040516100f091906115d4565b61010c61014a366004611311565b6103e3565b61016261015d36600461119c565b610462565b005b600554610177906001600160a01b031681565b6040516001600160a01b0390911681526020016100f0565b6101a261019d366004611344565b6104f9565b6040516100f09190611593565b61010c6101bd36600461144f565b600090815260036020526040902054151590565b6101626101df3660046112ab565b610623565b6100e66101f236600461144f565b60009081526003602052604090205490565b61010c610212366004611147565b610632565b61010c610225366004611169565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610162610261366004611246565b610739565b60006001600160a01b0383166102d75760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061032e57506001600160e01b031982166303a24d0760e21b145b8061034957506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606002805461035e90611711565b80601f016020809104026020016040519081016040528092919081815260200182805461038a90611711565b80156103d75780601f106103ac576101008083540402835291602001916103d7565b820191906000526020600020905b8154815290600101906020018083116103ba57829003601f168201915b50505050509050919050565b3360009081526004602052604081205460ff1661043d5760405162461bcd60e51b81526020600482015260186024820152772cb7ba9030b932903737ba103bb434ba32b634b9ba32b21760411b60448201526064016102ce565b610458848484604051806020016040528060008152506107c0565b5060019392505050565b6001600160a01b03851633148061047e575061047e8533610225565b6104e55760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016102ce565b6104f285858585856108d0565b5050505050565b6060815183511461055e5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016102ce565b6000835167ffffffffffffffff81111561057a5761057a6117c0565b6040519080825280602002602001820160405280156105a3578160200160208202803683370190505b50905060005b845181101561061b576105ee8582815181106105c7576105c76117aa565b60200260200101518583815181106105e1576105e16117aa565b6020026020010151610266565b828281518110610600576106006117aa565b602090810291909101015261061481611779565b90506105a9565b509392505050565b61062e338383610abb565b5050565b6000331561067d5760405162461bcd60e51b81526020600482015260186024820152772cb7ba9030b932903737ba103bb434ba32b634b9ba32b21760411b60448201526064016102ce565b6005546001600160a01b03838116911614156106e95760405162461bcd60e51b815260206004820152602560248201527f50726f7669646564206164647265737320616c72656164792073616665206164604482015264647265737360d81b60648201526084016102ce565b600580546001600160a01b0319166001600160a01b0384169081179091556040517fd4c1af98b758421a8d47b0bc04ecfa30233d5506955e8cde282417aa0d31d3b690600090a25060015b919050565b6001600160a01b03851633148061075557506107558533610225565b6107b35760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016102ce565b6104f28585858585610b9c565b6001600160a01b0384166108205760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016102ce565b336108408160008761083188610cb9565b61083a88610cb9565b87610d04565b6000848152602081815260408083206001600160a01b0389168452909152812080548592906108709084906116e2565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46104f281600087878787610e10565b81518351146109325760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016102ce565b6001600160a01b0384166109585760405162461bcd60e51b81526004016102ce9061162f565b33610967818787878787610d04565b60005b8451811015610a4d576000858281518110610987576109876117aa565b6020026020010151905060008583815181106109a5576109a56117aa565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156109f55760405162461bcd60e51b81526004016102ce90611674565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610a329084906116e2565b9250508190555050505080610a4690611779565b905061096a565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a9d9291906115a6565b60405180910390a4610ab3818787878787610f7b565b505050505050565b816001600160a01b0316836001600160a01b03161415610b2f5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016102ce565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610bc25760405162461bcd60e51b81526004016102ce9061162f565b33610bd281878761083188610cb9565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015610c135760405162461bcd60e51b81526004016102ce90611674565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290610c509084906116e2565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610cb0828888888888610e10565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610cf357610cf36117aa565b602090810291909101015292915050565b6001600160a01b038516610d8b5760005b8351811015610d8957828181518110610d3057610d306117aa565b602002602001015160036000868481518110610d4e57610d4e6117aa565b602002602001015181526020019081526020016000206000828254610d7391906116e2565b90915550610d82905081611779565b9050610d15565b505b6001600160a01b038416610ab35760005b8351811015610cb057828181518110610db757610db76117aa565b602002602001015160036000868481518110610dd557610dd56117aa565b602002602001015181526020019081526020016000206000828254610dfa91906116fa565b90915550610e09905081611779565b9050610d9c565b6001600160a01b0384163b15610ab35760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610e54908990899088908890889060040161154e565b602060405180830381600087803b158015610e6e57600080fd5b505af1925050508015610e9e575060408051601f3d908101601f19168201909252610e9b91810190611432565b60015b610f4b57610eaa6117d6565b806308c379a01415610ee45750610ebf6117f2565b80610eca5750610ee6565b8060405162461bcd60e51b81526004016102ce91906115d4565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016102ce565b6001600160e01b0319811663f23a6e6160e01b14610cb05760405162461bcd60e51b81526004016102ce906115e7565b6001600160a01b0384163b15610ab35760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610fbf90899089908890889088906004016114f0565b602060405180830381600087803b158015610fd957600080fd5b505af1925050508015611009575060408051601f3d908101601f1916820190925261100691810190611432565b60015b61101557610eaa6117d6565b6001600160e01b0319811663bc197c8160e01b14610cb05760405162461bcd60e51b81526004016102ce906115e7565b80356001600160a01b038116811461073457600080fd5b600082601f83011261106d57600080fd5b8135602061107a826116be565b604051611087828261174c565b8381528281019150858301600585901b870184018810156110a757600080fd5b60005b858110156110c6578135845292840192908401906001016110aa565b5090979650505050505050565b600082601f8301126110e457600080fd5b813567ffffffffffffffff8111156110fe576110fe6117c0565b604051611115601f8301601f19166020018261174c565b81815284602083860101111561112a57600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561115957600080fd5b61116282611045565b9392505050565b6000806040838503121561117c57600080fd5b61118583611045565b915061119360208401611045565b90509250929050565b600080600080600060a086880312156111b457600080fd5b6111bd86611045565b94506111cb60208701611045565b9350604086013567ffffffffffffffff808211156111e857600080fd5b6111f489838a0161105c565b9450606088013591508082111561120a57600080fd5b61121689838a0161105c565b9350608088013591508082111561122c57600080fd5b50611239888289016110d3565b9150509295509295909350565b600080600080600060a0868803121561125e57600080fd5b61126786611045565b945061127560208701611045565b93506040860135925060608601359150608086013567ffffffffffffffff81111561129f57600080fd5b611239888289016110d3565b600080604083850312156112be57600080fd5b6112c783611045565b9150602083013580151581146112dc57600080fd5b809150509250929050565b600080604083850312156112fa57600080fd5b61130383611045565b946020939093013593505050565b60008060006060848603121561132657600080fd5b61132f84611045565b95602085013595506040909401359392505050565b6000806040838503121561135757600080fd5b823567ffffffffffffffff8082111561136f57600080fd5b818501915085601f83011261138357600080fd5b81356020611390826116be565b60405161139d828261174c565b8381528281019150858301600585901b870184018b10156113bd57600080fd5b600096505b848710156113e7576113d381611045565b8352600196909601959183019183016113c2565b50965050860135925050808211156113fe57600080fd5b5061140b8582860161105c565b9150509250929050565b60006020828403121561142757600080fd5b81356111628161187c565b60006020828403121561144457600080fd5b81516111628161187c565b60006020828403121561146157600080fd5b5035919050565b600081518084526020808501945080840160005b838110156114985781518752958201959082019060010161147c565b509495945050505050565b6000815180845260005b818110156114c9576020818501810151868301820152016114ad565b818111156114db576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a06040820181905260009061151c90830186611468565b828103606084015261152e8186611468565b9050828103608084015261154281856114a3565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611588908301846114a3565b979650505050505050565b6020815260006111626020830184611468565b6040815260006115b96040830185611468565b82810360208401526115cb8185611468565b95945050505050565b60208152600061116260208301846114a3565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600067ffffffffffffffff8211156116d8576116d86117c0565b5060051b60200190565b600082198211156116f5576116f5611794565b500190565b60008282101561170c5761170c611794565b500390565b600181811c9082168061172557607f821691505b6020821081141561174657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff81118282101715611772576117726117c0565b6040525050565b600060001982141561178d5761178d611794565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d11156117ef5760046000803e5060005160e01c5b90565b600060443d10156118005790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561183057505050505090565b82850191508151818111156118485750505050505090565b843d87010160208285010111156118625750505050505090565b6118716020828601018761174c565b509095945050505050565b6001600160e01b03198116811461189257600080fd5b5056fea2646970667358221220e940295d673465ee7f2c5d98a7ccd0169a1c65fcf35a17777ba830b07f62971f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xBD85B039 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0xCB450772 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x4F558E79 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x156E29F6 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x4B8C9C2D EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE6 PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0x12E7 JUMP JUMPDEST PUSH2 0x266 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x107 CALLDATASIZE PUSH1 0x4 PUSH2 0x1415 JUMP JUMPDEST PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF0 JUMP JUMPDEST PUSH2 0x12F PUSH2 0x12A CALLDATASIZE PUSH1 0x4 PUSH2 0x144F JUMP JUMPDEST PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x15D4 JUMP JUMPDEST PUSH2 0x10C PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x1311 JUMP JUMPDEST PUSH2 0x3E3 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x119C JUMP JUMPDEST PUSH2 0x462 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x177 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF0 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0x1344 JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x1593 JUMP JUMPDEST PUSH2 0x10C PUSH2 0x1BD CALLDATASIZE PUSH1 0x4 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0x12AB JUMP JUMPDEST PUSH2 0x623 JUMP JUMPDEST PUSH2 0xE6 PUSH2 0x1F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x10C PUSH2 0x212 CALLDATASIZE PUSH1 0x4 PUSH2 0x1147 JUMP JUMPDEST PUSH2 0x632 JUMP JUMPDEST PUSH2 0x10C PUSH2 0x225 CALLDATASIZE PUSH1 0x4 PUSH2 0x1169 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x261 CALLDATASIZE PUSH1 0x4 PUSH2 0x1246 JUMP JUMPDEST PUSH2 0x739 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x32E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x349 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x35E SWAP1 PUSH2 0x1711 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x38A SWAP1 PUSH2 0x1711 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3AC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3BA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x43D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x2CB7BA9030B932903737BA103BB434BA32B634B9BA32B217 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2CE JUMP JUMPDEST PUSH2 0x458 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7C0 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x47E JUMPI POP PUSH2 0x47E DUP6 CALLER PUSH2 0x225 JUMP JUMPDEST PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2CE JUMP JUMPDEST PUSH2 0x4F2 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x8D0 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x55E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x57A JUMPI PUSH2 0x57A PUSH2 0x17C0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5A3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x61B JUMPI PUSH2 0x5EE DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5C7 JUMPI PUSH2 0x5C7 PUSH2 0x17AA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5E1 JUMPI PUSH2 0x5E1 PUSH2 0x17AA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x266 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x600 JUMPI PUSH2 0x600 PUSH2 0x17AA JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x614 DUP2 PUSH2 0x1779 JUMP JUMPDEST SWAP1 POP PUSH2 0x5A9 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x62E CALLER DUP4 DUP4 PUSH2 0xABB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER ISZERO PUSH2 0x67D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x2CB7BA9030B932903737BA103BB434BA32B634B9BA32B217 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x6E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F7669646564206164647265737320616C72656164792073616665206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xD4C1AF98B758421A8D47B0BC04ECFA30233D5506955E8CDE282417AA0D31D3B6 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x755 JUMPI POP PUSH2 0x755 DUP6 CALLER PUSH2 0x225 JUMP JUMPDEST PUSH2 0x7B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2CE JUMP JUMPDEST PUSH2 0x4F2 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xB9C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x820 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2CE JUMP JUMPDEST CALLER PUSH2 0x840 DUP2 PUSH1 0x0 DUP8 PUSH2 0x831 DUP9 PUSH2 0xCB9 JUMP JUMPDEST PUSH2 0x83A DUP9 PUSH2 0xCB9 JUMP JUMPDEST DUP8 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x870 SWAP1 DUP5 SWAP1 PUSH2 0x16E2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP6 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x4F2 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0xE10 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x932 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x958 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CE SWAP1 PUSH2 0x162F JUMP JUMPDEST CALLER PUSH2 0x967 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xA4D JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x987 JUMPI PUSH2 0x987 PUSH2 0x17AA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x9A5 JUMPI PUSH2 0x9A5 PUSH2 0x17AA JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x9F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CE SWAP1 PUSH2 0x1674 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xA32 SWAP1 DUP5 SWAP1 PUSH2 0x16E2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xA46 SWAP1 PUSH2 0x1779 JUMP JUMPDEST SWAP1 POP PUSH2 0x96A JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA9D SWAP3 SWAP2 SWAP1 PUSH2 0x15A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xAB3 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xF7B JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xB2F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xBC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CE SWAP1 PUSH2 0x162F JUMP JUMPDEST CALLER PUSH2 0xBD2 DUP2 DUP8 DUP8 PUSH2 0x831 DUP9 PUSH2 0xCB9 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0xC13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CE SWAP1 PUSH2 0x1674 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0xC50 SWAP1 DUP5 SWAP1 PUSH2 0x16E2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xCB0 DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xE10 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xCF3 JUMPI PUSH2 0xCF3 PUSH2 0x17AA JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xD8B JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xD89 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xD30 JUMPI PUSH2 0xD30 PUSH2 0x17AA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xD4E JUMPI PUSH2 0xD4E PUSH2 0x17AA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD73 SWAP2 SWAP1 PUSH2 0x16E2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xD82 SWAP1 POP DUP2 PUSH2 0x1779 JUMP JUMPDEST SWAP1 POP PUSH2 0xD15 JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xAB3 JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xCB0 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xDB7 JUMPI PUSH2 0xDB7 PUSH2 0x17AA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xDD5 JUMPI PUSH2 0xDD5 PUSH2 0x17AA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDFA SWAP2 SWAP1 PUSH2 0x16FA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xE09 SWAP1 POP DUP2 PUSH2 0x1779 JUMP JUMPDEST SWAP1 POP PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xAB3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xE54 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x154E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xE9E JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xE9B SWAP2 DUP2 ADD SWAP1 PUSH2 0x1432 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xF4B JUMPI PUSH2 0xEAA PUSH2 0x17D6 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xEE4 JUMPI POP PUSH2 0xEBF PUSH2 0x17F2 JUMP JUMPDEST DUP1 PUSH2 0xECA JUMPI POP PUSH2 0xEE6 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x15D4 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xCB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CE SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xAB3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xFBF SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x14F0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1009 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1006 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1432 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1015 JUMPI PUSH2 0xEAA PUSH2 0x17D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xCB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CE SWAP1 PUSH2 0x15E7 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x734 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x106D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x107A DUP3 PUSH2 0x16BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1087 DUP3 DUP3 PUSH2 0x174C JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x10A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x10C6 JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x10AA JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x10E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10FE JUMPI PUSH2 0x10FE PUSH2 0x17C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1115 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x174C JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x112A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1162 DUP3 PUSH2 0x1045 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x117C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1185 DUP4 PUSH2 0x1045 JUMP JUMPDEST SWAP2 POP PUSH2 0x1193 PUSH1 0x20 DUP5 ADD PUSH2 0x1045 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x11B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11BD DUP7 PUSH2 0x1045 JUMP JUMPDEST SWAP5 POP PUSH2 0x11CB PUSH1 0x20 DUP8 ADD PUSH2 0x1045 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x11E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F4 DUP10 DUP4 DUP11 ADD PUSH2 0x105C JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x120A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1216 DUP10 DUP4 DUP11 ADD PUSH2 0x105C JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x122C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1239 DUP9 DUP3 DUP10 ADD PUSH2 0x10D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x125E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1267 DUP7 PUSH2 0x1045 JUMP JUMPDEST SWAP5 POP PUSH2 0x1275 PUSH1 0x20 DUP8 ADD PUSH2 0x1045 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x129F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1239 DUP9 DUP3 DUP10 ADD PUSH2 0x10D3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12C7 DUP4 PUSH2 0x1045 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x12DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1303 DUP4 PUSH2 0x1045 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x132F DUP5 PUSH2 0x1045 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x136F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1383 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1390 DUP3 PUSH2 0x16BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139D DUP3 DUP3 PUSH2 0x174C JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0x13BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x13E7 JUMPI PUSH2 0x13D3 DUP2 PUSH2 0x1045 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x13C2 JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x13FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x140B DUP6 DUP3 DUP7 ADD PUSH2 0x105C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1427 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1162 DUP2 PUSH2 0x187C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1162 DUP2 PUSH2 0x187C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1498 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x147C JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x14C9 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x14AD JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x14DB JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x151C SWAP1 DUP4 ADD DUP7 PUSH2 0x1468 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x152E DUP2 DUP7 PUSH2 0x1468 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1542 DUP2 DUP6 PUSH2 0x14A3 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1588 SWAP1 DUP4 ADD DUP5 PUSH2 0x14A3 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1162 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1468 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x15B9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1468 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x15CB DUP2 DUP6 PUSH2 0x1468 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1162 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14A3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x16D8 JUMPI PUSH2 0x16D8 PUSH2 0x17C0 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x16F5 JUMPI PUSH2 0x16F5 PUSH2 0x1794 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x170C JUMPI PUSH2 0x170C PUSH2 0x1794 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1725 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1746 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1772 JUMPI PUSH2 0x1772 PUSH2 0x17C0 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x178D JUMPI PUSH2 0x178D PUSH2 0x1794 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x17EF JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1800 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1830 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1848 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1862 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1871 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x174C JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1892 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 BLOCKHASH 0x29 0x5D PUSH8 0x3465EE7F2C5D98A7 0xCC 0xD0 AND SWAP11 SHR PUSH6 0xFCF35A17777B 0xA8 ADDRESS 0xB0 PUSH32 0x62971F64736F6C63430008070033000000000000000000000000000000000000 ",
							"sourceMap": "204:1056:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2170:228:0;;;;;;:::i;:::-;;:::i;:::-;;;15454:25:10;;;15442:2;15427:18;2170:228:0;;;;;;;;1221:305;;;;;;:::i;:::-;;:::i;:::-;;;9779:14:10;;9772:22;9754:41;;9742:2;9727:18;1221:305:0;9614:187:10;1925:103:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1101:154:9:-;;;;;;:::i;:::-;;:::i;4045:430:0:-;;;;;;:::i;:::-;;:::i;:::-;;290:24:9;;;;;-1:-1:-1;;;;;290:24:9;;;;;;-1:-1:-1;;;;;7438:32:10;;;7420:51;;7408:2;7393:18;290:24:9;7274:203:10;2555:508:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;886:120:3:-;;;;;;:::i;:::-;943:4;770:16;;;:12;:16;;;;;;-1:-1:-1;;;886:120:3;3131:153:0;;;;;;:::i;:::-;;:::i;682:111:3:-;;;;;;:::i;:::-;744:7;770:16;;;:12;:16;;;;;;;682:111;547:251:9;;;;;;:::i;:::-;;:::i;3351:166:0:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3473:27:0;;;3450:4;3473:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3351:166;3584:389;;;;;;:::i;:::-;;:::i;2170:228::-;2256:7;-1:-1:-1;;;;;2283:21:0;;2275:77;;;;-1:-1:-1;;;2275:77:0;;11062:2:10;2275:77:0;;;11044:21:10;11101:2;11081:18;;;11074:30;11140:34;11120:18;;;11113:62;-1:-1:-1;;;11191:18:10;;;11184:41;11242:19;;2275:77:0;;;;;;;;;-1:-1:-1;2369:9:0;:13;;;;;;;;;;;-1:-1:-1;;;;;2369:22:0;;;;;;;;;;;;2170:228::o;1221:305::-;1323:4;-1:-1:-1;;;;;;1358:41:0;;-1:-1:-1;;;1358:41:0;;:109;;-1:-1:-1;;;;;;;1415:52:0;;-1:-1:-1;;;1415:52:0;1358:109;:161;;;-1:-1:-1;;;;;;;;;;937:40:7;;;1483:36:0;1339:180;1221:305;-1:-1:-1;;1221:305:0:o;1925:103::-;1985:13;2017:4;2010:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1925:103;;;:::o;1101:154:9:-;912:10;1183:4;904:19;;;:7;:19;;;;;;;;896:56;;;;-1:-1:-1;;;896:56:9;;13120:2:10;896:56:9;;;13102:21:10;13159:2;13139:18;;;13132:30;-1:-1:-1;;;13178:18:10;;;13171:54;13242:18;;896:56:9;12918:348:10;896:56:9;1200:25:::1;1206:2;1210;1214:6;1200:25;;;;;;;;;;;::::0;:5:::1;:25::i;:::-;-1:-1:-1::0;1243:4:9::1;1101:154:::0;;;;;:::o;4045:430:0:-;-1:-1:-1;;;;;4270:20:0;;719:10:6;4270:20:0;;:60;;-1:-1:-1;4294:36:0;4311:4;719:10:6;3351:166:0;:::i;4294:36::-;4249:157;;;;-1:-1:-1;;;4249:157:0;;12290:2:10;4249:157:0;;;12272:21:10;12329:2;12309:18;;;12302:30;12368:34;12348:18;;;12341:62;-1:-1:-1;;;12419:18:10;;;12412:48;12477:19;;4249:157:0;12088:414:10;4249:157:0;4416:52;4439:4;4445:2;4449:3;4454:7;4463:4;4416:22;:52::i;:::-;4045:430;;;;;:::o;2555:508::-;2706:16;2765:3;:10;2746:8;:15;:29;2738:83;;;;-1:-1:-1;;;2738:83:0;;13883:2:10;2738:83:0;;;13865:21:10;13922:2;13902:18;;;13895:30;13961:34;13941:18;;;13934:62;-1:-1:-1;;;14012:18:10;;;14005:39;14061:19;;2738:83:0;13681:405:10;2738:83:0;2832:30;2879:8;:15;2865:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2865:30:0;;2832:63;;2911:9;2906:120;2930:8;:15;2926:1;:19;2906:120;;;2985:30;2995:8;3004:1;2995:11;;;;;;;;:::i;:::-;;;;;;;3008:3;3012:1;3008:6;;;;;;;;:::i;:::-;;;;;;;2985:9;:30::i;:::-;2966:13;2980:1;2966:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2947:3;;;:::i;:::-;;;2906:120;;;-1:-1:-1;3043:13:0;2555:508;-1:-1:-1;;;2555:508:0:o;3131:153::-;3225:52;719:10:6;3258:8:0;3268;3225:18;:52::i;:::-;3131:153;;:::o;547:251:9:-;616:4;1022:10;:22;1014:59;;;;-1:-1:-1;;;1014:59:9;;13120:2:10;1014:59:9;;;13102:21:10;13159:2;13139:18;;;13132:30;-1:-1:-1;;;13178:18:10;;;13171:54;13242:18;;1014:59:9;12918:348:10;1014:59:9;646:9:::1;::::0;-1:-1:-1;;;;;646:15:9;;::::1;:9:::0;::::1;:15;;638:65;;;::::0;-1:-1:-1;;;638:65:9;;15104:2:10;638:65:9::1;::::0;::::1;15086:21:10::0;15143:2;15123:18;;;15116:30;15182:34;15162:18;;;15155:62;-1:-1:-1;;;15233:18:10;;;15226:35;15278:19;;638:65:9::1;14902:401:10::0;638:65:9::1;714:9;:16:::0;;-1:-1:-1;;;;;;714:16:9::1;-1:-1:-1::0;;;;;714:16:9;::::1;::::0;;::::1;::::0;;;746:22:::1;::::0;::::1;::::0;-1:-1:-1;;746:22:9::1;-1:-1:-1::0;786:4:9::1;1084:1;547:251:::0;;;:::o;3584:389:0:-;-1:-1:-1;;;;;3784:20:0;;719:10:6;3784:20:0;;:60;;-1:-1:-1;3808:36:0;3825:4;719:10:6;3351:166:0;:::i;3808:36::-;3763:148;;;;-1:-1:-1;;;3763:148:0;;11474:2:10;3763:148:0;;;11456:21:10;11513:2;11493:18;;;11486:30;11552:34;11532:18;;;11525:62;-1:-1:-1;;;11603:18:10;;;11596:39;11652:19;;3763:148:0;11272:405:10;3763:148:0;3921:45;3939:4;3945:2;3949;3953:6;3961:4;3921:17;:45::i;8395:553::-;-1:-1:-1;;;;;8542:16:0;;8534:62;;;;-1:-1:-1;;;8534:62:0;;14702:2:10;8534:62:0;;;14684:21:10;14741:2;14721:18;;;14714:30;14780:34;14760:18;;;14753:62;-1:-1:-1;;;14831:18:10;;;14824:31;14872:19;;8534:62:0;14500:397:10;8534:62:0;719:10:6;8649:102:0;719:10:6;8607:16:0;8692:2;8696:21;8714:2;8696:17;:21::i;:::-;8719:25;8737:6;8719:17;:25::i;:::-;8746:4;8649:20;:102::i;:::-;8762:9;:13;;;;;;;;;;;-1:-1:-1;;;;;8762:17:0;;;;;;;;;:27;;8783:6;;8762:9;:27;;8783:6;;8762:27;:::i;:::-;;;;-1:-1:-1;;8804:52:0;;;15664:25:10;;;15720:2;15705:18;;15698:34;;;-1:-1:-1;;;;;8804:52:0;;;;8837:1;;8804:52;;;;;;15637:18:10;8804:52:0;;;;;;;8867:74;8898:8;8916:1;8920:2;8924;8928:6;8936:4;8867:30;:74::i;6068:1045::-;6288:7;:14;6274:3;:10;:28;6266:81;;;;-1:-1:-1;;;6266:81:0;;14293:2:10;6266:81:0;;;14275:21:10;14332:2;14312:18;;;14305:30;14371:34;14351:18;;;14344:62;-1:-1:-1;;;14422:18:10;;;14415:38;14470:19;;6266:81:0;14091:404:10;6266:81:0;-1:-1:-1;;;;;6365:16:0;;6357:66;;;;-1:-1:-1;;;6357:66:0;;;;;;;:::i;:::-;719:10:6;6476:60:0;719:10:6;6507:4:0;6513:2;6517:3;6522:7;6531:4;6476:20;:60::i;:::-;6552:9;6547:411;6571:3;:10;6567:1;:14;6547:411;;;6602:10;6615:3;6619:1;6615:6;;;;;;;;:::i;:::-;;;;;;;6602:19;;6635:14;6652:7;6660:1;6652:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6677:19;6699:13;;;;;;;;;;-1:-1:-1;;;;;6699:19:0;;;;;;;;;;;;6652:10;;-1:-1:-1;6740:21:0;;;;6732:76;;;;-1:-1:-1;;;6732:76:0;;;;;;;:::i;:::-;6850:9;:13;;;;;;;;;;;-1:-1:-1;;;;;6850:19:0;;;;;;;;;;6872:20;;;6850:42;;6920:17;;;;;;;:27;;6872:20;;6850:9;6920:27;;6872:20;;6920:27;:::i;:::-;;;;;;;;6588:370;;;6583:3;;;;:::i;:::-;;;6547:411;;;;7003:2;-1:-1:-1;;;;;6973:47:0;6997:4;-1:-1:-1;;;;;6973:47:0;6987:8;-1:-1:-1;;;;;6973:47:0;;7007:3;7012:7;6973:47;;;;;;;:::i;:::-;;;;;;;;7031:75;7067:8;7077:4;7083:2;7087:3;7092:7;7101:4;7031:35;:75::i;:::-;6256:857;6068:1045;;;;;:::o;12074:323::-;12224:8;-1:-1:-1;;;;;12215:17:0;:5;-1:-1:-1;;;;;12215:17:0;;;12207:71;;;;-1:-1:-1;;;12207:71:0;;13473:2:10;12207:71:0;;;13455:21:10;13512:2;13492:18;;;13485:30;13551:34;13531:18;;;13524:62;-1:-1:-1;;;13602:18:10;;;13595:39;13651:19;;12207:71:0;13271:405:10;12207:71:0;-1:-1:-1;;;;;12288:25:0;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12288:46:0;;;;;;;;;;12349:41;;9754::10;;;12349::0;;9727:18:10;12349:41:0;;;;;;;12074:323;;;:::o;4925:797::-;-1:-1:-1;;;;;5106:16:0;;5098:66;;;;-1:-1:-1;;;5098:66:0;;;;;;;:::i;:::-;719:10:6;5217:96:0;719:10:6;5248:4:0;5254:2;5258:21;5276:2;5258:17;:21::i;5217:96::-;5324:19;5346:13;;;;;;;;;;;-1:-1:-1;;;;;5346:19:0;;;;;;;;;;5383:21;;;;5375:76;;;;-1:-1:-1;;;5375:76:0;;;;;;;:::i;:::-;5485:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5485:19:0;;;;;;;;;;5507:20;;;5485:42;;5547:17;;;;;;;:27;;5507:20;;5485:9;5547:27;;5507:20;;5547:27;:::i;:::-;;;;-1:-1:-1;;5590:46:0;;;15664:25:10;;;15720:2;15705:18;;15698:34;;;-1:-1:-1;;;;;5590:46:0;;;;;;;;;;;;;;15637:18:10;5590:46:0;;;;;;;5647:68;5678:8;5688:4;5694:2;5698;5702:6;5710:4;5647:30;:68::i;:::-;5088:634;;4925:797;;;;;:::o;15080:193::-;15199:16;;;15213:1;15199:16;;;;;;;;;15146;;15174:22;;15199:16;;;;;;;;;;;;-1:-1:-1;15199:16:0;15174:41;;15236:7;15225:5;15231:1;15225:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;15261:5;15080:193;-1:-1:-1;;15080:193:0:o;1076:634:3:-;-1:-1:-1;;;;;1388:18:3;;1384:156;;1427:9;1422:108;1446:3;:10;1442:1;:14;1422:108;;;1505:7;1513:1;1505:10;;;;;;;;:::i;:::-;;;;;;;1481:12;:20;1494:3;1498:1;1494:6;;;;;;;;:::i;:::-;;;;;;;1481:20;;;;;;;;;;;;:34;;;;;;;:::i;:::-;;;;-1:-1:-1;1458:3:3;;-1:-1:-1;1458:3:3;;:::i;:::-;;;1422:108;;;;1384:156;-1:-1:-1;;;;;1554:16:3;;1550:154;;1591:9;1586:108;1610:3;:10;1606:1;:14;1586:108;;;1669:7;1677:1;1669:10;;;;;;;;:::i;:::-;;;;;;;1645:12;:20;1658:3;1662:1;1658:6;;;;;;;;:::i;:::-;;;;;;;1645:20;;;;;;;;;;;;:34;;;;;;;:::i;:::-;;;;-1:-1:-1;1622:3:3;;-1:-1:-1;1622:3:3;;:::i;:::-;;;1586:108;;13551:725:0;-1:-1:-1;;;;;13758:13:0;;1465:19:5;:23;13754:516:0;;13793:72;;-1:-1:-1;;;13793:72:0;;-1:-1:-1;;;;;13793:38:0;;;;;:72;;13832:8;;13842:4;;13848:2;;13852:6;;13860:4;;13793:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13793:72:0;;;;;;;;-1:-1:-1;;13793:72:0;;;;;;;;;;;;:::i;:::-;;;13789:471;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;14136:6;14129:14;;-1:-1:-1;;;14129:14:0;;;;;;;;:::i;13789:471::-;;;14183:62;;-1:-1:-1;;;14183:62:0;;10232:2:10;14183:62:0;;;10214:21:10;10271:2;10251:18;;;10244:30;10310:34;10290:18;;;10283:62;-1:-1:-1;;;10361:18:10;;;10354:50;10421:19;;14183:62:0;10030:416:10;13789:471:0;-1:-1:-1;;;;;;13914:55:0;;-1:-1:-1;;;13914:55:0;13910:152;;13993:50;;-1:-1:-1;;;13993:50:0;;;;;;;:::i;14282:792::-;-1:-1:-1;;;;;14514:13:0;;1465:19:5;:23;14510:558:0;;14549:79;;-1:-1:-1;;;14549:79:0;;-1:-1:-1;;;;;14549:43:0;;;;;:79;;14593:8;;14603:4;;14609:3;;14614:7;;14623:4;;14549:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14549:79:0;;;;;;;;-1:-1:-1;;14549:79:0;;;;;;;;;;;;:::i;:::-;;;14545:513;;;;:::i;:::-;-1:-1:-1;;;;;;14707:60:0;;-1:-1:-1;;;14707:60:0;14703:157;;14791:50;;-1:-1:-1;;;14791:50:0;;;;;;;:::i;14:173:10:-;82:20;;-1:-1:-1;;;;;131:31:10;;121:42;;111:70;;177:1;174;167:12;192:735;246:5;299:3;292:4;284:6;280:17;276:27;266:55;;317:1;314;307:12;266:55;353:6;340:20;379:4;402:43;442:2;402:43;:::i;:::-;474:2;468:9;486:31;514:2;506:6;486:31;:::i;:::-;552:18;;;586:15;;;;-1:-1:-1;621:15:10;;;671:1;667:10;;;655:23;;651:32;;648:41;-1:-1:-1;645:61:10;;;702:1;699;692:12;645:61;724:1;734:163;748:2;745:1;742:9;734:163;;;805:17;;793:30;;843:12;;;;875;;;;766:1;759:9;734:163;;;-1:-1:-1;915:6:10;;192:735;-1:-1:-1;;;;;;;192:735:10:o;932:555::-;974:5;1027:3;1020:4;1012:6;1008:17;1004:27;994:55;;1045:1;1042;1035:12;994:55;1081:6;1068:20;1107:18;1103:2;1100:26;1097:52;;;1129:18;;:::i;:::-;1178:2;1172:9;1190:67;1245:2;1226:13;;-1:-1:-1;;1222:27:10;1251:4;1218:38;1172:9;1190:67;:::i;:::-;1281:2;1273:6;1266:18;1327:3;1320:4;1315:2;1307:6;1303:15;1299:26;1296:35;1293:55;;;1344:1;1341;1334:12;1293:55;1408:2;1401:4;1393:6;1389:17;1382:4;1374:6;1370:17;1357:54;1455:1;1431:15;;;1448:4;1427:26;1420:37;;;;1435:6;932:555;-1:-1:-1;;;932:555:10:o;1492:186::-;1551:6;1604:2;1592:9;1583:7;1579:23;1575:32;1572:52;;;1620:1;1617;1610:12;1572:52;1643:29;1662:9;1643:29;:::i;:::-;1633:39;1492:186;-1:-1:-1;;;1492:186:10:o;1683:260::-;1751:6;1759;1812:2;1800:9;1791:7;1787:23;1783:32;1780:52;;;1828:1;1825;1818:12;1780:52;1851:29;1870:9;1851:29;:::i;:::-;1841:39;;1899:38;1933:2;1922:9;1918:18;1899:38;:::i;:::-;1889:48;;1683:260;;;;;:::o;1948:943::-;2102:6;2110;2118;2126;2134;2187:3;2175:9;2166:7;2162:23;2158:33;2155:53;;;2204:1;2201;2194:12;2155:53;2227:29;2246:9;2227:29;:::i;:::-;2217:39;;2275:38;2309:2;2298:9;2294:18;2275:38;:::i;:::-;2265:48;;2364:2;2353:9;2349:18;2336:32;2387:18;2428:2;2420:6;2417:14;2414:34;;;2444:1;2441;2434:12;2414:34;2467:61;2520:7;2511:6;2500:9;2496:22;2467:61;:::i;:::-;2457:71;;2581:2;2570:9;2566:18;2553:32;2537:48;;2610:2;2600:8;2597:16;2594:36;;;2626:1;2623;2616:12;2594:36;2649:63;2704:7;2693:8;2682:9;2678:24;2649:63;:::i;:::-;2639:73;;2765:3;2754:9;2750:19;2737:33;2721:49;;2795:2;2785:8;2782:16;2779:36;;;2811:1;2808;2801:12;2779:36;;2834:51;2877:7;2866:8;2855:9;2851:24;2834:51;:::i;:::-;2824:61;;;1948:943;;;;;;;;:::o;2896:606::-;3000:6;3008;3016;3024;3032;3085:3;3073:9;3064:7;3060:23;3056:33;3053:53;;;3102:1;3099;3092:12;3053:53;3125:29;3144:9;3125:29;:::i;:::-;3115:39;;3173:38;3207:2;3196:9;3192:18;3173:38;:::i;:::-;3163:48;;3258:2;3247:9;3243:18;3230:32;3220:42;;3309:2;3298:9;3294:18;3281:32;3271:42;;3364:3;3353:9;3349:19;3336:33;3392:18;3384:6;3381:30;3378:50;;;3424:1;3421;3414:12;3378:50;3447:49;3488:7;3479:6;3468:9;3464:22;3447:49;:::i;3507:347::-;3572:6;3580;3633:2;3621:9;3612:7;3608:23;3604:32;3601:52;;;3649:1;3646;3639:12;3601:52;3672:29;3691:9;3672:29;:::i;:::-;3662:39;;3751:2;3740:9;3736:18;3723:32;3798:5;3791:13;3784:21;3777:5;3774:32;3764:60;;3820:1;3817;3810:12;3764:60;3843:5;3833:15;;;3507:347;;;;;:::o;3859:254::-;3927:6;3935;3988:2;3976:9;3967:7;3963:23;3959:32;3956:52;;;4004:1;4001;3994:12;3956:52;4027:29;4046:9;4027:29;:::i;:::-;4017:39;4103:2;4088:18;;;;4075:32;;-1:-1:-1;;;3859:254:10:o;4118:322::-;4195:6;4203;4211;4264:2;4252:9;4243:7;4239:23;4235:32;4232:52;;;4280:1;4277;4270:12;4232:52;4303:29;4322:9;4303:29;:::i;:::-;4293:39;4379:2;4364:18;;4351:32;;-1:-1:-1;4430:2:10;4415:18;;;4402:32;;4118:322;-1:-1:-1;;;4118:322:10:o;4445:1219::-;4563:6;4571;4624:2;4612:9;4603:7;4599:23;4595:32;4592:52;;;4640:1;4637;4630:12;4592:52;4680:9;4667:23;4709:18;4750:2;4742:6;4739:14;4736:34;;;4766:1;4763;4756:12;4736:34;4804:6;4793:9;4789:22;4779:32;;4849:7;4842:4;4838:2;4834:13;4830:27;4820:55;;4871:1;4868;4861:12;4820:55;4907:2;4894:16;4929:4;4952:43;4992:2;4952:43;:::i;:::-;5024:2;5018:9;5036:31;5064:2;5056:6;5036:31;:::i;:::-;5102:18;;;5136:15;;;;-1:-1:-1;5171:11:10;;;5213:1;5209:10;;;5201:19;;5197:28;;5194:41;-1:-1:-1;5191:61:10;;;5248:1;5245;5238:12;5191:61;5270:1;5261:10;;5280:169;5294:2;5291:1;5288:9;5280:169;;;5351:23;5370:3;5351:23;:::i;:::-;5339:36;;5312:1;5305:9;;;;;5395:12;;;;5427;;5280:169;;;-1:-1:-1;5468:6:10;-1:-1:-1;;5512:18:10;;5499:32;;-1:-1:-1;;5543:16:10;;;5540:36;;;5572:1;5569;5562:12;5540:36;;5595:63;5650:7;5639:8;5628:9;5624:24;5595:63;:::i;:::-;5585:73;;;4445:1219;;;;;:::o;5669:245::-;5727:6;5780:2;5768:9;5759:7;5755:23;5751:32;5748:52;;;5796:1;5793;5786:12;5748:52;5835:9;5822:23;5854:30;5878:5;5854:30;:::i;5919:249::-;5988:6;6041:2;6029:9;6020:7;6016:23;6012:32;6009:52;;;6057:1;6054;6047:12;6009:52;6089:9;6083:16;6108:30;6132:5;6108:30;:::i;6173:180::-;6232:6;6285:2;6273:9;6264:7;6260:23;6256:32;6253:52;;;6301:1;6298;6291:12;6253:52;-1:-1:-1;6324:23:10;;6173:180;-1:-1:-1;6173:180:10:o;6358:435::-;6411:3;6449:5;6443:12;6476:6;6471:3;6464:19;6502:4;6531:2;6526:3;6522:12;6515:19;;6568:2;6561:5;6557:14;6589:1;6599:169;6613:6;6610:1;6607:13;6599:169;;;6674:13;;6662:26;;6708:12;;;;6743:15;;;;6635:1;6628:9;6599:169;;;-1:-1:-1;6784:3:10;;6358:435;-1:-1:-1;;;;;6358:435:10:o;6798:471::-;6839:3;6877:5;6871:12;6904:6;6899:3;6892:19;6929:1;6939:162;6953:6;6950:1;6947:13;6939:162;;;7015:4;7071:13;;;7067:22;;7061:29;7043:11;;;7039:20;;7032:59;6968:12;6939:162;;;7119:6;7116:1;7113:13;7110:87;;;7185:1;7178:4;7169:6;7164:3;7160:16;7156:27;7149:38;7110:87;-1:-1:-1;7251:2:10;7230:15;-1:-1:-1;;7226:29:10;7217:39;;;;7258:4;7213:50;;6798:471;-1:-1:-1;;6798:471:10:o;7482:826::-;-1:-1:-1;;;;;7879:15:10;;;7861:34;;7931:15;;7926:2;7911:18;;7904:43;7841:3;7978:2;7963:18;;7956:31;;;7804:4;;8010:57;;8047:19;;8039:6;8010:57;:::i;:::-;8115:9;8107:6;8103:22;8098:2;8087:9;8083:18;8076:50;8149:44;8186:6;8178;8149:44;:::i;:::-;8135:58;;8242:9;8234:6;8230:22;8224:3;8213:9;8209:19;8202:51;8270:32;8295:6;8287;8270:32;:::i;:::-;8262:40;7482:826;-1:-1:-1;;;;;;;;7482:826:10:o;8313:560::-;-1:-1:-1;;;;;8610:15:10;;;8592:34;;8662:15;;8657:2;8642:18;;8635:43;8709:2;8694:18;;8687:34;;;8752:2;8737:18;;8730:34;;;8572:3;8795;8780:19;;8773:32;;;8535:4;;8822:45;;8847:19;;8839:6;8822:45;:::i;:::-;8814:53;8313:560;-1:-1:-1;;;;;;;8313:560:10:o;8878:261::-;9057:2;9046:9;9039:21;9020:4;9077:56;9129:2;9118:9;9114:18;9106:6;9077:56;:::i;9144:465::-;9401:2;9390:9;9383:21;9364:4;9427:56;9479:2;9468:9;9464:18;9456:6;9427:56;:::i;:::-;9531:9;9523:6;9519:22;9514:2;9503:9;9499:18;9492:50;9559:44;9596:6;9588;9559:44;:::i;:::-;9551:52;9144:465;-1:-1:-1;;;;;9144:465:10:o;9806:219::-;9955:2;9944:9;9937:21;9918:4;9975:44;10015:2;10004:9;10000:18;9992:6;9975:44;:::i;10451:404::-;10653:2;10635:21;;;10692:2;10672:18;;;10665:30;10731:34;10726:2;10711:18;;10704:62;-1:-1:-1;;;10797:2:10;10782:18;;10775:38;10845:3;10830:19;;10451:404::o;11682:401::-;11884:2;11866:21;;;11923:2;11903:18;;;11896:30;11962:34;11957:2;11942:18;;11935:62;-1:-1:-1;;;12028:2:10;12013:18;;12006:35;12073:3;12058:19;;11682:401::o;12507:406::-;12709:2;12691:21;;;12748:2;12728:18;;;12721:30;12787:34;12782:2;12767:18;;12760:62;-1:-1:-1;;;12853:2:10;12838:18;;12831:40;12903:3;12888:19;;12507:406::o;15743:183::-;15803:4;15836:18;15828:6;15825:30;15822:56;;;15858:18;;:::i;:::-;-1:-1:-1;15903:1:10;15899:14;15915:4;15895:25;;15743:183::o;15931:128::-;15971:3;16002:1;15998:6;15995:1;15992:13;15989:39;;;16008:18;;:::i;:::-;-1:-1:-1;16044:9:10;;15931:128::o;16064:125::-;16104:4;16132:1;16129;16126:8;16123:34;;;16137:18;;:::i;:::-;-1:-1:-1;16174:9:10;;16064:125::o;16194:380::-;16273:1;16269:12;;;;16316;;;16337:61;;16391:4;16383:6;16379:17;16369:27;;16337:61;16444:2;16436:6;16433:14;16413:18;16410:38;16407:161;;;16490:10;16485:3;16481:20;16478:1;16471:31;16525:4;16522:1;16515:15;16553:4;16550:1;16543:15;16407:161;;16194:380;;;:::o;16579:249::-;16689:2;16670:13;;-1:-1:-1;;16666:27:10;16654:40;;16724:18;16709:34;;16745:22;;;16706:62;16703:88;;;16771:18;;:::i;:::-;16807:2;16800:22;-1:-1:-1;;16579:249:10:o;16833:135::-;16872:3;-1:-1:-1;;16893:17:10;;16890:43;;;16913:18;;:::i;:::-;-1:-1:-1;16960:1:10;16949:13;;16833:135::o;16973:127::-;17034:10;17029:3;17025:20;17022:1;17015:31;17065:4;17062:1;17055:15;17089:4;17086:1;17079:15;17105:127;17166:10;17161:3;17157:20;17154:1;17147:31;17197:4;17194:1;17187:15;17221:4;17218:1;17211:15;17237:127;17298:10;17293:3;17289:20;17286:1;17279:31;17329:4;17326:1;17319:15;17353:4;17350:1;17343:15;17369:179;17404:3;17446:1;17428:16;17425:23;17422:120;;;17492:1;17489;17486;17471:23;-1:-1:-1;17529:1:10;17523:8;17518:3;17514:18;17422:120;17369:179;:::o;17553:671::-;17592:3;17634:4;17616:16;17613:26;17610:39;;;17553:671;:::o;17610:39::-;17676:2;17670:9;-1:-1:-1;;17741:16:10;17737:25;;17734:1;17670:9;17713:50;17792:4;17786:11;17816:16;17851:18;17922:2;17915:4;17907:6;17903:17;17900:25;17895:2;17887:6;17884:14;17881:45;17878:58;;;17929:5;;;;;17553:671;:::o;17878:58::-;17966:6;17960:4;17956:17;17945:28;;18002:3;17996:10;18029:2;18021:6;18018:14;18015:27;;;18035:5;;;;;;17553:671;:::o;18015:27::-;18119:2;18100:16;18094:4;18090:27;18086:36;18079:4;18070:6;18065:3;18061:16;18057:27;18054:69;18051:82;;;18126:5;;;;;;17553:671;:::o;18051:82::-;18142:57;18193:4;18184:6;18176;18172:19;18168:30;18162:4;18142:57;:::i;:::-;-1:-1:-1;18215:3:10;;17553:671;-1:-1:-1;;;;;17553:671:10:o;18229:131::-;-1:-1:-1;;;;;;18303:32:10;;18293:43;;18283:71;;18350:1;18347;18340:12;18283:71;18229:131;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1269400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"adminSafe()": "2448",
								"balanceOf(address,uint256)": "2672",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"changeAdminSafe(address)": "infinite",
								"exists(uint256)": "2495",
								"isApprovedForAll(address,address)": "infinite",
								"mint(address,uint256,uint256)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26753",
								"supportsInterface(bytes4)": "544",
								"totalSupply(uint256)": "2449",
								"uri(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 204,
									"end": 1260,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 440,
									"end": 535,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 440,
									"end": 535,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 440,
									"end": 535,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 440,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 440,
									"end": 535,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 440,
									"end": 535,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 535,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 440,
									"end": 535,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 440,
									"end": 535,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 440,
									"end": 535,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 440,
									"end": 535,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 440,
									"end": 535,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 440,
									"end": 535,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 440,
									"end": 535,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 440,
									"end": 535,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 440,
									"end": 535,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 440,
									"end": 535,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 440,
									"end": 535,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 440,
									"end": 535,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 440,
									"end": 535,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 440,
									"end": 535,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 440,
									"end": 535,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 440,
									"end": 535,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 440,
									"end": 535,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 440,
									"end": 535,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 440,
									"end": 535,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 440,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 440,
									"end": 535,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 440,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 440,
									"end": 535,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 440,
									"end": 535,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 440,
									"end": 535,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 494,
									"end": 498,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 494,
									"end": 498,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1134,
									"end": 1141,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 511,
									"end": 520,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 511,
									"end": 527,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 511,
									"end": 527,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 511,
									"end": 527,
									"name": "AND",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 511,
									"end": 527,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 511,
									"end": 527,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 511,
									"end": 527,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 511,
									"end": 527,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 511,
									"end": 527,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 511,
									"end": 527,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 511,
									"end": 527,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 511,
									"end": 527,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 511,
									"end": 527,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 511,
									"end": 527,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8002,
									"end": 8006,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 8002,
									"end": 8006,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "tag",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "tag",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 196,
									"end": 1370,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 285,
									"end": 291,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 293,
									"end": 299,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 346,
									"end": 348,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 334,
									"end": 343,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 325,
									"end": 332,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 321,
									"end": 344,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 317,
									"end": 349,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 314,
									"end": 366,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 314,
									"end": 366,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 314,
									"end": 366,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 362,
									"end": 363,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 359,
									"end": 360,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 352,
									"end": 364,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 314,
									"end": 366,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 314,
									"end": 366,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 389,
									"end": 405,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 389,
									"end": 405,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 454,
									"end": 468,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 454,
									"end": 468,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 454,
									"end": 468,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 451,
									"end": 485,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 451,
									"end": 485,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 451,
									"end": 485,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 481,
									"end": 482,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 478,
									"end": 479,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 471,
									"end": 483,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 451,
									"end": 485,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 451,
									"end": 485,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 519,
									"end": 525,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 508,
									"end": 517,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 504,
									"end": 526,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 494,
									"end": 526,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 494,
									"end": 526,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 564,
									"end": 571,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 557,
									"end": 561,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 553,
									"end": 555,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 549,
									"end": 562,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 545,
									"end": 572,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 535,
									"end": 590,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 535,
									"end": 590,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 586,
									"end": 587,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 583,
									"end": 584,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 576,
									"end": 588,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 535,
									"end": 590,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 535,
									"end": 590,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 615,
									"end": 617,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 609,
									"end": 618,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 637,
									"end": 639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 633,
									"end": 635,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 630,
									"end": 640,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 627,
									"end": 663,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 627,
									"end": 663,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 627,
									"end": 663,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 643,
									"end": 661,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 643,
									"end": 661,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 643,
									"end": 661,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 643,
									"end": 661,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 643,
									"end": 661,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 718,
									"end": 720,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 712,
									"end": 721,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 686,
									"end": 688,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 772,
									"end": 785,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 772,
									"end": 785,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 768,
									"end": 790,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 768,
									"end": 790,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 768,
									"end": 790,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 792,
									"end": 794,
									"name": "PUSH",
									"source": 10,
									"value": "3F"
								},
								{
									"begin": 764,
									"end": 795,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 760,
									"end": 800,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 748,
									"end": 801,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 748,
									"end": 801,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 748,
									"end": 801,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 816,
									"end": 834,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 816,
									"end": 834,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 816,
									"end": 834,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 836,
									"end": 858,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 836,
									"end": 858,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 836,
									"end": 858,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 813,
									"end": 859,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 810,
									"end": 882,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 810,
									"end": 882,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 810,
									"end": 882,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 862,
									"end": 880,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 862,
									"end": 880,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 862,
									"end": 880,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 862,
									"end": 880,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 862,
									"end": 880,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 902,
									"end": 912,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 898,
									"end": 900,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 891,
									"end": 913,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 937,
									"end": 939,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 929,
									"end": 935,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 922,
									"end": 940,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 959,
									"end": 963,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 949,
									"end": 963,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 949,
									"end": 963,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1000,
									"end": 1007,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 995,
									"end": 997,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 990,
									"end": 992,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 986,
									"end": 988,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 982,
									"end": 993,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 978,
									"end": 998,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 975,
									"end": 1008,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 972,
									"end": 1025,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 972,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 972,
									"end": 1025,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1021,
									"end": 1022,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1018,
									"end": 1019,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1011,
									"end": 1023,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 972,
									"end": 1025,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 972,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1043,
									"end": 1044,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1034,
									"end": 1044,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1034,
									"end": 1044,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1053,
									"end": 1182,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 1053,
									"end": 1182,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1067,
									"end": 1069,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1064,
									"end": 1065,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1061,
									"end": 1070,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1053,
									"end": 1182,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1053,
									"end": 1182,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1053,
									"end": 1182,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1155,
									"end": 1165,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1155,
									"end": 1165,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1155,
									"end": 1165,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1151,
									"end": 1170,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1151,
									"end": 1170,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1145,
									"end": 1171,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1124,
									"end": 1138,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1124,
									"end": 1138,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1124,
									"end": 1138,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1120,
									"end": 1143,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1120,
									"end": 1143,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1113,
									"end": 1172,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1078,
									"end": 1088,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1078,
									"end": 1088,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1078,
									"end": 1088,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1078,
									"end": 1088,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1053,
									"end": 1182,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 1053,
									"end": 1182,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1053,
									"end": 1182,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1053,
									"end": 1182,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1200,
									"end": 1202,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1197,
									"end": 1198,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1194,
									"end": 1203,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1191,
									"end": 1271,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1191,
									"end": 1271,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 1191,
									"end": 1271,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1259,
									"end": 1260,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1254,
									"end": 1256,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1249,
									"end": 1251,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1241,
									"end": 1247,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1237,
									"end": 1252,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1233,
									"end": 1257,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1226,
									"end": 1261,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1191,
									"end": 1271,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 1191,
									"end": 1271,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1290,
									"end": 1296,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1315,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 1315,
									"end": 1364,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1345,
									"end": 1363,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1345,
									"end": 1363,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1345,
									"end": 1363,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1315,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 1315,
									"end": 1364,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 1315,
									"end": 1364,
									"name": "tag",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 1315,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1305,
									"end": 1364,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1305,
									"end": 1364,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1305,
									"end": 1364,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1305,
									"end": 1364,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 196,
									"end": 1370,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 196,
									"end": 1370,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 196,
									"end": 1370,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 196,
									"end": 1370,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 196,
									"end": 1370,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 196,
									"end": 1370,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 1375,
									"end": 1755,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 1375,
									"end": 1755,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1454,
									"end": 1455,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1450,
									"end": 1462,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1450,
									"end": 1462,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1450,
									"end": 1462,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1450,
									"end": 1462,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1497,
									"end": 1509,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1497,
									"end": 1509,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1497,
									"end": 1509,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1518,
									"end": 1579,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 1518,
									"end": 1579,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1572,
									"end": 1576,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 1564,
									"end": 1570,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1560,
									"end": 1577,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1550,
									"end": 1577,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1550,
									"end": 1577,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1518,
									"end": 1579,
									"name": "tag",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 1518,
									"end": 1579,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1625,
									"end": 1627,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1617,
									"end": 1623,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1614,
									"end": 1628,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1594,
									"end": 1612,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1591,
									"end": 1629,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1588,
									"end": 1749,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1588,
									"end": 1749,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 1588,
									"end": 1749,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1671,
									"end": 1681,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 1666,
									"end": 1669,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 1662,
									"end": 1682,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1683,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1706,
									"end": 1710,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1703,
									"end": 1704,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1696,
									"end": 1711,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1731,
									"end": 1732,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1724,
									"end": 1739,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1588,
									"end": 1749,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 1588,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1588,
									"end": 1749,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1375,
									"end": 1755,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1375,
									"end": 1755,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1375,
									"end": 1755,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1375,
									"end": 1755,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 1760,
									"end": 1887,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 1760,
									"end": 1887,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1821,
									"end": 1831,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 1816,
									"end": 1819,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1809,
									"end": 1810,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1802,
									"end": 1833,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1852,
									"end": 1856,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1849,
									"end": 1850,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1842,
									"end": 1857,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1876,
									"end": 1880,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1873,
									"end": 1874,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1866,
									"end": 1881,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1760,
									"end": 1887,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 1760,
									"end": 1887,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 204,
									"end": 1260,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e940295d673465ee7f2c5d98a7ccd0169a1c65fcf35a17777ba830b07f62971f64736f6c63430008070033",
									".code": [
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH",
											"source": 9,
											"value": "4E1273F4"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH",
											"source": 9,
											"value": "BD85B039"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH",
											"source": 9,
											"value": "BD85B039"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH",
											"source": 9,
											"value": "CB450772"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH",
											"source": 9,
											"value": "E985E9C5"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH",
											"source": 9,
											"value": "F242432A"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH",
											"source": 9,
											"value": "4E1273F4"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH",
											"source": 9,
											"value": "4F558E79"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH",
											"source": 9,
											"value": "A22CB465"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH",
											"source": 9,
											"value": "FDD58E"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A7"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH",
											"source": 9,
											"value": "E89341C"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH",
											"source": 9,
											"value": "156E29F6"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH",
											"source": 9,
											"value": "2EB2C2D6"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH",
											"source": 9,
											"value": "4B8C9C2D"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 204,
											"end": 1260,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15454,
											"end": 15479,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15454,
											"end": 15479,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15454,
											"end": 15479,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15442,
											"end": 15444,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15427,
											"end": 15445,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9793,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9779,
											"end": 9793,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9772,
											"end": 9794,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9754,
											"end": 9795,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9754,
											"end": 9795,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9742,
											"end": 9744,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9727,
											"end": 9745,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 9614,
											"end": 9801,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1101,
											"end": 1255,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1101,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1101,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 1101,
											"end": 1255,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1255,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1101,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 1101,
											"end": 1255,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1101,
											"end": 1255,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 1101,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1101,
											"end": 1255,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 290,
											"end": 314,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 290,
											"end": 314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 290,
											"end": 314,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 290,
											"end": 314,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 290,
											"end": 314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 290,
											"end": 314,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 290,
											"end": 314,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 290,
											"end": 314,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 290,
											"end": 314,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 290,
											"end": 314,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 290,
											"end": 314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 290,
											"end": 314,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 290,
											"end": 314,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7438,
											"end": 7470,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7438,
											"end": 7470,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7438,
											"end": 7470,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7420,
											"end": 7471,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7420,
											"end": 7471,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7408,
											"end": 7410,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7393,
											"end": 7411,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 290,
											"end": 314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 7274,
											"end": 7477,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 886,
											"end": 1006,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 886,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 886,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 886,
											"end": 1006,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 886,
											"end": 1006,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 886,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 886,
											"end": 1006,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 886,
											"end": 1006,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 886,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 943,
											"end": 947,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 770,
											"end": 786,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 770,
											"end": 786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 770,
											"end": 786,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 770,
											"end": 782,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 770,
											"end": 786,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 770,
											"end": 786,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 770,
											"end": 786,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 786,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 770,
											"end": 786,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 770,
											"end": 786,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 886,
											"end": 1006,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 682,
											"end": 793,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 682,
											"end": 793,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 682,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 682,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 682,
											"end": 793,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 682,
											"end": 793,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 682,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 682,
											"end": 793,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 682,
											"end": 793,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 682,
											"end": 793,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 744,
											"end": 751,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 770,
											"end": 786,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 770,
											"end": 786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 770,
											"end": 786,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 770,
											"end": 782,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 770,
											"end": 786,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 770,
											"end": 786,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 770,
											"end": 786,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 786,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 770,
											"end": 786,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 770,
											"end": 786,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 770,
											"end": 786,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 682,
											"end": 793,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 547,
											"end": 798,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 547,
											"end": 798,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 547,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 547,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 547,
											"end": 798,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 547,
											"end": 798,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 547,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 547,
											"end": 798,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 547,
											"end": 798,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 547,
											"end": 798,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 547,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 547,
											"end": 798,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3450,
											"end": 3454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3491,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2256,
											"end": 2263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2283,
											"end": 2304,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2304,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11062,
											"end": 11064,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11044,
											"end": 11065,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11101,
											"end": 11103,
											"name": "PUSH",
											"source": 10,
											"value": "2B"
										},
										{
											"begin": 11081,
											"end": 11099,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11081,
											"end": 11099,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11081,
											"end": 11099,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11074,
											"end": 11104,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11140,
											"end": 11174,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 11120,
											"end": 11138,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 11120,
											"end": 11138,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11120,
											"end": 11138,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11113,
											"end": 11175,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11191,
											"end": 11209,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 11191,
											"end": 11209,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11191,
											"end": 11209,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11184,
											"end": 11225,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11242,
											"end": 11261,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 11242,
											"end": 11261,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2369,
											"end": 2378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1415,
											"end": 1467,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1415,
											"end": 1467,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A24D07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1415,
											"end": 1467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1358,
											"end": 1519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1483,
											"end": 1519,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1483,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1519,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 1998,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2017,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1101,
											"end": 1255,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1101,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 912,
											"end": 922,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1183,
											"end": 1187,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 904,
											"end": 923,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 904,
											"end": 923,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 904,
											"end": 923,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 904,
											"end": 911,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 904,
											"end": 923,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 923,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 904,
											"end": 923,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 904,
											"end": 923,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 904,
											"end": 923,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 904,
											"end": 923,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 904,
											"end": 923,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 904,
											"end": 923,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 896,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 896,
											"end": 952,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 896,
											"end": 952,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 896,
											"end": 952,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 896,
											"end": 952,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 896,
											"end": 952,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13120,
											"end": 13122,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 896,
											"end": 952,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 896,
											"end": 952,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 896,
											"end": 952,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13102,
											"end": 13123,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13159,
											"end": 13161,
											"name": "PUSH",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 13139,
											"end": 13157,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13139,
											"end": 13157,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13139,
											"end": 13157,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13132,
											"end": 13162,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CB7BA9030B932903737BA103BB434BA32B634B9BA32B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "41"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13178,
											"end": 13196,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13178,
											"end": 13196,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13178,
											"end": 13196,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13171,
											"end": 13225,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13242,
											"end": 13260,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 13242,
											"end": 13260,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 896,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 12918,
											"end": 13266,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 896,
											"end": 952,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 896,
											"end": 952,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1200,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1206,
											"end": 1208,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1210,
											"end": 1212,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1214,
											"end": 1220,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1200,
											"end": 1225,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1200,
											"end": 1225,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1200,
											"end": 1225,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1200,
											"end": 1225,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1200,
											"end": 1225,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1200,
											"end": 1225,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1200,
											"end": 1225,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1200,
											"end": 1225,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1200,
											"end": 1225,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1225,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1200,
											"end": 1225,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1200,
											"end": 1225,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1200,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 1200,
											"end": 1225,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1200,
											"end": 1225,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1200,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1243,
											"end": 1247,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1101,
											"end": 1255,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1255,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1255,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1255,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1255,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1255,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4294,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4311,
											"end": 4315,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4294,
											"end": 4330,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4294,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12290,
											"end": 12292,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12272,
											"end": 12293,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12329,
											"end": 12331,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 12309,
											"end": 12327,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12309,
											"end": 12327,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12309,
											"end": 12327,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12302,
											"end": 12332,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12368,
											"end": 12402,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 12348,
											"end": 12366,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 12348,
											"end": 12366,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12348,
											"end": 12366,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12341,
											"end": 12403,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDDDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12419,
											"end": 12437,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12419,
											"end": 12437,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12419,
											"end": 12437,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12412,
											"end": 12460,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12477,
											"end": 12496,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 12477,
											"end": 12496,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 12088,
											"end": 12502,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4439,
											"end": 4443,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4445,
											"end": 4447,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4449,
											"end": 4452,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4454,
											"end": 4461,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4463,
											"end": 4467,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4416,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2706,
											"end": 2722,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2765,
											"end": 2768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2775,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2746,
											"end": 2754,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2746,
											"end": 2761,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13883,
											"end": 13885,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13865,
											"end": 13886,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13922,
											"end": 13924,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 13902,
											"end": 13920,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13902,
											"end": 13920,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13902,
											"end": 13920,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13895,
											"end": 13925,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13961,
											"end": 13995,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 13941,
											"end": 13959,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13941,
											"end": 13959,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13941,
											"end": 13959,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13934,
											"end": 13996,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14012,
											"end": 14030,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 14012,
											"end": 14030,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14012,
											"end": 14030,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14005,
											"end": 14044,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14061,
											"end": 14080,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 14061,
											"end": 14080,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 13681,
											"end": 14086,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2862,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2879,
											"end": 2887,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2894,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2926,
											"end": 2927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2926,
											"end": 2945,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2995,
											"end": 3003,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3005,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3011,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3012,
											"end": 3013,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2979,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2981,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 3015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3043,
											"end": 3056,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3258,
											"end": 3266,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3276,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 547,
											"end": 798,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 547,
											"end": 798,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 616,
											"end": 620,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1022,
											"end": 1032,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1022,
											"end": 1044,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1014,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 1014,
											"end": 1073,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1014,
											"end": 1073,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1014,
											"end": 1073,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1014,
											"end": 1073,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1014,
											"end": 1073,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13120,
											"end": 13122,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1014,
											"end": 1073,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1014,
											"end": 1073,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1014,
											"end": 1073,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13102,
											"end": 13123,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13159,
											"end": 13161,
											"name": "PUSH",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 13139,
											"end": 13157,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13139,
											"end": 13157,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13139,
											"end": 13157,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13132,
											"end": 13162,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CB7BA9030B932903737BA103BB434BA32B634B9BA32B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "41"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13178,
											"end": 13196,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13178,
											"end": 13196,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13178,
											"end": 13196,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13171,
											"end": 13225,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13242,
											"end": 13260,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 13242,
											"end": 13260,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1014,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 12918,
											"end": 13266,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1014,
											"end": 1073,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 1014,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 646,
											"end": 655,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 646,
											"end": 655,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 646,
											"end": 661,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 646,
											"end": 661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 646,
											"end": 661,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 646,
											"end": 655,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 646,
											"end": 655,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 646,
											"end": 661,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 646,
											"end": 661,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 638,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 638,
											"end": 703,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 638,
											"end": 703,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 638,
											"end": 703,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 638,
											"end": 703,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 638,
											"end": 703,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15104,
											"end": 15106,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 638,
											"end": 703,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 638,
											"end": 703,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 638,
											"end": 703,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15086,
											"end": 15107,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15143,
											"end": 15145,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 15123,
											"end": 15141,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15123,
											"end": 15141,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15123,
											"end": 15141,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15116,
											"end": 15146,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15182,
											"end": 15216,
											"name": "PUSH",
											"source": 10,
											"value": "50726F7669646564206164647265737320616C72656164792073616665206164"
										},
										{
											"begin": 15162,
											"end": 15180,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 15162,
											"end": 15180,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15162,
											"end": 15180,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15155,
											"end": 15217,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15233,
											"end": 15251,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 15233,
											"end": 15251,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15233,
											"end": 15251,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15226,
											"end": 15261,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15278,
											"end": 15297,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 15278,
											"end": 15297,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 638,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 14902,
											"end": 15303,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 638,
											"end": 703,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 638,
											"end": 703,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 714,
											"end": 723,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 714,
											"end": 730,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 714,
											"end": 730,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 714,
											"end": 730,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 714,
											"end": 730,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 714,
											"end": 730,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 714,
											"end": 730,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 714,
											"end": 730,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 714,
											"end": 730,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 714,
											"end": 730,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 714,
											"end": 730,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 714,
											"end": 730,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 746,
											"end": 768,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 746,
											"end": 768,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 746,
											"end": 768,
											"name": "PUSH",
											"source": 9,
											"value": "D4C1AF98B758421A8D47B0BC04ECFA30233D5506955E8CDE282417AA0D31D3B6"
										},
										{
											"begin": 746,
											"end": 768,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 746,
											"end": 768,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 786,
											"end": 790,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1084,
											"end": 1085,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 1084,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 547,
											"end": 798,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 547,
											"end": 798,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 547,
											"end": 798,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 547,
											"end": 798,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3784,
											"end": 3844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3808,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3825,
											"end": 3829,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3808,
											"end": 3844,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3808,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11474,
											"end": 11476,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11456,
											"end": 11477,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11513,
											"end": 11515,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 11493,
											"end": 11511,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11493,
											"end": 11511,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11493,
											"end": 11511,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11486,
											"end": 11516,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11552,
											"end": 11586,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11525,
											"end": 11587,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11603,
											"end": 11621,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 11603,
											"end": 11621,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11603,
											"end": 11621,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11596,
											"end": 11635,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11652,
											"end": 11671,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 11652,
											"end": 11671,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 11272,
											"end": 11677,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3939,
											"end": 3943,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3945,
											"end": 3947,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3949,
											"end": 3951,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3959,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 3965,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 3921,
											"end": 3966,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8395,
											"end": 8948,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 8395,
											"end": 8948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8542,
											"end": 8558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8542,
											"end": 8558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8534,
											"end": 8596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 8534,
											"end": 8596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8534,
											"end": 8596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8534,
											"end": 8596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8534,
											"end": 8596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8534,
											"end": 8596,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14702,
											"end": 14704,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8534,
											"end": 8596,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8534,
											"end": 8596,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8534,
											"end": 8596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14684,
											"end": 14705,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14741,
											"end": 14743,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 14721,
											"end": 14739,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14721,
											"end": 14739,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14721,
											"end": 14739,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14714,
											"end": 14744,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14780,
											"end": 14814,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A206D696E7420746F20746865207A65726F20616464726573"
										},
										{
											"begin": 14760,
											"end": 14778,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 14760,
											"end": 14778,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14760,
											"end": 14778,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14753,
											"end": 14815,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14831,
											"end": 14849,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 14831,
											"end": 14849,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14831,
											"end": 14849,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14824,
											"end": 14855,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14872,
											"end": 14891,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 14872,
											"end": 14891,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8534,
											"end": 8596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 14500,
											"end": 14897,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8534,
											"end": 8596,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 8534,
											"end": 8596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8649,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8607,
											"end": 8623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8692,
											"end": 8694,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8696,
											"end": 8717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 8714,
											"end": 8716,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 8696,
											"end": 8713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 8696,
											"end": 8717,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8696,
											"end": 8717,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 8696,
											"end": 8717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8719,
											"end": 8744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 8737,
											"end": 8743,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 8719,
											"end": 8736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 8719,
											"end": 8744,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8719,
											"end": 8744,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 8719,
											"end": 8744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8746,
											"end": 8750,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8649,
											"end": 8669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 8649,
											"end": 8751,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8649,
											"end": 8751,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 8649,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8762,
											"end": 8771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8762,
											"end": 8775,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8762,
											"end": 8775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8762,
											"end": 8775,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8762,
											"end": 8775,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8762,
											"end": 8775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8762,
											"end": 8775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8762,
											"end": 8775,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8762,
											"end": 8775,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8762,
											"end": 8775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8762,
											"end": 8775,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8762,
											"end": 8775,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8762,
											"end": 8779,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 8762,
											"end": 8779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8762,
											"end": 8779,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8762,
											"end": 8779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8762,
											"end": 8779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8762,
											"end": 8779,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8762,
											"end": 8779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8762,
											"end": 8779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8762,
											"end": 8779,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8762,
											"end": 8789,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8762,
											"end": 8789,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8783,
											"end": 8789,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8783,
											"end": 8789,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8762,
											"end": 8771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8762,
											"end": 8789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 8762,
											"end": 8789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8783,
											"end": 8789,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8783,
											"end": 8789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8762,
											"end": 8789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 8762,
											"end": 8789,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8762,
											"end": 8789,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 8762,
											"end": 8789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8762,
											"end": 8789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8762,
											"end": 8789,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8762,
											"end": 8789,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8804,
											"end": 8856,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8804,
											"end": 8856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8804,
											"end": 8856,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15664,
											"end": 15689,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15664,
											"end": 15689,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15664,
											"end": 15689,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15720,
											"end": 15722,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15705,
											"end": 15723,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15705,
											"end": 15723,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15698,
											"end": 15732,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15698,
											"end": 15732,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15698,
											"end": 15732,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8804,
											"end": 8856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8804,
											"end": 8856,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 8804,
											"end": 8856,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8804,
											"end": 8856,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8837,
											"end": 8838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8837,
											"end": 8838,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8804,
											"end": 8856,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8804,
											"end": 8856,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8804,
											"end": 8856,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8804,
											"end": 8856,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8804,
											"end": 8856,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 8804,
											"end": 8856,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15637,
											"end": 15655,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8804,
											"end": 8856,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8804,
											"end": 8856,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8804,
											"end": 8856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8804,
											"end": 8856,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8804,
											"end": 8856,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8804,
											"end": 8856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8804,
											"end": 8856,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 8867,
											"end": 8941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 8898,
											"end": 8906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8920,
											"end": 8922,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8924,
											"end": 8926,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8928,
											"end": 8934,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8936,
											"end": 8940,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8867,
											"end": 8897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 8867,
											"end": 8941,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6288,
											"end": 6295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6288,
											"end": 6302,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6277,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6284,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6302,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14293,
											"end": 14295,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14275,
											"end": 14296,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14332,
											"end": 14334,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 14312,
											"end": 14330,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14312,
											"end": 14330,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14312,
											"end": 14330,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14305,
											"end": 14335,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14371,
											"end": 14405,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 14351,
											"end": 14369,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 14351,
											"end": 14369,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14351,
											"end": 14369,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14344,
											"end": 14406,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14422,
											"end": 14440,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 14422,
											"end": 14440,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14422,
											"end": 14440,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14415,
											"end": 14453,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14470,
											"end": 14489,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 14470,
											"end": 14489,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 14091,
											"end": 14495,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6365,
											"end": 6381,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6365,
											"end": 6381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6476,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6511,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6513,
											"end": 6515,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6517,
											"end": 6520,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6529,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6531,
											"end": 6535,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 6476,
											"end": 6536,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6476,
											"end": 6536,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 6476,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6571,
											"end": 6574,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6571,
											"end": 6581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6581,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6602,
											"end": 6612,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6615,
											"end": 6618,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6619,
											"end": 6620,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6602,
											"end": 6621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6602,
											"end": 6621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6635,
											"end": 6649,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6659,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6660,
											"end": 6661,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6677,
											"end": 6696,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6892,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6588,
											"end": 6958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6588,
											"end": 6958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6588,
											"end": 6958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7003,
											"end": 7005,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6997,
											"end": 7001,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 6995,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7007,
											"end": 7010,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7012,
											"end": 7019,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 7067,
											"end": 7075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7081,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 7085,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7090,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7092,
											"end": 7099,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7105,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7031,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 7113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12224,
											"end": 12232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12215,
											"end": 12220,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13473,
											"end": 13475,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13476,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13512,
											"end": 13514,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 13492,
											"end": 13510,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13492,
											"end": 13510,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13492,
											"end": 13510,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13485,
											"end": 13515,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13551,
											"end": 13585,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 13531,
											"end": 13549,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13531,
											"end": 13549,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13531,
											"end": 13549,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13524,
											"end": 13586,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13602,
											"end": 13620,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 13602,
											"end": 13620,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13602,
											"end": 13620,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13595,
											"end": 13634,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13651,
											"end": 13670,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 13651,
											"end": 13670,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 13271,
											"end": 13676,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12306,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9754,
											"end": 9795,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9754,
											"end": 9795,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9754,
											"end": 9795,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9727,
											"end": 9745,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5106,
											"end": 5122,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5122,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5217,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5248,
											"end": 5252,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5256,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 5276,
											"end": 5278,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5258,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5217,
											"end": 5313,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 5217,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5324,
											"end": 5343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5527,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5485,
											"end": 5494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15664,
											"end": 15689,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15664,
											"end": 15689,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15664,
											"end": 15689,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15720,
											"end": 15722,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15705,
											"end": 15723,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15705,
											"end": 15723,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15698,
											"end": 15732,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15698,
											"end": 15732,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15698,
											"end": 15732,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15637,
											"end": 15655,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 5678,
											"end": 5686,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5688,
											"end": 5692,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5694,
											"end": 5696,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5698,
											"end": 5700,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5702,
											"end": 5708,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5710,
											"end": 5714,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5647,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15213,
											"end": 15214,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15146,
											"end": 15162,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15146,
											"end": 15162,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15174,
											"end": 15196,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15174,
											"end": 15196,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15174,
											"end": 15215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15174,
											"end": 15215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15236,
											"end": 15243,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15225,
											"end": 15243,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15261,
											"end": 15266,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1076,
											"end": 1710,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 1076,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1388,
											"end": 1406,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1406,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1384,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 1384,
											"end": 1540,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1436,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1530,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 1422,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1446,
											"end": 1449,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1446,
											"end": 1456,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1442,
											"end": 1443,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1442,
											"end": 1456,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1422,
											"end": 1530,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1422,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 1422,
											"end": 1530,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1512,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1514,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1515,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1515,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1515,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1515,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 1505,
											"end": 1515,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 1505,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1505,
											"end": 1515,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1505,
											"end": 1515,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 1505,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1515,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1505,
											"end": 1515,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1515,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1505,
											"end": 1515,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1515,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1505,
											"end": 1515,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1493,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1481,
											"end": 1501,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1494,
											"end": 1497,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1499,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1494,
											"end": 1500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1494,
											"end": 1500,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1494,
											"end": 1500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1494,
											"end": 1500,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1494,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 1494,
											"end": 1500,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1494,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 1494,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1494,
											"end": 1500,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1494,
											"end": 1500,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 1494,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1494,
											"end": 1500,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1494,
											"end": 1500,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1494,
											"end": 1500,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1494,
											"end": 1500,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1494,
											"end": 1500,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1494,
											"end": 1500,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1501,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1501,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1501,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1501,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1501,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1501,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1501,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1501,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1501,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1501,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1501,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1501,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1515,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1515,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1515,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 1481,
											"end": 1515,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1515,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 1481,
											"end": 1515,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1481,
											"end": 1515,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 1481,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1515,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1515,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1515,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1458,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 1458,
											"end": 1461,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1458,
											"end": 1461,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1458,
											"end": 1461,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1458,
											"end": 1461,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 1458,
											"end": 1461,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1461,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1461,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1422,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 1422,
											"end": 1530,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1422,
											"end": 1530,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 1422,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1422,
											"end": 1530,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1384,
											"end": 1540,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 1384,
											"end": 1540,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1554,
											"end": 1570,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1554,
											"end": 1570,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1550,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 1550,
											"end": 1704,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1591,
											"end": 1600,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1694,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 1586,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1613,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1620,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1606,
											"end": 1607,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1694,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 1586,
											"end": 1694,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1676,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1678,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1679,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1679,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1679,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1679,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 1669,
											"end": 1679,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 1669,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1669,
											"end": 1679,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1669,
											"end": 1679,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 1669,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1679,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1669,
											"end": 1679,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1679,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1669,
											"end": 1679,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1679,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1679,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1657,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1645,
											"end": 1665,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1661,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1663,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1658,
											"end": 1664,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1658,
											"end": 1664,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1658,
											"end": 1664,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1658,
											"end": 1664,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1658,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 1658,
											"end": 1664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1658,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 1658,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1658,
											"end": 1664,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1658,
											"end": 1664,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 1658,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1658,
											"end": 1664,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1658,
											"end": 1664,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1658,
											"end": 1664,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1658,
											"end": 1664,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1658,
											"end": 1664,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1658,
											"end": 1664,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1665,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1665,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1665,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1645,
											"end": 1665,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1665,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1665,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1665,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1665,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1645,
											"end": 1665,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1665,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1645,
											"end": 1665,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1665,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1645,
											"end": 1679,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1679,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1679,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 1645,
											"end": 1679,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1679,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 1645,
											"end": 1679,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1645,
											"end": 1679,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 1645,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1679,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1679,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1679,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1622,
											"end": 1625,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 1622,
											"end": 1625,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1622,
											"end": 1625,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1625,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1622,
											"end": 1625,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1622,
											"end": 1625,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 1622,
											"end": 1625,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1625,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1625,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 1586,
											"end": 1694,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13551,
											"end": 14276,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 13551,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13758,
											"end": 13771,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13758,
											"end": 13771,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13754,
											"end": 14270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 13754,
											"end": 14270,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13832,
											"end": 13840,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 13832,
											"end": 13840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13842,
											"end": 13846,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 13842,
											"end": 13846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13848,
											"end": 13850,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 13848,
											"end": 13850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13852,
											"end": 13858,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 13852,
											"end": 13858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13860,
											"end": 13864,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 13860,
											"end": 13864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A0"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14136,
											"end": 14142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14129,
											"end": 14143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14129,
											"end": 14143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14143,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14129,
											"end": 14143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 14129,
											"end": 14143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14129,
											"end": 14143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14129,
											"end": 14143,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14183,
											"end": 14245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14183,
											"end": 14245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10232,
											"end": 10234,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14183,
											"end": 14245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14183,
											"end": 14245,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10214,
											"end": 10235,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10271,
											"end": 10273,
											"name": "PUSH",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 10251,
											"end": 10269,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10251,
											"end": 10269,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10251,
											"end": 10269,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10244,
											"end": 10274,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10310,
											"end": 10344,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10283,
											"end": 10345,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10361,
											"end": 10379,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10361,
											"end": 10379,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10361,
											"end": 10379,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10354,
											"end": 10404,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10421,
											"end": 10440,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10421,
											"end": 10440,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14183,
											"end": 14245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 10030,
											"end": 10446,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13910,
											"end": 14062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 13910,
											"end": 14062,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14282,
											"end": 15074,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 14282,
											"end": 15074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14514,
											"end": 14527,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14514,
											"end": 14527,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14510,
											"end": 15068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 14510,
											"end": 15068,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14593,
											"end": 14601,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 14593,
											"end": 14601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14607,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 14603,
											"end": 14607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14612,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14614,
											"end": 14621,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 14614,
											"end": 14621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14623,
											"end": 14627,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 14623,
											"end": 14627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14707,
											"end": 14767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14767,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14707,
											"end": 14767,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14703,
											"end": 14860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 14703,
											"end": 14860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 192,
											"end": 927,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 192,
											"end": 927,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 246,
											"end": 251,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 299,
											"end": 302,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 292,
											"end": 296,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 280,
											"end": 297,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 276,
											"end": 303,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 266,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 266,
											"end": 321,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 315,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 307,
											"end": 319,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 266,
											"end": 321,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 266,
											"end": 321,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 353,
											"end": 359,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 340,
											"end": 360,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 379,
											"end": 383,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 402,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 442,
											"end": 444,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 402,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 402,
											"end": 445,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 402,
											"end": 445,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 402,
											"end": 445,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 474,
											"end": 476,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 468,
											"end": 477,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 486,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 514,
											"end": 516,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 506,
											"end": 512,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 486,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 486,
											"end": 517,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 486,
											"end": 517,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 486,
											"end": 517,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 552,
											"end": 570,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 552,
											"end": 570,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 552,
											"end": 570,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 586,
											"end": 601,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 586,
											"end": 601,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 586,
											"end": 601,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 586,
											"end": 601,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 621,
											"end": 636,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 621,
											"end": 636,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 621,
											"end": 636,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 671,
											"end": 672,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 667,
											"end": 677,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 667,
											"end": 677,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 667,
											"end": 677,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 655,
											"end": 678,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 655,
											"end": 678,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 651,
											"end": 683,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 651,
											"end": 683,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 648,
											"end": 689,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 645,
											"end": 706,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 645,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 645,
											"end": 706,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 702,
											"end": 703,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 700,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 692,
											"end": 704,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 645,
											"end": 706,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 645,
											"end": 706,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 724,
											"end": 725,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 897,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 734,
											"end": 897,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 748,
											"end": 750,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 745,
											"end": 746,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 742,
											"end": 751,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 734,
											"end": 897,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 734,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 734,
											"end": 897,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 805,
											"end": 822,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 805,
											"end": 822,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 793,
											"end": 823,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 793,
											"end": 823,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 843,
											"end": 855,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 843,
											"end": 855,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 843,
											"end": 855,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 843,
											"end": 855,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 875,
											"end": 887,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 875,
											"end": 887,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 875,
											"end": 887,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 875,
											"end": 887,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 766,
											"end": 767,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 768,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 734,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 734,
											"end": 897,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 734,
											"end": 897,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 734,
											"end": 897,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 915,
											"end": 921,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 915,
											"end": 921,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 192,
											"end": 927,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 927,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 932,
											"end": 1487,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 932,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 974,
											"end": 979,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1027,
											"end": 1030,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1020,
											"end": 1024,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1008,
											"end": 1025,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 994,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 994,
											"end": 1049,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1045,
											"end": 1046,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1043,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1047,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 994,
											"end": 1049,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 994,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1081,
											"end": 1087,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1068,
											"end": 1088,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1103,
											"end": 1105,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1100,
											"end": 1126,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1097,
											"end": 1149,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1097,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 1097,
											"end": 1149,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1178,
											"end": 1180,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1181,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1190,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 1245,
											"end": 1247,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1226,
											"end": 1239,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1226,
											"end": 1239,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1222,
											"end": 1249,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1251,
											"end": 1255,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1256,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1172,
											"end": 1181,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1190,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 1190,
											"end": 1257,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1190,
											"end": 1257,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 1190,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1281,
											"end": 1283,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1266,
											"end": 1284,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1327,
											"end": 1330,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1320,
											"end": 1324,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1317,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1307,
											"end": 1313,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1318,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1348,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 1293,
											"end": 1348,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1345,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1342,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1346,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1348,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 1293,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1408,
											"end": 1410,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1401,
											"end": 1405,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1389,
											"end": 1406,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1382,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1370,
											"end": 1387,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1357,
											"end": 1411,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 1455,
											"end": 1456,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1448,
											"end": 1452,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1427,
											"end": 1453,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1420,
											"end": 1457,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1420,
											"end": 1457,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1420,
											"end": 1457,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1420,
											"end": 1457,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1435,
											"end": 1441,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1487,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 932,
											"end": 1487,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1492,
											"end": 1678,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 1492,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1551,
											"end": 1557,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1606,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1592,
											"end": 1601,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1583,
											"end": 1590,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1579,
											"end": 1602,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1607,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1572,
											"end": 1624,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1572,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 1572,
											"end": 1624,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1621,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1617,
											"end": 1618,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1610,
											"end": 1622,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1572,
											"end": 1624,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 1572,
											"end": 1624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1643,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 1662,
											"end": 1671,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1643,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 1643,
											"end": 1672,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1643,
											"end": 1672,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 1643,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1633,
											"end": 1672,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1678,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1492,
											"end": 1678,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1683,
											"end": 1943,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 1683,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1751,
											"end": 1757,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1812,
											"end": 1814,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1800,
											"end": 1809,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1791,
											"end": 1798,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1787,
											"end": 1810,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1783,
											"end": 1815,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1780,
											"end": 1832,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1780,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 1780,
											"end": 1832,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1828,
											"end": 1829,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1825,
											"end": 1826,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1818,
											"end": 1830,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1780,
											"end": 1832,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 1780,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 1870,
											"end": 1879,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1841,
											"end": 1880,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1841,
											"end": 1880,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1899,
											"end": 1937,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 1933,
											"end": 1935,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1931,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1918,
											"end": 1936,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1899,
											"end": 1937,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 1899,
											"end": 1937,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1899,
											"end": 1937,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 1899,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1889,
											"end": 1937,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1889,
											"end": 1937,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1683,
											"end": 1943,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1683,
											"end": 1943,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1683,
											"end": 1943,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1683,
											"end": 1943,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1683,
											"end": 1943,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1683,
											"end": 1943,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1948,
											"end": 2891,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 1948,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2102,
											"end": 2108,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2116,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2124,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2126,
											"end": 2132,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2134,
											"end": 2140,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2190,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 2175,
											"end": 2184,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2173,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2185,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2158,
											"end": 2191,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2208,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 2155,
											"end": 2208,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2204,
											"end": 2205,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2202,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2194,
											"end": 2206,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2155,
											"end": 2208,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 2155,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2227,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 2246,
											"end": 2255,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2227,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 2227,
											"end": 2256,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2227,
											"end": 2256,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 2227,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2217,
											"end": 2256,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2217,
											"end": 2256,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 2309,
											"end": 2311,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2298,
											"end": 2307,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 2275,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2265,
											"end": 2313,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2265,
											"end": 2313,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2364,
											"end": 2366,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2353,
											"end": 2362,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2336,
											"end": 2368,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2405,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2428,
											"end": 2430,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2420,
											"end": 2426,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2417,
											"end": 2431,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2414,
											"end": 2448,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2414,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 2414,
											"end": 2448,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2444,
											"end": 2445,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2442,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2414,
											"end": 2448,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 2414,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2467,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 2520,
											"end": 2527,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2500,
											"end": 2509,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 2496,
											"end": 2518,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2467,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 2467,
											"end": 2528,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2467,
											"end": 2528,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 2467,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2457,
											"end": 2528,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2457,
											"end": 2528,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2581,
											"end": 2583,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2570,
											"end": 2579,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2553,
											"end": 2585,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2537,
											"end": 2585,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2537,
											"end": 2585,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2610,
											"end": 2612,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2600,
											"end": 2608,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2597,
											"end": 2613,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2594,
											"end": 2630,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2594,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 2594,
											"end": 2630,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2626,
											"end": 2627,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2624,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2616,
											"end": 2628,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2594,
											"end": 2630,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 2594,
											"end": 2630,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2649,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 2704,
											"end": 2711,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 2693,
											"end": 2701,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2682,
											"end": 2691,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 2678,
											"end": 2702,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2649,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 2649,
											"end": 2712,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2649,
											"end": 2712,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 2649,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2639,
											"end": 2712,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2639,
											"end": 2712,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2765,
											"end": 2768,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2750,
											"end": 2769,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2770,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2721,
											"end": 2770,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2795,
											"end": 2797,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2785,
											"end": 2793,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2782,
											"end": 2798,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2779,
											"end": 2815,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2779,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 2779,
											"end": 2815,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2811,
											"end": 2812,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2808,
											"end": 2809,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2801,
											"end": 2813,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2779,
											"end": 2815,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 2779,
											"end": 2815,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2779,
											"end": 2815,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 2877,
											"end": 2884,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2866,
											"end": 2874,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2855,
											"end": 2864,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 2851,
											"end": 2875,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 2834,
											"end": 2885,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2834,
											"end": 2885,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 2834,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 2885,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 2885,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 2885,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1948,
											"end": 2891,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1948,
											"end": 2891,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1948,
											"end": 2891,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1948,
											"end": 2891,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1948,
											"end": 2891,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1948,
											"end": 2891,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1948,
											"end": 2891,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1948,
											"end": 2891,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1948,
											"end": 2891,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2896,
											"end": 3502,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 2896,
											"end": 3502,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3006,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3016,
											"end": 3022,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3030,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3032,
											"end": 3038,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3088,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 3073,
											"end": 3082,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3071,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3083,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3089,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3106,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 3053,
											"end": 3106,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3103,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3100,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3106,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 3053,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 3144,
											"end": 3153,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3154,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3154,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3173,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 3207,
											"end": 3209,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3196,
											"end": 3205,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3192,
											"end": 3210,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3173,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 3173,
											"end": 3211,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3173,
											"end": 3211,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 3173,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3163,
											"end": 3211,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3163,
											"end": 3211,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3258,
											"end": 3260,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3247,
											"end": 3256,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3243,
											"end": 3261,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3262,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3220,
											"end": 3262,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3220,
											"end": 3262,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3309,
											"end": 3311,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3298,
											"end": 3307,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3312,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3281,
											"end": 3313,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3271,
											"end": 3313,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3271,
											"end": 3313,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3364,
											"end": 3367,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3353,
											"end": 3362,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3349,
											"end": 3368,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3336,
											"end": 3369,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3392,
											"end": 3410,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3384,
											"end": 3390,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3411,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3378,
											"end": 3428,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3378,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 3378,
											"end": 3428,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3424,
											"end": 3425,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3422,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3414,
											"end": 3426,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3378,
											"end": 3428,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 3378,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3447,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 3488,
											"end": 3495,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3479,
											"end": 3485,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3468,
											"end": 3477,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 3464,
											"end": 3486,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3447,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 3447,
											"end": 3496,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3507,
											"end": 3854,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 3507,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3578,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3586,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3633,
											"end": 3635,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3621,
											"end": 3630,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3608,
											"end": 3631,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3604,
											"end": 3636,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3601,
											"end": 3653,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3601,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 3601,
											"end": 3653,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3649,
											"end": 3650,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3646,
											"end": 3647,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3639,
											"end": 3651,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3601,
											"end": 3653,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 3601,
											"end": 3653,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3672,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 3691,
											"end": 3700,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3672,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 3672,
											"end": 3701,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3672,
											"end": 3701,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 3672,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3662,
											"end": 3701,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3662,
											"end": 3701,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3751,
											"end": 3753,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3740,
											"end": 3749,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3736,
											"end": 3754,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3723,
											"end": 3755,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 3803,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3791,
											"end": 3804,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3784,
											"end": 3805,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3777,
											"end": 3782,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3774,
											"end": 3806,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3764,
											"end": 3824,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 3764,
											"end": 3824,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3820,
											"end": 3821,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3817,
											"end": 3818,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3822,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3764,
											"end": 3824,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 3764,
											"end": 3824,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3843,
											"end": 3848,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3833,
											"end": 3848,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3833,
											"end": 3848,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3833,
											"end": 3848,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3507,
											"end": 3854,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3507,
											"end": 3854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3507,
											"end": 3854,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3507,
											"end": 3854,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3507,
											"end": 3854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3507,
											"end": 3854,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3859,
											"end": 4113,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3859,
											"end": 4113,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3927,
											"end": 3933,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3935,
											"end": 3941,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3988,
											"end": 3990,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3976,
											"end": 3985,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3967,
											"end": 3974,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3963,
											"end": 3986,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3959,
											"end": 3991,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4008,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 3956,
											"end": 4008,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4005,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4001,
											"end": 4002,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4008,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 3956,
											"end": 4008,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4027,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 4046,
											"end": 4055,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4027,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 4027,
											"end": 4056,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4027,
											"end": 4056,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 4027,
											"end": 4056,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4017,
											"end": 4056,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4103,
											"end": 4105,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4088,
											"end": 4106,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4088,
											"end": 4106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4088,
											"end": 4106,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4088,
											"end": 4106,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4075,
											"end": 4107,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4075,
											"end": 4107,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3859,
											"end": 4113,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4118,
											"end": 4440,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 4118,
											"end": 4440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4195,
											"end": 4201,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4203,
											"end": 4209,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4211,
											"end": 4217,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4264,
											"end": 4266,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4252,
											"end": 4261,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4243,
											"end": 4250,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4239,
											"end": 4262,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4235,
											"end": 4267,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4284,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 4232,
											"end": 4284,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4280,
											"end": 4281,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4277,
											"end": 4278,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4270,
											"end": 4282,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4284,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 4232,
											"end": 4284,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4303,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 4322,
											"end": 4331,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4303,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 4303,
											"end": 4332,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4303,
											"end": 4332,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 4303,
											"end": 4332,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4293,
											"end": 4332,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 4379,
											"end": 4381,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4364,
											"end": 4382,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4364,
											"end": 4382,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4351,
											"end": 4383,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4351,
											"end": 4383,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4430,
											"end": 4432,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4415,
											"end": 4433,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4415,
											"end": 4433,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4415,
											"end": 4433,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4402,
											"end": 4434,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4402,
											"end": 4434,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4118,
											"end": 4440,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4118,
											"end": 4440,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4445,
											"end": 5664,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 4445,
											"end": 5664,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4563,
											"end": 4569,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4571,
											"end": 4577,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4624,
											"end": 4626,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4612,
											"end": 4621,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4603,
											"end": 4610,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4599,
											"end": 4622,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4595,
											"end": 4627,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4592,
											"end": 4644,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4592,
											"end": 4644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 4592,
											"end": 4644,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4640,
											"end": 4641,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4637,
											"end": 4638,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4630,
											"end": 4642,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4592,
											"end": 4644,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 4592,
											"end": 4644,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4680,
											"end": 4689,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4667,
											"end": 4690,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4709,
											"end": 4727,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4750,
											"end": 4752,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4742,
											"end": 4748,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4736,
											"end": 4770,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4736,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 4736,
											"end": 4770,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4766,
											"end": 4767,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4763,
											"end": 4764,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4756,
											"end": 4768,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4736,
											"end": 4770,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 4736,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 4810,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4793,
											"end": 4802,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4789,
											"end": 4811,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4779,
											"end": 4811,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4779,
											"end": 4811,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4849,
											"end": 4856,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4842,
											"end": 4846,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4838,
											"end": 4840,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4834,
											"end": 4847,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4830,
											"end": 4857,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 4820,
											"end": 4875,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4871,
											"end": 4872,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4868,
											"end": 4869,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4861,
											"end": 4873,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4875,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 4820,
											"end": 4875,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4907,
											"end": 4909,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4894,
											"end": 4910,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4929,
											"end": 4933,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4952,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 4992,
											"end": 4994,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4952,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 4952,
											"end": 4995,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4952,
											"end": 4995,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 4952,
											"end": 4995,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5024,
											"end": 5026,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5018,
											"end": 5027,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5036,
											"end": 5067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 5064,
											"end": 5066,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5056,
											"end": 5062,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5036,
											"end": 5067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 5036,
											"end": 5067,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5036,
											"end": 5067,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 5036,
											"end": 5067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5102,
											"end": 5120,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5102,
											"end": 5120,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5102,
											"end": 5120,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5136,
											"end": 5151,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5136,
											"end": 5151,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5136,
											"end": 5151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5136,
											"end": 5151,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5171,
											"end": 5182,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5171,
											"end": 5182,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5171,
											"end": 5182,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5213,
											"end": 5214,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5209,
											"end": 5219,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5209,
											"end": 5219,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5209,
											"end": 5219,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5201,
											"end": 5220,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5201,
											"end": 5220,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5197,
											"end": 5225,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5197,
											"end": 5225,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5194,
											"end": 5235,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 5191,
											"end": 5252,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5191,
											"end": 5252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 5191,
											"end": 5252,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5248,
											"end": 5249,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5245,
											"end": 5246,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5238,
											"end": 5250,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5191,
											"end": 5252,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 5191,
											"end": 5252,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5270,
											"end": 5271,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5261,
											"end": 5271,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 5261,
											"end": 5271,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5280,
											"end": 5449,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 5280,
											"end": 5449,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5294,
											"end": 5296,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5291,
											"end": 5292,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5288,
											"end": 5297,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5280,
											"end": 5449,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5280,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 5280,
											"end": 5449,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5351,
											"end": 5374,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 5370,
											"end": 5373,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5351,
											"end": 5374,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 5351,
											"end": 5374,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5351,
											"end": 5374,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 5351,
											"end": 5374,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5339,
											"end": 5375,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5339,
											"end": 5375,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5312,
											"end": 5313,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5305,
											"end": 5314,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 5305,
											"end": 5314,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5305,
											"end": 5314,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 5305,
											"end": 5314,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5305,
											"end": 5314,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5280,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 5280,
											"end": 5449,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5280,
											"end": 5449,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 5280,
											"end": 5449,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5468,
											"end": 5474,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5512,
											"end": 5530,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5512,
											"end": 5530,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5499,
											"end": 5531,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5499,
											"end": 5531,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5543,
											"end": 5559,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5543,
											"end": 5559,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5543,
											"end": 5559,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5540,
											"end": 5576,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5540,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 5540,
											"end": 5576,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5572,
											"end": 5573,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5569,
											"end": 5570,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5562,
											"end": 5574,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5540,
											"end": 5576,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 5540,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5540,
											"end": 5576,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5595,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 5650,
											"end": 5657,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5639,
											"end": 5647,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5628,
											"end": 5637,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5624,
											"end": 5648,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5595,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 5595,
											"end": 5658,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5595,
											"end": 5658,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 5595,
											"end": 5658,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5585,
											"end": 5658,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5585,
											"end": 5658,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5585,
											"end": 5658,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4445,
											"end": 5664,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4445,
											"end": 5664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4445,
											"end": 5664,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4445,
											"end": 5664,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4445,
											"end": 5664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4445,
											"end": 5664,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5669,
											"end": 5914,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 5669,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5727,
											"end": 5733,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5782,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5768,
											"end": 5777,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5759,
											"end": 5766,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5755,
											"end": 5778,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5751,
											"end": 5783,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5748,
											"end": 5800,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5748,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 5748,
											"end": 5800,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5796,
											"end": 5797,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5793,
											"end": 5794,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5786,
											"end": 5798,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5748,
											"end": 5800,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 5748,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5835,
											"end": 5844,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5822,
											"end": 5845,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5854,
											"end": 5884,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 5878,
											"end": 5883,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5854,
											"end": 5884,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 5854,
											"end": 5884,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5919,
											"end": 6168,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 5919,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5988,
											"end": 5994,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6041,
											"end": 6043,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6029,
											"end": 6038,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6020,
											"end": 6027,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6016,
											"end": 6039,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6012,
											"end": 6044,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6009,
											"end": 6061,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6009,
											"end": 6061,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 6009,
											"end": 6061,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6057,
											"end": 6058,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6054,
											"end": 6055,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6047,
											"end": 6059,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6009,
											"end": 6061,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 6009,
											"end": 6061,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6089,
											"end": 6098,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6083,
											"end": 6099,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6108,
											"end": 6138,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 6132,
											"end": 6137,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6108,
											"end": 6138,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 6108,
											"end": 6138,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6173,
											"end": 6353,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 6173,
											"end": 6353,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6232,
											"end": 6238,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6285,
											"end": 6287,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6273,
											"end": 6282,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6264,
											"end": 6271,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6260,
											"end": 6283,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6256,
											"end": 6288,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6253,
											"end": 6305,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6253,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 6253,
											"end": 6305,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6301,
											"end": 6302,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6299,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6253,
											"end": 6305,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 6253,
											"end": 6305,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6324,
											"end": 6347,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 6347,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6173,
											"end": 6353,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6173,
											"end": 6353,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6358,
											"end": 6793,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 6358,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6411,
											"end": 6414,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6449,
											"end": 6454,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6443,
											"end": 6455,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6476,
											"end": 6482,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6471,
											"end": 6474,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6483,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6506,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6531,
											"end": 6533,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6526,
											"end": 6529,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6534,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6515,
											"end": 6534,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6515,
											"end": 6534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6568,
											"end": 6570,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6561,
											"end": 6566,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6557,
											"end": 6571,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6589,
											"end": 6590,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6599,
											"end": 6768,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 6599,
											"end": 6768,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6613,
											"end": 6619,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6610,
											"end": 6611,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6607,
											"end": 6620,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6599,
											"end": 6768,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6599,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 6599,
											"end": 6768,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6674,
											"end": 6687,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6674,
											"end": 6687,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6662,
											"end": 6688,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6662,
											"end": 6688,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6708,
											"end": 6720,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6708,
											"end": 6720,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6708,
											"end": 6720,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6708,
											"end": 6720,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6743,
											"end": 6758,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6743,
											"end": 6758,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6743,
											"end": 6758,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6743,
											"end": 6758,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6635,
											"end": 6636,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6628,
											"end": 6637,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6599,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 6599,
											"end": 6768,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6599,
											"end": 6768,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 6599,
											"end": 6768,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6784,
											"end": 6787,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6784,
											"end": 6787,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6358,
											"end": 6793,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6358,
											"end": 6793,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6798,
											"end": 7269,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 6798,
											"end": 7269,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6839,
											"end": 6842,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6877,
											"end": 6882,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6871,
											"end": 6883,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6904,
											"end": 6910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6899,
											"end": 6902,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6892,
											"end": 6911,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6929,
											"end": 6930,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6939,
											"end": 7101,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 6939,
											"end": 7101,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 6959,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6950,
											"end": 6951,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6947,
											"end": 6960,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 7101,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 7101,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 6939,
											"end": 7101,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7015,
											"end": 7019,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7071,
											"end": 7084,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7071,
											"end": 7084,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7071,
											"end": 7084,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7067,
											"end": 7089,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7067,
											"end": 7089,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7061,
											"end": 7090,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7043,
											"end": 7054,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7043,
											"end": 7054,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7043,
											"end": 7054,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7039,
											"end": 7059,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7039,
											"end": 7059,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7032,
											"end": 7091,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6968,
											"end": 6980,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 7101,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 6939,
											"end": 7101,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 7101,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 6939,
											"end": 7101,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7119,
											"end": 7125,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7116,
											"end": 7117,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7113,
											"end": 7126,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7110,
											"end": 7197,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7110,
											"end": 7197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 7110,
											"end": 7197,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7185,
											"end": 7186,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7178,
											"end": 7182,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7169,
											"end": 7175,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7167,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7160,
											"end": 7176,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7156,
											"end": 7183,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7149,
											"end": 7187,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7110,
											"end": 7197,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 7110,
											"end": 7197,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7251,
											"end": 7253,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7230,
											"end": 7245,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7226,
											"end": 7255,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7217,
											"end": 7256,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7217,
											"end": 7256,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7217,
											"end": 7256,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7217,
											"end": 7256,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7262,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7213,
											"end": 7263,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7213,
											"end": 7263,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6798,
											"end": 7269,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6798,
											"end": 7269,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7482,
											"end": 8308,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 7482,
											"end": 8308,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7879,
											"end": 7894,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7879,
											"end": 7894,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7879,
											"end": 7894,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7861,
											"end": 7895,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7861,
											"end": 7895,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7931,
											"end": 7946,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7931,
											"end": 7946,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7926,
											"end": 7928,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7911,
											"end": 7929,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7911,
											"end": 7929,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7904,
											"end": 7947,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7841,
											"end": 7844,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 7978,
											"end": 7980,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7963,
											"end": 7981,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7963,
											"end": 7981,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7956,
											"end": 7987,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7956,
											"end": 7987,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7956,
											"end": 7987,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7804,
											"end": 7808,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7804,
											"end": 7808,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8010,
											"end": 8067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 8010,
											"end": 8067,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8047,
											"end": 8066,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8047,
											"end": 8066,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8039,
											"end": 8045,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8010,
											"end": 8067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 8010,
											"end": 8067,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8010,
											"end": 8067,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 8010,
											"end": 8067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8115,
											"end": 8124,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8107,
											"end": 8113,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8103,
											"end": 8125,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8098,
											"end": 8100,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 8087,
											"end": 8096,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8083,
											"end": 8101,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8076,
											"end": 8126,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8149,
											"end": 8193,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 8186,
											"end": 8192,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8178,
											"end": 8184,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8149,
											"end": 8193,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 8149,
											"end": 8193,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8149,
											"end": 8193,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 8149,
											"end": 8193,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8135,
											"end": 8193,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8135,
											"end": 8193,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8242,
											"end": 8251,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8234,
											"end": 8240,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8230,
											"end": 8252,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8224,
											"end": 8227,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 8213,
											"end": 8222,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8209,
											"end": 8228,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8202,
											"end": 8253,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8270,
											"end": 8302,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 8295,
											"end": 8301,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8287,
											"end": 8293,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8270,
											"end": 8302,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 8270,
											"end": 8302,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8270,
											"end": 8302,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 8270,
											"end": 8302,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8262,
											"end": 8302,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 7482,
											"end": 8308,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7482,
											"end": 8308,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 8313,
											"end": 8873,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 8313,
											"end": 8873,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8610,
											"end": 8625,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8610,
											"end": 8625,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8610,
											"end": 8625,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8592,
											"end": 8626,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8592,
											"end": 8626,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8662,
											"end": 8677,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8662,
											"end": 8677,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8657,
											"end": 8659,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8642,
											"end": 8660,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8642,
											"end": 8660,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8635,
											"end": 8678,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8709,
											"end": 8711,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8694,
											"end": 8712,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8694,
											"end": 8712,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8687,
											"end": 8721,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8687,
											"end": 8721,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8687,
											"end": 8721,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8752,
											"end": 8754,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 8737,
											"end": 8755,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8737,
											"end": 8755,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8730,
											"end": 8764,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8730,
											"end": 8764,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8730,
											"end": 8764,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8572,
											"end": 8575,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 8795,
											"end": 8798,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 8780,
											"end": 8799,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8780,
											"end": 8799,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8773,
											"end": 8805,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8773,
											"end": 8805,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8773,
											"end": 8805,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8535,
											"end": 8539,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8535,
											"end": 8539,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8822,
											"end": 8867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 8822,
											"end": 8867,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8847,
											"end": 8866,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8847,
											"end": 8866,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8839,
											"end": 8845,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8822,
											"end": 8867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 8822,
											"end": 8867,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8822,
											"end": 8867,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 8822,
											"end": 8867,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8814,
											"end": 8867,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 8313,
											"end": 8873,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8313,
											"end": 8873,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 8878,
											"end": 9139,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 8878,
											"end": 9139,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9057,
											"end": 9059,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9046,
											"end": 9055,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9039,
											"end": 9060,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9020,
											"end": 9024,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9077,
											"end": 9133,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 9129,
											"end": 9131,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9118,
											"end": 9127,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9114,
											"end": 9132,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9106,
											"end": 9112,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9077,
											"end": 9133,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 9077,
											"end": 9133,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9144,
											"end": 9609,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 9144,
											"end": 9609,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9401,
											"end": 9403,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9390,
											"end": 9399,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9383,
											"end": 9404,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9364,
											"end": 9368,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9483,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 9479,
											"end": 9481,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9468,
											"end": 9477,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9464,
											"end": 9482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9456,
											"end": 9462,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9427,
											"end": 9483,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 9427,
											"end": 9483,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9427,
											"end": 9483,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 9427,
											"end": 9483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9531,
											"end": 9540,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9523,
											"end": 9529,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9519,
											"end": 9541,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9514,
											"end": 9516,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9503,
											"end": 9512,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9499,
											"end": 9517,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9492,
											"end": 9542,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9559,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 9596,
											"end": 9602,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9588,
											"end": 9594,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9559,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 9559,
											"end": 9603,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9559,
											"end": 9603,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 9559,
											"end": 9603,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9551,
											"end": 9603,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 9144,
											"end": 9609,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9144,
											"end": 9609,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 9806,
											"end": 10025,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 9806,
											"end": 10025,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9955,
											"end": 9957,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9944,
											"end": 9953,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9937,
											"end": 9958,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9918,
											"end": 9922,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9975,
											"end": 10019,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 10015,
											"end": 10017,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10004,
											"end": 10013,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10000,
											"end": 10018,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9992,
											"end": 9998,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9975,
											"end": 10019,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 9975,
											"end": 10019,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10451,
											"end": 10855,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 10451,
											"end": 10855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10653,
											"end": 10655,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10635,
											"end": 10656,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10635,
											"end": 10656,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10635,
											"end": 10656,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10692,
											"end": 10694,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 10672,
											"end": 10690,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10672,
											"end": 10690,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10672,
											"end": 10690,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10665,
											"end": 10695,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10731,
											"end": 10765,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 10726,
											"end": 10728,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10711,
											"end": 10729,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10711,
											"end": 10729,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10704,
											"end": 10766,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10797,
											"end": 10799,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10782,
											"end": 10800,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10782,
											"end": 10800,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10775,
											"end": 10813,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10845,
											"end": 10848,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 10830,
											"end": 10849,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10830,
											"end": 10849,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10855,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 11682,
											"end": 12083,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 11682,
											"end": 12083,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11884,
											"end": 11886,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11866,
											"end": 11887,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11866,
											"end": 11887,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11866,
											"end": 11887,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11923,
											"end": 11925,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 11903,
											"end": 11921,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11903,
											"end": 11921,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11903,
											"end": 11921,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11896,
											"end": 11926,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11962,
											"end": 11996,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 11957,
											"end": 11959,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11942,
											"end": 11960,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11942,
											"end": 11960,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11935,
											"end": 11997,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12028,
											"end": 12030,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 12013,
											"end": 12031,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12013,
											"end": 12031,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12006,
											"end": 12041,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12073,
											"end": 12076,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 12058,
											"end": 12077,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12058,
											"end": 12077,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11682,
											"end": 12083,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 12507,
											"end": 12913,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 12507,
											"end": 12913,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12709,
											"end": 12711,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12691,
											"end": 12712,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12691,
											"end": 12712,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12691,
											"end": 12712,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12748,
											"end": 12750,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 12728,
											"end": 12746,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12728,
											"end": 12746,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12728,
											"end": 12746,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12721,
											"end": 12751,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12787,
											"end": 12821,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 12782,
											"end": 12784,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12767,
											"end": 12785,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12767,
											"end": 12785,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12760,
											"end": 12822,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39103A3930B739B332B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12853,
											"end": 12855,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 12838,
											"end": 12856,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12838,
											"end": 12856,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12831,
											"end": 12871,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12903,
											"end": 12906,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 12888,
											"end": 12907,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12888,
											"end": 12907,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12507,
											"end": 12913,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15743,
											"end": 15926,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 15743,
											"end": 15926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15803,
											"end": 15807,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15836,
											"end": 15854,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15828,
											"end": 15834,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15825,
											"end": 15855,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15822,
											"end": 15878,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15822,
											"end": 15878,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 15822,
											"end": 15878,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15858,
											"end": 15876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 15858,
											"end": 15876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 15858,
											"end": 15876,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 15858,
											"end": 15876,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 15858,
											"end": 15876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15903,
											"end": 15904,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 15899,
											"end": 15913,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 15915,
											"end": 15919,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15895,
											"end": 15920,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15895,
											"end": 15920,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15743,
											"end": 15926,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15931,
											"end": 16059,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 15931,
											"end": 16059,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15971,
											"end": 15974,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16002,
											"end": 16003,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15998,
											"end": 16004,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 15995,
											"end": 15996,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15992,
											"end": 16005,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15989,
											"end": 16028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15989,
											"end": 16028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 15989,
											"end": 16028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16008,
											"end": 16026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 16008,
											"end": 16026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 16008,
											"end": 16026,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 16008,
											"end": 16026,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 16008,
											"end": 16026,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16044,
											"end": 16053,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16044,
											"end": 16053,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15931,
											"end": 16059,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 16064,
											"end": 16189,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 16064,
											"end": 16189,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16104,
											"end": 16108,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16132,
											"end": 16133,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16129,
											"end": 16130,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16126,
											"end": 16134,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 16123,
											"end": 16157,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16123,
											"end": 16157,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 16123,
											"end": 16157,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16137,
											"end": 16155,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 16137,
											"end": 16155,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 16137,
											"end": 16155,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 16137,
											"end": 16155,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 16137,
											"end": 16155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16174,
											"end": 16183,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16174,
											"end": 16183,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16064,
											"end": 16189,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 16194,
											"end": 16574,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 16194,
											"end": 16574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16273,
											"end": 16274,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 16269,
											"end": 16281,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16269,
											"end": 16281,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16269,
											"end": 16281,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 16269,
											"end": 16281,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16316,
											"end": 16328,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16316,
											"end": 16328,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16316,
											"end": 16328,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16337,
											"end": 16398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 16337,
											"end": 16398,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16391,
											"end": 16395,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 16383,
											"end": 16389,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16379,
											"end": 16396,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16369,
											"end": 16396,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16369,
											"end": 16396,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16337,
											"end": 16398,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 16337,
											"end": 16398,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16444,
											"end": 16446,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16436,
											"end": 16442,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16433,
											"end": 16447,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 16413,
											"end": 16431,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16410,
											"end": 16448,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 16407,
											"end": 16568,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16407,
											"end": 16568,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 16407,
											"end": 16568,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16490,
											"end": 16500,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 16485,
											"end": 16488,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 16481,
											"end": 16501,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 16478,
											"end": 16479,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16471,
											"end": 16502,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16525,
											"end": 16529,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 16522,
											"end": 16523,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 16515,
											"end": 16530,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16553,
											"end": 16557,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 16550,
											"end": 16551,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16543,
											"end": 16558,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 16407,
											"end": 16568,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 16407,
											"end": 16568,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16407,
											"end": 16568,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16194,
											"end": 16574,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16194,
											"end": 16574,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16194,
											"end": 16574,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16194,
											"end": 16574,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 16579,
											"end": 16828,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 16579,
											"end": 16828,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16689,
											"end": 16691,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 16670,
											"end": 16683,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16670,
											"end": 16683,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16666,
											"end": 16693,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16654,
											"end": 16694,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16654,
											"end": 16694,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16724,
											"end": 16742,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16709,
											"end": 16743,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16709,
											"end": 16743,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 16745,
											"end": 16767,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16745,
											"end": 16767,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16745,
											"end": 16767,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 16706,
											"end": 16768,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 16703,
											"end": 16791,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16703,
											"end": 16791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 16703,
											"end": 16791,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16771,
											"end": 16789,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 16771,
											"end": 16789,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 16771,
											"end": 16789,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 16771,
											"end": 16789,
											"name": "tag",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 16771,
											"end": 16789,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16807,
											"end": 16809,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16800,
											"end": 16822,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16579,
											"end": 16828,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 16833,
											"end": 16968,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 16833,
											"end": 16968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16872,
											"end": 16875,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16893,
											"end": 16910,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16893,
											"end": 16910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 16890,
											"end": 16933,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16890,
											"end": 16933,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 16890,
											"end": 16933,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16913,
											"end": 16931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 16913,
											"end": 16931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 16913,
											"end": 16931,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 16913,
											"end": 16931,
											"name": "tag",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 16913,
											"end": 16931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16960,
											"end": 16961,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 16949,
											"end": 16962,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16949,
											"end": 16962,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16833,
											"end": 16968,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 16973,
											"end": 17100,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 16973,
											"end": 17100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17034,
											"end": 17044,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 17029,
											"end": 17032,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 17025,
											"end": 17045,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 17022,
											"end": 17023,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17015,
											"end": 17046,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17065,
											"end": 17069,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 17062,
											"end": 17063,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17055,
											"end": 17070,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17089,
											"end": 17093,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 17086,
											"end": 17087,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17079,
											"end": 17094,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 17105,
											"end": 17232,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 17105,
											"end": 17232,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17166,
											"end": 17176,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 17161,
											"end": 17164,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 17157,
											"end": 17177,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 17154,
											"end": 17155,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17147,
											"end": 17178,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17197,
											"end": 17201,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 17194,
											"end": 17195,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17187,
											"end": 17202,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17221,
											"end": 17225,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 17218,
											"end": 17219,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17211,
											"end": 17226,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 17237,
											"end": 17364,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 17237,
											"end": 17364,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17298,
											"end": 17308,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 17293,
											"end": 17296,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 17289,
											"end": 17309,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 17286,
											"end": 17287,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17279,
											"end": 17310,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17329,
											"end": 17333,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 17326,
											"end": 17327,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17319,
											"end": 17334,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17353,
											"end": 17357,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 17350,
											"end": 17351,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17343,
											"end": 17358,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 17369,
											"end": 17548,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 17369,
											"end": 17548,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17404,
											"end": 17407,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17446,
											"end": 17447,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 17428,
											"end": 17444,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 17425,
											"end": 17448,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 17422,
											"end": 17542,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17422,
											"end": 17542,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 17422,
											"end": 17542,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17492,
											"end": 17493,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17489,
											"end": 17490,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17486,
											"end": 17487,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17471,
											"end": 17494,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17529,
											"end": 17530,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17523,
											"end": 17531,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 17518,
											"end": 17521,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 17514,
											"end": 17532,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 17422,
											"end": 17542,
											"name": "tag",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 17422,
											"end": 17542,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17369,
											"end": 17548,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17369,
											"end": 17548,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 17553,
											"end": 18224,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 17553,
											"end": 18224,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17592,
											"end": 17595,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17634,
											"end": 17638,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 17616,
											"end": 17632,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 17613,
											"end": 17639,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 17610,
											"end": 17649,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17610,
											"end": 17649,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 17610,
											"end": 17649,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17553,
											"end": 18224,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17553,
											"end": 18224,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 17610,
											"end": 17649,
											"name": "tag",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 17610,
											"end": 17649,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17676,
											"end": 17678,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17670,
											"end": 17679,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17741,
											"end": 17757,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 17737,
											"end": 17762,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17737,
											"end": 17762,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17734,
											"end": 17735,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17670,
											"end": 17679,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17713,
											"end": 17763,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 17792,
											"end": 17796,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17786,
											"end": 17797,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 17816,
											"end": 17832,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 17851,
											"end": 17869,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17922,
											"end": 17924,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17915,
											"end": 17919,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 17907,
											"end": 17913,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17903,
											"end": 17920,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17900,
											"end": 17925,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 17895,
											"end": 17897,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17887,
											"end": 17893,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17884,
											"end": 17898,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 17881,
											"end": 17926,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 17878,
											"end": 17936,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17878,
											"end": 17936,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 17878,
											"end": 17936,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17929,
											"end": 17934,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17929,
											"end": 17934,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17929,
											"end": 17934,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17929,
											"end": 17934,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17929,
											"end": 17934,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17553,
											"end": 18224,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17553,
											"end": 18224,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 17878,
											"end": 17936,
											"name": "tag",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 17878,
											"end": 17936,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17966,
											"end": 17972,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17960,
											"end": 17964,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 17956,
											"end": 17973,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17945,
											"end": 17973,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17945,
											"end": 17973,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18002,
											"end": 18005,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17996,
											"end": 18006,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 18029,
											"end": 18031,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18021,
											"end": 18027,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18018,
											"end": 18032,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 18015,
											"end": 18042,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 18015,
											"end": 18042,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 18015,
											"end": 18042,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 18035,
											"end": 18040,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18035,
											"end": 18040,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18035,
											"end": 18040,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18035,
											"end": 18040,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18035,
											"end": 18040,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18035,
											"end": 18040,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17553,
											"end": 18224,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17553,
											"end": 18224,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 18015,
											"end": 18042,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 18015,
											"end": 18042,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18119,
											"end": 18121,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 18100,
											"end": 18116,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 18094,
											"end": 18098,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 18090,
											"end": 18117,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18086,
											"end": 18122,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18079,
											"end": 18083,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18070,
											"end": 18076,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18065,
											"end": 18068,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 18061,
											"end": 18077,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18057,
											"end": 18084,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18054,
											"end": 18123,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 18051,
											"end": 18133,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 18051,
											"end": 18133,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 18051,
											"end": 18133,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 18126,
											"end": 18131,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18126,
											"end": 18131,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18126,
											"end": 18131,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18126,
											"end": 18131,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18126,
											"end": 18131,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18126,
											"end": 18131,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17553,
											"end": 18224,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17553,
											"end": 18224,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 18051,
											"end": 18133,
											"name": "tag",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 18051,
											"end": 18133,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18142,
											"end": 18199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 18193,
											"end": 18197,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18184,
											"end": 18190,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18176,
											"end": 18182,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 18172,
											"end": 18191,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18168,
											"end": 18198,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18162,
											"end": 18166,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 18142,
											"end": 18199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 18142,
											"end": 18199,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 18142,
											"end": 18199,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 18142,
											"end": 18199,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18215,
											"end": 18218,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18215,
											"end": 18218,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 17553,
											"end": 18224,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17553,
											"end": 18224,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 18229,
											"end": 18360,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 18229,
											"end": 18360,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 18303,
											"end": 18335,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18303,
											"end": 18335,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 18293,
											"end": 18336,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18293,
											"end": 18336,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 18283,
											"end": 18354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 18283,
											"end": 18354,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 18350,
											"end": 18351,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18347,
											"end": 18348,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 18340,
											"end": 18352,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 18283,
											"end": 18354,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 18283,
											"end": 18354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18229,
											"end": 18360,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18229,
											"end": 18360,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"adminSafe()": "4b8c9c2d",
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"changeAdminSafe(address)": "cb450772",
							"exists(uint256)": "4f558e79",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,uint256,uint256)": "156e29f6",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply(uint256)": "bd85b039",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"safeAddress\",\"type\":\"address\"}],\"name\":\"AdminSafeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"TraderApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"adminSafe\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"}],\"name\":\"changeAdminSafe\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"exists(uint256)\":{\"details\":\"Indicates whether any token exist with a given id, or not.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"totalSupply(uint256)\":{\"details\":\"Total amount of tokens in with a given id.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GU-NFT/GUCollections.sol\":\"GUCollections\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x04d6d1342ece664085921a4fabc928a7bcf1cf2873fa81780f61a54dc2b9b66e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6d2b052effa2e9a7479b0fea53b46f4cbbd91947848ef632aadad20ae2e9275\",\"dweb:/ipfs/QmcZp7f5cooGZrhHE8RC1yQR53RFZt19d5fyVqNfbHmPgY\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":{\"keccak256\":\"0xe243a49f159c97fdd011edb7a8ed1b48175f0fa6b8592bb6dcccac7e22d8c37b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9fcf3c76e66e7cbd95bc1d47eb41c2764670deea0e129a0bc8ed893f5ee20628\",\"dweb:/ipfs/QmUVYsGME7ikBfN638shb36WHbqecVAzxVMqSHT1eE5Qdk\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/GU-NFT/GUCollections.sol\":{\"keccak256\":\"0x59a5e187e39adca0c987bcaa2052d4fe5d46114261d9e5bc445f5dda7b1efbeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://806601bb6cd161d2957944c3c72902a0bd59c9ffa0929b7fdbc25d400efdcb9a\",\"dweb:/ipfs/QmRniYAsbRoABBMcM1ZqaPahtTxfxh8pj9Frf6w8PESdXc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 25,
								"contract": "contracts/GU-NFT/GUCollections.sol:GUCollections",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 31,
								"contract": "contracts/GU-NFT/GUCollections.sol:GUCollections",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 33,
								"contract": "contracts/GU-NFT/GUCollections.sol:GUCollections",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 1268,
								"contract": "contracts/GU-NFT/GUCollections.sol:GUCollections",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1768,
								"contract": "contracts/GU-NFT/GUCollections.sol:GUCollections",
								"label": "traders",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1770,
								"contract": "contracts/GU-NFT/GUCollections.sol:GUCollections",
								"label": "adminSafe",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Address": [
							1701
						],
						"Context": [
							1723
						],
						"ERC1155": [
							1095
						],
						"ERC165": [
							1747
						],
						"IERC1155": [
							1217
						],
						"IERC1155MetadataURI": [
							1406
						],
						"IERC1155Receiver": [
							1258
						],
						"IERC165": [
							1759
						]
					},
					"id": 1096,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 1218,
							"src": "119:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 1259,
							"src": "144:32:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 1407,
							"src": "177:46:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 1702,
							"src": "224:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 1724,
							"src": "258:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 1748,
							"src": "292:46:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1723,
										"src": "575:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "575:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1747,
										"src": "584:6:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "584:6:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1217,
										"src": "592:8:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "592:8:0"
								},
								{
									"baseName": {
										"id": 15,
										"name": "IERC1155MetadataURI",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1406,
										"src": "602:19:0"
									},
									"id": 16,
									"nodeType": "InheritanceSpecifier",
									"src": "602:19:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "340:214:0",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1095,
							"linearizedBaseContracts": [
								1095,
								1406,
								1217,
								1747,
								1759,
								1723
							],
							"name": "ERC1155",
							"nameLocation": "564:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 19,
									"libraryName": {
										"id": 17,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1701,
										"src": "634:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "628:26:0",
									"typeName": {
										"id": 18,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "646:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "765:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1095,
									"src": "709:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 24,
										"keyType": {
											"id": 20,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "717:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "709:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 23,
											"keyType": {
												"id": 21,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "736:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "728:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 22,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "747:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 31,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "884:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1095,
									"src": "831:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 30,
										"keyType": {
											"id": 26,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "839:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "831:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 29,
											"keyType": {
												"id": 27,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "858:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "850:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 28,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "869:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 33,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1038:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 1095,
									"src": "1023:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 32,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1023:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "1124:30:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 40,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "1142:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 39,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "1134:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1134:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "1134:13:0"
											}
										]
									},
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1049:38:0",
										"text": " @dev See {_setURI}."
									},
									"id": 44,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1118:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1104:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 35,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1104:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:20:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1124:0:0"
									},
									"scope": 1095,
									"src": "1092:62:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1746,
										1758
									],
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "1329:197:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 55,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1358:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 57,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1217,
																			"src": "1378:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1217_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1217_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 56,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1373:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 58,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1373:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1217",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 59,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1373:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1358:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 61,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1415:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 63,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1406,
																			"src": "1435:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1406_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1406_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 62,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1430:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 64,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1430:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1406",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1430:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1415:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1358:109:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 70,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1507:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 68,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1483:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1095_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1746,
															"src": "1483:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1483:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1358:161:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 54,
												"id": 73,
												"nodeType": "Return",
												"src": "1339:180:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1160:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1230:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 51,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 49,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1747,
												"src": "1297:6:0"
											},
											{
												"id": 50,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1759,
												"src": "1305:7:0"
											}
										],
										"src": "1288:25:0"
									},
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1255:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1248:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 46,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1248:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1247:20:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1323:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 52,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1323:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:6:0"
									},
									"scope": 1095,
									"src": "1221:305:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1405
									],
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "2000:28:0",
										"statements": [
											{
												"expression": {
													"id": 84,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 33,
													"src": "2017:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 83,
												"id": 85,
												"nodeType": "Return",
												"src": "2010:11:0"
											}
										]
									},
									"documentation": {
										"id": 76,
										"nodeType": "StructuredDocumentation",
										"src": "1532:388:0",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "1934:3:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 80,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1967:8:0"
									},
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "1938:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1938:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1937:9:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "1985:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 81,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1985:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1984:15:0"
									},
									"scope": 1095,
									"src": "1925:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1155
									],
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "2265:133:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 99,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "2283:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2302:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2294:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 100,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2294:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2294:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2283:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2306:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															},
															"value": "ERC1155: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															}
														],
														"id": 98,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2275:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2275:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "2275:77:0"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 108,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "2369:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 110,
														"indexExpression": {
															"id": 109,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "2379:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2369:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 112,
													"indexExpression": {
														"id": 111,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "2383:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2369:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 97,
												"id": 113,
												"nodeType": "Return",
												"src": "2362:29:0"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "2034:131:0",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2179:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 94,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2238:8:0"
									},
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2197:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2189:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2214:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2206:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2188:29:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2256:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2256:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2255:9:0"
									},
									"scope": 1095,
									"src": "2170:228:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1168
									],
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "2728:335:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 130,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "2746:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2746:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 132,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "2765:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2765:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2746:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2777:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 129,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2738:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2738:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "2738:83:0"
											},
											{
												"assignments": [
													142
												],
												"declarations": [
													{
														"constant": false,
														"id": 142,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2849:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 178,
														"src": "2832:30:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 140,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2832:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 141,
															"nodeType": "ArrayTypeName",
															"src": "2832:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 149,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 146,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 119,
																"src": "2879:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2879:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2865:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 143,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2869:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 144,
															"nodeType": "ArrayTypeName",
															"src": "2869:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2865:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2832:63:0"
											},
											{
												"body": {
													"id": 174,
													"nodeType": "Block",
													"src": "2952:74:0",
													"statements": [
														{
															"expression": {
																"id": 172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 161,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 142,
																		"src": "2966:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 163,
																	"indexExpression": {
																		"id": 162,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 151,
																		"src": "2980:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2966:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 165,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 119,
																				"src": "2995:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 167,
																			"indexExpression": {
																				"id": 166,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 151,
																				"src": "3004:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2995:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 168,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 122,
																				"src": "3008:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 170,
																			"indexExpression": {
																				"id": 169,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 151,
																				"src": "3012:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3008:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 164,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "2985:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2985:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2966:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 173,
															"nodeType": "ExpressionStatement",
															"src": "2966:49:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 154,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "2926:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 155,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "2930:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2930:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2926:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 175,
												"initializationExpression": {
													"assignments": [
														151
													],
													"declarations": [
														{
															"constant": false,
															"id": 151,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2919:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 175,
															"src": "2911:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 150,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2911:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 153,
													"initialValue": {
														"hexValue": "30",
														"id": 152,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2911:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2947:3:0",
														"subExpression": {
															"id": 158,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "2949:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 160,
													"nodeType": "ExpressionStatement",
													"src": "2947:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2906:120:0"
											},
											{
												"expression": {
													"id": 176,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 142,
													"src": "3043:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 128,
												"id": 177,
												"nodeType": "Return",
												"src": "3036:20:0"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "2404:146:0",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2564:14:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 124,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2680:8:0"
									},
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2596:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2579:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 117,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2579:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 118,
													"nodeType": "ArrayTypeName",
													"src": "2579:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2623:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2606:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 120,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2606:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 121,
													"nodeType": "ArrayTypeName",
													"src": "2606:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2578:49:0"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2706:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 125,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2706:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 126,
													"nodeType": "ArrayTypeName",
													"src": "2706:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2705:18:0"
									},
									"scope": 1095,
									"src": "2555:508:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1176
									],
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "3215:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 189,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1713,
																"src": "3244:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3244:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 191,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "3258:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 192,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "3268:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 188,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "3225:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3225:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 194,
												"nodeType": "ExpressionStatement",
												"src": "3225:52:0"
											}
										]
									},
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "3069:57:0",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3140:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 186,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3206:8:0"
									},
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3166:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "3158:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3158:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3181:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "3176:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 183,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3176:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:33:0"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3215:0:0"
									},
									"scope": 1095,
									"src": "3131:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1186
									],
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "3456:61:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 207,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "3473:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 209,
														"indexExpression": {
															"id": 208,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "3492:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3473:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 211,
													"indexExpression": {
														"id": 210,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "3501:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3473:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 206,
												"id": 212,
												"nodeType": "Return",
												"src": "3466:44:0"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "3290:56:0",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3360:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 203,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3432:8:0"
									},
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3385:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3377:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3377:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3402:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3394:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3394:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3376:35:0"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3450:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3450:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3449:6:0"
									},
									"scope": 1095,
									"src": "3351:166:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1200
									],
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "3753:220:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 230,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "3784:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 231,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1713,
																		"src": "3792:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3792:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3784:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 235,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 217,
																		"src": "3825:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 236,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1713,
																			"src": "3831:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3831:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 234,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "3808:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3808:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3784:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3858:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3763:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3763:148:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "3763:148:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 244,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "3939:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 245,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "3945:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 246,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "3949:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 247,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "3953:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 248,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "3961:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 243,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "3921:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3921:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "3921:45:0"
											}
										]
									},
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3523:56:0",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3593:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 227,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3744:8:0"
									},
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3627:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3619:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3619:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3649:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3641:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3641:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3669:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3661:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3689:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3681:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3681:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3718:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3705:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 224,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3705:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3609:119:0"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3753:0:0"
									},
									"scope": 1095,
									"src": "3584:389:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1216
									],
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "4239:236:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 270,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 255,
																	"src": "4270:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 271,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1713,
																		"src": "4278:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4278:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4270:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 275,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 255,
																		"src": "4311:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 276,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1713,
																			"src": "4317:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4317:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 274,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "4294:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4294:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4270:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4344:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															},
															"value": "ERC1155: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															}
														],
														"id": 269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4249:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4249:157:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "4249:157:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 284,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "4439:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 285,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "4445:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 286,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "4449:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 287,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "4454:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 288,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "4463:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 283,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "4416:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4416:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "4416:52:0"
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "3979:61:0",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4054:21:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 267,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4230:8:0"
									},
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4093:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4085:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4085:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4115:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4107:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4107:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4144:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4127:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 258,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4127:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 259,
													"nodeType": "ArrayTypeName",
													"src": "4127:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4174:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4157:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 261,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4157:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 262,
													"nodeType": "ArrayTypeName",
													"src": "4157:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4204:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4191:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 264,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4191:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4075:139:0"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4239:0:0"
									},
									"scope": 1095,
									"src": "4045:430:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "5088:634:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 307,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 297,
																"src": "5106:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5120:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5112:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 308,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5112:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5112:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5106:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5124:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 306,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5098:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "5098:66:0"
											},
											{
												"assignments": [
													317
												],
												"declarations": [
													{
														"constant": false,
														"id": 317,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5183:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 385,
														"src": "5175:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 316,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5175:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 320,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 318,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1713,
														"src": "5194:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5194:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5175:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 322,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "5238:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 323,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "5248:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 324,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5254:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 326,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 299,
																	"src": "5276:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 325,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "5258:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5258:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 329,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "5299:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 328,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "5281:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5281:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 331,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "5308:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 321,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "5217:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5217:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "5217:96:0"
											},
											{
												"assignments": [
													335
												],
												"declarations": [
													{
														"constant": false,
														"id": 335,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "5332:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 385,
														"src": "5324:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 334,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5324:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 341,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 336,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "5346:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 338,
														"indexExpression": {
															"id": 337,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "5356:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5346:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 340,
													"indexExpression": {
														"id": 339,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5360:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5346:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5324:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 343,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "5383:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 344,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "5398:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5383:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5406:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 342,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5375:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "5375:76:0"
											},
											{
												"id": 359,
												"nodeType": "UncheckedBlock",
												"src": "5461:77:0",
												"statements": [
													{
														"expression": {
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 349,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "5485:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 352,
																	"indexExpression": {
																		"id": 350,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 299,
																		"src": "5495:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5485:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 353,
																"indexExpression": {
																	"id": 351,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "5499:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5485:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 354,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "5507:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 355,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "5521:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5507:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5485:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 358,
														"nodeType": "ExpressionStatement",
														"src": "5485:42:0"
													}
												]
											},
											{
												"expression": {
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 360,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "5547:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 363,
															"indexExpression": {
																"id": 361,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "5557:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5547:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 364,
														"indexExpression": {
															"id": 362,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5561:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5547:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 365,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "5568:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5547:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "5547:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 369,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "5605:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "5615:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 371,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5621:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 372,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "5625:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 373,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "5629:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 368,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "5590:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5590:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 375,
												"nodeType": "EmitStatement",
												"src": "5585:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 377,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "5678:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 378,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "5688:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 379,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5694:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 380,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "5698:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 381,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "5702:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 382,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "5710:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 376,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1001,
														"src": "5647:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5647:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "5647:68:0"
											}
										]
									},
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "4481:439:0",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "4934:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4969:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "4961:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4961:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4991:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "4983:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5011:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "5003:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5003:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5031:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "5023:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5023:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5060:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "5047:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 302,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5047:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4951:119:0"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:0"
									},
									"scope": 1095,
									"src": "4925:797:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "6256:857:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 403,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "6274:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6274:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 405,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 397,
																	"src": "6288:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6288:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6274:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6304:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 402,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6266:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6266:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "6266:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 412,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 391,
																"src": "6365:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6379:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6371:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 413,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6371:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6371:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6365:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6383:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 411,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6357:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6357:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "6357:66:0"
											},
											{
												"assignments": [
													422
												],
												"declarations": [
													{
														"constant": false,
														"id": 422,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "6442:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 511,
														"src": "6434:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 421,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6434:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 425,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 423,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1713,
														"src": "6453:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6453:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6434:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 427,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "6497:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 428,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "6507:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 429,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "6513:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 430,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "6517:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 431,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "6522:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 432,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "6531:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 426,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "6476:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6476:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "6476:60:0"
											},
											{
												"body": {
													"id": 492,
													"nodeType": "Block",
													"src": "6588:370:0",
													"statements": [
														{
															"assignments": [
																447
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 447,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6610:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 492,
																	"src": "6602:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 446,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6602:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 451,
															"initialValue": {
																"baseExpression": {
																	"id": 448,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "6615:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 450,
																"indexExpression": {
																	"id": 449,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 436,
																	"src": "6619:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6615:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6602:19:0"
														},
														{
															"assignments": [
																453
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 453,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "6643:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 492,
																	"src": "6635:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 452,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6635:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 457,
															"initialValue": {
																"baseExpression": {
																	"id": 454,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 397,
																	"src": "6652:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 456,
																"indexExpression": {
																	"id": 455,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 436,
																	"src": "6660:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6652:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6635:27:0"
														},
														{
															"assignments": [
																459
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 459,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6685:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 492,
																	"src": "6677:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 458,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6677:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 465,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 460,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "6699:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 462,
																	"indexExpression": {
																		"id": 461,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 447,
																		"src": "6709:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6699:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 464,
																"indexExpression": {
																	"id": 463,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 389,
																	"src": "6713:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6699:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6677:41:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 467,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 459,
																			"src": "6740:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 468,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 453,
																			"src": "6755:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6740:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																		"id": 470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6763:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		},
																		"value": "ERC1155: insufficient balance for transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		}
																	],
																	"id": 466,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6732:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6732:76:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 472,
															"nodeType": "ExpressionStatement",
															"src": "6732:76:0"
														},
														{
															"id": 483,
															"nodeType": "UncheckedBlock",
															"src": "6822:85:0",
															"statements": [
																{
																	"expression": {
																		"id": 481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 473,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 25,
																					"src": "6850:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 476,
																				"indexExpression": {
																					"id": 474,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 447,
																					"src": "6860:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6850:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 477,
																			"indexExpression": {
																				"id": 475,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 389,
																				"src": "6864:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6850:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 480,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 478,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 459,
																				"src": "6872:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 479,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 453,
																				"src": "6886:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6872:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6850:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 482,
																	"nodeType": "ExpressionStatement",
																	"src": "6850:42:0"
																}
															]
														},
														{
															"expression": {
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 484,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "6920:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 487,
																		"indexExpression": {
																			"id": 485,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 447,
																			"src": "6930:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6920:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 488,
																	"indexExpression": {
																		"id": 486,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 391,
																		"src": "6934:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6920:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 489,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 453,
																	"src": "6941:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6920:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 491,
															"nodeType": "ExpressionStatement",
															"src": "6920:27:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 439,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "6567:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 440,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "6571:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6571:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6567:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 493,
												"initializationExpression": {
													"assignments": [
														436
													],
													"declarations": [
														{
															"constant": false,
															"id": 436,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6560:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 493,
															"src": "6552:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 435,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6552:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 438,
													"initialValue": {
														"hexValue": "30",
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6564:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6552:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6583:3:0",
														"subExpression": {
															"id": 443,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "6585:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 445,
													"nodeType": "ExpressionStatement",
													"src": "6583:3:0"
												},
												"nodeType": "ForStatement",
												"src": "6547:411:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 495,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "6987:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "6997:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "7003:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 498,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "7007:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 499,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "7012:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 494,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "6973:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6973:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "EmitStatement",
												"src": "6968:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 503,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "7067:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 504,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "7077:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 505,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "7083:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 506,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "7087:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 507,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "7092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 508,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "7101:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 502,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "7031:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7031:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "7031:75:0"
											}
										]
									},
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "5728:335:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "6077:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6117:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "6109:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6109:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6139:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "6131:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6131:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "6168:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "6151:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 392,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6151:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 393,
													"nodeType": "ArrayTypeName",
													"src": "6151:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "6198:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "6181:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 395,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6181:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 396,
													"nodeType": "ArrayTypeName",
													"src": "6181:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6228:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "6215:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 398,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6215:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6099:139:0"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6256:0:0"
									},
									"scope": 1095,
									"src": "6068:1045:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "7992:30:0",
										"statements": [
											{
												"expression": {
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 518,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "8002:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 519,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "8009:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8002:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "8002:13:0"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "7119:812:0",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "7945:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "7967:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "7953:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 514,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7953:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7952:22:0"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7992:0:0"
									},
									"scope": 1095,
									"src": "7936:86:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 597,
										"nodeType": "Block",
										"src": "8524:424:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 536,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "8542:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8556:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8548:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 537,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8548:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 540,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8548:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8542:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8560:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 535,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8534:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8534:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "8534:62:0"
											},
											{
												"assignments": [
													546
												],
												"declarations": [
													{
														"constant": false,
														"id": 546,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "8615:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 597,
														"src": "8607:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 545,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8607:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 549,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 547,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1713,
														"src": "8626:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8626:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8607:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 551,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "8670:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8688:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8680:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 552,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8680:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8680:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 556,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "8692:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 558,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 528,
																	"src": "8714:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 557,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "8696:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8696:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 561,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 530,
																	"src": "8737:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 560,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "8719:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8719:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 563,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "8746:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 550,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "8649:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8649:102:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "8649:102:0"
											},
											{
												"expression": {
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 566,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "8762:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 569,
															"indexExpression": {
																"id": 567,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "8772:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8762:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 570,
														"indexExpression": {
															"id": 568,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "8776:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8762:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 571,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "8783:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8762:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 573,
												"nodeType": "ExpressionStatement",
												"src": "8762:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 575,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "8819:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8837:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8829:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 576,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8829:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8829:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 580,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "8841:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 581,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "8845:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 582,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "8849:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 574,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "8804:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8804:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 584,
												"nodeType": "EmitStatement",
												"src": "8799:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 586,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "8898:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8916:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8908:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 587,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8908:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8908:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 591,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "8920:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 592,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "8924:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 593,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "8928:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 594,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "8936:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 585,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1001,
														"src": "8867:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8867:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 596,
												"nodeType": "ExpressionStatement",
												"src": "8867:74:0"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "8028:362:0",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8404:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8427:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "8419:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8419:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8447:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "8439:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8439:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8467:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "8459:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8459:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8496:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "8483:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 531,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8409:97:0"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8524:0:0"
									},
									"scope": 1095,
									"src": "8395:553:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "9447:561:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 613,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 601,
																"src": "9465:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9479:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9471:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 614,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9471:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9471:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9465:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9483:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 612,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9457:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9457:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 621,
												"nodeType": "ExpressionStatement",
												"src": "9457:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 623,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 604,
																	"src": "9537:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9537:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 625,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 607,
																	"src": "9551:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9551:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9537:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9567:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 622,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9529:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9529:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "9529:81:0"
											},
											{
												"assignments": [
													632
												],
												"declarations": [
													{
														"constant": false,
														"id": 632,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "9629:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 696,
														"src": "9621:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 631,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9621:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 635,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 633,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1713,
														"src": "9640:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9640:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9621:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 637,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "9684:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9702:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9694:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 638,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9694:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9694:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 642,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "9706:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 643,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "9710:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 644,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "9715:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 645,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "9724:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 636,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "9663:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9663:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "9663:66:0"
											},
											{
												"body": {
													"id": 671,
													"nodeType": "Block",
													"src": "9781:60:0",
													"statements": [
														{
															"expression": {
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 659,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "9795:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 664,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 660,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 604,
																				"src": "9805:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 662,
																			"indexExpression": {
																				"id": 661,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 649,
																				"src": "9809:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9805:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9795:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 665,
																	"indexExpression": {
																		"id": 663,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 601,
																		"src": "9813:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9795:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 666,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 607,
																		"src": "9820:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 668,
																	"indexExpression": {
																		"id": 667,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 649,
																		"src": "9828:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9820:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9795:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 670,
															"nodeType": "ExpressionStatement",
															"src": "9795:35:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 652,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "9760:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 653,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "9764:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 654,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9764:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9760:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 672,
												"initializationExpression": {
													"assignments": [
														649
													],
													"declarations": [
														{
															"constant": false,
															"id": 649,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "9753:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 672,
															"src": "9745:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 648,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9745:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 651,
													"initialValue": {
														"hexValue": "30",
														"id": 650,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9757:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "9745:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 657,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "9776:3:0",
														"subExpression": {
															"id": 656,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "9776:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 658,
													"nodeType": "ExpressionStatement",
													"src": "9776:3:0"
												},
												"nodeType": "ForStatement",
												"src": "9740:101:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 674,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "9870:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9888:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9880:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 675,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9880:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9880:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 679,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "9892:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 680,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "9896:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 681,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "9901:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 673,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "9856:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9856:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 683,
												"nodeType": "EmitStatement",
												"src": "9851:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 685,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "9956:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9974:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9966:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 686,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9966:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9966:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 690,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "9978:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 691,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "9982:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 692,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "9987:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 693,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "9996:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 684,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "9920:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9920:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 695,
												"nodeType": "ExpressionStatement",
												"src": "9920:81:0"
											}
										]
									},
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "8954:334:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "9302:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9330:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "9322:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9322:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9359:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "9342:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 602,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9342:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 603,
													"nodeType": "ArrayTypeName",
													"src": "9342:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "9389:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "9372:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 605,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9372:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 606,
													"nodeType": "ArrayTypeName",
													"src": "9372:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "9406:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 608,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9406:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9312:117:0"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9447:0:0"
									},
									"scope": 1095,
									"src": "9293:715:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "10352:526:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 708,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 700,
																"src": "10370:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10386:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10378:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 709,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10378:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 712,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10378:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10370:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10390:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 707,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10362:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10362:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 716,
												"nodeType": "ExpressionStatement",
												"src": "10362:66:0"
											},
											{
												"assignments": [
													718
												],
												"declarations": [
													{
														"constant": false,
														"id": 718,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "10447:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 775,
														"src": "10439:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 717,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10439:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 721,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 719,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1713,
														"src": "10458:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10458:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10439:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 723,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "10502:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 724,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "10512:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10526:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10518:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 725,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10518:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10518:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 730,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 702,
																	"src": "10548:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 729,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "10530:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10530:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 733,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 704,
																	"src": "10571:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 732,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "10553:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10553:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10580:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 722,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "10481:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10481:102:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "10481:102:0"
											},
											{
												"assignments": [
													739
												],
												"declarations": [
													{
														"constant": false,
														"id": 739,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "10602:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 775,
														"src": "10594:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 738,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10594:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 745,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 740,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "10616:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 742,
														"indexExpression": {
															"id": 741,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "10626:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10616:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 744,
													"indexExpression": {
														"id": 743,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "10630:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10616:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10594:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 747,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 739,
																"src": "10653:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 748,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 704,
																"src": "10668:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10653:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10676:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															},
															"value": "ERC1155: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															}
														],
														"id": 746,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10645:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10645:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 752,
												"nodeType": "ExpressionStatement",
												"src": "10645:70:0"
											},
											{
												"id": 763,
												"nodeType": "UncheckedBlock",
												"src": "10725:77:0",
												"statements": [
													{
														"expression": {
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 753,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "10749:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 756,
																	"indexExpression": {
																		"id": 754,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 702,
																		"src": "10759:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10749:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 757,
																"indexExpression": {
																	"id": 755,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 700,
																	"src": "10763:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10749:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 758,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 739,
																	"src": "10771:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 759,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 704,
																	"src": "10785:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10771:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10749:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 762,
														"nodeType": "ExpressionStatement",
														"src": "10749:42:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 765,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "10832:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 766,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "10842:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10856:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 768,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10848:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 767,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10848:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 771,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "10860:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 772,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "10864:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 764,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "10817:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10817:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 774,
												"nodeType": "EmitStatement",
												"src": "10812:59:0"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "10014:229:0",
										"text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10257:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10280:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "10272:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10272:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10302:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "10294:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10294:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10322:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "10314:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10314:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10262:72:0"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10352:0:0"
									},
									"scope": 1095,
									"src": "10248:630:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "11201:738:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 789,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "11219:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11235:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11227:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 790,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11227:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11227:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11219:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11239:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 788,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11211:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11211:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "11211:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 799,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "11295:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11295:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 801,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "11309:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11309:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11295:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11325:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 798,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11287:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11287:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "11287:81:0"
											},
											{
												"assignments": [
													808
												],
												"declarations": [
													{
														"constant": false,
														"id": 808,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "11387:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 886,
														"src": "11379:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 807,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11379:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 811,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 809,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1713,
														"src": "11398:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11398:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11379:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 813,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "11442:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 814,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "11452:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11466:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11458:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 815,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11458:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11458:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 819,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "11470:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 820,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "11475:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11484:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 812,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "11421:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11421:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 823,
												"nodeType": "ExpressionStatement",
												"src": "11421:66:0"
											},
											{
												"body": {
													"id": 873,
													"nodeType": "Block",
													"src": "11539:323:0",
													"statements": [
														{
															"assignments": [
																836
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 836,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "11561:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 873,
																	"src": "11553:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 835,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11553:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 840,
															"initialValue": {
																"baseExpression": {
																	"id": 837,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "11566:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 839,
																"indexExpression": {
																	"id": 838,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "11570:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11566:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11553:19:0"
														},
														{
															"assignments": [
																842
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 842,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "11594:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 873,
																	"src": "11586:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 841,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11586:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 846,
															"initialValue": {
																"baseExpression": {
																	"id": 843,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "11603:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 845,
																"indexExpression": {
																	"id": 844,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "11611:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11603:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11586:27:0"
														},
														{
															"assignments": [
																848
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 848,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "11636:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 873,
																	"src": "11628:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 847,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11628:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 854,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 849,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "11650:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 851,
																	"indexExpression": {
																		"id": 850,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 836,
																		"src": "11660:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11650:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 853,
																"indexExpression": {
																	"id": 852,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "11664:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11650:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11628:41:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 856,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 848,
																			"src": "11691:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 857,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 842,
																			"src": "11706:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11691:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																		"id": 859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11714:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		},
																		"value": "ERC1155: burn amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		}
																	],
																	"id": 855,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11683:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11683:70:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 861,
															"nodeType": "ExpressionStatement",
															"src": "11683:70:0"
														},
														{
															"id": 872,
															"nodeType": "UncheckedBlock",
															"src": "11767:85:0",
															"statements": [
																{
																	"expression": {
																		"id": 870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 862,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 25,
																					"src": "11795:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 865,
																				"indexExpression": {
																					"id": 863,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 836,
																					"src": "11805:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "11795:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 866,
																			"indexExpression": {
																				"id": 864,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 779,
																				"src": "11809:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "11795:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 869,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 867,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 848,
																				"src": "11817:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 868,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 842,
																				"src": "11831:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11817:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11795:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 871,
																	"nodeType": "ExpressionStatement",
																	"src": "11795:42:0"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 828,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "11518:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 829,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "11522:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 830,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11522:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11518:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 874,
												"initializationExpression": {
													"assignments": [
														825
													],
													"declarations": [
														{
															"constant": false,
															"id": 825,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "11511:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 874,
															"src": "11503:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 824,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11503:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 827,
													"initialValue": {
														"hexValue": "30",
														"id": 826,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11515:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "11503:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "11534:3:0",
														"subExpression": {
															"id": 832,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "11534:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 834,
													"nodeType": "ExpressionStatement",
													"src": "11534:3:0"
												},
												"nodeType": "ForStatement",
												"src": "11498:364:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 876,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "11891:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 877,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "11901:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 878,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11907:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 882,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "11919:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 883,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "11924:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 875,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "11877:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11877:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 885,
												"nodeType": "EmitStatement",
												"src": "11872:60:0"
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "10884:183:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "11081:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11109:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "11101:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11140:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "11123:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 780,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11123:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 781,
													"nodeType": "ArrayTypeName",
													"src": "11123:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "11170:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "11153:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 783,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11153:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 784,
													"nodeType": "ArrayTypeName",
													"src": "11153:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11091:92:0"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11201:0:0"
									},
									"scope": 1095,
									"src": "11072:867:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 918,
										"nodeType": "Block",
										"src": "12197:200:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 898,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "12215:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 899,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 892,
																"src": "12224:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12215:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12234:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 897,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12207:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12207:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 903,
												"nodeType": "ExpressionStatement",
												"src": "12207:71:0"
											},
											{
												"expression": {
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 904,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "12288:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 907,
															"indexExpression": {
																"id": 905,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "12307:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12288:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 908,
														"indexExpression": {
															"id": 906,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "12314:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12288:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 909,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "12326:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12288:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 911,
												"nodeType": "ExpressionStatement",
												"src": "12288:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 913,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "12364:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 914,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "12371:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 915,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "12381:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 912,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "12349:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12349:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 917,
												"nodeType": "EmitStatement",
												"src": "12344:46:0"
											}
										]
									},
									"documentation": {
										"id": 888,
										"nodeType": "StructuredDocumentation",
										"src": "11945:124:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
									},
									"id": 919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "12083:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12119:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "12111:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12111:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "12142:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "12134:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12134:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "12165:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "12160:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 893,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12160:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12101:78:0"
									},
									"returnParameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12197:0:0"
									},
									"scope": 1095,
									"src": "12074:323:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 937,
										"nodeType": "Block",
										"src": "13543:2:0",
										"statements": []
									},
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "12403:923:0",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "13340:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13378:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "13370:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13370:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13404:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "13396:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13396:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13426:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "13418:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13418:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "13455:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "13438:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 927,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13438:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 928,
													"nodeType": "ArrayTypeName",
													"src": "13438:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "13485:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "13468:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 930,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13468:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 931,
													"nodeType": "ArrayTypeName",
													"src": "13468:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13515:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "13502:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 933,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13502:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13360:165:0"
									},
									"returnParameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13543:0:0"
									},
									"scope": 1095,
									"src": "13331:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1000,
										"nodeType": "Block",
										"src": "13744:532:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 953,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "13758:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1424,
														"src": "13758:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13758:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 999,
												"nodeType": "IfStatement",
												"src": "13754:516:0",
												"trueBody": {
													"id": 998,
													"nodeType": "Block",
													"src": "13775:495:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 980,
																		"nodeType": "Block",
																		"src": "13892:184:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 973,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 969,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 967,
																						"src": "13914:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 970,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1258,
																								"src": "13926:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1258_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 971,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1239,
																							"src": "13926:34:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 972,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "13926:43:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "13914:55:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 979,
																				"nodeType": "IfStatement",
																				"src": "13910:152:0",
																				"trueBody": {
																					"id": 978,
																					"nodeType": "Block",
																					"src": "13971:91:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 975,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "14000:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 974,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "13993:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 976,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "13993:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 977,
																							"nodeType": "ExpressionStatement",
																							"src": "13993:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 981,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 968,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 967,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "13882:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 981,
																				"src": "13875:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 966,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "13875:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "13874:17:0"
																	},
																	"src": "13866:210:0"
																},
																{
																	"block": {
																		"id": 989,
																		"nodeType": "Block",
																		"src": "14111:47:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 986,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 983,
																							"src": "14136:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 985,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "14129:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 987,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14129:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 988,
																				"nodeType": "ExpressionStatement",
																				"src": "14129:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 990,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 984,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 983,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14103:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 990,
																				"src": "14089:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 982,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "14089:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14088:22:0"
																	},
																	"src": "14077:81:0"
																},
																{
																	"block": {
																		"id": 995,
																		"nodeType": "Block",
																		"src": "14165:95:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 992,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "14190:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 991,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "14183:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 993,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14183:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 994,
																				"nodeType": "ExpressionStatement",
																				"src": "14183:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 996,
																	"nodeType": "TryCatchClause",
																	"src": "14159:101:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 960,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 940,
																		"src": "13832:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 961,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 942,
																		"src": "13842:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 962,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 946,
																		"src": "13848:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 963,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 948,
																		"src": "13852:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 964,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 950,
																		"src": "13860:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 957,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 944,
																				"src": "13810:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 956,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1258,
																			"src": "13793:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1258_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13793:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1258",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1239,
																	"src": "13793:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13793:72:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 997,
															"nodeType": "TryStatement",
															"src": "13789:471:0"
														}
													]
												}
											}
										]
									},
									"id": 1001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "13560:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13608:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "13600:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13600:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13634:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "13626:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13626:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13656:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "13648:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13648:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "13676:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "13668:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13696:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "13688:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13688:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13725:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "13712:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 949,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13712:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13590:145:0"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13744:0:0"
									},
									"scope": 1095,
									"src": "13551:725:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "14500:574:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1018,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "14514:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1424,
														"src": "14514:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14514:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1064,
												"nodeType": "IfStatement",
												"src": "14510:558:0",
												"trueBody": {
													"id": 1063,
													"nodeType": "Block",
													"src": "14531:537:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1045,
																		"nodeType": "Block",
																		"src": "14685:189:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1038,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1034,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1032,
																						"src": "14707:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1035,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1258,
																								"src": "14719:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1258_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1036,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1257,
																							"src": "14719:39:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1037,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14719:48:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14707:60:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1044,
																				"nodeType": "IfStatement",
																				"src": "14703:157:0",
																				"trueBody": {
																					"id": 1043,
																					"nodeType": "Block",
																					"src": "14769:91:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1040,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "14798:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1039,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "14791:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1041,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14791:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1042,
																							"nodeType": "ExpressionStatement",
																							"src": "14791:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1046,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1033,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1032,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "14662:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1046,
																				"src": "14655:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1031,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14655:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14637:47:0"
																	},
																	"src": "14629:245:0"
																},
																{
																	"block": {
																		"id": 1054,
																		"nodeType": "Block",
																		"src": "14909:47:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1051,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1048,
																							"src": "14934:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1050,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "14927:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1052,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14927:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1053,
																				"nodeType": "ExpressionStatement",
																				"src": "14927:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1055,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1049,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1048,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14901:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1055,
																				"src": "14887:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1047,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "14887:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14886:22:0"
																	},
																	"src": "14875:81:0"
																},
																{
																	"block": {
																		"id": 1060,
																		"nodeType": "Block",
																		"src": "14963:95:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1057,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "14988:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1056,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "14981:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1058,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14981:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1059,
																				"nodeType": "ExpressionStatement",
																				"src": "14981:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1061,
																	"nodeType": "TryCatchClause",
																	"src": "14957:101:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1025,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1003,
																		"src": "14593:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1026,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1005,
																		"src": "14603:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1027,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1010,
																		"src": "14609:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1028,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1013,
																		"src": "14614:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1029,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1015,
																		"src": "14623:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1022,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1007,
																				"src": "14566:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1021,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1258,
																			"src": "14549:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1258_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14549:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1258",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1257,
																	"src": "14549:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14549:79:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1062,
															"nodeType": "TryStatement",
															"src": "14545:513:0"
														}
													]
												}
											}
										]
									},
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "14291:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14344:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "14336:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14336:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14370:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "14362:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14362:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14392:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "14384:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "14421:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "14404:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1008,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14404:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1009,
													"nodeType": "ArrayTypeName",
													"src": "14404:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "14451:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "14434:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1011,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14434:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1012,
													"nodeType": "ArrayTypeName",
													"src": "14434:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14481:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "14468:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1014,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14468:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14326:165:0"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14500:0:0"
									},
									"scope": 1095,
									"src": "14282:792:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1093,
										"nodeType": "Block",
										"src": "15164:109:0",
										"statements": [
											{
												"assignments": [
													1078
												],
												"declarations": [
													{
														"constant": false,
														"id": 1078,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "15191:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1093,
														"src": "15174:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1076,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15174:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1077,
															"nodeType": "ArrayTypeName",
															"src": "15174:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1084,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15213:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1081,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "15199:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1079,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15203:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1080,
															"nodeType": "ArrayTypeName",
															"src": "15203:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15199:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15174:41:0"
											},
											{
												"expression": {
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1085,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "15225:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1087,
														"indexExpression": {
															"hexValue": "30",
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15231:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15225:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1088,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "15236:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15225:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "15225:18:0"
											},
											{
												"expression": {
													"id": 1091,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1078,
													"src": "15261:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1073,
												"id": 1092,
												"nodeType": "Return",
												"src": "15254:12:0"
											}
										]
									},
									"id": 1094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "15089:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "15115:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "15107:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15107:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15106:17:0"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "15146:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1070,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15146:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1071,
													"nodeType": "ArrayTypeName",
													"src": "15146:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15145:18:0"
									},
									"scope": 1095,
									"src": "15080:193:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1096,
							"src": "555:14720:0",
							"usedErrors": []
						}
					],
					"src": "94:15182:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1217
						],
						"IERC165": [
							1759
						]
					},
					"id": 1218,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1097,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1098,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1218,
							"sourceUnit": 1760,
							"src": "120:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1100,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1759,
										"src": "357:7:1"
									},
									"id": 1101,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1099,
								"nodeType": "StructuredDocumentation",
								"src": "169:165:1",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1217,
							"linearizedBaseContracts": [
								1217,
								1759
							],
							"name": "IERC1155",
							"nameLocation": "345:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "371:121:1",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 1114,
									"name": "TransferSingle",
									"nameLocation": "503:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "534:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "518:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "560:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "544:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "582:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "566:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "594:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "586:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "606:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "598:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:95:1"
									},
									"src": "497:116:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1115,
										"nodeType": "StructuredDocumentation",
										"src": "619:144:1",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"id": 1129,
									"name": "TransferBatch",
									"nameLocation": "774:13:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "813:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "797:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "831:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "877:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "861:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "899:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "889:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1122,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "889:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1123,
													"nodeType": "ArrayTypeName",
													"src": "889:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "922:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "912:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1125,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "912:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1126,
													"nodeType": "ArrayTypeName",
													"src": "912:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:147:1"
									},
									"src": "768:167:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1130,
										"nodeType": "StructuredDocumentation",
										"src": "941:147:1",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"id": 1138,
									"name": "ApprovalForAll",
									"nameLocation": "1099:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1130:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "1114:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "1139:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1170:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "1165:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1135,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1165:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:66:1"
									},
									"src": "1093:87:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1139,
										"nodeType": "StructuredDocumentation",
										"src": "1186:343:1",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"id": 1145,
									"name": "URI",
									"nameLocation": "1540:3:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1551:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "1544:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1140,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1544:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1574:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "1558:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:34:1"
									},
									"src": "1534:44:1"
								},
								{
									"documentation": {
										"id": 1146,
										"nodeType": "StructuredDocumentation",
										"src": "1584:173:1",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1155,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1771:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1789:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "1781:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1806:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "1798:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1780:29:1"
									},
									"returnParameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "1833:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1833:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1832:9:1"
									},
									"scope": 1217,
									"src": "1762:80:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1156,
										"nodeType": "StructuredDocumentation",
										"src": "1848:188:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2050:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2084:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "2065:27:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1157,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2065:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1158,
													"nodeType": "ArrayTypeName",
													"src": "2065:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2113:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "2094:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1160,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2094:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1161,
													"nodeType": "ArrayTypeName",
													"src": "2094:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:53:1"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "2165:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1164,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2165:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1165,
													"nodeType": "ArrayTypeName",
													"src": "2165:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:18:1"
									},
									"scope": 1217,
									"src": "2041:142:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1169,
										"nodeType": "StructuredDocumentation",
										"src": "2189:248:1",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1176,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2451:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2477:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "2469:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2492:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "2487:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1172,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2487:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:33:1"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2510:0:1"
									},
									"scope": 1217,
									"src": "2442:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1177,
										"nodeType": "StructuredDocumentation",
										"src": "2517:135:1",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1186,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2666:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2691:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "2683:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2708:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "2700:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:35:1"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "2741:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1183,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2741:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:6:1"
									},
									"scope": 1217,
									"src": "2657:90:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1187,
										"nodeType": "StructuredDocumentation",
										"src": "2753:559:1",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1200,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3326:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3360:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "3352:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3382:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "3374:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3402:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "3394:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3394:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3422:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "3414:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3414:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3453:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "3438:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1196,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3438:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3342:121:1"
									},
									"returnParameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3472:0:1"
									},
									"scope": 1217,
									"src": "3317:156:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1201,
										"nodeType": "StructuredDocumentation",
										"src": "3479:390:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3883:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3922:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "3914:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3914:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3944:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "3936:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3975:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "3956:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1206,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3956:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1207,
													"nodeType": "ArrayTypeName",
													"src": "3956:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4007:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "3988:26:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1209,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3988:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1210,
													"nodeType": "ArrayTypeName",
													"src": "3988:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4039:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "4024:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1212,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4024:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:145:1"
									},
									"returnParameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4058:0:1"
									},
									"scope": 1217,
									"src": "3874:185:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1218,
							"src": "335:3726:1",
							"usedErrors": []
						}
					],
					"src": "95:3967:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1258
						],
						"IERC165": [
							1759
						]
					},
					"id": 1259,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1219,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1220,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1259,
							"sourceUnit": 1760,
							"src": "143:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1222,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1759,
										"src": "262:7:2"
									},
									"id": 1223,
									"nodeType": "InheritanceSpecifier",
									"src": "262:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1221,
								"nodeType": "StructuredDocumentation",
								"src": "192:39:2",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1258,
							"linearizedBaseContracts": [
								1258,
								1759
							],
							"name": "IERC1155Receiver",
							"nameLocation": "242:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "276:826:2",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1116:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1151:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1143:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1177:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1169:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1199:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1191:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1219:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1211:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1249:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1234:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1233,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1234:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:126:2"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1278:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1236,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1278:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1277:8:2"
									},
									"scope": 1258,
									"src": "1107:179:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1240,
										"nodeType": "StructuredDocumentation",
										"src": "1292:994:2",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2300:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2340:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "2332:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2366:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "2358:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2399:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "2380:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1245,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2380:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1246,
													"nodeType": "ArrayTypeName",
													"src": "2380:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2431:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "2412:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1248,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2412:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1249,
													"nodeType": "ArrayTypeName",
													"src": "2412:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2462:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "2447:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1251,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2447:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:150:2"
									},
									"returnParameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "2491:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1254,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2491:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2490:8:2"
									},
									"scope": 1258,
									"src": "2291:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1259,
							"src": "232:2269:2",
							"usedErrors": []
						}
					],
					"src": "118:2384:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
					"exportedSymbols": {
						"Address": [
							1701
						],
						"Context": [
							1723
						],
						"ERC1155": [
							1095
						],
						"ERC1155Supply": [
							1391
						],
						"ERC165": [
							1747
						],
						"IERC1155": [
							1217
						],
						"IERC1155MetadataURI": [
							1406
						],
						"IERC1155Receiver": [
							1258
						],
						"IERC165": [
							1759
						]
					},
					"id": 1392,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1260,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "111:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "../ERC1155.sol",
							"id": 1261,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1392,
							"sourceUnit": 1096,
							"src": "136:24:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1263,
										"name": "ERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1095,
										"src": "542:7:3"
									},
									"id": 1264,
									"nodeType": "InheritanceSpecifier",
									"src": "542:7:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1262,
								"nodeType": "StructuredDocumentation",
								"src": "162:344:3",
								"text": " @dev Extension of ERC1155 that adds tracking of total supply per id.\n Useful for scenarios where Fungible and Non-fungible tokens have to be\n clearly identified. Note: While a totalSupply of 1 might mean the\n corresponding is an NFT, there is no guarantees that no other token with the\n same id are not going to be minted."
							},
							"fullyImplemented": false,
							"id": 1391,
							"linearizedBaseContracts": [
								1391,
								1095,
								1406,
								1217,
								1747,
								1759,
								1723
							],
							"name": "ERC1155Supply",
							"nameLocation": "525:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1268,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "592:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1391,
									"src": "556:48:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1267,
										"keyType": {
											"id": 1265,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "564:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "556:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 1266,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "575:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1280,
										"nodeType": "Block",
										"src": "753:40:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1276,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1268,
														"src": "770:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1278,
													"indexExpression": {
														"id": 1277,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1271,
														"src": "783:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "770:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1275,
												"id": 1279,
												"nodeType": "Return",
												"src": "763:23:3"
											}
										]
									},
									"documentation": {
										"id": 1269,
										"nodeType": "StructuredDocumentation",
										"src": "611:66:3",
										"text": " @dev Total amount of tokens in with a given id."
									},
									"functionSelector": "bd85b039",
									"id": 1281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "691:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "711:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "703:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:12:3"
									},
									"returnParameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "744:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "743:9:3"
									},
									"scope": 1391,
									"src": "682:111:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1296,
										"nodeType": "Block",
										"src": "949:57:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1291,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1284,
																"src": "992:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1289,
																"name": "ERC1155Supply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1391,
																"src": "966:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC1155Supply_$1391_$",
																	"typeString": "type(contract ERC1155Supply)"
																}
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "totalSupply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1281,
															"src": "966:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "966:29:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1293,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "998:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "966:33:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1288,
												"id": 1295,
												"nodeType": "Return",
												"src": "959:40:3"
											}
										]
									},
									"documentation": {
										"id": 1282,
										"nodeType": "StructuredDocumentation",
										"src": "799:82:3",
										"text": " @dev Indicates whether any token exist with a given id, or not."
									},
									"functionSelector": "4f558e79",
									"id": 1297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exists",
									"nameLocation": "895:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "910:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "902:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "902:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "901:12:3"
									},
									"returnParameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "943:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "943:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:6:3"
									},
									"scope": 1391,
									"src": "886:120:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										938
									],
									"body": {
										"id": 1389,
										"nodeType": "Block",
										"src": "1297:413:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1319,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1300,
															"src": "1334:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1302,
															"src": "1344:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1321,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1304,
															"src": "1350:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1322,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "1354:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1323,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "1359:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1324,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "1368:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1316,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1307:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC1155Supply_$1391_$",
																"typeString": "type(contract super ERC1155Supply)"
															}
														},
														"id": 1318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 938,
														"src": "1307:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1307:66:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1326,
												"nodeType": "ExpressionStatement",
												"src": "1307:66:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1327,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1302,
														"src": "1388:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1404:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1396:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1328,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1396:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1396:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1388:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1357,
												"nodeType": "IfStatement",
												"src": "1384:156:3",
												"trueBody": {
													"id": 1356,
													"nodeType": "Block",
													"src": "1408:132:3",
													"statements": [
														{
															"body": {
																"id": 1354,
																"nodeType": "Block",
																"src": "1463:67:3",
																"statements": [
																	{
																		"expression": {
																			"id": 1352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1344,
																					"name": "_totalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1268,
																					"src": "1481:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																						"typeString": "mapping(uint256 => uint256)"
																					}
																				},
																				"id": 1348,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 1345,
																						"name": "ids",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1307,
																						"src": "1494:3:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 1347,
																					"indexExpression": {
																						"id": 1346,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1334,
																						"src": "1498:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "1494:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "1481:20:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1349,
																					"name": "amounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1310,
																					"src": "1505:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 1351,
																				"indexExpression": {
																					"id": 1350,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1334,
																					"src": "1513:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1505:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1481:34:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1353,
																		"nodeType": "ExpressionStatement",
																		"src": "1481:34:3"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1337,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "1442:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1338,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1307,
																		"src": "1446:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "1446:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1442:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1355,
															"initializationExpression": {
																"assignments": [
																	1334
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1334,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "1435:1:3",
																		"nodeType": "VariableDeclaration",
																		"scope": 1355,
																		"src": "1427:9:3",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1333,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1427:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1336,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1439:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "1427:13:3"
															},
															"loopExpression": {
																"expression": {
																	"id": 1342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": true,
																	"src": "1458:3:3",
																	"subExpression": {
																		"id": 1341,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1334,
																		"src": "1460:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1343,
																"nodeType": "ExpressionStatement",
																"src": "1458:3:3"
															},
															"nodeType": "ForStatement",
															"src": "1422:108:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1358,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1304,
														"src": "1554:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1568:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1560:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1359,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1560:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1362,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1560:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1554:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1388,
												"nodeType": "IfStatement",
												"src": "1550:154:3",
												"trueBody": {
													"id": 1387,
													"nodeType": "Block",
													"src": "1572:132:3",
													"statements": [
														{
															"body": {
																"id": 1385,
																"nodeType": "Block",
																"src": "1627:67:3",
																"statements": [
																	{
																		"expression": {
																			"id": 1383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1375,
																					"name": "_totalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1268,
																					"src": "1645:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																						"typeString": "mapping(uint256 => uint256)"
																					}
																				},
																				"id": 1379,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 1376,
																						"name": "ids",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1307,
																						"src": "1658:3:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 1378,
																					"indexExpression": {
																						"id": 1377,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1365,
																						"src": "1662:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "1658:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "1645:20:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1380,
																					"name": "amounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1310,
																					"src": "1669:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 1382,
																				"indexExpression": {
																					"id": 1381,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1365,
																					"src": "1677:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1669:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1645:34:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1384,
																		"nodeType": "ExpressionStatement",
																		"src": "1645:34:3"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1368,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1365,
																	"src": "1606:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1369,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1307,
																		"src": "1610:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "1610:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1606:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1386,
															"initializationExpression": {
																"assignments": [
																	1365
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1365,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "1599:1:3",
																		"nodeType": "VariableDeclaration",
																		"scope": 1386,
																		"src": "1591:9:3",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1364,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1591:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1367,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1603:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "1591:13:3"
															},
															"loopExpression": {
																"expression": {
																	"id": 1373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": true,
																	"src": "1622:3:3",
																	"subExpression": {
																		"id": 1372,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1365,
																		"src": "1624:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1374,
																"nodeType": "ExpressionStatement",
																"src": "1622:3:3"
															},
															"nodeType": "ForStatement",
															"src": "1586:108:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1298,
										"nodeType": "StructuredDocumentation",
										"src": "1012:59:3",
										"text": " @dev See {ERC1155-_beforeTokenTransfer}."
									},
									"id": 1390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "1085:20:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1314,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1288:8:3"
									},
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1123:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "1115:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1115:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1149:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "1141:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1141:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1171:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "1163:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1163:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "1200:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "1183:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1305,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1183:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1306,
													"nodeType": "ArrayTypeName",
													"src": "1183:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1230:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "1213:24:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1308,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1213:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1309,
													"nodeType": "ArrayTypeName",
													"src": "1213:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1260:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "1247:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1311,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1247:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1105:165:3"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1297:0:3"
									},
									"scope": 1391,
									"src": "1076:634:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1392,
							"src": "507:1205:3",
							"usedErrors": []
						}
					],
					"src": "111:1602:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1217
						],
						"IERC1155MetadataURI": [
							1406
						],
						"IERC165": [
							1759
						]
					},
					"id": 1407,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1393,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "117:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1394,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1407,
							"sourceUnit": 1218,
							"src": "142:25:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1396,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1217,
										"src": "397:8:4"
									},
									"id": 1397,
									"nodeType": "InheritanceSpecifier",
									"src": "397:8:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1395,
								"nodeType": "StructuredDocumentation",
								"src": "169:194:4",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1406,
							"linearizedBaseContracts": [
								1406,
								1217,
								1759
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "374:19:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "412:192:4",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "618:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "630:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "622:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "621:12:4"
									},
									"returnParameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "657:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1402,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "657:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:15:4"
									},
									"scope": 1406,
									"src": "609:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1407,
							"src": "364:310:4",
							"usedErrors": []
						}
					],
					"src": "117:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1701
						]
					},
					"id": 1702,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1408,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1409,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1701,
							"linearizedBaseContracts": [
								1701
							],
							"name": "Address",
							"nameLocation": "202:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1423,
										"nodeType": "Block",
										"src": "1241:254:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1417,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1412,
																"src": "1465:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1420,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1416,
												"id": 1422,
												"nodeType": "Return",
												"src": "1458:30:5"
											}
										]
									},
									"documentation": {
										"id": 1410,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "1195:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:5"
									},
									"returnParameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "1235:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1414,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:5"
									},
									"scope": 1701,
									"src": "1175:320:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1457,
										"nodeType": "Block",
										"src": "2483:241:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1435,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1701",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1701",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1433,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1438,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1429,
																"src": "2526:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1432,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1442,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:5"
											},
											{
												"assignments": [
													1444,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1444,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1457,
														"src": "2578:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1443,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1451,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1445,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1427,
																"src": "2596:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1447,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1429,
																"src": "2618:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1453,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "2647:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1452,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1456,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:5"
											}
										]
									},
									"documentation": {
										"id": 1425,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "2431:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "2458:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:5"
									},
									"returnParameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:5"
									},
									"scope": 1701,
									"src": "2412:312:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1474,
										"nodeType": "Block",
										"src": "3555:84:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1469,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1461,
															"src": "3585:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1470,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1463,
															"src": "3593:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1468,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1475,
															1495
														],
														"referencedDeclaration": 1495,
														"src": "3572:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1467,
												"id": 1473,
												"nodeType": "Return",
												"src": "3565:67:5"
											}
										]
									},
									"documentation": {
										"id": 1459,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "3488:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "3504:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1462,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:5"
									},
									"returnParameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "3541:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1465,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:5"
									},
									"scope": 1701,
									"src": "3466:173:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1494,
										"nodeType": "Block",
										"src": "4008:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1488,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "4047:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1489,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1480,
															"src": "4055:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1491,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "4064:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1487,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1515,
															1565
														],
														"referencedDeclaration": 1565,
														"src": "4025:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1486,
												"id": 1493,
												"nodeType": "Return",
												"src": "4018:59:5"
											}
										]
									},
									"documentation": {
										"id": 1476,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "3892:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "3916:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1479,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "3943:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1481,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:5"
									},
									"returnParameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "3994:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1484,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:5"
									},
									"scope": 1701,
									"src": "3861:223:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1514,
										"nodeType": "Block",
										"src": "4589:111:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1508,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1498,
															"src": "4628:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1509,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1500,
															"src": "4636:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1510,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1502,
															"src": "4642:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1507,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1515,
															1565
														],
														"referencedDeclaration": 1565,
														"src": "4606:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1506,
												"id": 1513,
												"nodeType": "Return",
												"src": "4599:94:5"
											}
										]
									},
									"documentation": {
										"id": 1496,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "4486:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "4510:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1499,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "4537:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:5"
									},
									"returnParameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "4575:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1504,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:5"
									},
									"scope": 1701,
									"src": "4446:254:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1564,
										"nodeType": "Block",
										"src": "5127:320:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1532,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1701",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1701",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1530,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1535,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1522,
																"src": "5170:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1529,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1539,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1542,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1518,
																	"src": "5247:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1541,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1424,
																"src": "5236:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1540,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1546,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:5"
											},
											{
												"assignments": [
													1548,
													1550
												],
												"declarations": [
													{
														"constant": false,
														"id": 1548,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1564,
														"src": "5300:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1547,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1550,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1564,
														"src": "5314:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1549,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1557,
												"initialValue": {
													"arguments": [
														{
															"id": 1555,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1520,
															"src": "5367:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1551,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1518,
																"src": "5341:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1553,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1522,
																"src": "5360:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1559,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1548,
															"src": "5406:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1560,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1550,
															"src": "5415:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1561,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "5427:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1558,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1700,
														"src": "5389:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1528,
												"id": 1563,
												"nodeType": "Return",
												"src": "5382:58:5"
											}
										]
									},
									"documentation": {
										"id": 1516,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "4988:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "5012:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1519,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "5039:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "5062:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1523,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:5"
									},
									"returnParameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "5113:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1526,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:5"
									},
									"scope": 1701,
									"src": "4948:499:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1581,
										"nodeType": "Block",
										"src": "5724:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1576,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1568,
															"src": "5760:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1577,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "5768:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1578,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1575,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1582,
															1617
														],
														"referencedDeclaration": 1617,
														"src": "5741:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1574,
												"id": 1580,
												"nodeType": "Return",
												"src": "5734:80:5"
											}
										]
									},
									"documentation": {
										"id": 1566,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "5652:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "5668:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1569,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:5"
									},
									"returnParameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "5710:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1572,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:5"
									},
									"scope": 1701,
									"src": "5624:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1616,
										"nodeType": "Block",
										"src": "6163:228:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1596,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1585,
																	"src": "6192:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1595,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1424,
																"src": "6181:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1594,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1600,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:5"
											},
											{
												"assignments": [
													1602,
													1604
												],
												"declarations": [
													{
														"constant": false,
														"id": 1602,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1616,
														"src": "6252:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1601,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1604,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1616,
														"src": "6266:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1603,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1609,
												"initialValue": {
													"arguments": [
														{
															"id": 1607,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "6311:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1605,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1585,
															"src": "6293:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1611,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1602,
															"src": "6350:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1612,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1604,
															"src": "6359:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1613,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "6371:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1610,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1700,
														"src": "6333:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1593,
												"id": 1615,
												"nodeType": "Return",
												"src": "6326:58:5"
											}
										]
									},
									"documentation": {
										"id": 1583,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "6042:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "6066:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1586,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "6093:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1588,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:5"
									},
									"returnParameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "6149:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1591,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:5"
									},
									"scope": 1701,
									"src": "6005:386:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1633,
										"nodeType": "Block",
										"src": "6667:101:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1628,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1620,
															"src": "6705:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1629,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1622,
															"src": "6713:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1627,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1634,
															1669
														],
														"referencedDeclaration": 1669,
														"src": "6684:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1626,
												"id": 1632,
												"nodeType": "Return",
												"src": "6677:84:5"
											}
										]
									},
									"documentation": {
										"id": 1618,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1634,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "6600:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "6616:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1621,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:5"
									},
									"returnParameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "6653:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1624,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:5"
									},
									"scope": 1701,
									"src": "6570:198:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1668,
										"nodeType": "Block",
										"src": "7109:232:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1648,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1637,
																	"src": "7138:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1647,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1424,
																"src": "7127:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1646,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1652,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:5"
											},
											{
												"assignments": [
													1654,
													1656
												],
												"declarations": [
													{
														"constant": false,
														"id": 1654,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1668,
														"src": "7200:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1653,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1656,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1668,
														"src": "7214:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1655,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1661,
												"initialValue": {
													"arguments": [
														{
															"id": 1659,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1639,
															"src": "7261:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1657,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1637,
															"src": "7241:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1658,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1663,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1654,
															"src": "7300:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1664,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1656,
															"src": "7309:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1665,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "7321:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1662,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1700,
														"src": "7283:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1645,
												"id": 1667,
												"nodeType": "Return",
												"src": "7276:58:5"
											}
										]
									},
									"documentation": {
										"id": 1635,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "6993:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "7017:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1638,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "7044:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1640,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:5"
									},
									"returnParameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "7095:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1643,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:5"
									},
									"scope": 1701,
									"src": "6954:387:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1699,
										"nodeType": "Block",
										"src": "7721:532:5",
										"statements": [
											{
												"condition": {
													"id": 1681,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1672,
													"src": "7735:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1697,
													"nodeType": "Block",
													"src": "7792:455:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1685,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1674,
																		"src": "7876:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1695,
																"nodeType": "Block",
																"src": "8184:53:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1692,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1676,
																					"src": "8209:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1691,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1693,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1694,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:5"
																	}
																]
															},
															"id": 1696,
															"nodeType": "IfStatement",
															"src": "7872:365:5",
															"trueBody": {
																"id": 1690,
																"nodeType": "Block",
																"src": "7899:279:5",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:5",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:5"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:5"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:5",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:5",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:5"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:5"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:5"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:5"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1674,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:5",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1674,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:5",
																				"valueSize": 1
																			}
																		],
																		"id": 1689,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:5"
																	}
																]
															}
														}
													]
												},
												"id": 1698,
												"nodeType": "IfStatement",
												"src": "7731:516:5",
												"trueBody": {
													"id": 1684,
													"nodeType": "Block",
													"src": "7744:42:5",
													"statements": [
														{
															"expression": {
																"id": 1682,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1674,
																"src": "7765:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1680,
															"id": 1683,
															"nodeType": "Return",
															"src": "7758:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1670,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:5",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "7596:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1671,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "7618:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1673,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "7651:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1675,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:5"
									},
									"returnParameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "7707:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1678,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:5"
									},
									"scope": 1701,
									"src": "7561:692:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1702,
							"src": "194:8061:5",
							"usedErrors": []
						}
					],
					"src": "101:8155:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1723
						]
					},
					"id": 1724,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1703,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1704,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1723,
							"linearizedBaseContracts": [
								1723
							],
							"name": "Context",
							"nameLocation": "626:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1712,
										"nodeType": "Block",
										"src": "702:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1709,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1708,
												"id": 1711,
												"nodeType": "Return",
												"src": "712:17:6"
											}
										]
									},
									"id": 1713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:6"
									},
									"returnParameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "693:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:6"
									},
									"scope": 1723,
									"src": "640:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1721,
										"nodeType": "Block",
										"src": "809:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1718,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1717,
												"id": 1720,
												"nodeType": "Return",
												"src": "819:15:6"
											}
										]
									},
									"id": 1722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:6"
									},
									"returnParameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "793:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1715,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:6"
									},
									"scope": 1723,
									"src": "742:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1724,
							"src": "608:235:6",
							"usedErrors": []
						}
					],
					"src": "86:758:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1747
						],
						"IERC165": [
							1759
						]
					},
					"id": 1748,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1725,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1726,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1748,
							"sourceUnit": 1760,
							"src": "124:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1728,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1759,
										"src": "754:7:7"
									},
									"id": 1729,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:7"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1727,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:7",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1747,
							"linearizedBaseContracts": [
								1747,
								1759
							],
							"name": "ERC165",
							"nameLocation": "744:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1758
									],
									"body": {
										"id": 1745,
										"nodeType": "Block",
										"src": "920:64:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1738,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1732,
														"src": "937:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1740,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1759,
																	"src": "957:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1759_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1759_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1739,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1759",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1737,
												"id": 1744,
												"nodeType": "Return",
												"src": "930:47:7"
											}
										]
									},
									"documentation": {
										"id": 1730,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1734,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:7"
									},
									"parameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "856:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1731,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:7"
									},
									"returnParameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "914:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1735,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:7"
									},
									"scope": 1747,
									"src": "829:155:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1748,
							"src": "726:260:7",
							"usedErrors": []
						}
					],
					"src": "99:888:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1759
						]
					},
					"id": 1760,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1749,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1750,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1759,
							"linearizedBaseContracts": [
								1759
							],
							"name": "IERC165",
							"nameLocation": "415:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1751,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1758,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "801:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1752,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:8"
									},
									"returnParameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "844:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1755,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:8"
									},
									"scope": 1759,
									"src": "774:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1760,
							"src": "405:447:8",
							"usedErrors": []
						}
					],
					"src": "100:753:8"
				},
				"id": 8
			},
			"contracts/GU-NFT/GUCollections.sol": {
				"ast": {
					"absolutePath": "contracts/GU-NFT/GUCollections.sol",
					"exportedSymbols": {
						"Address": [
							1701
						],
						"Context": [
							1723
						],
						"ERC1155": [
							1095
						],
						"ERC1155Supply": [
							1391
						],
						"ERC165": [
							1747
						],
						"GUCollections": [
							1871
						],
						"IERC1155": [
							1217
						],
						"IERC1155MetadataURI": [
							1406
						],
						"IERC1155Receiver": [
							1258
						],
						"IERC165": [
							1759
						]
					},
					"id": 1872,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1761,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
							"id": 1762,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1872,
							"sourceUnit": 1392,
							"src": "124:76:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1763,
										"name": "ERC1155Supply",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1391,
										"src": "230:13:9"
									},
									"id": 1764,
									"nodeType": "InheritanceSpecifier",
									"src": "230:13:9"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1871,
							"linearizedBaseContracts": [
								1871,
								1391,
								1095,
								1406,
								1217,
								1747,
								1759,
								1723
							],
							"name": "GUCollections",
							"nameLocation": "213:13:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1768,
									"mutability": "mutable",
									"name": "traders",
									"nameLocation": "276:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1871,
									"src": "250:33:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1767,
										"keyType": {
											"id": 1765,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "259:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "250:25:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1766,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "270:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "4b8c9c2d",
									"id": 1770,
									"mutability": "mutable",
									"name": "adminSafe",
									"nameLocation": "305:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 1871,
									"src": "290:24:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1769,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "290:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1774,
									"name": "TraderApproved",
									"nameLocation": "329:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "360:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "344:28:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "344:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "343:30:9"
									},
									"src": "323:51:9"
								},
								{
									"anonymous": false,
									"id": 1778,
									"name": "AdminSafeChanged",
									"nameLocation": "386:16:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1776,
												"indexed": true,
												"mutability": "mutable",
												"name": "safeAddress",
												"nameLocation": "419:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "403:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:29:9"
									},
									"src": "380:52:9"
								},
								{
									"body": {
										"id": 1792,
										"nodeType": "Block",
										"src": "500:35:9",
										"statements": [
											{
												"expression": {
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1788,
														"name": "adminSafe",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1770,
														"src": "511:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1789,
														"name": "safe",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "523:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "511:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1791,
												"nodeType": "ExpressionStatement",
												"src": "511:16:9"
											}
										]
									},
									"id": 1793,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1785,
													"name": "uri_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1780,
													"src": "494:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1786,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1784,
												"name": "ERC1155",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1095,
												"src": "486:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "486:13:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "466:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1793,
												"src": "452:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1779,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "452:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "safe",
												"nameLocation": "480:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1793,
												"src": "472:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "472:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "451:34:9"
									},
									"returnParameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "500:0:9"
									},
									"scope": 1871,
									"src": "440:95:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1819,
										"nodeType": "Block",
										"src": "627:171:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1803,
																"name": "adminSafe",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1770,
																"src": "646:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1804,
																"name": "safe",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1795,
																"src": "657:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "646:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726f7669646564206164647265737320616c726561647920736166652061646472657373",
															"id": 1806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "663:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fa3d7547ebdbd3d83688f57f208c1ceb8b68fc0b773db8e47be5f62dfed50852",
																"typeString": "literal_string \"Provided address already safe address\""
															},
															"value": "Provided address already safe address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fa3d7547ebdbd3d83688f57f208c1ceb8b68fc0b773db8e47be5f62dfed50852",
																"typeString": "literal_string \"Provided address already safe address\""
															}
														],
														"id": 1802,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "638:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "638:65:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1808,
												"nodeType": "ExpressionStatement",
												"src": "638:65:9"
											},
											{
												"expression": {
													"id": 1811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1809,
														"name": "adminSafe",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1770,
														"src": "714:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1810,
														"name": "safe",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1795,
														"src": "726:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "714:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1812,
												"nodeType": "ExpressionStatement",
												"src": "714:16:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1814,
															"name": "safe",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1795,
															"src": "763:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1813,
														"name": "AdminSafeChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1778,
														"src": "746:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "746:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1816,
												"nodeType": "EmitStatement",
												"src": "741:27:9"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1817,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "786:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1801,
												"id": 1818,
												"nodeType": "Return",
												"src": "779:11:9"
											}
										]
									},
									"functionSelector": "cb450772",
									"id": 1820,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1798,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1797,
												"name": "onlyAdminSafe",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1847,
												"src": "593:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "593:13:9"
										}
									],
									"name": "changeAdminSafe",
									"nameLocation": "556:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "safe",
												"nameLocation": "580:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "572:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "572:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "571:14:9"
									},
									"returnParameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "616:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1799,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "616:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "615:6:9"
									},
									"scope": 1871,
									"src": "547:251:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1831,
										"nodeType": "Block",
										"src": "885:87:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1823,
																"name": "traders",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1768,
																"src": "904:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1826,
															"indexExpression": {
																"expression": {
																	"id": 1824,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "912:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "912:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "904:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f742077686974656c69737465642e",
															"id": 1827,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "925:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bfcf428da2a377287b5d352c63b3be9ac4e5d20c502a185ebf9b34d347503e1a",
																"typeString": "literal_string \"You are not whitelisted.\""
															},
															"value": "You are not whitelisted."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bfcf428da2a377287b5d352c63b3be9ac4e5d20c502a185ebf9b34d347503e1a",
																"typeString": "literal_string \"You are not whitelisted.\""
															}
														],
														"id": 1822,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "896:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "896:56:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1829,
												"nodeType": "ExpressionStatement",
												"src": "896:56:9"
											},
											{
												"id": 1830,
												"nodeType": "PlaceholderStatement",
												"src": "963:1:9"
											}
										]
									},
									"id": 1832,
									"name": "onlyTraders",
									"nameLocation": "873:11:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "885:0:9"
									},
									"src": "864:108:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1846,
										"nodeType": "Block",
										"src": "1003:90:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1835,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1022:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1022:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1042:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1034:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1837,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1034:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1034:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1022:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f742077686974656c69737465642e",
															"id": 1842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1046:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bfcf428da2a377287b5d352c63b3be9ac4e5d20c502a185ebf9b34d347503e1a",
																"typeString": "literal_string \"You are not whitelisted.\""
															},
															"value": "You are not whitelisted."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bfcf428da2a377287b5d352c63b3be9ac4e5d20c502a185ebf9b34d347503e1a",
																"typeString": "literal_string \"You are not whitelisted.\""
															}
														],
														"id": 1834,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1014:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1014:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1844,
												"nodeType": "ExpressionStatement",
												"src": "1014:59:9"
											},
											{
												"id": 1845,
												"nodeType": "PlaceholderStatement",
												"src": "1084:1:9"
											}
										]
									},
									"id": 1847,
									"name": "onlyAdminSafe",
									"nameLocation": "989:13:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1003:0:9"
									},
									"src": "980:113:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1869,
										"nodeType": "Block",
										"src": "1189:66:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1861,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1849,
															"src": "1206:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1862,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1851,
															"src": "1210:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1863,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1853,
															"src": "1214:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1222:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1860,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "1200:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 1865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1200:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1866,
												"nodeType": "ExpressionStatement",
												"src": "1200:25:9"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1243:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1859,
												"id": 1868,
												"nodeType": "Return",
												"src": "1236:11:9"
											}
										]
									},
									"functionSelector": "156e29f6",
									"id": 1870,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1856,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1855,
												"name": "onlyTraders",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1832,
												"src": "1162:11:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1162:11:9"
										}
									],
									"name": "mint",
									"nameLocation": "1110:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1123:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "1115:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1115:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1135:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "1127:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1127:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1147:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "1139:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1114:40:9"
									},
									"returnParameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "1183:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1857,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1183:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1182:6:9"
									},
									"scope": 1871,
									"src": "1101:154:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1872,
							"src": "204:1056:9",
							"usedErrors": []
						}
					],
					"src": "97:1163:9"
				},
				"id": 9
			}
		}
	}
}